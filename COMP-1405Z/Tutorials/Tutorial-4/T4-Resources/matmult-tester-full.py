import matmult



def check_equality(a, b):
  if len(a) != len(b):
    return False
  for row in range(len(a)):
    if len(a[row]) != len(b[row]):
      return False
    for col in range(len(a[row])):
      if a[row][col] != b[row][col]:
        return False
  return True



a = [[7, 9], [1, 0], [6, 7], [1, 8]]
scalar = 9
expected = [[63, 81], [9, 0], [54, 63], [9, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #0 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 2, 1, 5, 3, 10, 8, 7], [8, 0, 5, 9, 3, 1, 10, 5, 10], [2, 10, 0, 0, 9, 5, 10, 8, 3], [10, 4, 10, 6, 1, 5, 8, 3, 1], [0, 7, 10, 8, 2, 5, 1, 3, 6], [8, 7, 8, 4, 1, 3, 5, 3, 0], [8, 7, 5, 3, 4, 3, 6, 2, 10], [1, 10, 4, 6, 5, 9, 6, 1, 1], [5, 5, 4, 3, 10, 0, 7, 6, 10]]
scalar = 7
expected = [[28, 28, 14, 7, 35, 21, 70, 56, 49], [56, 0, 35, 63, 21, 7, 70, 35, 70], [14, 70, 0, 0, 63, 35, 70, 56, 21], [70, 28, 70, 42, 7, 35, 56, 21, 7], [0, 49, 70, 56, 14, 35, 7, 21, 42], [56, 49, 56, 28, 7, 21, 35, 21, 0], [56, 49, 35, 21, 28, 21, 42, 14, 70], [7, 70, 28, 42, 35, 63, 42, 7, 7], [35, 35, 28, 21, 70, 0, 49, 42, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #1 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 2, 8, 10, 9, 0, 3, 0]]
scalar = 3
expected = [[9, 30, 6, 24, 30, 27, 0, 9, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #2 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 0, 9, 8, 7, 1], [4, 2, 1, 8, 6, 6, 7], [8, 4, 2, 2, 8, 10, 5], [8, 1, 10, 4, 4, 3, 8]]
scalar = 6
expected = [[24, 48, 0, 54, 48, 42, 6], [24, 12, 6, 48, 36, 36, 42], [48, 24, 12, 12, 48, 60, 30], [48, 6, 60, 24, 24, 18, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #3 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 2, 2], [7, 10, 6, 6], [6, 10, 8, 5], [6, 7, 3, 1], [1, 3, 2, 0], [7, 10, 10, 4], [1, 3, 3, 7]]
scalar = 7
expected = [[7, 49, 14, 14], [49, 70, 42, 42], [42, 70, 56, 35], [42, 49, 21, 7], [7, 21, 14, 0], [49, 70, 70, 28], [7, 21, 21, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #4 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [3], [3], [8], [7], [4]]
scalar = 4
expected = [[16], [12], [12], [32], [28], [16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #5 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 8], [1, 5, 10], [8, 0, 3], [6, 7, 9], [7, 4, 10], [2, 4, 1], [10, 5, 10], [9, 6, 5], [10, 8, 4], [6, 2, 10]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #6 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 4, 9, 8, 0, 0, 9, 6]]
scalar = 1
expected = [[10, 6, 4, 9, 8, 0, 0, 9, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #7 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6, 1, 9, 2, 6], [5, 2, 10, 9, 9, 2], [9, 10, 2, 9, 6, 7], [6, 5, 0, 9, 6, 5], [9, 6, 9, 5, 6, 0], [3, 2, 3, 0, 2, 3], [1, 1, 9, 4, 4, 0], [10, 10, 4, 1, 2, 10], [2, 5, 10, 3, 8, 6]]
scalar = 2
expected = [[10, 12, 2, 18, 4, 12], [10, 4, 20, 18, 18, 4], [18, 20, 4, 18, 12, 14], [12, 10, 0, 18, 12, 10], [18, 12, 18, 10, 12, 0], [6, 4, 6, 0, 4, 6], [2, 2, 18, 8, 8, 0], [20, 20, 8, 2, 4, 20], [4, 10, 20, 6, 16, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #8 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 9, 5, 5, 1], [4, 0, 0, 3, 5, 10], [7, 3, 3, 0, 7, 4], [9, 6, 6, 10, 2, 5], [4, 9, 7, 2, 8, 1], [10, 8, 10, 7, 0, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #9 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 2, 9], [7, 1, 0, 0], [9, 4, 1, 0], [1, 1, 4, 4], [2, 3, 0, 9], [1, 0, 6, 1]]
scalar = 5
expected = [[5, 50, 10, 45], [35, 5, 0, 0], [45, 20, 5, 0], [5, 5, 20, 20], [10, 15, 0, 45], [5, 0, 30, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #10 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 0, 7, 0, 10, 8, 3, 9, 4], [9, 7, 5, 8, 0, 7, 5, 7, 6, 9], [1, 9, 10, 10, 1, 0, 0, 10, 0, 4], [1, 9, 8, 1, 2, 0, 7, 7, 7, 7], [8, 2, 7, 10, 3, 4, 3, 4, 2, 4], [4, 3, 3, 10, 0, 2, 7, 4, 3, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #11 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10], [4, 10], [0, 3], [9, 3], [8, 6], [5, 7]]
scalar = 4
expected = [[12, 40], [16, 40], [0, 12], [36, 12], [32, 24], [20, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #12 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7, 3, 3, 9, 3, 4, 2, 2, 1], [7, 1, 7, 7, 8, 10, 9, 3, 1, 2], [7, 8, 1, 10, 1, 10, 6, 0, 7, 7], [4, 5, 2, 7, 10, 2, 0, 7, 5, 0], [2, 9, 5, 9, 9, 9, 5, 0, 3, 9], [3, 8, 8, 3, 4, 4, 0, 9, 8, 9], [4, 0, 10, 6, 10, 8, 8, 4, 6, 4], [5, 9, 6, 7, 9, 4, 8, 5, 2, 7], [7, 0, 8, 6, 6, 1, 5, 0, 8, 8], [2, 2, 10, 3, 7, 3, 1, 6, 7, 1]]
scalar = 10
expected = [[60, 70, 30, 30, 90, 30, 40, 20, 20, 10], [70, 10, 70, 70, 80, 100, 90, 30, 10, 20], [70, 80, 10, 100, 10, 100, 60, 0, 70, 70], [40, 50, 20, 70, 100, 20, 0, 70, 50, 0], [20, 90, 50, 90, 90, 90, 50, 0, 30, 90], [30, 80, 80, 30, 40, 40, 0, 90, 80, 90], [40, 0, 100, 60, 100, 80, 80, 40, 60, 40], [50, 90, 60, 70, 90, 40, 80, 50, 20, 70], [70, 0, 80, 60, 60, 10, 50, 0, 80, 80], [20, 20, 100, 30, 70, 30, 10, 60, 70, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #13 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10], [7, 4], [6, 3], [6, 6], [8, 6], [5, 10], [4, 0], [1, 10]]
scalar = 9
expected = [[36, 90], [63, 36], [54, 27], [54, 54], [72, 54], [45, 90], [36, 0], [9, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #14 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [6], [7], [10]]
scalar = 9
expected = [[0], [54], [63], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #15 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 7], [3, 6, 6], [0, 2, 6], [2, 3, 9], [4, 5, 3], [10, 5, 5], [7, 0, 9], [1, 7, 9]]
scalar = 5
expected = [[35, 5, 35], [15, 30, 30], [0, 10, 30], [10, 15, 45], [20, 25, 15], [50, 25, 25], [35, 0, 45], [5, 35, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #16 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 0, 10, 2, 4, 7, 0], [1, 4, 3, 3, 7, 2, 8, 0], [8, 9, 5, 1, 1, 3, 6, 8], [0, 5, 9, 2, 7, 4, 1, 9], [7, 5, 7, 8, 8, 6, 3, 3], [9, 4, 5, 10, 2, 10, 9, 8], [2, 8, 10, 3, 1, 2, 5, 3], [6, 6, 0, 1, 2, 1, 8, 1], [2, 0, 4, 4, 1, 9, 7, 5]]
scalar = 2
expected = [[12, 8, 0, 20, 4, 8, 14, 0], [2, 8, 6, 6, 14, 4, 16, 0], [16, 18, 10, 2, 2, 6, 12, 16], [0, 10, 18, 4, 14, 8, 2, 18], [14, 10, 14, 16, 16, 12, 6, 6], [18, 8, 10, 20, 4, 20, 18, 16], [4, 16, 20, 6, 2, 4, 10, 6], [12, 12, 0, 2, 4, 2, 16, 2], [4, 0, 8, 8, 2, 18, 14, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #17 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 1, 9, 8], [9, 2, 9, 7, 2], [4, 8, 5, 1, 10], [4, 4, 8, 7, 3], [5, 4, 4, 9, 9], [4, 1, 4, 6, 7], [0, 5, 2, 2, 2], [6, 3, 8, 7, 1], [3, 7, 6, 9, 7], [1, 7, 1, 2, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #18 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 2, 9, 4, 2], [5, 9, 8, 6, 0, 0], [5, 3, 5, 5, 7, 9], [0, 5, 3, 8, 10, 10], [7, 10, 3, 2, 9, 8], [4, 3, 0, 1, 2, 10], [2, 10, 2, 3, 8, 10]]
scalar = 7
expected = [[28, 42, 14, 63, 28, 14], [35, 63, 56, 42, 0, 0], [35, 21, 35, 35, 49, 63], [0, 35, 21, 56, 70, 70], [49, 70, 21, 14, 63, 56], [28, 21, 0, 7, 14, 70], [14, 70, 14, 21, 56, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #19 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 4, 6, 7, 5], [10, 8, 8, 6, 9, 7], [6, 3, 8, 5, 8, 5], [1, 2, 2, 10, 10, 10], [4, 2, 5, 10, 6, 5], [10, 3, 1, 5, 1, 2], [5, 9, 7, 1, 5, 0], [0, 7, 5, 7, 6, 1], [5, 9, 4, 2, 1, 10], [4, 0, 0, 3, 0, 0]]
scalar = 1
expected = [[0, 1, 4, 6, 7, 5], [10, 8, 8, 6, 9, 7], [6, 3, 8, 5, 8, 5], [1, 2, 2, 10, 10, 10], [4, 2, 5, 10, 6, 5], [10, 3, 1, 5, 1, 2], [5, 9, 7, 1, 5, 0], [0, 7, 5, 7, 6, 1], [5, 9, 4, 2, 1, 10], [4, 0, 0, 3, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #20 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 9], [10, 9, 10], [10, 3, 2], [3, 9, 3], [7, 10, 5], [6, 5, 4], [0, 4, 0], [9, 6, 1], [3, 7, 5], [10, 9, 0]]
scalar = 6
expected = [[18, 54, 54], [60, 54, 60], [60, 18, 12], [18, 54, 18], [42, 60, 30], [36, 30, 24], [0, 24, 0], [54, 36, 6], [18, 42, 30], [60, 54, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #21 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 9, 3, 7, 4, 4, 4, 7]]
scalar = 6
expected = [[0, 0, 54, 18, 42, 24, 24, 24, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #22 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 6, 7, 10, 1, 6], [8, 9, 3, 6, 1, 9], [5, 8, 7, 6, 8, 2], [1, 4, 7, 4, 9, 4], [6, 6, 0, 4, 8, 9], [5, 4, 8, 4, 8, 6], [8, 4, 10, 8, 6, 8], [2, 5, 8, 1, 3, 5]]
scalar = 4
expected = [[24, 24, 28, 40, 4, 24], [32, 36, 12, 24, 4, 36], [20, 32, 28, 24, 32, 8], [4, 16, 28, 16, 36, 16], [24, 24, 0, 16, 32, 36], [20, 16, 32, 16, 32, 24], [32, 16, 40, 32, 24, 32], [8, 20, 32, 4, 12, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #23 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7], [8, 7], [1, 0], [2, 8], [2, 9], [4, 2], [7, 2], [0, 3]]
scalar = 9
expected = [[81, 63], [72, 63], [9, 0], [18, 72], [18, 81], [36, 18], [63, 18], [0, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #24 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 8, 9, 0, 6, 8, 2], [1, 10, 0, 1, 1, 1, 4, 7], [2, 7, 10, 2, 6, 2, 10, 4], [6, 7, 10, 5, 2, 8, 10, 5], [10, 4, 8, 0, 3, 2, 4, 0], [9, 9, 2, 0, 5, 3, 6, 9], [5, 4, 10, 9, 1, 5, 0, 5], [3, 4, 10, 1, 2, 2, 8, 3], [8, 2, 0, 2, 7, 6, 9, 5], [1, 1, 1, 0, 1, 7, 3, 7]]
scalar = 5
expected = [[0, 30, 40, 45, 0, 30, 40, 10], [5, 50, 0, 5, 5, 5, 20, 35], [10, 35, 50, 10, 30, 10, 50, 20], [30, 35, 50, 25, 10, 40, 50, 25], [50, 20, 40, 0, 15, 10, 20, 0], [45, 45, 10, 0, 25, 15, 30, 45], [25, 20, 50, 45, 5, 25, 0, 25], [15, 20, 50, 5, 10, 10, 40, 15], [40, 10, 0, 10, 35, 30, 45, 25], [5, 5, 5, 0, 5, 35, 15, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #25 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 0], [5, 3, 0], [9, 10, 4], [2, 8, 9], [2, 10, 8], [1, 2, 2], [5, 10, 0]]
scalar = 2
expected = [[8, 16, 0], [10, 6, 0], [18, 20, 8], [4, 16, 18], [4, 20, 16], [2, 4, 4], [10, 20, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #26 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 4, 5, 2, 7, 9, 4, 7, 4], [2, 6, 5, 6, 4, 5, 6, 10, 3, 6], [1, 3, 1, 10, 10, 8, 2, 4, 7, 7], [7, 1, 3, 4, 4, 7, 7, 0, 6, 3], [1, 7, 6, 1, 1, 7, 1, 4, 7, 2], [4, 7, 1, 10, 6, 2, 3, 6, 1, 8], [6, 4, 6, 9, 4, 0, 3, 2, 8, 8], [0, 8, 5, 3, 6, 5, 7, 7, 6, 10]]
scalar = 1
expected = [[6, 5, 4, 5, 2, 7, 9, 4, 7, 4], [2, 6, 5, 6, 4, 5, 6, 10, 3, 6], [1, 3, 1, 10, 10, 8, 2, 4, 7, 7], [7, 1, 3, 4, 4, 7, 7, 0, 6, 3], [1, 7, 6, 1, 1, 7, 1, 4, 7, 2], [4, 7, 1, 10, 6, 2, 3, 6, 1, 8], [6, 4, 6, 9, 4, 0, 3, 2, 8, 8], [0, 8, 5, 3, 6, 5, 7, 7, 6, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #27 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 2, 3, 3, 5, 7], [2, 1, 1, 7, 6, 10, 3], [3, 7, 4, 6, 1, 9, 7], [1, 5, 5, 2, 5, 1, 5], [1, 6, 10, 5, 9, 0, 1], [9, 1, 7, 6, 10, 8, 0]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #28 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 0, 7, 10, 5, 3, 5, 8, 3], [4, 3, 4, 0, 5, 0, 6, 8, 5, 1], [2, 4, 3, 6, 5, 4, 3, 9, 1, 6], [6, 8, 4, 6, 0, 10, 1, 6, 5, 2], [1, 10, 6, 2, 5, 2, 7, 0, 3, 0], [10, 4, 5, 3, 0, 10, 7, 6, 1, 2], [0, 3, 4, 10, 7, 3, 9, 7, 4, 8]]
scalar = 3
expected = [[3, 15, 0, 21, 30, 15, 9, 15, 24, 9], [12, 9, 12, 0, 15, 0, 18, 24, 15, 3], [6, 12, 9, 18, 15, 12, 9, 27, 3, 18], [18, 24, 12, 18, 0, 30, 3, 18, 15, 6], [3, 30, 18, 6, 15, 6, 21, 0, 9, 0], [30, 12, 15, 9, 0, 30, 21, 18, 3, 6], [0, 9, 12, 30, 21, 9, 27, 21, 12, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #29 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 1, 10, 3], [2, 7, 9, 1, 0], [0, 5, 1, 1, 4], [4, 7, 0, 5, 3]]
scalar = 9
expected = [[18, 90, 9, 90, 27], [18, 63, 81, 9, 0], [0, 45, 9, 9, 36], [36, 63, 0, 45, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #30 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 4, 9, 9, 6, 6, 6, 6], [5, 9, 10, 2, 1, 3, 0, 1, 6], [3, 3, 2, 1, 2, 0, 3, 0, 6], [10, 3, 2, 7, 0, 3, 6, 1, 5], [2, 7, 6, 3, 1, 2, 0, 5, 6], [2, 6, 9, 4, 10, 4, 5, 0, 3], [10, 5, 0, 9, 8, 0, 10, 2, 0], [5, 6, 0, 4, 6, 1, 1, 3, 8], [0, 10, 4, 1, 4, 6, 1, 0, 4]]
scalar = 9
expected = [[63, 9, 36, 81, 81, 54, 54, 54, 54], [45, 81, 90, 18, 9, 27, 0, 9, 54], [27, 27, 18, 9, 18, 0, 27, 0, 54], [90, 27, 18, 63, 0, 27, 54, 9, 45], [18, 63, 54, 27, 9, 18, 0, 45, 54], [18, 54, 81, 36, 90, 36, 45, 0, 27], [90, 45, 0, 81, 72, 0, 90, 18, 0], [45, 54, 0, 36, 54, 9, 9, 27, 72], [0, 90, 36, 9, 36, 54, 9, 0, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #31 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5, 7, 4, 4, 8, 1], [6, 5, 9, 6, 7, 8, 5]]
scalar = 3
expected = [[0, 15, 21, 12, 12, 24, 3], [18, 15, 27, 18, 21, 24, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #32 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 6, 7, 7, 6, 0, 5, 1, 7, 7], [1, 4, 10, 5, 3, 5, 10, 5, 4, 3], [6, 2, 5, 9, 2, 6, 7, 8, 2, 0], [9, 5, 3, 5, 4, 0, 2, 0, 10, 0], [3, 10, 4, 2, 4, 3, 3, 2, 7, 9]]
scalar = 9
expected = [[63, 54, 63, 63, 54, 0, 45, 9, 63, 63], [9, 36, 90, 45, 27, 45, 90, 45, 36, 27], [54, 18, 45, 81, 18, 54, 63, 72, 18, 0], [81, 45, 27, 45, 36, 0, 18, 0, 90, 0], [27, 90, 36, 18, 36, 27, 27, 18, 63, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #33 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 5, 8, 3], [6, 4, 4, 9, 5], [8, 8, 10, 3, 7]]
scalar = 10
expected = [[40, 0, 50, 80, 30], [60, 40, 40, 90, 50], [80, 80, 100, 30, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #34 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 10, 7, 7, 0, 0, 2, 3], [9, 7, 10, 2, 2, 7, 10, 3, 4], [8, 10, 7, 8, 6, 4, 1, 1, 7], [3, 10, 3, 6, 0, 5, 8, 8, 10], [0, 1, 3, 10, 3, 9, 5, 0, 10]]
scalar = 7
expected = [[49, 14, 70, 49, 49, 0, 0, 14, 21], [63, 49, 70, 14, 14, 49, 70, 21, 28], [56, 70, 49, 56, 42, 28, 7, 7, 49], [21, 70, 21, 42, 0, 35, 56, 56, 70], [0, 7, 21, 70, 21, 63, 35, 0, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #35 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 2, 3, 5, 8, 8, 3, 3], [3, 4, 10, 7, 10, 4, 1, 0], [7, 2, 4, 3, 5, 10, 9, 6], [10, 6, 6, 8, 0, 8, 5, 5], [2, 8, 7, 5, 2, 8, 5, 2]]
scalar = 5
expected = [[0, 10, 15, 25, 40, 40, 15, 15], [15, 20, 50, 35, 50, 20, 5, 0], [35, 10, 20, 15, 25, 50, 45, 30], [50, 30, 30, 40, 0, 40, 25, 25], [10, 40, 35, 25, 10, 40, 25, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #36 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 1, 7, 7], [8, 3, 2, 3, 4], [6, 0, 1, 2, 4], [10, 8, 6, 9, 7], [7, 2, 5, 0, 4], [6, 6, 10, 4, 3], [3, 6, 10, 5, 8], [5, 7, 6, 2, 2], [6, 7, 8, 1, 4], [1, 6, 6, 1, 8]]
scalar = 3
expected = [[18, 6, 3, 21, 21], [24, 9, 6, 9, 12], [18, 0, 3, 6, 12], [30, 24, 18, 27, 21], [21, 6, 15, 0, 12], [18, 18, 30, 12, 9], [9, 18, 30, 15, 24], [15, 21, 18, 6, 6], [18, 21, 24, 3, 12], [3, 18, 18, 3, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #37 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 5, 6, 3], [7, 3, 5, 10, 5], [1, 6, 7, 5, 0], [0, 7, 8, 5, 8], [6, 3, 6, 0, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #38 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 0, 8, 10, 2], [3, 7, 10, 3, 2, 0], [9, 4, 5, 0, 6, 6], [10, 5, 2, 8, 0, 0], [3, 4, 2, 3, 2, 6], [9, 6, 10, 4, 6, 0], [6, 7, 3, 5, 7, 8]]
scalar = 10
expected = [[40, 0, 0, 80, 100, 20], [30, 70, 100, 30, 20, 0], [90, 40, 50, 0, 60, 60], [100, 50, 20, 80, 0, 0], [30, 40, 20, 30, 20, 60], [90, 60, 100, 40, 60, 0], [60, 70, 30, 50, 70, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #39 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [0], [1], [4], [9], [6], [1], [7], [0], [7]]
scalar = 8
expected = [[72], [0], [8], [32], [72], [48], [8], [56], [0], [56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #40 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 3]]
scalar = 8
expected = [[40, 80, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #41 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5], [7, 5], [10, 3], [2, 4]]
scalar = 1
expected = [[4, 5], [7, 5], [10, 3], [2, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #42 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [10], [4], [4], [9], [9]]
scalar = 10
expected = [[80], [100], [40], [40], [90], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #43 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 4, 4, 7, 2], [2, 6, 5, 0, 1, 2], [7, 0, 1, 9, 7, 0]]
scalar = 5
expected = [[5, 40, 20, 20, 35, 10], [10, 30, 25, 0, 5, 10], [35, 0, 5, 45, 35, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #44 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 0, 2, 5, 9, 3, 10], [2, 10, 8, 10, 3, 4, 7, 4], [4, 0, 7, 10, 10, 2, 1, 7], [0, 6, 6, 1, 1, 1, 8, 3], [2, 10, 1, 5, 7, 0, 4, 7], [1, 5, 4, 1, 8, 10, 9, 10], [8, 8, 2, 0, 10, 3, 3, 4], [7, 8, 5, 3, 1, 0, 8, 9], [8, 2, 4, 10, 4, 3, 8, 2], [6, 9, 1, 0, 0, 3, 1, 5]]
scalar = 2
expected = [[0, 20, 0, 4, 10, 18, 6, 20], [4, 20, 16, 20, 6, 8, 14, 8], [8, 0, 14, 20, 20, 4, 2, 14], [0, 12, 12, 2, 2, 2, 16, 6], [4, 20, 2, 10, 14, 0, 8, 14], [2, 10, 8, 2, 16, 20, 18, 20], [16, 16, 4, 0, 20, 6, 6, 8], [14, 16, 10, 6, 2, 0, 16, 18], [16, 4, 8, 20, 8, 6, 16, 4], [12, 18, 2, 0, 0, 6, 2, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #45 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 5, 7, 1, 4, 9, 1, 4, 10], [7, 6, 5, 1, 6, 9, 5, 10, 5, 6]]
scalar = 10
expected = [[70, 30, 50, 70, 10, 40, 90, 10, 40, 100], [70, 60, 50, 10, 60, 90, 50, 100, 50, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #46 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3, 8, 2, 1, 8, 9, 10, 7], [8, 7, 0, 1, 1, 6, 8, 9, 1], [2, 9, 2, 4, 6, 10, 2, 9, 8], [1, 2, 1, 0, 6, 9, 2, 9, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #47 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 2, 2, 1, 3], [3, 0, 6, 1, 4, 8], [8, 4, 2, 8, 2, 7], [6, 1, 4, 4, 0, 5], [2, 4, 2, 7, 5, 7], [6, 1, 1, 8, 10, 9], [6, 2, 10, 2, 2, 5], [8, 6, 1, 0, 3, 9], [5, 2, 5, 8, 6, 4]]
scalar = 10
expected = [[20, 10, 20, 20, 10, 30], [30, 0, 60, 10, 40, 80], [80, 40, 20, 80, 20, 70], [60, 10, 40, 40, 0, 50], [20, 40, 20, 70, 50, 70], [60, 10, 10, 80, 100, 90], [60, 20, 100, 20, 20, 50], [80, 60, 10, 0, 30, 90], [50, 20, 50, 80, 60, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #48 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 10, 9, 6, 0, 3, 1, 7, 1], [6, 6, 8, 5, 6, 10, 1, 3, 4, 0], [6, 9, 9, 10, 6, 7, 6, 2, 1, 9], [5, 5, 10, 1, 1, 8, 9, 0, 8, 9], [4, 7, 6, 1, 4, 6, 4, 6, 5, 2], [3, 5, 4, 7, 4, 10, 0, 1, 8, 0], [2, 2, 8, 10, 1, 2, 10, 2, 7, 8], [4, 1, 6, 5, 7, 2, 4, 10, 2, 5], [4, 3, 7, 6, 4, 4, 7, 7, 6, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #49 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 2, 1, 7, 7, 2, 3, 7, 9, 5]]
scalar = 7
expected = [[63, 14, 7, 49, 49, 14, 21, 49, 63, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #50 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 3], [2, 6, 8], [10, 5, 9], [4, 3, 3], [2, 3, 2]]
scalar = 2
expected = [[12, 20, 6], [4, 12, 16], [20, 10, 18], [8, 6, 6], [4, 6, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #51 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 0, 9, 6, 7, 3, 3, 6], [2, 7, 8, 7, 1, 0, 5, 8, 2], [9, 5, 5, 7, 7, 8, 9, 1, 8]]
scalar = 1
expected = [[8, 1, 0, 9, 6, 7, 3, 3, 6], [2, 7, 8, 7, 1, 0, 5, 8, 2], [9, 5, 5, 7, 7, 8, 9, 1, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #52 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [0], [9], [6], [9]]
scalar = 9
expected = [[36], [0], [81], [54], [81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #53 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3, 2, 9, 4, 2], [7, 10, 4, 1, 0, 4], [0, 0, 9, 3, 5, 0]]
scalar = 3
expected = [[30, 9, 6, 27, 12, 6], [21, 30, 12, 3, 0, 12], [0, 0, 27, 9, 15, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #54 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 3, 0, 10, 1, 8], [7, 4, 9, 1, 10, 4, 0], [2, 6, 2, 2, 1, 1, 10], [3, 0, 0, 1, 9, 1, 2]]
scalar = 7
expected = [[56, 7, 21, 0, 70, 7, 56], [49, 28, 63, 7, 70, 28, 0], [14, 42, 14, 14, 7, 7, 70], [21, 0, 0, 7, 63, 7, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #55 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [7], [3], [3], [8], [6], [9]]
scalar = 5
expected = [[25], [35], [15], [15], [40], [30], [45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #56 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [5], [10], [1], [10], [10], [7]]
scalar = 7
expected = [[7], [35], [70], [7], [70], [70], [49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #57 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 0, 5, 6, 4], [1, 8, 4, 1, 7], [4, 1, 5, 0, 5]]
scalar = 2
expected = [[4, 0, 10, 12, 8], [2, 16, 8, 2, 14], [8, 2, 10, 0, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #58 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5], [4, 0], [3, 5], [2, 4]]
scalar = 6
expected = [[12, 30], [24, 0], [18, 30], [12, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #59 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 2], [4, 4, 9], [0, 9, 2], [3, 1, 1], [8, 9, 5], [3, 1, 1], [8, 5, 8], [0, 3, 8]]
scalar = 6
expected = [[0, 6, 12], [24, 24, 54], [0, 54, 12], [18, 6, 6], [48, 54, 30], [18, 6, 6], [48, 30, 48], [0, 18, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #60 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 6, 7, 2, 8, 6], [0, 7, 0, 10, 7, 7, 8], [9, 7, 2, 8, 6, 1, 5], [4, 10, 5, 1, 2, 4, 0], [0, 10, 6, 0, 0, 2, 1], [8, 9, 7, 10, 4, 0, 0], [9, 6, 1, 0, 8, 0, 7], [7, 10, 9, 9, 2, 9, 7], [8, 10, 9, 9, 7, 7, 3], [0, 10, 4, 0, 5, 7, 8]]
scalar = 8
expected = [[32, 56, 48, 56, 16, 64, 48], [0, 56, 0, 80, 56, 56, 64], [72, 56, 16, 64, 48, 8, 40], [32, 80, 40, 8, 16, 32, 0], [0, 80, 48, 0, 0, 16, 8], [64, 72, 56, 80, 32, 0, 0], [72, 48, 8, 0, 64, 0, 56], [56, 80, 72, 72, 16, 72, 56], [64, 80, 72, 72, 56, 56, 24], [0, 80, 32, 0, 40, 56, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #61 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [0], [4], [5], [9], [1]]
scalar = 10
expected = [[10], [0], [40], [50], [90], [10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #62 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [9], [9]]
scalar = 3
expected = [[21], [27], [27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #63 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 8, 8], [2, 10, 9, 9], [5, 2, 8, 4], [9, 5, 4, 2], [6, 1, 3, 10], [0, 10, 4, 5]]
scalar = 2
expected = [[2, 16, 16, 16], [4, 20, 18, 18], [10, 4, 16, 8], [18, 10, 8, 4], [12, 2, 6, 20], [0, 20, 8, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #64 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 2, 0, 7, 6, 3, 4, 10]]
scalar = 10
expected = [[90, 20, 0, 70, 60, 30, 40, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #65 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 6, 2, 8, 6, 10, 3, 5, 5], [10, 0, 2, 3, 7, 1, 2, 4, 10], [2, 1, 8, 7, 3, 5, 7, 9, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #66 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2], [8, 4]]
scalar = 1
expected = [[3, 2], [8, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #67 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 3, 9, 0, 6], [4, 3, 8, 2, 7, 6]]
scalar = 6
expected = [[24, 0, 18, 54, 0, 36], [24, 18, 48, 12, 42, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #68 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 10, 5, 3, 9, 5], [4, 0, 6, 0, 0, 1, 0], [5, 1, 4, 8, 3, 6, 3], [0, 0, 9, 5, 5, 3, 9], [10, 1, 5, 10, 10, 0, 9], [8, 8, 5, 6, 0, 8, 9], [8, 6, 9, 2, 1, 10, 7], [6, 7, 5, 9, 6, 1, 6], [0, 2, 2, 6, 8, 8, 8]]
scalar = 2
expected = [[6, 0, 20, 10, 6, 18, 10], [8, 0, 12, 0, 0, 2, 0], [10, 2, 8, 16, 6, 12, 6], [0, 0, 18, 10, 10, 6, 18], [20, 2, 10, 20, 20, 0, 18], [16, 16, 10, 12, 0, 16, 18], [16, 12, 18, 4, 2, 20, 14], [12, 14, 10, 18, 12, 2, 12], [0, 4, 4, 12, 16, 16, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #69 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 4, 10, 8, 2, 7, 3, 3, 6, 1], [0, 4, 8, 9, 10, 7, 7, 1, 5, 10], [4, 4, 1, 5, 0, 2, 8, 6, 8, 2]]
scalar = 10
expected = [[70, 40, 100, 80, 20, 70, 30, 30, 60, 10], [0, 40, 80, 90, 100, 70, 70, 10, 50, 100], [40, 40, 10, 50, 0, 20, 80, 60, 80, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #70 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 4, 0, 0, 10, 5, 3], [9, 4, 10, 6, 4, 1, 2], [5, 1, 3, 8, 2, 4, 10], [10, 9, 8, 1, 2, 10, 0], [9, 8, 7, 5, 0, 10, 4]]
scalar = 2
expected = [[18, 8, 0, 0, 20, 10, 6], [18, 8, 20, 12, 8, 2, 4], [10, 2, 6, 16, 4, 8, 20], [20, 18, 16, 2, 4, 20, 0], [18, 16, 14, 10, 0, 20, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #71 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5, 3], [9, 4, 9], [3, 7, 3], [1, 5, 2], [10, 4, 4], [2, 0, 3], [0, 6, 2], [3, 5, 6], [10, 7, 0], [3, 8, 10]]
scalar = 9
expected = [[18, 45, 27], [81, 36, 81], [27, 63, 27], [9, 45, 18], [90, 36, 36], [18, 0, 27], [0, 54, 18], [27, 45, 54], [90, 63, 0], [27, 72, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #72 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 9, 9, 6], [8, 8, 0, 6, 6], [8, 0, 3, 2, 2], [6, 2, 2, 0, 6], [6, 9, 5, 5, 0], [1, 4, 8, 3, 2]]
scalar = 10
expected = [[100, 90, 90, 90, 60], [80, 80, 0, 60, 60], [80, 0, 30, 20, 20], [60, 20, 20, 0, 60], [60, 90, 50, 50, 0], [10, 40, 80, 30, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #73 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 0, 7, 3, 5, 3], [9, 1, 9, 10, 6, 9, 3], [9, 7, 4, 4, 10, 0, 5], [3, 10, 3, 5, 9, 3, 6]]
scalar = 9
expected = [[90, 45, 0, 63, 27, 45, 27], [81, 9, 81, 90, 54, 81, 27], [81, 63, 36, 36, 90, 0, 45], [27, 90, 27, 45, 81, 27, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #74 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [7], [0], [10], [0], [0], [4], [9]]
scalar = 9
expected = [[9], [63], [0], [90], [0], [0], [36], [81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #75 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 4, 2, 8, 6, 5], [2, 7, 0, 5, 6, 5, 0]]
scalar = 4
expected = [[16, 16, 16, 8, 32, 24, 20], [8, 28, 0, 20, 24, 20, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #76 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 9], [2, 7, 9], [7, 0, 2], [4, 6, 0], [5, 2, 1], [7, 2, 5], [8, 6, 10]]
scalar = 6
expected = [[18, 30, 54], [12, 42, 54], [42, 0, 12], [24, 36, 0], [30, 12, 6], [42, 12, 30], [48, 36, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #77 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 1, 3, 3, 9, 10, 6], [8, 2, 0, 2, 9, 5, 7, 3], [5, 8, 3, 2, 3, 4, 2, 1], [2, 8, 7, 7, 6, 9, 4, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #78 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 4, 6, 8, 6, 9, 8], [0, 10, 2, 3, 10, 5, 10, 7], [9, 3, 8, 5, 2, 9, 0, 3], [10, 8, 10, 9, 8, 7, 10, 10], [3, 10, 0, 3, 5, 1, 4, 2], [9, 5, 6, 4, 9, 4, 4, 10], [9, 5, 2, 5, 3, 5, 8, 1], [3, 5, 2, 4, 7, 0, 8, 1], [0, 7, 0, 8, 9, 9, 7, 9]]
scalar = 9
expected = [[0, 72, 36, 54, 72, 54, 81, 72], [0, 90, 18, 27, 90, 45, 90, 63], [81, 27, 72, 45, 18, 81, 0, 27], [90, 72, 90, 81, 72, 63, 90, 90], [27, 90, 0, 27, 45, 9, 36, 18], [81, 45, 54, 36, 81, 36, 36, 90], [81, 45, 18, 45, 27, 45, 72, 9], [27, 45, 18, 36, 63, 0, 72, 9], [0, 63, 0, 72, 81, 81, 63, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #79 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 8, 10, 5, 0, 9, 5, 1], [6, 5, 8, 7, 10, 3, 10, 3, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #80 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 8, 0, 1, 6, 10, 1, 0, 2], [9, 2, 0, 9, 5, 1, 8, 6, 0], [6, 4, 9, 8, 1, 4, 0, 1, 3], [2, 4, 10, 6, 7, 3, 1, 4, 2], [7, 2, 4, 9, 8, 0, 1, 1, 0], [2, 4, 9, 0, 0, 3, 0, 0, 10]]
scalar = 7
expected = [[21, 56, 0, 7, 42, 70, 7, 0, 14], [63, 14, 0, 63, 35, 7, 56, 42, 0], [42, 28, 63, 56, 7, 28, 0, 7, 21], [14, 28, 70, 42, 49, 21, 7, 28, 14], [49, 14, 28, 63, 56, 0, 7, 7, 0], [14, 28, 63, 0, 0, 21, 0, 0, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #81 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 0, 7, 1, 4, 10], [9, 1, 10, 7, 6, 4, 6]]
scalar = 6
expected = [[30, 42, 0, 42, 6, 24, 60], [54, 6, 60, 42, 36, 24, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #82 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 9, 3, 1, 7, 9, 4], [4, 6, 4, 4, 0, 3, 2, 4], [0, 7, 4, 0, 9, 8, 1, 6], [7, 10, 5, 4, 2, 10, 9, 1], [3, 4, 8, 10, 7, 9, 4, 7], [4, 1, 5, 3, 3, 8, 9, 0], [2, 7, 7, 1, 8, 4, 7, 0], [9, 1, 9, 2, 6, 4, 6, 1], [1, 5, 0, 3, 3, 1, 1, 1], [2, 6, 3, 3, 10, 8, 5, 4]]
scalar = 1
expected = [[0, 1, 9, 3, 1, 7, 9, 4], [4, 6, 4, 4, 0, 3, 2, 4], [0, 7, 4, 0, 9, 8, 1, 6], [7, 10, 5, 4, 2, 10, 9, 1], [3, 4, 8, 10, 7, 9, 4, 7], [4, 1, 5, 3, 3, 8, 9, 0], [2, 7, 7, 1, 8, 4, 7, 0], [9, 1, 9, 2, 6, 4, 6, 1], [1, 5, 0, 3, 3, 1, 1, 1], [2, 6, 3, 3, 10, 8, 5, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #83 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 7, 0, 0], [9, 1, 7, 6, 6], [4, 1, 0, 8, 1], [10, 4, 10, 2, 6], [6, 2, 2, 0, 9]]
scalar = 9
expected = [[36, 9, 63, 0, 0], [81, 9, 63, 54, 54], [36, 9, 0, 72, 9], [90, 36, 90, 18, 54], [54, 18, 18, 0, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #84 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 10, 5, 10, 1, 6, 5], [3, 3, 4, 5, 9, 6, 1, 7]]
scalar = 1
expected = [[1, 1, 10, 5, 10, 1, 6, 5], [3, 3, 4, 5, 9, 6, 1, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #85 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 10, 1, 10, 5, 8, 10, 2], [6, 2, 10, 6, 1, 6, 8, 6, 8]]
scalar = 9
expected = [[72, 63, 90, 9, 90, 45, 72, 90, 18], [54, 18, 90, 54, 9, 54, 72, 54, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #86 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0, 4, 2, 1, 4, 4, 4]]
scalar = 3
expected = [[3, 0, 12, 6, 3, 12, 12, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #87 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4, 6], [10, 0, 4], [9, 0, 4], [6, 6, 6], [9, 7, 6], [6, 7, 3], [6, 0, 3], [5, 6, 9], [4, 3, 2]]
scalar = 1
expected = [[1, 4, 6], [10, 0, 4], [9, 0, 4], [6, 6, 6], [9, 7, 6], [6, 7, 3], [6, 0, 3], [5, 6, 9], [4, 3, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #88 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6]]
scalar = 8
expected = [[48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #89 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 3, 1, 0], [1, 4, 2, 4]]
scalar = 6
expected = [[54, 18, 6, 0], [6, 24, 12, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #90 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 8, 9, 10, 2], [5, 1, 9, 5, 6, 7], [10, 0, 10, 0, 6, 1], [10, 0, 8, 6, 10, 10], [0, 7, 7, 3, 0, 3], [2, 4, 7, 9, 8, 9], [3, 9, 4, 1, 7, 7], [0, 5, 7, 0, 8, 8], [0, 9, 5, 9, 2, 8], [0, 6, 5, 5, 9, 4]]
scalar = 9
expected = [[45, 18, 72, 81, 90, 18], [45, 9, 81, 45, 54, 63], [90, 0, 90, 0, 54, 9], [90, 0, 72, 54, 90, 90], [0, 63, 63, 27, 0, 27], [18, 36, 63, 81, 72, 81], [27, 81, 36, 9, 63, 63], [0, 45, 63, 0, 72, 72], [0, 81, 45, 81, 18, 72], [0, 54, 45, 45, 81, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #91 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 7, 6, 4, 2]]
scalar = 2
expected = [[0, 20, 14, 12, 8, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #92 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 5, 2, 5, 1, 5, 1, 2], [7, 8, 7, 8, 6, 1, 9, 7, 9], [3, 0, 10, 7, 10, 8, 0, 6, 8], [9, 9, 4, 3, 8, 7, 10, 1, 4], [10, 8, 10, 6, 8, 1, 5, 6, 9], [0, 6, 2, 0, 10, 7, 10, 4, 4], [3, 10, 3, 8, 1, 10, 5, 7, 8]]
scalar = 9
expected = [[81, 81, 45, 18, 45, 9, 45, 9, 18], [63, 72, 63, 72, 54, 9, 81, 63, 81], [27, 0, 90, 63, 90, 72, 0, 54, 72], [81, 81, 36, 27, 72, 63, 90, 9, 36], [90, 72, 90, 54, 72, 9, 45, 54, 81], [0, 54, 18, 0, 90, 63, 90, 36, 36], [27, 90, 27, 72, 9, 90, 45, 63, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #93 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 7, 3, 7, 10, 5], [7, 2, 8, 5, 9, 5, 10], [4, 6, 1, 1, 9, 1, 6], [3, 6, 4, 7, 0, 2, 3], [6, 8, 7, 4, 7, 10, 7]]
scalar = 7
expected = [[0, 0, 49, 21, 49, 70, 35], [49, 14, 56, 35, 63, 35, 70], [28, 42, 7, 7, 63, 7, 42], [21, 42, 28, 49, 0, 14, 21], [42, 56, 49, 28, 49, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #94 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 9, 3, 4, 6, 2], [0, 3, 2, 6, 3, 1, 8], [2, 1, 10, 1, 7, 0, 7], [6, 9, 6, 4, 5, 5, 2]]
scalar = 1
expected = [[7, 2, 9, 3, 4, 6, 2], [0, 3, 2, 6, 3, 1, 8], [2, 1, 10, 1, 7, 0, 7], [6, 9, 6, 4, 5, 5, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #95 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6], [6, 6], [6, 7], [0, 10], [9, 7], [7, 8], [3, 1]]
scalar = 6
expected = [[54, 36], [36, 36], [36, 42], [0, 60], [54, 42], [42, 48], [18, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #96 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 7, 2, 0], [3, 7, 4, 5, 0], [2, 2, 4, 9, 1], [9, 2, 3, 8, 6], [3, 9, 6, 1, 2], [6, 8, 9, 4, 6], [7, 1, 3, 9, 10], [4, 5, 6, 6, 9], [8, 7, 7, 3, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #97 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 10, 10, 9, 1, 7, 6, 3], [10, 4, 4, 5, 2, 2, 1, 0, 3], [6, 8, 7, 5, 5, 4, 10, 0, 6], [8, 1, 9, 4, 2, 5, 3, 9, 6], [10, 0, 1, 4, 7, 5, 1, 10, 8]]
scalar = 3
expected = [[12, 18, 30, 30, 27, 3, 21, 18, 9], [30, 12, 12, 15, 6, 6, 3, 0, 9], [18, 24, 21, 15, 15, 12, 30, 0, 18], [24, 3, 27, 12, 6, 15, 9, 27, 18], [30, 0, 3, 12, 21, 15, 3, 30, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #98 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 5], [7, 1, 3]]
scalar = 5
expected = [[40, 35, 25], [35, 5, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #99 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 1, 8, 7, 10, 2], [9, 4, 6, 9, 10, 5, 8], [2, 0, 2, 5, 2, 1, 5], [6, 0, 10, 6, 9, 1, 2], [0, 5, 2, 1, 8, 4, 2]]
scalar = 1
expected = [[1, 8, 1, 8, 7, 10, 2], [9, 4, 6, 9, 10, 5, 8], [2, 0, 2, 5, 2, 1, 5], [6, 0, 10, 6, 9, 1, 2], [0, 5, 2, 1, 8, 4, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #100 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 7, 4, 7, 4, 6, 1, 8, 4], [4, 9, 2, 5, 4, 10, 5, 5, 10], [6, 4, 9, 1, 7, 5, 2, 9, 3]]
scalar = 7
expected = [[21, 49, 28, 49, 28, 42, 7, 56, 28], [28, 63, 14, 35, 28, 70, 35, 35, 70], [42, 28, 63, 7, 49, 35, 14, 63, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #101 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 2, 8, 2, 4], [2, 9, 5, 8, 7, 8], [9, 9, 0, 9, 4, 9], [1, 7, 4, 8, 8, 3], [9, 5, 8, 5, 8, 0], [4, 7, 2, 1, 10, 9], [10, 2, 2, 6, 8, 6], [2, 10, 5, 10, 8, 8], [2, 3, 4, 1, 10, 4]]
scalar = 4
expected = [[32, 24, 8, 32, 8, 16], [8, 36, 20, 32, 28, 32], [36, 36, 0, 36, 16, 36], [4, 28, 16, 32, 32, 12], [36, 20, 32, 20, 32, 0], [16, 28, 8, 4, 40, 36], [40, 8, 8, 24, 32, 24], [8, 40, 20, 40, 32, 32], [8, 12, 16, 4, 40, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #102 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [1], [7], [9], [7]]
scalar = 2
expected = [[10], [2], [14], [18], [14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #103 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 2, 0, 1, 2, 10, 0, 1, 3], [8, 1, 9, 8, 5, 2, 1, 7, 4, 1], [3, 4, 10, 3, 8, 1, 4, 7, 5, 6], [10, 0, 8, 5, 1, 5, 3, 3, 6, 3]]
scalar = 7
expected = [[70, 63, 14, 0, 7, 14, 70, 0, 7, 21], [56, 7, 63, 56, 35, 14, 7, 49, 28, 7], [21, 28, 70, 21, 56, 7, 28, 49, 35, 42], [70, 0, 56, 35, 7, 35, 21, 21, 42, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #104 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 4, 6, 6, 9, 7, 10, 5], [3, 10, 3, 7, 9, 2, 8, 0, 4], [3, 3, 1, 4, 3, 0, 6, 0, 10], [10, 0, 0, 8, 0, 8, 4, 3, 4], [10, 2, 6, 9, 10, 10, 2, 8, 9], [10, 1, 7, 2, 7, 6, 1, 10, 8], [3, 6, 0, 6, 2, 1, 9, 3, 3], [10, 10, 3, 5, 3, 7, 8, 1, 3]]
scalar = 8
expected = [[48, 40, 32, 48, 48, 72, 56, 80, 40], [24, 80, 24, 56, 72, 16, 64, 0, 32], [24, 24, 8, 32, 24, 0, 48, 0, 80], [80, 0, 0, 64, 0, 64, 32, 24, 32], [80, 16, 48, 72, 80, 80, 16, 64, 72], [80, 8, 56, 16, 56, 48, 8, 80, 64], [24, 48, 0, 48, 16, 8, 72, 24, 24], [80, 80, 24, 40, 24, 56, 64, 8, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #105 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 6, 7, 7, 6, 0, 2], [2, 2, 6, 8, 6, 7, 2, 8], [3, 4, 5, 6, 1, 3, 0, 1], [3, 0, 9, 6, 3, 7, 7, 5], [1, 3, 5, 5, 2, 0, 3, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #106 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [10], [1], [6], [4], [1], [9], [8], [4]]
scalar = 8
expected = [[32], [80], [8], [48], [32], [8], [72], [64], [32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #107 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 0, 0, 3, 6, 1, 0], [6, 6, 9, 2, 5, 10, 3, 9]]
scalar = 6
expected = [[30, 60, 0, 0, 18, 36, 6, 0], [36, 36, 54, 12, 30, 60, 18, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #108 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [2], [8], [4], [0], [7], [10], [6]]
scalar = 5
expected = [[0], [10], [40], [20], [0], [35], [50], [30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #109 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7], [3, 5], [1, 9], [8, 1], [6, 10]]
scalar = 3
expected = [[12, 21], [9, 15], [3, 27], [24, 3], [18, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #110 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [5], [0], [1], [4], [7], [10]]
scalar = 9
expected = [[54], [45], [0], [9], [36], [63], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #111 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 4], [0, 8, 10], [2, 0, 8]]
scalar = 10
expected = [[100, 0, 40], [0, 80, 100], [20, 0, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #112 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 1], [0, 7, 1], [1, 0, 3], [9, 1, 4], [0, 10, 9], [9, 6, 3], [4, 9, 9]]
scalar = 5
expected = [[5, 5, 5], [0, 35, 5], [5, 0, 15], [45, 5, 20], [0, 50, 45], [45, 30, 15], [20, 45, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #113 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 1, 8, 7], [0, 9, 8, 10]]
scalar = 10
expected = [[100, 10, 80, 70], [0, 90, 80, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #114 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7]]
scalar = 9
expected = [[63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #115 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 10, 5, 4, 0, 9], [6, 8, 6, 4, 1, 2, 4], [4, 1, 9, 6, 3, 2, 9], [9, 4, 2, 0, 2, 3, 1]]
scalar = 5
expected = [[15, 20, 50, 25, 20, 0, 45], [30, 40, 30, 20, 5, 10, 20], [20, 5, 45, 30, 15, 10, 45], [45, 20, 10, 0, 10, 15, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #116 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 3, 3, 8], [3, 3, 9, 2], [5, 7, 5, 10], [3, 4, 2, 1], [1, 4, 7, 10], [6, 0, 2, 6], [8, 3, 4, 0], [4, 7, 9, 2]]
scalar = 2
expected = [[0, 6, 6, 16], [6, 6, 18, 4], [10, 14, 10, 20], [6, 8, 4, 2], [2, 8, 14, 20], [12, 0, 4, 12], [16, 6, 8, 0], [8, 14, 18, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #117 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 6, 1], [7, 6, 2, 0], [5, 8, 4, 0], [4, 1, 1, 0], [5, 4, 7, 10], [10, 6, 0, 1], [7, 3, 0, 0], [1, 5, 5, 7], [5, 5, 7, 7], [3, 0, 4, 4]]
scalar = 1
expected = [[6, 1, 6, 1], [7, 6, 2, 0], [5, 8, 4, 0], [4, 1, 1, 0], [5, 4, 7, 10], [10, 6, 0, 1], [7, 3, 0, 0], [1, 5, 5, 7], [5, 5, 7, 7], [3, 0, 4, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #118 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 3, 5], [10, 1, 10, 5], [9, 5, 0, 1]]
scalar = 3
expected = [[3, 24, 9, 15], [30, 3, 30, 15], [27, 15, 0, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #119 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 1, 5, 8, 10], [10, 8, 6, 4, 7, 5], [7, 8, 6, 2, 10, 1], [1, 2, 6, 3, 6, 0], [6, 3, 0, 3, 3, 8], [4, 4, 7, 7, 6, 7], [9, 8, 10, 3, 0, 1], [7, 5, 4, 7, 1, 0]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #120 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 2, 6, 3, 0, 4, 0, 7, 9], [6, 2, 7, 10, 5, 9, 4, 9, 1, 9]]
scalar = 2
expected = [[2, 18, 4, 12, 6, 0, 8, 0, 14, 18], [12, 4, 14, 20, 10, 18, 8, 18, 2, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #121 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 2, 7, 7, 6, 6], [4, 10, 0, 8, 9, 6, 9], [5, 7, 3, 6, 10, 5, 4]]
scalar = 6
expected = [[30, 12, 12, 42, 42, 36, 36], [24, 60, 0, 48, 54, 36, 54], [30, 42, 18, 36, 60, 30, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #122 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 8, 9, 0], [10, 7, 3, 3], [3, 5, 2, 10], [7, 10, 6, 1], [5, 3, 6, 9], [2, 5, 6, 8], [10, 7, 0, 1], [7, 2, 8, 5], [2, 7, 10, 10]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #123 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 10, 5, 3, 8, 8, 6], [8, 8, 5, 9, 9, 7, 10, 6], [0, 2, 9, 5, 0, 4, 8, 9], [0, 2, 5, 4, 3, 2, 8, 4]]
scalar = 4
expected = [[12, 12, 40, 20, 12, 32, 32, 24], [32, 32, 20, 36, 36, 28, 40, 24], [0, 8, 36, 20, 0, 16, 32, 36], [0, 8, 20, 16, 12, 8, 32, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #124 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 7, 0, 9, 0, 7], [10, 9, 4, 2, 8, 7, 6]]
scalar = 5
expected = [[25, 50, 35, 0, 45, 0, 35], [50, 45, 20, 10, 40, 35, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #125 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 9, 3], [10, 8, 5], [4, 5, 9], [1, 9, 7], [1, 2, 2]]
scalar = 9
expected = [[0, 81, 27], [90, 72, 45], [36, 45, 81], [9, 81, 63], [9, 18, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #126 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 2, 4], [0, 4, 6, 5], [8, 1, 2, 5], [3, 0, 5, 7], [9, 2, 0, 7]]
scalar = 7
expected = [[14, 63, 14, 28], [0, 28, 42, 35], [56, 7, 14, 35], [21, 0, 35, 49], [63, 14, 0, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #127 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 6, 2, 5, 4, 3], [2, 2, 4, 9, 9, 9, 8], [1, 1, 5, 1, 2, 2, 0], [7, 1, 7, 1, 6, 2, 7], [5, 10, 9, 7, 7, 10, 0], [4, 1, 1, 2, 9, 1, 3], [6, 5, 8, 1, 10, 3, 7], [3, 3, 7, 2, 0, 10, 2], [8, 4, 7, 4, 7, 0, 7], [5, 0, 4, 4, 5, 10, 7]]
scalar = 7
expected = [[7, 35, 42, 14, 35, 28, 21], [14, 14, 28, 63, 63, 63, 56], [7, 7, 35, 7, 14, 14, 0], [49, 7, 49, 7, 42, 14, 49], [35, 70, 63, 49, 49, 70, 0], [28, 7, 7, 14, 63, 7, 21], [42, 35, 56, 7, 70, 21, 49], [21, 21, 49, 14, 0, 70, 14], [56, 28, 49, 28, 49, 0, 49], [35, 0, 28, 28, 35, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #128 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 1, 2, 4, 4, 9, 9, 7], [3, 9, 3, 1, 10, 2, 5, 5], [2, 6, 0, 1, 2, 5, 0, 7], [9, 6, 0, 1, 9, 0, 6, 4], [4, 7, 6, 0, 4, 7, 6, 10]]
scalar = 10
expected = [[100, 10, 20, 40, 40, 90, 90, 70], [30, 90, 30, 10, 100, 20, 50, 50], [20, 60, 0, 10, 20, 50, 0, 70], [90, 60, 0, 10, 90, 0, 60, 40], [40, 70, 60, 0, 40, 70, 60, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #129 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 10, 4, 3, 2, 5, 8, 8], [3, 5, 10, 8, 1, 2, 4, 4], [6, 1, 0, 8, 4, 5, 6, 3], [1, 5, 0, 6, 8, 9, 7, 9], [6, 8, 5, 9, 5, 4, 4, 9], [10, 2, 5, 8, 2, 2, 10, 9], [1, 5, 2, 9, 8, 5, 2, 6], [9, 1, 4, 5, 3, 5, 5, 8], [0, 2, 10, 7, 5, 3, 4, 10]]
scalar = 3
expected = [[30, 30, 12, 9, 6, 15, 24, 24], [9, 15, 30, 24, 3, 6, 12, 12], [18, 3, 0, 24, 12, 15, 18, 9], [3, 15, 0, 18, 24, 27, 21, 27], [18, 24, 15, 27, 15, 12, 12, 27], [30, 6, 15, 24, 6, 6, 30, 27], [3, 15, 6, 27, 24, 15, 6, 18], [27, 3, 12, 15, 9, 15, 15, 24], [0, 6, 30, 21, 15, 9, 12, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #130 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 3], [0, 10, 0], [1, 10, 2], [2, 3, 8], [8, 7, 8], [3, 1, 0], [0, 5, 9], [8, 10, 0], [3, 9, 7], [0, 10, 6]]
scalar = 2
expected = [[14, 0, 6], [0, 20, 0], [2, 20, 4], [4, 6, 16], [16, 14, 16], [6, 2, 0], [0, 10, 18], [16, 20, 0], [6, 18, 14], [0, 20, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #131 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 2]]
scalar = 1
expected = [[1, 10, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #132 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 9, 3, 1], [3, 9, 3, 7, 1], [3, 5, 3, 4, 9], [1, 6, 2, 3, 10], [7, 6, 4, 4, 4], [4, 0, 3, 2, 8], [4, 0, 6, 6, 8]]
scalar = 4
expected = [[8, 12, 36, 12, 4], [12, 36, 12, 28, 4], [12, 20, 12, 16, 36], [4, 24, 8, 12, 40], [28, 24, 16, 16, 16], [16, 0, 12, 8, 32], [16, 0, 24, 24, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #133 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [10], [4], [2], [9], [5], [8], [2]]
scalar = 10
expected = [[40], [100], [40], [20], [90], [50], [80], [20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #134 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 0, 7, 5, 6, 6, 7], [0, 8, 2, 4, 8, 5, 7, 1], [2, 7, 9, 10, 4, 0, 2, 10]]
scalar = 3
expected = [[3, 15, 0, 21, 15, 18, 18, 21], [0, 24, 6, 12, 24, 15, 21, 3], [6, 21, 27, 30, 12, 0, 6, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #135 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 10], [4, 10, 10], [8, 6, 0], [2, 2, 3]]
scalar = 10
expected = [[40, 90, 100], [40, 100, 100], [80, 60, 0], [20, 20, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #136 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3], [2, 8], [5, 9], [1, 0], [9, 4], [0, 7], [4, 1], [8, 10], [1, 2]]
scalar = 7
expected = [[14, 21], [14, 56], [35, 63], [7, 0], [63, 28], [0, 49], [28, 7], [56, 70], [7, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #137 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5], [0, 3]]
scalar = 1
expected = [[10, 5], [0, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #138 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [7], [7], [1], [10]]
scalar = 8
expected = [[40], [56], [56], [8], [80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #139 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 7, 10], [5, 3, 2, 1], [4, 9, 1, 6], [2, 4, 10, 3], [1, 10, 6, 5], [8, 5, 6, 2], [1, 6, 1, 6], [4, 4, 10, 3]]
scalar = 6
expected = [[42, 18, 42, 60], [30, 18, 12, 6], [24, 54, 6, 36], [12, 24, 60, 18], [6, 60, 36, 30], [48, 30, 36, 12], [6, 36, 6, 36], [24, 24, 60, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #140 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 8]]
scalar = 7
expected = [[70, 63, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #141 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [7], [7], [10], [5], [0], [2], [6], [3]]
scalar = 6
expected = [[0], [42], [42], [60], [30], [0], [12], [36], [18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #142 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 3, 2, 5, 10], [5, 2, 9, 1, 8, 7], [2, 10, 9, 5, 7, 10], [10, 0, 3, 1, 10, 8], [9, 5, 1, 9, 9, 7], [5, 6, 4, 0, 10, 7], [9, 4, 0, 6, 0, 7]]
scalar = 6
expected = [[48, 18, 18, 12, 30, 60], [30, 12, 54, 6, 48, 42], [12, 60, 54, 30, 42, 60], [60, 0, 18, 6, 60, 48], [54, 30, 6, 54, 54, 42], [30, 36, 24, 0, 60, 42], [54, 24, 0, 36, 0, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #143 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 6, 5, 6, 2, 10, 4, 1, 4], [0, 5, 3, 8, 0, 3, 10, 0, 7, 5], [3, 9, 4, 0, 8, 5, 8, 0, 6, 3], [2, 2, 6, 1, 1, 5, 2, 7, 6, 2], [8, 7, 5, 4, 9, 9, 8, 10, 3, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #144 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 10, 2, 2], [5, 7, 9, 1], [0, 10, 9, 1], [6, 9, 10, 4], [8, 8, 5, 1]]
scalar = 1
expected = [[8, 10, 2, 2], [5, 7, 9, 1], [0, 10, 9, 1], [6, 9, 10, 4], [8, 8, 5, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #145 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 8, 5], [3, 7, 5, 4], [0, 0, 6, 0], [8, 1, 8, 4], [8, 2, 6, 7], [5, 7, 0, 2], [8, 9, 8, 3], [5, 5, 1, 0], [4, 4, 9, 6], [2, 1, 10, 3]]
scalar = 4
expected = [[8, 12, 32, 20], [12, 28, 20, 16], [0, 0, 24, 0], [32, 4, 32, 16], [32, 8, 24, 28], [20, 28, 0, 8], [32, 36, 32, 12], [20, 20, 4, 0], [16, 16, 36, 24], [8, 4, 40, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #146 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 0, 0, 5], [4, 7, 3, 9, 10], [2, 8, 2, 1, 5], [6, 4, 8, 0, 8], [0, 3, 8, 7, 8], [5, 0, 9, 9, 8]]
scalar = 1
expected = [[4, 5, 0, 0, 5], [4, 7, 3, 9, 10], [2, 8, 2, 1, 5], [6, 4, 8, 0, 8], [0, 3, 8, 7, 8], [5, 0, 9, 9, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #147 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 4, 4, 0, 0, 1, 9, 6, 4]]
scalar = 4
expected = [[20, 40, 16, 16, 0, 0, 4, 36, 24, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #148 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 4, 7, 2, 3, 2, 9, 10, 1], [9, 0, 10, 4, 4, 5, 5, 10, 6, 8], [6, 0, 4, 5, 1, 0, 4, 0, 9, 10], [9, 3, 10, 5, 9, 2, 5, 2, 8, 8], [10, 0, 0, 3, 6, 7, 3, 10, 9, 4], [0, 8, 0, 1, 9, 1, 0, 0, 7, 4], [4, 0, 9, 5, 5, 0, 1, 9, 2, 9], [9, 4, 1, 4, 0, 1, 4, 1, 8, 9]]
scalar = 8
expected = [[24, 40, 32, 56, 16, 24, 16, 72, 80, 8], [72, 0, 80, 32, 32, 40, 40, 80, 48, 64], [48, 0, 32, 40, 8, 0, 32, 0, 72, 80], [72, 24, 80, 40, 72, 16, 40, 16, 64, 64], [80, 0, 0, 24, 48, 56, 24, 80, 72, 32], [0, 64, 0, 8, 72, 8, 0, 0, 56, 32], [32, 0, 72, 40, 40, 0, 8, 72, 16, 72], [72, 32, 8, 32, 0, 8, 32, 8, 64, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #149 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 4, 4]]
scalar = 8
expected = [[40, 0, 32, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #150 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10], [0, 9], [7, 9], [3, 0], [2, 3], [8, 9], [2, 7]]
scalar = 7
expected = [[7, 70], [0, 63], [49, 63], [21, 0], [14, 21], [56, 63], [14, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #151 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 2, 5, 9, 5], [3, 6, 4, 6, 6], [0, 9, 0, 0, 9], [6, 9, 3, 8, 3], [7, 1, 7, 8, 4], [9, 1, 4, 5, 9], [9, 0, 2, 9, 5]]
scalar = 8
expected = [[72, 16, 40, 72, 40], [24, 48, 32, 48, 48], [0, 72, 0, 0, 72], [48, 72, 24, 64, 24], [56, 8, 56, 64, 32], [72, 8, 32, 40, 72], [72, 0, 16, 72, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #152 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3], [7, 1], [3, 2], [4, 9], [4, 4]]
scalar = 1
expected = [[3, 3], [7, 1], [3, 2], [4, 9], [4, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #153 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 5, 2, 6, 7, 7], [6, 5, 1, 6, 0, 4, 8], [3, 8, 8, 5, 2, 10, 8], [6, 3, 3, 9, 1, 6, 3], [1, 6, 0, 8, 2, 1, 3], [8, 2, 2, 1, 8, 3, 5], [7, 9, 3, 8, 3, 2, 2], [1, 8, 9, 4, 8, 4, 5]]
scalar = 8
expected = [[32, 40, 40, 16, 48, 56, 56], [48, 40, 8, 48, 0, 32, 64], [24, 64, 64, 40, 16, 80, 64], [48, 24, 24, 72, 8, 48, 24], [8, 48, 0, 64, 16, 8, 24], [64, 16, 16, 8, 64, 24, 40], [56, 72, 24, 64, 24, 16, 16], [8, 64, 72, 32, 64, 32, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #154 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 3, 0, 3, 1, 4], [7, 6, 8, 0, 2, 0], [5, 0, 5, 2, 4, 0]]
scalar = 5
expected = [[0, 15, 0, 15, 5, 20], [35, 30, 40, 0, 10, 0], [25, 0, 25, 10, 20, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #155 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 6, 10, 5, 2, 2, 4, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #156 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 2, 8, 3, 2, 3, 2, 10, 0], [10, 0, 8, 9, 0, 1, 8, 10, 7, 6], [2, 6, 8, 6, 8, 9, 0, 9, 1, 1], [8, 2, 5, 10, 5, 8, 10, 9, 5, 1], [10, 4, 1, 10, 0, 5, 3, 3, 1, 0]]
scalar = 2
expected = [[4, 2, 4, 16, 6, 4, 6, 4, 20, 0], [20, 0, 16, 18, 0, 2, 16, 20, 14, 12], [4, 12, 16, 12, 16, 18, 0, 18, 2, 2], [16, 4, 10, 20, 10, 16, 20, 18, 10, 2], [20, 8, 2, 20, 0, 10, 6, 6, 2, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #157 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 3, 10], [3, 3, 1, 10], [5, 4, 10, 10], [2, 1, 3, 6], [2, 1, 4, 0], [2, 10, 9, 1], [5, 7, 6, 4], [10, 5, 6, 7], [3, 5, 10, 0], [0, 1, 7, 7]]
scalar = 1
expected = [[10, 6, 3, 10], [3, 3, 1, 10], [5, 4, 10, 10], [2, 1, 3, 6], [2, 1, 4, 0], [2, 10, 9, 1], [5, 7, 6, 4], [10, 5, 6, 7], [3, 5, 10, 0], [0, 1, 7, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #158 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 7, 8, 9, 10], [6, 5, 0, 6, 9, 1], [4, 5, 0, 10, 6, 3], [5, 8, 7, 1, 3, 10], [9, 9, 3, 1, 5, 7], [9, 0, 5, 3, 5, 1], [9, 9, 0, 8, 5, 7], [6, 7, 8, 6, 7, 10], [4, 8, 3, 7, 9, 1], [9, 3, 0, 1, 2, 10]]
scalar = 10
expected = [[90, 10, 70, 80, 90, 100], [60, 50, 0, 60, 90, 10], [40, 50, 0, 100, 60, 30], [50, 80, 70, 10, 30, 100], [90, 90, 30, 10, 50, 70], [90, 0, 50, 30, 50, 10], [90, 90, 0, 80, 50, 70], [60, 70, 80, 60, 70, 100], [40, 80, 30, 70, 90, 10], [90, 30, 0, 10, 20, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #159 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2, 1], [8, 6, 5], [7, 7, 3], [6, 4, 5], [4, 0, 8], [7, 0, 8], [10, 7, 4], [0, 5, 8]]
scalar = 6
expected = [[18, 12, 6], [48, 36, 30], [42, 42, 18], [36, 24, 30], [24, 0, 48], [42, 0, 48], [60, 42, 24], [0, 30, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #160 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 6, 9, 4, 4, 6, 10, 5], [2, 9, 0, 5, 10, 10, 1, 0, 9], [9, 9, 7, 0, 3, 8, 9, 2, 1], [4, 3, 7, 7, 3, 2, 0, 10, 7], [6, 10, 3, 3, 9, 3, 3, 2, 5], [3, 5, 4, 6, 7, 0, 2, 5, 2], [1, 2, 8, 1, 1, 4, 5, 8, 0], [1, 2, 10, 4, 6, 4, 4, 2, 5]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #161 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8], [1, 5], [1, 6], [10, 4], [3, 7], [6, 10], [10, 6], [1, 7]]
scalar = 4
expected = [[0, 32], [4, 20], [4, 24], [40, 16], [12, 28], [24, 40], [40, 24], [4, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #162 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [0], [5], [6], [6], [8], [4]]
scalar = 9
expected = [[0], [0], [45], [54], [54], [72], [36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #163 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0, 7, 3]]
scalar = 2
expected = [[16, 0, 14, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #164 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 6, 10, 7, 3], [6, 4, 4, 1, 5], [1, 9, 6, 6, 3], [8, 10, 7, 8, 5], [7, 4, 1, 8, 4], [2, 2, 8, 1, 1], [0, 9, 0, 9, 4]]
scalar = 4
expected = [[24, 24, 40, 28, 12], [24, 16, 16, 4, 20], [4, 36, 24, 24, 12], [32, 40, 28, 32, 20], [28, 16, 4, 32, 16], [8, 8, 32, 4, 4], [0, 36, 0, 36, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #165 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 10, 3, 0, 2, 0], [9, 6, 5, 10, 5, 4, 10], [6, 7, 8, 8, 4, 5, 5], [2, 4, 9, 6, 9, 9, 6], [0, 10, 10, 0, 10, 7, 2], [10, 2, 8, 6, 6, 9, 4], [7, 9, 1, 7, 1, 1, 10], [8, 8, 6, 9, 1, 8, 2], [0, 7, 0, 4, 1, 10, 1]]
scalar = 7
expected = [[49, 63, 70, 21, 0, 14, 0], [63, 42, 35, 70, 35, 28, 70], [42, 49, 56, 56, 28, 35, 35], [14, 28, 63, 42, 63, 63, 42], [0, 70, 70, 0, 70, 49, 14], [70, 14, 56, 42, 42, 63, 28], [49, 63, 7, 49, 7, 7, 70], [56, 56, 42, 63, 7, 56, 14], [0, 49, 0, 28, 7, 70, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #166 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 10, 4, 7, 3, 5], [10, 9, 9, 7, 4, 6], [8, 6, 4, 0, 3, 3], [7, 7, 1, 2, 9, 3], [3, 6, 9, 6, 0, 4], [2, 10, 0, 5, 8, 3], [5, 2, 6, 0, 9, 6], [3, 5, 3, 7, 8, 3]]
scalar = 8
expected = [[64, 80, 32, 56, 24, 40], [80, 72, 72, 56, 32, 48], [64, 48, 32, 0, 24, 24], [56, 56, 8, 16, 72, 24], [24, 48, 72, 48, 0, 32], [16, 80, 0, 40, 64, 24], [40, 16, 48, 0, 72, 48], [24, 40, 24, 56, 64, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #167 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 3, 9, 5, 2, 1, 8, 7, 8], [10, 5, 4, 5, 8, 1, 6, 9, 8, 0], [9, 3, 8, 1, 2, 1, 2, 10, 2, 6], [5, 6, 0, 6, 2, 5, 10, 1, 4, 7], [2, 3, 1, 2, 1, 7, 6, 10, 10, 5]]
scalar = 3
expected = [[21, 27, 9, 27, 15, 6, 3, 24, 21, 24], [30, 15, 12, 15, 24, 3, 18, 27, 24, 0], [27, 9, 24, 3, 6, 3, 6, 30, 6, 18], [15, 18, 0, 18, 6, 15, 30, 3, 12, 21], [6, 9, 3, 6, 3, 21, 18, 30, 30, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #168 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 5, 2, 3], [4, 8, 4, 4, 8], [7, 3, 7, 1, 9], [2, 3, 9, 0, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #169 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [3], [1], [0], [5], [2], [3], [1], [3], [8]]
scalar = 2
expected = [[18], [6], [2], [0], [10], [4], [6], [2], [6], [16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #170 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1], [4, 10]]
scalar = 0
expected = [[0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #171 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 4, 5], [4, 2, 0, 9], [7, 4, 6, 0], [6, 0, 10, 9]]
scalar = 5
expected = [[20, 45, 20, 25], [20, 10, 0, 45], [35, 20, 30, 0], [30, 0, 50, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #172 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 4, 5, 2]]
scalar = 3
expected = [[9, 15, 12, 15, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #173 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [9], [1], [4], [6], [4]]
scalar = 9
expected = [[63], [81], [9], [36], [54], [36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #174 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 1, 10, 3, 4, 6, 1, 3, 8], [5, 9, 3, 1, 1, 1, 5, 0, 8, 5], [6, 7, 2, 3, 0, 10, 8, 8, 4, 7]]
scalar = 10
expected = [[0, 0, 10, 100, 30, 40, 60, 10, 30, 80], [50, 90, 30, 10, 10, 10, 50, 0, 80, 50], [60, 70, 20, 30, 0, 100, 80, 80, 40, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #175 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 7, 4, 2, 3, 7, 10, 6], [5, 9, 7, 9, 5, 4, 3, 0, 2], [0, 0, 5, 7, 6, 4, 8, 7, 0], [4, 5, 9, 5, 1, 8, 7, 1, 10]]
scalar = 6
expected = [[24, 36, 42, 24, 12, 18, 42, 60, 36], [30, 54, 42, 54, 30, 24, 18, 0, 12], [0, 0, 30, 42, 36, 24, 48, 42, 0], [24, 30, 54, 30, 6, 48, 42, 6, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #176 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 0, 4, 10, 2, 1, 8], [4, 1, 0, 1, 9, 1, 1, 8], [4, 0, 9, 3, 10, 9, 8, 1], [10, 4, 4, 1, 6, 1, 9, 0], [3, 8, 4, 3, 3, 7, 3, 10], [1, 5, 0, 0, 3, 4, 0, 4], [5, 8, 8, 2, 4, 1, 2, 6]]
scalar = 4
expected = [[24, 20, 0, 16, 40, 8, 4, 32], [16, 4, 0, 4, 36, 4, 4, 32], [16, 0, 36, 12, 40, 36, 32, 4], [40, 16, 16, 4, 24, 4, 36, 0], [12, 32, 16, 12, 12, 28, 12, 40], [4, 20, 0, 0, 12, 16, 0, 16], [20, 32, 32, 8, 16, 4, 8, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #177 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 5, 9, 3, 0, 0, 2, 2, 1], [7, 10, 6, 1, 10, 4, 0, 10, 5, 0], [4, 7, 3, 10, 9, 0, 8, 8, 1, 5]]
scalar = 5
expected = [[20, 35, 25, 45, 15, 0, 0, 10, 10, 5], [35, 50, 30, 5, 50, 20, 0, 50, 25, 0], [20, 35, 15, 50, 45, 0, 40, 40, 5, 25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #178 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 3, 5], [4, 7, 5, 2], [3, 7, 8, 3], [7, 0, 6, 0], [6, 3, 0, 1], [7, 7, 6, 6], [0, 9, 9, 9]]
scalar = 9
expected = [[0, 54, 27, 45], [36, 63, 45, 18], [27, 63, 72, 27], [63, 0, 54, 0], [54, 27, 0, 9], [63, 63, 54, 54], [0, 81, 81, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #179 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 5, 3, 3, 3, 7], [2, 0, 3, 1, 6, 3, 4], [9, 4, 9, 0, 0, 0, 1], [7, 6, 9, 7, 8, 3, 9], [2, 6, 5, 3, 6, 9, 3], [6, 3, 10, 2, 2, 7, 8], [3, 9, 3, 10, 2, 10, 6], [10, 8, 2, 10, 5, 3, 4], [5, 9, 10, 6, 0, 0, 8]]
scalar = 2
expected = [[14, 20, 10, 6, 6, 6, 14], [4, 0, 6, 2, 12, 6, 8], [18, 8, 18, 0, 0, 0, 2], [14, 12, 18, 14, 16, 6, 18], [4, 12, 10, 6, 12, 18, 6], [12, 6, 20, 4, 4, 14, 16], [6, 18, 6, 20, 4, 20, 12], [20, 16, 4, 20, 10, 6, 8], [10, 18, 20, 12, 0, 0, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #180 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 6, 1, 4], [6, 5, 10, 6, 1], [7, 3, 10, 2, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #181 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7, 1, 2, 7, 8], [3, 1, 3, 2, 2, 9], [0, 5, 1, 6, 3, 8], [10, 10, 4, 3, 7, 4], [2, 10, 10, 10, 4, 9], [2, 8, 10, 9, 2, 7], [7, 5, 4, 10, 2, 6], [7, 1, 1, 6, 10, 1], [5, 6, 0, 10, 5, 1]]
scalar = 8
expected = [[48, 56, 8, 16, 56, 64], [24, 8, 24, 16, 16, 72], [0, 40, 8, 48, 24, 64], [80, 80, 32, 24, 56, 32], [16, 80, 80, 80, 32, 72], [16, 64, 80, 72, 16, 56], [56, 40, 32, 80, 16, 48], [56, 8, 8, 48, 80, 8], [40, 48, 0, 80, 40, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #182 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 10, 4, 2, 10, 5, 6, 6, 0], [4, 1, 3, 8, 4, 9, 6, 1, 1], [6, 10, 5, 5, 10, 6, 2, 3, 8], [4, 8, 5, 7, 2, 8, 5, 7, 6], [4, 0, 0, 8, 6, 10, 0, 1, 3], [4, 3, 5, 2, 0, 6, 1, 0, 9]]
scalar = 1
expected = [[8, 10, 4, 2, 10, 5, 6, 6, 0], [4, 1, 3, 8, 4, 9, 6, 1, 1], [6, 10, 5, 5, 10, 6, 2, 3, 8], [4, 8, 5, 7, 2, 8, 5, 7, 6], [4, 0, 0, 8, 6, 10, 0, 1, 3], [4, 3, 5, 2, 0, 6, 1, 0, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #183 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 1, 4, 3], [7, 3, 0, 1, 2], [1, 6, 5, 6, 9], [1, 0, 10, 7, 8], [1, 10, 10, 10, 2], [5, 0, 10, 2, 3]]
scalar = 1
expected = [[4, 5, 1, 4, 3], [7, 3, 0, 1, 2], [1, 6, 5, 6, 9], [1, 0, 10, 7, 8], [1, 10, 10, 10, 2], [5, 0, 10, 2, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #184 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 7, 4, 3, 10, 4, 7]]
scalar = 8
expected = [[0, 56, 32, 24, 80, 32, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #185 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 3, 10, 9, 0, 0, 9, 1], [1, 7, 5, 2, 8, 5, 10, 1, 0], [7, 3, 3, 6, 6, 4, 7, 6, 7], [8, 9, 2, 10, 4, 10, 2, 1, 8], [10, 3, 8, 9, 9, 1, 6, 3, 9], [8, 9, 9, 3, 2, 10, 7, 0, 5], [6, 6, 3, 3, 3, 6, 8, 10, 8], [2, 1, 3, 1, 5, 0, 8, 4, 2]]
scalar = 9
expected = [[72, 54, 27, 90, 81, 0, 0, 81, 9], [9, 63, 45, 18, 72, 45, 90, 9, 0], [63, 27, 27, 54, 54, 36, 63, 54, 63], [72, 81, 18, 90, 36, 90, 18, 9, 72], [90, 27, 72, 81, 81, 9, 54, 27, 81], [72, 81, 81, 27, 18, 90, 63, 0, 45], [54, 54, 27, 27, 27, 54, 72, 90, 72], [18, 9, 27, 9, 45, 0, 72, 36, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #186 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 3, 9, 10, 7, 1, 6, 7], [6, 2, 6, 2, 2, 1, 6, 3, 5], [8, 9, 0, 6, 10, 0, 3, 8, 5], [9, 8, 6, 0, 0, 3, 6, 6, 5], [8, 4, 7, 1, 2, 4, 5, 6, 7], [6, 7, 8, 6, 10, 6, 8, 4, 4], [6, 6, 7, 6, 4, 8, 0, 2, 8], [4, 8, 0, 5, 5, 6, 9, 6, 8], [10, 2, 6, 6, 0, 2, 9, 7, 10]]
scalar = 3
expected = [[6, 12, 9, 27, 30, 21, 3, 18, 21], [18, 6, 18, 6, 6, 3, 18, 9, 15], [24, 27, 0, 18, 30, 0, 9, 24, 15], [27, 24, 18, 0, 0, 9, 18, 18, 15], [24, 12, 21, 3, 6, 12, 15, 18, 21], [18, 21, 24, 18, 30, 18, 24, 12, 12], [18, 18, 21, 18, 12, 24, 0, 6, 24], [12, 24, 0, 15, 15, 18, 27, 18, 24], [30, 6, 18, 18, 0, 6, 27, 21, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #187 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 2, 3, 1, 8], [0, 9, 4, 8, 0], [5, 9, 0, 3, 9], [9, 2, 4, 8, 3]]
scalar = 1
expected = [[4, 2, 3, 1, 8], [0, 9, 4, 8, 0], [5, 9, 0, 3, 9], [9, 2, 4, 8, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #188 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 10, 5], [3, 2, 10, 6], [9, 3, 10, 1], [8, 6, 4, 2], [7, 3, 0, 6], [4, 9, 10, 4]]
scalar = 2
expected = [[10, 14, 20, 10], [6, 4, 20, 12], [18, 6, 20, 2], [16, 12, 8, 4], [14, 6, 0, 12], [8, 18, 20, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #189 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 6]]
scalar = 9
expected = [[81, 63, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #190 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 9, 0, 6], [1, 0, 8, 4, 10], [3, 1, 5, 5, 10], [8, 3, 2, 4, 1], [3, 2, 0, 9, 4], [2, 9, 8, 0, 10], [10, 7, 8, 4, 3]]
scalar = 2
expected = [[4, 6, 18, 0, 12], [2, 0, 16, 8, 20], [6, 2, 10, 10, 20], [16, 6, 4, 8, 2], [6, 4, 0, 18, 8], [4, 18, 16, 0, 20], [20, 14, 16, 8, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #191 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 8, 0, 7, 3, 3, 10], [7, 8, 6, 1, 1, 10, 0, 1], [4, 3, 0, 3, 7, 8, 1, 8], [9, 7, 10, 0, 4, 3, 10, 2], [0, 7, 8, 9, 2, 9, 8, 0], [1, 10, 10, 5, 2, 0, 5, 8], [3, 8, 8, 1, 10, 10, 9, 0], [9, 9, 1, 8, 10, 1, 3, 6], [10, 1, 7, 7, 8, 10, 5, 2], [0, 4, 9, 8, 2, 5, 5, 8]]
scalar = 5
expected = [[5, 30, 40, 0, 35, 15, 15, 50], [35, 40, 30, 5, 5, 50, 0, 5], [20, 15, 0, 15, 35, 40, 5, 40], [45, 35, 50, 0, 20, 15, 50, 10], [0, 35, 40, 45, 10, 45, 40, 0], [5, 50, 50, 25, 10, 0, 25, 40], [15, 40, 40, 5, 50, 50, 45, 0], [45, 45, 5, 40, 50, 5, 15, 30], [50, 5, 35, 35, 40, 50, 25, 10], [0, 20, 45, 40, 10, 25, 25, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #192 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 2, 9, 10, 5, 0, 5], [8, 10, 8, 3, 9, 5, 5, 7], [8, 4, 6, 0, 9, 7, 1, 7]]
scalar = 6
expected = [[0, 6, 12, 54, 60, 30, 0, 30], [48, 60, 48, 18, 54, 30, 30, 42], [48, 24, 36, 0, 54, 42, 6, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #193 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 2, 6], [10, 0, 7, 8], [10, 3, 2, 2], [5, 6, 8, 7], [4, 4, 7, 7], [5, 7, 8, 8]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #194 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 2, 3, 2, 5, 8, 9, 6], [10, 5, 7, 8, 9, 8, 9, 4, 10], [9, 0, 4, 5, 5, 0, 0, 9, 5], [1, 10, 2, 5, 10, 5, 3, 5, 10], [2, 8, 5, 1, 10, 1, 7, 7, 6], [8, 9, 2, 1, 1, 6, 8, 8, 4], [9, 0, 8, 3, 3, 4, 4, 6, 10], [2, 10, 4, 5, 0, 4, 8, 9, 5], [4, 7, 5, 9, 6, 5, 9, 5, 0], [3, 2, 3, 3, 9, 7, 10, 1, 6]]
scalar = 9
expected = [[18, 90, 18, 27, 18, 45, 72, 81, 54], [90, 45, 63, 72, 81, 72, 81, 36, 90], [81, 0, 36, 45, 45, 0, 0, 81, 45], [9, 90, 18, 45, 90, 45, 27, 45, 90], [18, 72, 45, 9, 90, 9, 63, 63, 54], [72, 81, 18, 9, 9, 54, 72, 72, 36], [81, 0, 72, 27, 27, 36, 36, 54, 90], [18, 90, 36, 45, 0, 36, 72, 81, 45], [36, 63, 45, 81, 54, 45, 81, 45, 0], [27, 18, 27, 27, 81, 63, 90, 9, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #195 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 1, 3, 7, 0, 8, 8, 7], [9, 7, 4, 9, 9, 0, 2, 10], [3, 0, 2, 2, 3, 1, 9, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #196 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 2, 3, 7, 0]]
scalar = 0
expected = [[0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #197 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 7, 4, 0, 2, 5], [3, 0, 2, 4, 5, 8, 9], [8, 10, 1, 5, 9, 6, 8], [1, 0, 1, 8, 5, 5, 4], [6, 6, 7, 9, 9, 10, 0]]
scalar = 3
expected = [[9, 15, 21, 12, 0, 6, 15], [9, 0, 6, 12, 15, 24, 27], [24, 30, 3, 15, 27, 18, 24], [3, 0, 3, 24, 15, 15, 12], [18, 18, 21, 27, 27, 30, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #198 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 5, 5, 10, 5, 7, 7, 1, 8], [5, 6, 5, 4, 5, 3, 8, 6, 7], [8, 6, 4, 9, 1, 4, 1, 6, 10], [0, 4, 2, 2, 6, 5, 8, 2, 10]]
scalar = 6
expected = [[48, 30, 30, 60, 30, 42, 42, 6, 48], [30, 36, 30, 24, 30, 18, 48, 36, 42], [48, 36, 24, 54, 6, 24, 6, 36, 60], [0, 24, 12, 12, 36, 30, 48, 12, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #199 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [8], [3], [10], [9], [9]]
scalar = 10
expected = [[40], [80], [30], [100], [90], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #200 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 5, 4, 2, 7, 8, 0, 10, 0], [2, 9, 0, 0, 10, 4, 3, 4, 5, 2], [3, 3, 10, 5, 4, 7, 2, 7, 2, 2], [10, 0, 6, 4, 7, 9, 3, 6, 2, 0], [2, 8, 6, 1, 6, 0, 4, 3, 0, 0], [8, 6, 5, 5, 9, 4, 2, 1, 1, 2], [1, 4, 7, 9, 5, 8, 1, 7, 2, 5], [5, 5, 2, 10, 2, 3, 4, 0, 5, 5], [2, 7, 8, 0, 0, 5, 6, 6, 9, 5], [7, 8, 3, 3, 6, 10, 2, 4, 4, 6]]
scalar = 9
expected = [[27, 0, 45, 36, 18, 63, 72, 0, 90, 0], [18, 81, 0, 0, 90, 36, 27, 36, 45, 18], [27, 27, 90, 45, 36, 63, 18, 63, 18, 18], [90, 0, 54, 36, 63, 81, 27, 54, 18, 0], [18, 72, 54, 9, 54, 0, 36, 27, 0, 0], [72, 54, 45, 45, 81, 36, 18, 9, 9, 18], [9, 36, 63, 81, 45, 72, 9, 63, 18, 45], [45, 45, 18, 90, 18, 27, 36, 0, 45, 45], [18, 63, 72, 0, 0, 45, 54, 54, 81, 45], [63, 72, 27, 27, 54, 90, 18, 36, 36, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #201 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 7, 0, 6, 4, 0], [7, 4, 10, 6, 5, 10], [5, 10, 7, 7, 9, 3]]
scalar = 1
expected = [[0, 7, 0, 6, 4, 0], [7, 4, 10, 6, 5, 10], [5, 10, 7, 7, 9, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #202 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6, 6, 2, 1, 10, 6, 8], [1, 10, 10, 8, 1, 7, 2, 7], [1, 10, 4, 3, 4, 7, 5, 6], [4, 8, 6, 9, 0, 4, 8, 3]]
scalar = 9
expected = [[81, 54, 54, 18, 9, 90, 54, 72], [9, 90, 90, 72, 9, 63, 18, 63], [9, 90, 36, 27, 36, 63, 45, 54], [36, 72, 54, 81, 0, 36, 72, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #203 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1], [10, 2]]
scalar = 6
expected = [[0, 6], [60, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #204 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 3, 10, 4]]
scalar = 5
expected = [[0, 50, 15, 50, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #205 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 6, 2, 6, 4, 7, 10, 5], [10, 4, 3, 1, 5, 0, 10, 6, 8], [7, 3, 5, 8, 3, 5, 4, 3, 6], [0, 10, 1, 0, 7, 4, 2, 3, 10], [4, 5, 10, 7, 8, 2, 7, 8, 1], [4, 5, 4, 10, 6, 0, 8, 3, 4]]
scalar = 6
expected = [[6, 12, 36, 12, 36, 24, 42, 60, 30], [60, 24, 18, 6, 30, 0, 60, 36, 48], [42, 18, 30, 48, 18, 30, 24, 18, 36], [0, 60, 6, 0, 42, 24, 12, 18, 60], [24, 30, 60, 42, 48, 12, 42, 48, 6], [24, 30, 24, 60, 36, 0, 48, 18, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #206 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8], [1, 0], [0, 5], [10, 10], [5, 1]]
scalar = 6
expected = [[48, 48], [6, 0], [0, 30], [60, 60], [30, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #207 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 3, 2, 4, 5], [8, 6, 6, 4, 2, 8], [1, 0, 0, 7, 2, 2]]
scalar = 7
expected = [[28, 49, 21, 14, 28, 35], [56, 42, 42, 28, 14, 56], [7, 0, 0, 49, 14, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #208 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 9], [9, 5, 9], [10, 8, 5], [7, 7, 10], [5, 10, 4], [4, 5, 2], [5, 7, 9], [9, 0, 8]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #209 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0], [4, 5], [8, 5], [5, 9], [3, 10], [10, 10], [1, 2], [1, 6], [1, 9], [3, 1]]
scalar = 7
expected = [[35, 0], [28, 35], [56, 35], [35, 63], [21, 70], [70, 70], [7, 14], [7, 42], [7, 63], [21, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #210 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 5, 9, 1], [4, 7, 4, 0, 10], [8, 7, 9, 9, 3], [6, 3, 10, 0, 6], [6, 7, 8, 0, 3], [4, 0, 1, 9, 1], [0, 2, 7, 0, 5], [6, 3, 0, 10, 3], [6, 8, 3, 8, 1], [0, 0, 4, 7, 2]]
scalar = 4
expected = [[4, 8, 20, 36, 4], [16, 28, 16, 0, 40], [32, 28, 36, 36, 12], [24, 12, 40, 0, 24], [24, 28, 32, 0, 12], [16, 0, 4, 36, 4], [0, 8, 28, 0, 20], [24, 12, 0, 40, 12], [24, 32, 12, 32, 4], [0, 0, 16, 28, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #211 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 4, 8, 9, 4], [4, 9, 7, 1, 10, 3], [3, 4, 4, 3, 0, 9], [4, 5, 6, 1, 8, 4], [0, 6, 7, 7, 8, 4], [6, 10, 0, 7, 2, 6], [3, 8, 4, 1, 3, 9], [6, 6, 1, 3, 6, 5]]
scalar = 2
expected = [[10, 18, 8, 16, 18, 8], [8, 18, 14, 2, 20, 6], [6, 8, 8, 6, 0, 18], [8, 10, 12, 2, 16, 8], [0, 12, 14, 14, 16, 8], [12, 20, 0, 14, 4, 12], [6, 16, 8, 2, 6, 18], [12, 12, 2, 6, 12, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #212 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0, 9, 4], [8, 2, 1, 8], [0, 5, 10, 0], [0, 9, 7, 9], [5, 6, 2, 7], [0, 0, 4, 0], [0, 7, 7, 0], [0, 1, 0, 0], [10, 7, 0, 5]]
scalar = 8
expected = [[64, 0, 72, 32], [64, 16, 8, 64], [0, 40, 80, 0], [0, 72, 56, 72], [40, 48, 16, 56], [0, 0, 32, 0], [0, 56, 56, 0], [0, 8, 0, 0], [80, 56, 0, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #213 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 7, 2, 10, 2, 3, 9], [9, 4, 3, 8, 7, 8, 5, 2], [9, 2, 6, 7, 10, 4, 7, 6], [6, 0, 9, 0, 9, 5, 7, 2], [7, 0, 8, 1, 8, 0, 3, 9], [1, 5, 6, 8, 4, 1, 5, 5]]
scalar = 8
expected = [[72, 64, 56, 16, 80, 16, 24, 72], [72, 32, 24, 64, 56, 64, 40, 16], [72, 16, 48, 56, 80, 32, 56, 48], [48, 0, 72, 0, 72, 40, 56, 16], [56, 0, 64, 8, 64, 0, 24, 72], [8, 40, 48, 64, 32, 8, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #214 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 7, 8, 8, 10], [4, 6, 0, 7, 8], [6, 8, 0, 6, 2], [5, 0, 5, 8, 4]]
scalar = 10
expected = [[30, 70, 80, 80, 100], [40, 60, 0, 70, 80], [60, 80, 0, 60, 20], [50, 0, 50, 80, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #215 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 6, 3]]
scalar = 2
expected = [[4, 18, 12, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #216 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [3]]
scalar = 7
expected = [[7], [21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #217 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 8, 0, 5, 3, 2, 2, 9], [1, 5, 0, 8, 8, 7, 7, 9, 10], [7, 1, 10, 0, 5, 10, 5, 2, 6], [3, 8, 3, 6, 3, 8, 4, 10, 3], [2, 9, 4, 3, 2, 1, 0, 6, 0], [2, 10, 5, 6, 2, 0, 3, 1, 7], [5, 6, 4, 1, 6, 3, 1, 9, 0]]
scalar = 3
expected = [[27, 27, 24, 0, 15, 9, 6, 6, 27], [3, 15, 0, 24, 24, 21, 21, 27, 30], [21, 3, 30, 0, 15, 30, 15, 6, 18], [9, 24, 9, 18, 9, 24, 12, 30, 9], [6, 27, 12, 9, 6, 3, 0, 18, 0], [6, 30, 15, 18, 6, 0, 9, 3, 21], [15, 18, 12, 3, 18, 9, 3, 27, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #218 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 5, 5, 0, 6, 4, 8], [5, 10, 8, 7, 6, 6, 5, 8], [9, 0, 4, 6, 3, 5, 2, 5], [1, 7, 1, 9, 2, 4, 5, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #219 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 10], [10, 8, 7], [4, 0, 6], [10, 4, 0], [0, 2, 4], [3, 7, 7], [3, 7, 10], [0, 7, 7], [7, 4, 3], [0, 7, 6]]
scalar = 5
expected = [[45, 40, 50], [50, 40, 35], [20, 0, 30], [50, 20, 0], [0, 10, 20], [15, 35, 35], [15, 35, 50], [0, 35, 35], [35, 20, 15], [0, 35, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #220 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 4, 1], [4, 5, 7, 6], [0, 4, 1, 7], [0, 10, 4, 1], [5, 5, 10, 2], [3, 9, 3, 1], [8, 5, 10, 5]]
scalar = 4
expected = [[40, 16, 16, 4], [16, 20, 28, 24], [0, 16, 4, 28], [0, 40, 16, 4], [20, 20, 40, 8], [12, 36, 12, 4], [32, 20, 40, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #221 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 7, 9, 10, 1, 7], [6, 2, 7, 5, 4, 6, 1], [6, 0, 8, 5, 5, 5, 1], [0, 10, 0, 10, 6, 10, 6], [5, 6, 4, 10, 5, 9, 10], [5, 8, 9, 2, 4, 5, 10], [6, 7, 4, 7, 4, 3, 6], [3, 7, 7, 0, 8, 4, 8], [10, 9, 6, 8, 4, 8, 0]]
scalar = 2
expected = [[10, 0, 14, 18, 20, 2, 14], [12, 4, 14, 10, 8, 12, 2], [12, 0, 16, 10, 10, 10, 2], [0, 20, 0, 20, 12, 20, 12], [10, 12, 8, 20, 10, 18, 20], [10, 16, 18, 4, 8, 10, 20], [12, 14, 8, 14, 8, 6, 12], [6, 14, 14, 0, 16, 8, 16], [20, 18, 12, 16, 8, 16, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #222 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 2, 0, 10, 4], [6, 4, 4, 4, 10], [2, 8, 2, 10, 7], [0, 2, 6, 3, 8]]
scalar = 4
expected = [[36, 8, 0, 40, 16], [24, 16, 16, 16, 40], [8, 32, 8, 40, 28], [0, 8, 24, 12, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #223 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 2, 9, 3, 8], [1, 2, 3, 7, 2, 8]]
scalar = 4
expected = [[8, 28, 8, 36, 12, 32], [4, 8, 12, 28, 8, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #224 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 10, 9, 1, 9, 7], [1, 9, 8, 7, 3, 5, 0], [9, 7, 7, 8, 10, 7, 8], [2, 2, 2, 2, 0, 3, 7], [6, 6, 7, 1, 9, 4, 4], [6, 9, 1, 2, 1, 9, 4], [1, 9, 3, 9, 9, 0, 5], [2, 4, 9, 6, 10, 5, 1], [9, 1, 8, 5, 10, 1, 0]]
scalar = 9
expected = [[90, 36, 90, 81, 9, 81, 63], [9, 81, 72, 63, 27, 45, 0], [81, 63, 63, 72, 90, 63, 72], [18, 18, 18, 18, 0, 27, 63], [54, 54, 63, 9, 81, 36, 36], [54, 81, 9, 18, 9, 81, 36], [9, 81, 27, 81, 81, 0, 45], [18, 36, 81, 54, 90, 45, 9], [81, 9, 72, 45, 90, 9, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #225 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 0, 1, 10], [2, 1, 0, 3], [10, 9, 3, 2], [0, 3, 7, 5]]
scalar = 9
expected = [[18, 0, 9, 90], [18, 9, 0, 27], [90, 81, 27, 18], [0, 27, 63, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #226 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0], [10, 1], [1, 7], [7, 5], [9, 6], [8, 4], [5, 8], [0, 9]]
scalar = 8
expected = [[64, 0], [80, 8], [8, 56], [56, 40], [72, 48], [64, 32], [40, 64], [0, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #227 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 9, 5, 4, 4, 5, 4, 0, 10], [1, 6, 1, 10, 4, 7, 5, 9, 8, 2], [5, 2, 7, 1, 4, 0, 10, 10, 8, 2], [8, 5, 1, 5, 2, 1, 10, 4, 2, 9], [6, 3, 3, 9, 5, 4, 0, 4, 4, 8], [2, 7, 4, 0, 4, 1, 6, 0, 6, 6], [2, 4, 5, 1, 8, 0, 2, 0, 2, 8], [10, 2, 7, 1, 0, 3, 8, 2, 1, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #228 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [5], [4], [9], [1]]
scalar = 2
expected = [[14], [10], [8], [18], [2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #229 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 3, 2, 2, 7, 9, 0]]
scalar = 4
expected = [[12, 40, 12, 8, 8, 28, 36, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #230 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 6, 0], [10, 2, 6, 4], [7, 4, 2, 0], [2, 3, 9, 10]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #231 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6, 8, 3, 3], [0, 2, 8, 5, 1], [1, 5, 0, 1, 10], [0, 10, 9, 3, 9], [8, 6, 8, 1, 3], [8, 0, 10, 3, 8], [9, 9, 0, 2, 7], [3, 6, 0, 8, 7], [6, 8, 0, 10, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #232 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 1, 6, 9, 10, 1, 0, 9, 4, 4], [7, 4, 2, 8, 3, 7, 1, 5, 5, 1], [3, 0, 1, 5, 5, 1, 6, 7, 4, 2], [3, 1, 6, 9, 0, 6, 7, 1, 3, 2], [9, 1, 0, 0, 7, 1, 9, 2, 4, 8], [2, 5, 4, 7, 1, 10, 3, 1, 2, 1]]
scalar = 2
expected = [[20, 2, 12, 18, 20, 2, 0, 18, 8, 8], [14, 8, 4, 16, 6, 14, 2, 10, 10, 2], [6, 0, 2, 10, 10, 2, 12, 14, 8, 4], [6, 2, 12, 18, 0, 12, 14, 2, 6, 4], [18, 2, 0, 0, 14, 2, 18, 4, 8, 16], [4, 10, 8, 14, 2, 20, 6, 2, 4, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #233 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [5]]
scalar = 5
expected = [[20], [25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #234 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [9], [3], [4]]
scalar = 5
expected = [[15], [45], [15], [20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #235 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 2, 8, 4], [9, 10, 3, 7, 2]]
scalar = 6
expected = [[36, 30, 12, 48, 24], [54, 60, 18, 42, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #236 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [1], [3], [6], [2], [1], [0], [7], [8], [10]]
scalar = 6
expected = [[42], [6], [18], [36], [12], [6], [0], [42], [48], [60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #237 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 0, 9, 5, 10], [10, 9, 5, 8, 0, 2], [9, 4, 10, 1, 8, 7], [4, 0, 6, 4, 10, 10], [1, 2, 5, 1, 4, 1], [2, 10, 8, 7, 5, 4], [4, 10, 0, 10, 3, 5], [6, 8, 9, 1, 3, 5], [8, 7, 1, 2, 10, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #238 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 1], [1, 9, 7], [6, 1, 7]]
scalar = 5
expected = [[50, 0, 5], [5, 45, 35], [30, 5, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #239 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 3, 0, 8], [6, 7, 4, 10], [1, 8, 1, 0], [5, 8, 1, 4], [0, 10, 3, 6]]
scalar = 8
expected = [[72, 24, 0, 64], [48, 56, 32, 80], [8, 64, 8, 0], [40, 64, 8, 32], [0, 80, 24, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #240 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [6], [7], [5], [1], [9]]
scalar = 5
expected = [[10], [30], [35], [25], [5], [45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #241 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7], [10, 6], [5, 8], [3, 3], [6, 7], [7, 6], [10, 5], [0, 6], [8, 2]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #242 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 3, 1, 7], [7, 4, 8, 6, 6], [7, 6, 7, 10, 2], [7, 7, 7, 5, 6]]
scalar = 2
expected = [[2, 6, 6, 2, 14], [14, 8, 16, 12, 12], [14, 12, 14, 20, 4], [14, 14, 14, 10, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #243 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 10, 4], [6, 7, 7, 8], [9, 6, 10, 6], [9, 5, 9, 2], [9, 5, 7, 1], [1, 9, 6, 1], [6, 10, 10, 0]]
scalar = 4
expected = [[28, 20, 40, 16], [24, 28, 28, 32], [36, 24, 40, 24], [36, 20, 36, 8], [36, 20, 28, 4], [4, 36, 24, 4], [24, 40, 40, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #244 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0, 8], [1, 10, 3], [1, 4, 10], [3, 1, 5], [1, 0, 6]]
scalar = 1
expected = [[8, 0, 8], [1, 10, 3], [1, 4, 10], [3, 1, 5], [1, 0, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #245 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 4, 5, 7, 2, 4, 6, 2], [7, 7, 2, 10, 10, 5, 9, 4, 4], [9, 4, 1, 1, 0, 4, 7, 4, 6], [2, 1, 2, 0, 4, 4, 0, 2, 10], [3, 4, 3, 8, 8, 6, 3, 9, 8], [6, 2, 8, 0, 1, 5, 1, 8, 5]]
scalar = 8
expected = [[32, 72, 32, 40, 56, 16, 32, 48, 16], [56, 56, 16, 80, 80, 40, 72, 32, 32], [72, 32, 8, 8, 0, 32, 56, 32, 48], [16, 8, 16, 0, 32, 32, 0, 16, 80], [24, 32, 24, 64, 64, 48, 24, 72, 64], [48, 16, 64, 0, 8, 40, 8, 64, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #246 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [4], [4], [5]]
scalar = 2
expected = [[8], [8], [8], [10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #247 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 10, 2, 10, 8, 8, 8, 5, 2], [6, 1, 8, 0, 6, 4, 10, 9, 9], [6, 3, 10, 9, 9, 8, 5, 9, 2], [10, 1, 6, 1, 3, 10, 4, 0, 8], [8, 10, 0, 0, 4, 0, 5, 10, 6]]
scalar = 10
expected = [[80, 100, 20, 100, 80, 80, 80, 50, 20], [60, 10, 80, 0, 60, 40, 100, 90, 90], [60, 30, 100, 90, 90, 80, 50, 90, 20], [100, 10, 60, 10, 30, 100, 40, 0, 80], [80, 100, 0, 0, 40, 0, 50, 100, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #248 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 10, 7, 3, 8, 10, 2, 9, 0], [6, 5, 4, 9, 0, 4, 10, 3, 3, 0], [9, 2, 7, 8, 4, 3, 0, 6, 7, 3], [3, 2, 6, 3, 7, 0, 9, 5, 7, 8], [1, 7, 8, 10, 9, 7, 0, 8, 9, 7]]
scalar = 3
expected = [[21, 27, 30, 21, 9, 24, 30, 6, 27, 0], [18, 15, 12, 27, 0, 12, 30, 9, 9, 0], [27, 6, 21, 24, 12, 9, 0, 18, 21, 9], [9, 6, 18, 9, 21, 0, 27, 15, 21, 24], [3, 21, 24, 30, 27, 21, 0, 24, 27, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #249 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 2, 8, 8, 9, 7], [8, 2, 10, 9, 5, 9, 3]]
scalar = 2
expected = [[20, 12, 4, 16, 16, 18, 14], [16, 4, 20, 18, 10, 18, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #250 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 9], [10, 6, 0], [6, 4, 7], [9, 0, 3], [2, 1, 5], [6, 9, 3], [3, 6, 1], [1, 5, 8]]
scalar = 8
expected = [[40, 64, 72], [80, 48, 0], [48, 32, 56], [72, 0, 24], [16, 8, 40], [48, 72, 24], [24, 48, 8], [8, 40, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #251 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 4, 3, 7, 2, 7, 9, 0], [1, 1, 5, 5, 6, 9, 6, 3, 0], [4, 1, 10, 9, 10, 8, 0, 2, 3], [0, 8, 9, 4, 7, 6, 0, 1, 10], [8, 8, 5, 4, 7, 2, 9, 8, 4], [0, 1, 9, 6, 1, 0, 0, 6, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #252 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 2, 2, 4, 9, 8, 1, 9], [2, 10, 2, 9, 4, 9, 1, 8, 10], [5, 0, 6, 0, 6, 8, 2, 10, 10], [0, 5, 4, 10, 10, 2, 10, 4, 6], [4, 2, 9, 3, 0, 0, 7, 3, 6], [5, 8, 6, 4, 5, 7, 6, 8, 9], [1, 4, 10, 10, 0, 0, 10, 9, 0], [1, 5, 6, 7, 9, 8, 9, 1, 0], [8, 2, 5, 3, 4, 6, 3, 0, 4]]
scalar = 6
expected = [[24, 18, 12, 12, 24, 54, 48, 6, 54], [12, 60, 12, 54, 24, 54, 6, 48, 60], [30, 0, 36, 0, 36, 48, 12, 60, 60], [0, 30, 24, 60, 60, 12, 60, 24, 36], [24, 12, 54, 18, 0, 0, 42, 18, 36], [30, 48, 36, 24, 30, 42, 36, 48, 54], [6, 24, 60, 60, 0, 0, 60, 54, 0], [6, 30, 36, 42, 54, 48, 54, 6, 0], [48, 12, 30, 18, 24, 36, 18, 0, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #253 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5], [3, 10], [9, 6], [10, 1], [7, 3]]
scalar = 5
expected = [[5, 25], [15, 50], [45, 30], [50, 5], [35, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #254 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 0, 4, 9, 1, 5, 6], [5, 9, 8, 3, 1, 6, 3, 3], [0, 2, 7, 10, 4, 5, 0, 0], [10, 1, 5, 10, 5, 1, 3, 0], [2, 9, 8, 4, 6, 9, 4, 3], [0, 4, 9, 9, 6, 10, 1, 2], [3, 5, 6, 5, 10, 10, 7, 0], [9, 2, 5, 3, 7, 10, 6, 8]]
scalar = 1
expected = [[9, 10, 0, 4, 9, 1, 5, 6], [5, 9, 8, 3, 1, 6, 3, 3], [0, 2, 7, 10, 4, 5, 0, 0], [10, 1, 5, 10, 5, 1, 3, 0], [2, 9, 8, 4, 6, 9, 4, 3], [0, 4, 9, 9, 6, 10, 1, 2], [3, 5, 6, 5, 10, 10, 7, 0], [9, 2, 5, 3, 7, 10, 6, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #255 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 0, 4, 2, 10, 3, 3], [2, 0, 5, 9, 1, 0, 7, 7], [8, 1, 6, 5, 0, 7, 10, 2], [1, 2, 3, 0, 9, 8, 6, 7], [1, 1, 4, 8, 10, 1, 7, 1], [0, 8, 2, 10, 2, 4, 5, 7], [7, 1, 2, 6, 6, 6, 9, 5], [3, 0, 4, 7, 1, 0, 8, 1], [1, 6, 4, 10, 2, 1, 8, 8]]
scalar = 8
expected = [[8, 8, 0, 32, 16, 80, 24, 24], [16, 0, 40, 72, 8, 0, 56, 56], [64, 8, 48, 40, 0, 56, 80, 16], [8, 16, 24, 0, 72, 64, 48, 56], [8, 8, 32, 64, 80, 8, 56, 8], [0, 64, 16, 80, 16, 32, 40, 56], [56, 8, 16, 48, 48, 48, 72, 40], [24, 0, 32, 56, 8, 0, 64, 8], [8, 48, 32, 80, 16, 8, 64, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #256 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 9, 8, 5, 1, 2, 0, 3, 10], [8, 9, 10, 0, 7, 7, 2, 1, 6, 4]]
scalar = 4
expected = [[12, 40, 36, 32, 20, 4, 8, 0, 12, 40], [32, 36, 40, 0, 28, 28, 8, 4, 24, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #257 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 10, 8, 0, 1, 0, 7], [4, 3, 2, 2, 7, 5, 9, 9], [9, 7, 2, 0, 10, 2, 3, 8]]
scalar = 10
expected = [[30, 30, 100, 80, 0, 10, 0, 70], [40, 30, 20, 20, 70, 50, 90, 90], [90, 70, 20, 0, 100, 20, 30, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #258 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 6, 9, 6, 10], [9, 6, 5, 6, 10, 4], [6, 9, 2, 2, 1, 7], [2, 5, 10, 2, 5, 9], [9, 1, 10, 2, 8, 2], [0, 3, 3, 5, 3, 8], [8, 2, 6, 2, 8, 4], [8, 1, 6, 7, 10, 4]]
scalar = 10
expected = [[0, 40, 60, 90, 60, 100], [90, 60, 50, 60, 100, 40], [60, 90, 20, 20, 10, 70], [20, 50, 100, 20, 50, 90], [90, 10, 100, 20, 80, 20], [0, 30, 30, 50, 30, 80], [80, 20, 60, 20, 80, 40], [80, 10, 60, 70, 100, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #259 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10], [9], [6], [0]]
scalar = 2
expected = [[20], [18], [12], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #260 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 8, 3, 1, 6], [7, 6, 8, 3, 4, 4], [5, 0, 4, 7, 8, 8], [9, 0, 5, 2, 0, 7], [1, 9, 1, 8, 8, 1], [0, 3, 2, 1, 10, 6], [8, 8, 10, 0, 6, 7], [1, 9, 4, 9, 3, 0], [3, 4, 7, 9, 5, 1], [5, 1, 8, 4, 6, 7]]
scalar = 9
expected = [[18, 9, 72, 27, 9, 54], [63, 54, 72, 27, 36, 36], [45, 0, 36, 63, 72, 72], [81, 0, 45, 18, 0, 63], [9, 81, 9, 72, 72, 9], [0, 27, 18, 9, 90, 54], [72, 72, 90, 0, 54, 63], [9, 81, 36, 81, 27, 0], [27, 36, 63, 81, 45, 9], [45, 9, 72, 36, 54, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #261 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 6], [2, 0, 5], [5, 0, 1], [0, 8, 2], [10, 8, 8], [4, 10, 1], [4, 10, 2], [1, 10, 4]]
scalar = 1
expected = [[5, 10, 6], [2, 0, 5], [5, 0, 1], [0, 8, 2], [10, 8, 8], [4, 10, 1], [4, 10, 2], [1, 10, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #262 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3, 0, 9, 1, 0, 3, 9, 0, 0], [1, 9, 4, 5, 2, 2, 9, 0, 3, 6], [6, 1, 3, 8, 2, 1, 8, 7, 6, 4]]
scalar = 3
expected = [[30, 9, 0, 27, 3, 0, 9, 27, 0, 0], [3, 27, 12, 15, 6, 6, 27, 0, 9, 18], [18, 3, 9, 24, 6, 3, 24, 21, 18, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #263 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 4, 1, 0, 8, 2, 3, 3]]
scalar = 2
expected = [[12, 10, 8, 2, 0, 16, 4, 6, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #264 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 4, 8, 5, 10, 6, 10], [9, 3, 0, 10, 5, 1, 0, 10], [4, 7, 7, 9, 1, 5, 2, 6], [2, 4, 8, 5, 10, 3, 7, 0], [0, 2, 3, 9, 10, 4, 6, 7], [4, 10, 9, 2, 6, 8, 6, 2], [10, 0, 5, 8, 5, 0, 1, 6], [3, 5, 7, 2, 7, 3, 7, 3]]
scalar = 9
expected = [[90, 54, 36, 72, 45, 90, 54, 90], [81, 27, 0, 90, 45, 9, 0, 90], [36, 63, 63, 81, 9, 45, 18, 54], [18, 36, 72, 45, 90, 27, 63, 0], [0, 18, 27, 81, 90, 36, 54, 63], [36, 90, 81, 18, 54, 72, 54, 18], [90, 0, 45, 72, 45, 0, 9, 54], [27, 45, 63, 18, 63, 27, 63, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #265 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 2, 4]]
scalar = 10
expected = [[90, 100, 20, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #266 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 9, 6, 3], [9, 4, 10, 8, 10], [8, 3, 9, 9, 6], [0, 1, 3, 10, 0], [7, 0, 4, 6, 8], [3, 0, 0, 6, 0], [6, 9, 0, 9, 10], [7, 8, 8, 8, 4], [3, 9, 2, 3, 10], [7, 3, 10, 8, 0]]
scalar = 3
expected = [[12, 9, 27, 18, 9], [27, 12, 30, 24, 30], [24, 9, 27, 27, 18], [0, 3, 9, 30, 0], [21, 0, 12, 18, 24], [9, 0, 0, 18, 0], [18, 27, 0, 27, 30], [21, 24, 24, 24, 12], [9, 27, 6, 9, 30], [21, 9, 30, 24, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #267 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [4], [9], [2], [8], [2], [7], [1]]
scalar = 4
expected = [[0], [16], [36], [8], [32], [8], [28], [4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #268 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 2, 5, 0], [6, 8, 6, 10, 8], [8, 7, 8, 7, 0], [1, 4, 6, 7, 0], [5, 10, 8, 9, 1], [0, 3, 1, 1, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #269 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 1, 2, 8, 9, 9], [10, 0, 0, 8, 4, 2, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #270 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 5], [1, 6, 7], [4, 9, 7], [4, 2, 6], [4, 4, 3], [8, 2, 4], [7, 6, 10], [8, 0, 4], [0, 10, 4]]
scalar = 9
expected = [[9, 54, 45], [9, 54, 63], [36, 81, 63], [36, 18, 54], [36, 36, 27], [72, 18, 36], [63, 54, 90], [72, 0, 36], [0, 90, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #271 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 10, 6, 5, 5, 9], [7, 0, 6, 0, 8, 5, 7], [2, 3, 9, 0, 8, 4, 1], [4, 9, 2, 3, 2, 9, 1], [1, 7, 10, 10, 8, 7, 6], [8, 8, 3, 0, 4, 2, 7], [6, 6, 9, 6, 7, 7, 10], [8, 4, 0, 7, 9, 4, 1], [3, 2, 9, 9, 4, 8, 1], [1, 9, 5, 9, 3, 0, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #272 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 0, 8, 1], [10, 9, 1, 9, 8]]
scalar = 3
expected = [[15, 3, 0, 24, 3], [30, 27, 3, 27, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #273 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5], [9, 10], [7, 9], [0, 4], [10, 3], [4, 3], [7, 2], [6, 4], [0, 0], [1, 9]]
scalar = 8
expected = [[16, 40], [72, 80], [56, 72], [0, 32], [80, 24], [32, 24], [56, 16], [48, 32], [0, 0], [8, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #274 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 1, 10, 2, 4, 3, 10]]
scalar = 3
expected = [[0, 24, 3, 30, 6, 12, 9, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #275 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 4, 6, 2, 6, 7, 5, 5], [9, 6, 10, 2, 1, 7, 9, 3, 4], [6, 0, 3, 2, 8, 7, 1, 6, 5], [4, 1, 10, 9, 6, 0, 4, 10, 4], [6, 9, 6, 0, 2, 1, 8, 10, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #276 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 4, 10, 4, 9, 5], [4, 4, 7, 10, 4, 8, 6], [8, 0, 5, 8, 4, 7, 4], [3, 8, 10, 2, 2, 4, 4], [1, 8, 6, 3, 2, 6, 9]]
scalar = 8
expected = [[0, 0, 32, 80, 32, 72, 40], [32, 32, 56, 80, 32, 64, 48], [64, 0, 40, 64, 32, 56, 32], [24, 64, 80, 16, 16, 32, 32], [8, 64, 48, 24, 16, 48, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #277 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 3, 3, 3, 6, 5, 9, 7], [8, 3, 8, 1, 9, 8, 5, 8, 4], [10, 5, 5, 3, 1, 8, 4, 10, 6], [4, 3, 2, 10, 7, 1, 2, 1, 8], [9, 8, 4, 1, 6, 5, 4, 2, 2], [3, 9, 4, 2, 5, 1, 1, 2, 3], [2, 3, 1, 10, 0, 8, 2, 5, 8], [9, 7, 3, 5, 1, 3, 10, 5, 3], [9, 8, 10, 9, 5, 6, 3, 0, 5], [0, 4, 1, 1, 5, 4, 3, 5, 10]]
scalar = 10
expected = [[10, 80, 30, 30, 30, 60, 50, 90, 70], [80, 30, 80, 10, 90, 80, 50, 80, 40], [100, 50, 50, 30, 10, 80, 40, 100, 60], [40, 30, 20, 100, 70, 10, 20, 10, 80], [90, 80, 40, 10, 60, 50, 40, 20, 20], [30, 90, 40, 20, 50, 10, 10, 20, 30], [20, 30, 10, 100, 0, 80, 20, 50, 80], [90, 70, 30, 50, 10, 30, 100, 50, 30], [90, 80, 100, 90, 50, 60, 30, 0, 50], [0, 40, 10, 10, 50, 40, 30, 50, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #278 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 0], [3, 8, 7], [1, 0, 7], [3, 4, 10], [1, 4, 1], [0, 5, 10]]
scalar = 8
expected = [[8, 40, 0], [24, 64, 56], [8, 0, 56], [24, 32, 80], [8, 32, 8], [0, 40, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #279 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 4, 2], [5, 4, 8], [0, 3, 9], [7, 8, 10], [1, 7, 9], [9, 3, 4], [10, 4, 5], [3, 3, 8]]
scalar = 6
expected = [[54, 24, 12], [30, 24, 48], [0, 18, 54], [42, 48, 60], [6, 42, 54], [54, 18, 24], [60, 24, 30], [18, 18, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #280 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [5], [9]]
scalar = 8
expected = [[56], [40], [72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #281 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 0, 7, 9, 5, 5, 3, 5, 0], [1, 9, 6, 6, 8, 9, 1, 5, 0, 10], [5, 0, 1, 10, 0, 10, 1, 2, 5, 1], [7, 5, 8, 7, 0, 2, 7, 10, 4, 7], [10, 2, 2, 7, 8, 2, 7, 8, 10, 7], [1, 10, 3, 7, 9, 7, 1, 3, 4, 8], [8, 8, 8, 4, 3, 5, 3, 4, 8, 2]]
scalar = 3
expected = [[0, 30, 0, 21, 27, 15, 15, 9, 15, 0], [3, 27, 18, 18, 24, 27, 3, 15, 0, 30], [15, 0, 3, 30, 0, 30, 3, 6, 15, 3], [21, 15, 24, 21, 0, 6, 21, 30, 12, 21], [30, 6, 6, 21, 24, 6, 21, 24, 30, 21], [3, 30, 9, 21, 27, 21, 3, 9, 12, 24], [24, 24, 24, 12, 9, 15, 9, 12, 24, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #282 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 0, 5, 2]]
scalar = 5
expected = [[15, 50, 0, 25, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #283 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 7, 0, 5, 8, 4, 9]]
scalar = 9
expected = [[45, 72, 63, 0, 45, 72, 36, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #284 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 6, 0, 7, 1], [8, 5, 8, 9, 10, 6], [2, 2, 10, 7, 7, 8], [10, 7, 6, 10, 4, 8]]
scalar = 8
expected = [[16, 32, 48, 0, 56, 8], [64, 40, 64, 72, 80, 48], [16, 16, 80, 56, 56, 64], [80, 56, 48, 80, 32, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #285 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 4, 5, 9, 9, 4, 0, 2], [9, 10, 5, 10, 10, 4, 6, 1, 2]]
scalar = 10
expected = [[100, 80, 40, 50, 90, 90, 40, 0, 20], [90, 100, 50, 100, 100, 40, 60, 10, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #286 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 2, 10, 10], [1, 0, 2, 3, 10], [4, 7, 3, 0, 9], [4, 1, 5, 5, 10], [4, 8, 7, 1, 0], [0, 0, 2, 9, 10]]
scalar = 5
expected = [[30, 5, 10, 50, 50], [5, 0, 10, 15, 50], [20, 35, 15, 0, 45], [20, 5, 25, 25, 50], [20, 40, 35, 5, 0], [0, 0, 10, 45, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #287 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4], [7, 10], [2, 10], [10, 10]]
scalar = 2
expected = [[12, 8], [14, 20], [4, 20], [20, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #288 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6, 0, 5, 7, 3, 4], [0, 0, 9, 4, 3, 4, 3], [1, 0, 4, 5, 10, 9, 1], [5, 9, 1, 1, 10, 7, 6], [9, 7, 7, 1, 0, 6, 6], [9, 0, 8, 10, 10, 4, 1], [2, 8, 5, 2, 6, 7, 8], [1, 7, 1, 8, 2, 7, 1], [2, 0, 10, 6, 3, 5, 5]]
scalar = 5
expected = [[25, 30, 0, 25, 35, 15, 20], [0, 0, 45, 20, 15, 20, 15], [5, 0, 20, 25, 50, 45, 5], [25, 45, 5, 5, 50, 35, 30], [45, 35, 35, 5, 0, 30, 30], [45, 0, 40, 50, 50, 20, 5], [10, 40, 25, 10, 30, 35, 40], [5, 35, 5, 40, 10, 35, 5], [10, 0, 50, 30, 15, 25, 25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #289 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 7, 4, 10, 8, 10, 8, 10], [9, 5, 8, 5, 5, 4, 2, 6, 3], [10, 1, 10, 0, 1, 0, 9, 7, 8], [2, 0, 5, 7, 0, 3, 6, 7, 5], [1, 10, 7, 6, 0, 7, 0, 7, 4], [0, 6, 9, 5, 9, 9, 10, 7, 5], [8, 6, 6, 9, 5, 3, 6, 7, 8], [1, 6, 10, 4, 3, 9, 7, 6, 1], [6, 1, 4, 2, 6, 0, 6, 9, 0]]
scalar = 9
expected = [[27, 0, 63, 36, 90, 72, 90, 72, 90], [81, 45, 72, 45, 45, 36, 18, 54, 27], [90, 9, 90, 0, 9, 0, 81, 63, 72], [18, 0, 45, 63, 0, 27, 54, 63, 45], [9, 90, 63, 54, 0, 63, 0, 63, 36], [0, 54, 81, 45, 81, 81, 90, 63, 45], [72, 54, 54, 81, 45, 27, 54, 63, 72], [9, 54, 90, 36, 27, 81, 63, 54, 9], [54, 9, 36, 18, 54, 0, 54, 81, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #290 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0, 5, 4, 4], [9, 5, 1, 0, 1], [8, 1, 1, 7, 10], [7, 7, 8, 4, 9], [2, 5, 5, 5, 1], [8, 5, 2, 5, 2]]
scalar = 9
expected = [[9, 0, 45, 36, 36], [81, 45, 9, 0, 9], [72, 9, 9, 63, 90], [63, 63, 72, 36, 81], [18, 45, 45, 45, 9], [72, 45, 18, 45, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #291 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 5, 5, 10, 4, 5, 8], [5, 4, 5, 3, 7, 3, 2, 9], [3, 9, 3, 0, 9, 4, 3, 1], [8, 7, 1, 6, 10, 0, 7, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #292 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 0, 6, 5, 2, 2, 0, 7, 5], [2, 7, 5, 10, 6, 3, 3, 5, 8, 7]]
scalar = 9
expected = [[9, 90, 0, 54, 45, 18, 18, 0, 63, 45], [18, 63, 45, 90, 54, 27, 27, 45, 72, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #293 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 7, 3, 3, 2, 9, 2], [9, 7, 1, 9, 4, 7, 10, 5], [0, 8, 5, 1, 1, 8, 8, 2], [9, 7, 5, 10, 7, 0, 6, 3], [5, 10, 9, 8, 9, 0, 2, 6], [5, 10, 1, 8, 4, 1, 1, 6], [1, 8, 7, 9, 6, 9, 1, 1], [10, 0, 1, 2, 3, 6, 7, 10]]
scalar = 4
expected = [[36, 20, 28, 12, 12, 8, 36, 8], [36, 28, 4, 36, 16, 28, 40, 20], [0, 32, 20, 4, 4, 32, 32, 8], [36, 28, 20, 40, 28, 0, 24, 12], [20, 40, 36, 32, 36, 0, 8, 24], [20, 40, 4, 32, 16, 4, 4, 24], [4, 32, 28, 36, 24, 36, 4, 4], [40, 0, 4, 8, 12, 24, 28, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #294 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 2], [7, 2, 5]]
scalar = 3
expected = [[24, 12, 6], [21, 6, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #295 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [3], [5], [1], [0], [3], [10]]
scalar = 9
expected = [[9], [27], [45], [9], [0], [27], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #296 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 0, 2], [9, 0, 3, 6], [9, 4, 3, 4], [0, 5, 8, 8], [2, 1, 9, 0], [8, 10, 6, 6], [5, 3, 10, 8], [8, 5, 5, 7], [5, 4, 0, 2], [8, 3, 2, 5]]
scalar = 8
expected = [[72, 64, 0, 16], [72, 0, 24, 48], [72, 32, 24, 32], [0, 40, 64, 64], [16, 8, 72, 0], [64, 80, 48, 48], [40, 24, 80, 64], [64, 40, 40, 56], [40, 32, 0, 16], [64, 24, 16, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #297 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 3, 5, 3, 2, 6, 2, 1], [7, 8, 4, 2, 10, 1, 6, 3, 0], [9, 3, 3, 6, 6, 10, 9, 8, 4]]
scalar = 5
expected = [[45, 25, 15, 25, 15, 10, 30, 10, 5], [35, 40, 20, 10, 50, 5, 30, 15, 0], [45, 15, 15, 30, 30, 50, 45, 40, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #298 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 6, 1, 4, 7], [8, 4, 10, 4, 8, 6], [8, 3, 10, 9, 8, 10], [6, 4, 5, 1, 2, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #299 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 9, 6, 7, 4], [6, 3, 1, 6, 0, 0]]
scalar = 6
expected = [[36, 12, 54, 36, 42, 24], [36, 18, 6, 36, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #300 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3, 4, 8, 5, 4], [3, 9, 2, 1, 9, 0], [9, 0, 10, 0, 5, 3], [0, 4, 7, 9, 6, 5]]
scalar = 9
expected = [[90, 27, 36, 72, 45, 36], [27, 81, 18, 9, 81, 0], [81, 0, 90, 0, 45, 27], [0, 36, 63, 81, 54, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #301 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 6], [2, 0], [5, 3], [0, 10], [7, 3], [10, 0], [0, 10]]
scalar = 3
expected = [[6, 18], [6, 0], [15, 9], [0, 30], [21, 9], [30, 0], [0, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #302 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 7, 1], [7, 8, 7, 10]]
scalar = 1
expected = [[8, 6, 7, 1], [7, 8, 7, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #303 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 7, 3, 4, 4, 5]]
scalar = 3
expected = [[12, 3, 21, 9, 12, 12, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #304 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6, 1, 1, 8], [5, 4, 1, 2, 7], [4, 6, 10, 1, 9], [1, 8, 0, 7, 0], [3, 5, 5, 7, 7], [4, 1, 9, 0, 0], [5, 2, 8, 10, 7], [1, 5, 5, 9, 6]]
scalar = 2
expected = [[10, 12, 2, 2, 16], [10, 8, 2, 4, 14], [8, 12, 20, 2, 18], [2, 16, 0, 14, 0], [6, 10, 10, 14, 14], [8, 2, 18, 0, 0], [10, 4, 16, 20, 14], [2, 10, 10, 18, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #305 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 4, 8, 7], [1, 1, 5, 6, 0], [7, 0, 8, 4, 7], [8, 8, 7, 6, 4]]
scalar = 2
expected = [[18, 20, 8, 16, 14], [2, 2, 10, 12, 0], [14, 0, 16, 8, 14], [16, 16, 14, 12, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #306 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6, 2, 7, 9, 0, 2], [10, 7, 7, 7, 6, 10, 0], [5, 6, 0, 2, 1, 4, 2], [6, 2, 2, 10, 2, 10, 4], [3, 4, 6, 9, 8, 2, 1], [1, 4, 6, 9, 10, 8, 1], [4, 1, 2, 2, 8, 1, 9], [5, 3, 8, 10, 3, 6, 9]]
scalar = 1
expected = [[9, 6, 2, 7, 9, 0, 2], [10, 7, 7, 7, 6, 10, 0], [5, 6, 0, 2, 1, 4, 2], [6, 2, 2, 10, 2, 10, 4], [3, 4, 6, 9, 8, 2, 1], [1, 4, 6, 9, 10, 8, 1], [4, 1, 2, 2, 8, 1, 9], [5, 3, 8, 10, 3, 6, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #307 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 2, 0, 1], [2, 3, 7, 1, 10], [9, 1, 8, 5, 6], [0, 5, 1, 2, 1], [10, 2, 9, 10, 6], [10, 1, 1, 10, 2], [3, 10, 4, 9, 1]]
scalar = 6
expected = [[30, 30, 12, 0, 6], [12, 18, 42, 6, 60], [54, 6, 48, 30, 36], [0, 30, 6, 12, 6], [60, 12, 54, 60, 36], [60, 6, 6, 60, 12], [18, 60, 24, 54, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #308 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 3, 6, 1, 8, 8, 1, 6], [0, 7, 1, 0, 7, 0, 0, 10, 7], [3, 3, 8, 2, 1, 2, 10, 6, 9], [4, 5, 8, 0, 2, 3, 4, 8, 8], [1, 7, 10, 6, 2, 7, 8, 5, 1], [6, 4, 3, 9, 0, 1, 0, 5, 5], [2, 9, 8, 9, 6, 8, 6, 6, 1], [3, 5, 8, 6, 1, 3, 8, 2, 5], [7, 6, 2, 2, 6, 9, 3, 3, 6]]
scalar = 3
expected = [[27, 24, 9, 18, 3, 24, 24, 3, 18], [0, 21, 3, 0, 21, 0, 0, 30, 21], [9, 9, 24, 6, 3, 6, 30, 18, 27], [12, 15, 24, 0, 6, 9, 12, 24, 24], [3, 21, 30, 18, 6, 21, 24, 15, 3], [18, 12, 9, 27, 0, 3, 0, 15, 15], [6, 27, 24, 27, 18, 24, 18, 18, 3], [9, 15, 24, 18, 3, 9, 24, 6, 15], [21, 18, 6, 6, 18, 27, 9, 9, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #309 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 4, 3, 7, 6, 1], [7, 8, 5, 10, 4, 3, 7], [9, 5, 9, 1, 6, 0, 6], [7, 10, 0, 3, 8, 9, 4], [5, 7, 5, 5, 10, 0, 4], [8, 4, 1, 0, 3, 2, 10], [9, 2, 8, 8, 6, 0, 3], [8, 3, 0, 8, 6, 1, 7], [6, 4, 8, 7, 8, 1, 7], [7, 8, 7, 2, 4, 8, 2]]
scalar = 8
expected = [[0, 48, 32, 24, 56, 48, 8], [56, 64, 40, 80, 32, 24, 56], [72, 40, 72, 8, 48, 0, 48], [56, 80, 0, 24, 64, 72, 32], [40, 56, 40, 40, 80, 0, 32], [64, 32, 8, 0, 24, 16, 80], [72, 16, 64, 64, 48, 0, 24], [64, 24, 0, 64, 48, 8, 56], [48, 32, 64, 56, 64, 8, 56], [56, 64, 56, 16, 32, 64, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #310 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 1, 10, 2], [2, 2, 5, 6, 3], [3, 10, 7, 5, 4], [9, 6, 1, 10, 8], [4, 2, 6, 8, 2], [6, 7, 10, 0, 3], [2, 2, 7, 9, 1], [10, 3, 3, 9, 5], [6, 1, 3, 9, 4], [7, 8, 3, 8, 7]]
scalar = 7
expected = [[42, 63, 7, 70, 14], [14, 14, 35, 42, 21], [21, 70, 49, 35, 28], [63, 42, 7, 70, 56], [28, 14, 42, 56, 14], [42, 49, 70, 0, 21], [14, 14, 49, 63, 7], [70, 21, 21, 63, 35], [42, 7, 21, 63, 28], [49, 56, 21, 56, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #311 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8, 7, 1, 1, 4, 8, 2, 1], [8, 5, 1, 8, 10, 0, 1, 1, 8], [2, 9, 2, 1, 4, 0, 6, 6, 6], [1, 4, 7, 0, 6, 6, 8, 4, 0], [6, 4, 1, 4, 0, 0, 4, 4, 2], [8, 0, 0, 6, 1, 1, 9, 2, 6], [4, 7, 6, 6, 4, 7, 10, 6, 5], [5, 8, 5, 10, 10, 3, 6, 3, 7]]
scalar = 5
expected = [[40, 40, 35, 5, 5, 20, 40, 10, 5], [40, 25, 5, 40, 50, 0, 5, 5, 40], [10, 45, 10, 5, 20, 0, 30, 30, 30], [5, 20, 35, 0, 30, 30, 40, 20, 0], [30, 20, 5, 20, 0, 0, 20, 20, 10], [40, 0, 0, 30, 5, 5, 45, 10, 30], [20, 35, 30, 30, 20, 35, 50, 30, 25], [25, 40, 25, 50, 50, 15, 30, 15, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #312 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 4, 6, 7, 8, 7, 1, 4, 9], [6, 10, 4, 0, 9, 7, 2, 4, 9, 4], [3, 2, 4, 5, 6, 3, 5, 6, 10, 3], [5, 3, 10, 7, 3, 4, 1, 4, 4, 4], [5, 1, 5, 8, 1, 8, 6, 5, 9, 10], [6, 9, 4, 4, 0, 2, 3, 1, 5, 6], [1, 2, 4, 3, 3, 4, 6, 1, 0, 5], [7, 8, 6, 7, 8, 3, 10, 6, 4, 1]]
scalar = 6
expected = [[48, 42, 24, 36, 42, 48, 42, 6, 24, 54], [36, 60, 24, 0, 54, 42, 12, 24, 54, 24], [18, 12, 24, 30, 36, 18, 30, 36, 60, 18], [30, 18, 60, 42, 18, 24, 6, 24, 24, 24], [30, 6, 30, 48, 6, 48, 36, 30, 54, 60], [36, 54, 24, 24, 0, 12, 18, 6, 30, 36], [6, 12, 24, 18, 18, 24, 36, 6, 0, 30], [42, 48, 36, 42, 48, 18, 60, 36, 24, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #313 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 2, 0, 7, 1], [10, 0, 9, 8, 6], [6, 0, 3, 4, 8], [1, 1, 10, 9, 4], [8, 10, 1, 7, 9], [1, 5, 9, 8, 9]]
scalar = 2
expected = [[16, 4, 0, 14, 2], [20, 0, 18, 16, 12], [12, 0, 6, 8, 16], [2, 2, 20, 18, 8], [16, 20, 2, 14, 18], [2, 10, 18, 16, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #314 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 9, 8, 10, 0, 5], [0, 10, 10, 2, 10, 3, 10], [4, 8, 2, 4, 2, 5, 5], [8, 3, 10, 9, 1, 3, 4], [0, 0, 4, 9, 1, 9, 9], [8, 7, 0, 5, 9, 4, 8], [2, 6, 5, 3, 2, 1, 6], [8, 2, 8, 0, 3, 3, 0]]
scalar = 7
expected = [[49, 7, 63, 56, 70, 0, 35], [0, 70, 70, 14, 70, 21, 70], [28, 56, 14, 28, 14, 35, 35], [56, 21, 70, 63, 7, 21, 28], [0, 0, 28, 63, 7, 63, 63], [56, 49, 0, 35, 63, 28, 56], [14, 42, 35, 21, 14, 7, 42], [56, 14, 56, 0, 21, 21, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #315 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 6, 8, 7, 6], [3, 7, 9, 4, 2, 10], [8, 7, 0, 1, 6, 0], [2, 10, 7, 0, 9, 10], [5, 7, 2, 4, 1, 0], [2, 6, 8, 7, 5, 0], [10, 7, 10, 9, 1, 10], [0, 10, 0, 3, 1, 8], [1, 1, 9, 7, 2, 2]]
scalar = 5
expected = [[35, 35, 30, 40, 35, 30], [15, 35, 45, 20, 10, 50], [40, 35, 0, 5, 30, 0], [10, 50, 35, 0, 45, 50], [25, 35, 10, 20, 5, 0], [10, 30, 40, 35, 25, 0], [50, 35, 50, 45, 5, 50], [0, 50, 0, 15, 5, 40], [5, 5, 45, 35, 10, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #316 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 3, 5, 1, 7, 4, 3], [2, 8, 0, 5, 3, 2, 4, 7], [2, 9, 4, 9, 8, 5, 10, 1], [1, 10, 6, 3, 10, 2, 2, 4], [8, 1, 7, 0, 7, 3, 7, 1], [4, 3, 4, 2, 1, 1, 3, 4]]
scalar = 5
expected = [[25, 5, 15, 25, 5, 35, 20, 15], [10, 40, 0, 25, 15, 10, 20, 35], [10, 45, 20, 45, 40, 25, 50, 5], [5, 50, 30, 15, 50, 10, 10, 20], [40, 5, 35, 0, 35, 15, 35, 5], [20, 15, 20, 10, 5, 5, 15, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #317 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1], [6, 6]]
scalar = 2
expected = [[10, 2], [12, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #318 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 1, 4, 7, 6], [6, 6, 2, 8, 5, 0], [4, 7, 1, 7, 7, 8], [6, 7, 1, 4, 7, 7], [9, 9, 7, 0, 5, 3], [9, 9, 2, 9, 8, 3]]
scalar = 10
expected = [[90, 70, 10, 40, 70, 60], [60, 60, 20, 80, 50, 0], [40, 70, 10, 70, 70, 80], [60, 70, 10, 40, 70, 70], [90, 90, 70, 0, 50, 30], [90, 90, 20, 90, 80, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #319 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2], [4, 5], [9, 7], [7, 5], [5, 6], [9, 2], [9, 2], [0, 10]]
scalar = 8
expected = [[24, 16], [32, 40], [72, 56], [56, 40], [40, 48], [72, 16], [72, 16], [0, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #320 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 3], [9, 1, 4]]
scalar = 8
expected = [[40, 8, 24], [72, 8, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #321 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 6, 0], [4, 7, 4, 5], [6, 0, 9, 1], [3, 5, 7, 7], [1, 9, 3, 4], [8, 2, 3, 7], [5, 5, 5, 2], [10, 6, 0, 4], [2, 3, 6, 1]]
scalar = 5
expected = [[45, 5, 30, 0], [20, 35, 20, 25], [30, 0, 45, 5], [15, 25, 35, 35], [5, 45, 15, 20], [40, 10, 15, 35], [25, 25, 25, 10], [50, 30, 0, 20], [10, 15, 30, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #322 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 5, 10], [7, 7, 10, 6], [8, 8, 1, 3], [5, 0, 3, 2], [8, 4, 10, 7]]
scalar = 7
expected = [[35, 7, 35, 70], [49, 49, 70, 42], [56, 56, 7, 21], [35, 0, 21, 14], [56, 28, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #323 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 8, 2, 2, 2, 8, 6, 5, 1], [0, 2, 0, 2, 9, 3, 10, 2, 1, 2], [9, 5, 4, 0, 8, 4, 6, 9, 1, 0], [6, 8, 8, 3, 3, 5, 8, 0, 8, 1], [1, 6, 5, 5, 1, 10, 6, 2, 2, 5], [8, 3, 0, 1, 6, 4, 9, 8, 10, 0]]
scalar = 2
expected = [[0, 8, 16, 4, 4, 4, 16, 12, 10, 2], [0, 4, 0, 4, 18, 6, 20, 4, 2, 4], [18, 10, 8, 0, 16, 8, 12, 18, 2, 0], [12, 16, 16, 6, 6, 10, 16, 0, 16, 2], [2, 12, 10, 10, 2, 20, 12, 4, 4, 10], [16, 6, 0, 2, 12, 8, 18, 16, 20, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #324 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 0, 8, 8], [6, 0, 0, 7, 3], [9, 10, 8, 10, 0], [4, 8, 1, 5, 1], [0, 8, 8, 6, 3], [5, 6, 6, 2, 4], [9, 7, 2, 10, 0], [0, 2, 8, 5, 9], [0, 7, 2, 9, 9]]
scalar = 8
expected = [[32, 32, 0, 64, 64], [48, 0, 0, 56, 24], [72, 80, 64, 80, 0], [32, 64, 8, 40, 8], [0, 64, 64, 48, 24], [40, 48, 48, 16, 32], [72, 56, 16, 80, 0], [0, 16, 64, 40, 72], [0, 56, 16, 72, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #325 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10], [8], [6], [0], [5], [6], [2], [8]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #326 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 8, 6, 2, 5, 0, 1, 3, 6], [0, 5, 8, 1, 0, 1, 7, 7, 9], [0, 9, 8, 8, 10, 4, 0, 4, 0], [9, 5, 1, 7, 5, 3, 6, 7, 1], [2, 2, 3, 9, 7, 0, 7, 2, 8]]
scalar = 7
expected = [[21, 56, 42, 14, 35, 0, 7, 21, 42], [0, 35, 56, 7, 0, 7, 49, 49, 63], [0, 63, 56, 56, 70, 28, 0, 28, 0], [63, 35, 7, 49, 35, 21, 42, 49, 7], [14, 14, 21, 63, 49, 0, 49, 14, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #327 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 2, 1, 8, 6, 7], [3, 4, 9, 6, 4, 1], [2, 0, 10, 7, 8, 10], [4, 10, 2, 10, 4, 9], [5, 6, 1, 0, 0, 10], [7, 8, 0, 5, 1, 5]]
scalar = 4
expected = [[8, 8, 4, 32, 24, 28], [12, 16, 36, 24, 16, 4], [8, 0, 40, 28, 32, 40], [16, 40, 8, 40, 16, 36], [20, 24, 4, 0, 0, 40], [28, 32, 0, 20, 4, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #328 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [8], [3], [1], [8]]
scalar = 0
expected = [[0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #329 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 4, 10, 4, 8, 7, 8, 5], [10, 8, 7, 5, 3, 0, 4, 3, 7]]
scalar = 6
expected = [[24, 6, 24, 60, 24, 48, 42, 48, 30], [60, 48, 42, 30, 18, 0, 24, 18, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #330 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 7, 8], [1, 0, 7, 5], [8, 3, 6, 1], [2, 6, 4, 1], [4, 0, 8, 5], [10, 5, 7, 4]]
scalar = 3
expected = [[0, 30, 21, 24], [3, 0, 21, 15], [24, 9, 18, 3], [6, 18, 12, 3], [12, 0, 24, 15], [30, 15, 21, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #331 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 8, 6, 3, 10, 8, 1]]
scalar = 4
expected = [[32, 24, 32, 24, 12, 40, 32, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #332 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 10, 9, 0, 2, 4], [1, 0, 5, 0, 9, 10, 6], [4, 7, 10, 9, 4, 10, 7], [6, 1, 2, 2, 4, 3, 4], [4, 2, 6, 8, 4, 1, 7], [7, 7, 3, 4, 2, 3, 0]]
scalar = 8
expected = [[64, 24, 80, 72, 0, 16, 32], [8, 0, 40, 0, 72, 80, 48], [32, 56, 80, 72, 32, 80, 56], [48, 8, 16, 16, 32, 24, 32], [32, 16, 48, 64, 32, 8, 56], [56, 56, 24, 32, 16, 24, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #333 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 3, 1], [7, 9, 4]]
scalar = 8
expected = [[0, 24, 8], [56, 72, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #334 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 9, 0, 5, 9, 4, 10, 9], [3, 7, 10, 8, 2, 7, 6, 5, 3], [8, 2, 8, 1, 0, 8, 7, 4, 5], [2, 10, 6, 4, 2, 0, 9, 2, 7], [8, 0, 1, 8, 10, 8, 1, 2, 7], [2, 10, 1, 6, 10, 7, 6, 0, 8], [10, 6, 4, 7, 3, 1, 6, 2, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #335 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 10, 5, 2], [1, 9, 7, 3], [0, 3, 5, 2], [1, 7, 9, 2], [7, 10, 1, 3], [2, 1, 7, 4], [5, 4, 5, 6]]
scalar = 9
expected = [[90, 90, 45, 18], [9, 81, 63, 27], [0, 27, 45, 18], [9, 63, 81, 18], [63, 90, 9, 27], [18, 9, 63, 36], [45, 36, 45, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #336 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2, 0, 1, 0, 6, 5, 7, 10, 10]]
scalar = 7
expected = [[21, 14, 0, 7, 0, 42, 35, 49, 70, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #337 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 8, 5, 8], [8, 10, 3, 3, 2], [2, 4, 10, 1, 9], [6, 9, 10, 6, 2], [3, 2, 10, 6, 3], [0, 4, 5, 10, 9], [4, 3, 2, 10, 0], [10, 8, 9, 10, 1], [4, 10, 3, 4, 4]]
scalar = 10
expected = [[50, 10, 80, 50, 80], [80, 100, 30, 30, 20], [20, 40, 100, 10, 90], [60, 90, 100, 60, 20], [30, 20, 100, 60, 30], [0, 40, 50, 100, 90], [40, 30, 20, 100, 0], [100, 80, 90, 100, 10], [40, 100, 30, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #338 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 6, 9, 10, 6, 5, 1], [7, 5, 5, 1, 5, 4, 8, 1], [1, 6, 1, 6, 4, 7, 0, 4], [9, 9, 3, 6, 8, 9, 7, 5], [4, 5, 4, 2, 4, 7, 6, 5], [8, 8, 6, 1, 6, 10, 3, 8], [9, 1, 6, 3, 8, 9, 1, 5], [9, 5, 5, 4, 5, 2, 10, 9], [9, 6, 0, 7, 9, 0, 4, 3]]
scalar = 5
expected = [[40, 20, 30, 45, 50, 30, 25, 5], [35, 25, 25, 5, 25, 20, 40, 5], [5, 30, 5, 30, 20, 35, 0, 20], [45, 45, 15, 30, 40, 45, 35, 25], [20, 25, 20, 10, 20, 35, 30, 25], [40, 40, 30, 5, 30, 50, 15, 40], [45, 5, 30, 15, 40, 45, 5, 25], [45, 25, 25, 20, 25, 10, 50, 45], [45, 30, 0, 35, 45, 0, 20, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #339 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 5, 9, 6, 10, 10], [9, 7, 5, 5, 0, 1, 10], [5, 1, 5, 4, 9, 7, 1], [5, 9, 10, 8, 5, 5, 3], [6, 8, 4, 10, 2, 3, 8], [10, 3, 2, 2, 6, 5, 10], [3, 8, 6, 5, 9, 10, 7]]
scalar = 7
expected = [[56, 42, 35, 63, 42, 70, 70], [63, 49, 35, 35, 0, 7, 70], [35, 7, 35, 28, 63, 49, 7], [35, 63, 70, 56, 35, 35, 21], [42, 56, 28, 70, 14, 21, 56], [70, 21, 14, 14, 42, 35, 70], [21, 56, 42, 35, 63, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #340 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 6], [9, 9], [8, 6], [6, 1], [7, 4], [3, 4], [7, 1], [2, 0], [7, 10], [3, 2]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #341 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 1, 4, 4, 3, 6, 9, 4, 8], [4, 2, 8, 3, 7, 7, 5, 1, 4, 2], [3, 9, 3, 0, 7, 3, 0, 7, 8, 9], [10, 6, 7, 9, 4, 4, 3, 9, 5, 0], [9, 7, 8, 6, 7, 9, 3, 4, 9, 4]]
scalar = 2
expected = [[4, 20, 2, 8, 8, 6, 12, 18, 8, 16], [8, 4, 16, 6, 14, 14, 10, 2, 8, 4], [6, 18, 6, 0, 14, 6, 0, 14, 16, 18], [20, 12, 14, 18, 8, 8, 6, 18, 10, 0], [18, 14, 16, 12, 14, 18, 6, 8, 18, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #342 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 3, 5, 4, 7, 4, 0, 6, 7], [8, 1, 7, 6, 10, 1, 6, 10, 7, 4], [2, 8, 0, 7, 7, 10, 7, 7, 9, 0], [3, 3, 6, 3, 2, 8, 1, 0, 8, 7], [0, 2, 4, 4, 1, 1, 2, 8, 9, 10], [4, 5, 9, 2, 9, 7, 4, 6, 1, 9]]
scalar = 1
expected = [[7, 2, 3, 5, 4, 7, 4, 0, 6, 7], [8, 1, 7, 6, 10, 1, 6, 10, 7, 4], [2, 8, 0, 7, 7, 10, 7, 7, 9, 0], [3, 3, 6, 3, 2, 8, 1, 0, 8, 7], [0, 2, 4, 4, 1, 1, 2, 8, 9, 10], [4, 5, 9, 2, 9, 7, 4, 6, 1, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #343 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8, 2], [9, 10, 2], [6, 4, 7], [1, 4, 5], [4, 7, 8], [5, 2, 4], [2, 10, 2], [1, 0, 7], [6, 2, 1], [0, 10, 2]]
scalar = 10
expected = [[80, 80, 20], [90, 100, 20], [60, 40, 70], [10, 40, 50], [40, 70, 80], [50, 20, 40], [20, 100, 20], [10, 0, 70], [60, 20, 10], [0, 100, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #344 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 7, 6, 9, 6, 3, 4, 10], [4, 5, 6, 8, 4, 5, 0, 2, 1], [9, 3, 4, 2, 6, 2, 1, 0, 1], [2, 4, 9, 5, 9, 9, 1, 0, 7], [7, 4, 7, 0, 5, 9, 0, 3, 2], [3, 10, 10, 1, 7, 6, 4, 0, 6], [5, 7, 10, 9, 6, 3, 3, 9, 10]]
scalar = 1
expected = [[7, 1, 7, 6, 9, 6, 3, 4, 10], [4, 5, 6, 8, 4, 5, 0, 2, 1], [9, 3, 4, 2, 6, 2, 1, 0, 1], [2, 4, 9, 5, 9, 9, 1, 0, 7], [7, 4, 7, 0, 5, 9, 0, 3, 2], [3, 10, 10, 1, 7, 6, 4, 0, 6], [5, 7, 10, 9, 6, 3, 3, 9, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #345 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 8, 7, 3, 2, 5, 1], [7, 7, 3, 3, 6, 2, 3, 4], [9, 7, 6, 4, 5, 8, 3, 9], [3, 7, 9, 10, 10, 7, 3, 4], [2, 7, 3, 0, 3, 9, 3, 7], [10, 1, 9, 6, 2, 8, 4, 3], [7, 1, 7, 0, 3, 4, 5, 5], [8, 3, 8, 10, 10, 7, 10, 9]]
scalar = 3
expected = [[3, 6, 24, 21, 9, 6, 15, 3], [21, 21, 9, 9, 18, 6, 9, 12], [27, 21, 18, 12, 15, 24, 9, 27], [9, 21, 27, 30, 30, 21, 9, 12], [6, 21, 9, 0, 9, 27, 9, 21], [30, 3, 27, 18, 6, 24, 12, 9], [21, 3, 21, 0, 9, 12, 15, 15], [24, 9, 24, 30, 30, 21, 30, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #346 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 8, 9, 7, 8, 3, 7, 4], [3, 4, 8, 8, 1, 4, 7, 3, 5], [3, 9, 7, 1, 0, 9, 6, 10, 3], [3, 2, 1, 4, 0, 7, 3, 0, 5]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #347 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 7, 10, 10, 0, 6, 3, 1]]
scalar = 10
expected = [[20, 100, 70, 100, 100, 0, 60, 30, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #348 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 0, 1, 4, 5, 3], [4, 2, 3, 9, 4, 4, 5], [7, 3, 7, 2, 5, 2, 5], [5, 9, 2, 6, 6, 4, 2]]
scalar = 6
expected = [[18, 18, 0, 6, 24, 30, 18], [24, 12, 18, 54, 24, 24, 30], [42, 18, 42, 12, 30, 12, 30], [30, 54, 12, 36, 36, 24, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #349 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 9], [3, 8, 5], [4, 1, 4], [5, 4, 2], [10, 4, 7], [9, 1, 0], [8, 6, 1], [3, 2, 7]]
scalar = 6
expected = [[60, 54, 54], [18, 48, 30], [24, 6, 24], [30, 24, 12], [60, 24, 42], [54, 6, 0], [48, 36, 6], [18, 12, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #350 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 2, 2, 7, 9, 2, 2, 0, 2], [10, 3, 7, 3, 1, 10, 9, 3, 3, 1], [5, 0, 6, 2, 6, 4, 10, 5, 7, 1], [7, 9, 4, 5, 3, 4, 10, 4, 1, 10]]
scalar = 6
expected = [[60, 12, 12, 12, 42, 54, 12, 12, 0, 12], [60, 18, 42, 18, 6, 60, 54, 18, 18, 6], [30, 0, 36, 12, 36, 24, 60, 30, 42, 6], [42, 54, 24, 30, 18, 24, 60, 24, 6, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #351 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 7, 4], [1, 5, 4, 10], [6, 2, 7, 9], [8, 1, 1, 0], [9, 8, 3, 3], [9, 9, 2, 10], [5, 7, 2, 0], [5, 5, 8, 3], [10, 0, 7, 1]]
scalar = 9
expected = [[72, 27, 63, 36], [9, 45, 36, 90], [54, 18, 63, 81], [72, 9, 9, 0], [81, 72, 27, 27], [81, 81, 18, 90], [45, 63, 18, 0], [45, 45, 72, 27], [90, 0, 63, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #352 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8]]
scalar = 1
expected = [[0, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #353 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4]]
scalar = 1
expected = [[1, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #354 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 3, 1, 4, 4], [5, 1, 7, 2, 8, 0], [0, 7, 1, 2, 6, 9], [9, 0, 4, 6, 4, 5]]
scalar = 6
expected = [[48, 24, 18, 6, 24, 24], [30, 6, 42, 12, 48, 0], [0, 42, 6, 12, 36, 54], [54, 0, 24, 36, 24, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #355 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 2, 4], [1, 2, 7, 1], [7, 7, 4, 1], [3, 9, 6, 8], [5, 5, 5, 1], [9, 7, 3, 4], [9, 1, 0, 5], [10, 9, 3, 2], [10, 4, 0, 1]]
scalar = 10
expected = [[10, 50, 20, 40], [10, 20, 70, 10], [70, 70, 40, 10], [30, 90, 60, 80], [50, 50, 50, 10], [90, 70, 30, 40], [90, 10, 0, 50], [100, 90, 30, 20], [100, 40, 0, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #356 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 0], [9, 1, 8], [7, 8, 8], [1, 8, 6], [1, 1, 0], [6, 9, 7], [10, 0, 4]]
scalar = 7
expected = [[28, 35, 0], [63, 7, 56], [49, 56, 56], [7, 56, 42], [7, 7, 0], [42, 63, 49], [70, 0, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #357 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 8, 6, 2, 1, 3, 3, 4, 3], [5, 8, 5, 6, 3, 5, 4, 9, 10, 10]]
scalar = 6
expected = [[60, 48, 48, 36, 12, 6, 18, 18, 24, 18], [30, 48, 30, 36, 18, 30, 24, 54, 60, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #358 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 4, 7, 9, 10, 0, 7], [9, 5, 8, 6, 1, 9, 7, 3], [7, 9, 4, 10, 10, 0, 5, 1], [1, 2, 6, 8, 9, 2, 6, 7], [0, 6, 1, 4, 3, 10, 9, 10], [0, 9, 7, 2, 9, 6, 9, 5], [5, 10, 6, 7, 3, 1, 9, 0], [6, 10, 3, 7, 9, 5, 10, 4]]
scalar = 5
expected = [[25, 40, 20, 35, 45, 50, 0, 35], [45, 25, 40, 30, 5, 45, 35, 15], [35, 45, 20, 50, 50, 0, 25, 5], [5, 10, 30, 40, 45, 10, 30, 35], [0, 30, 5, 20, 15, 50, 45, 50], [0, 45, 35, 10, 45, 30, 45, 25], [25, 50, 30, 35, 15, 5, 45, 0], [30, 50, 15, 35, 45, 25, 50, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #359 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 5, 7], [7, 3, 3, 9], [8, 6, 1, 1], [0, 1, 8, 9], [2, 0, 1, 10], [2, 4, 7, 2], [3, 0, 9, 5], [10, 5, 9, 7], [7, 7, 9, 6], [5, 7, 4, 6]]
scalar = 9
expected = [[36, 0, 45, 63], [63, 27, 27, 81], [72, 54, 9, 9], [0, 9, 72, 81], [18, 0, 9, 90], [18, 36, 63, 18], [27, 0, 81, 45], [90, 45, 81, 63], [63, 63, 81, 54], [45, 63, 36, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #360 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 5, 6, 5, 1, 5, 4], [2, 9, 3, 10, 10, 6, 8, 7], [0, 7, 5, 0, 2, 10, 1, 6], [6, 5, 10, 9, 5, 10, 5, 6], [0, 4, 0, 9, 1, 9, 9, 10], [7, 8, 2, 4, 4, 1, 4, 3], [5, 1, 7, 2, 0, 6, 0, 1]]
scalar = 1
expected = [[7, 5, 5, 6, 5, 1, 5, 4], [2, 9, 3, 10, 10, 6, 8, 7], [0, 7, 5, 0, 2, 10, 1, 6], [6, 5, 10, 9, 5, 10, 5, 6], [0, 4, 0, 9, 1, 9, 9, 10], [7, 8, 2, 4, 4, 1, 4, 3], [5, 1, 7, 2, 0, 6, 0, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #361 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 10, 4, 5, 9, 3, 10, 4, 5]]
scalar = 1
expected = [[4, 10, 10, 4, 5, 9, 3, 10, 4, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #362 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 3, 7, 0], [8, 9, 0, 6, 4], [5, 8, 3, 3, 6], [2, 5, 10, 5, 5], [9, 3, 7, 6, 10], [4, 4, 6, 6, 8], [4, 2, 0, 6, 7]]
scalar = 10
expected = [[100, 60, 30, 70, 0], [80, 90, 0, 60, 40], [50, 80, 30, 30, 60], [20, 50, 100, 50, 50], [90, 30, 70, 60, 100], [40, 40, 60, 60, 80], [40, 20, 0, 60, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #363 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [9], [9], [2]]
scalar = 6
expected = [[30], [54], [54], [12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #364 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 3], [4, 9, 6], [2, 5, 2], [9, 2, 6]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #365 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 3, 8, 1, 10, 7, 3, 9, 7], [8, 3, 5, 3, 2, 7, 9, 3, 6], [1, 7, 1, 8, 9, 4, 9, 9, 5]]
scalar = 5
expected = [[45, 15, 40, 5, 50, 35, 15, 45, 35], [40, 15, 25, 15, 10, 35, 45, 15, 30], [5, 35, 5, 40, 45, 20, 45, 45, 25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #366 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 3], [1, 8], [9, 7]]
scalar = 5
expected = [[30, 15], [5, 40], [45, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #367 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [4], [1]]
scalar = 4
expected = [[32], [16], [4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #368 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 1], [6, 2, 1]]
scalar = 4
expected = [[20, 36, 4], [24, 8, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #369 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 6, 4, 7], [10, 0, 3, 3, 3], [2, 3, 5, 10, 1], [4, 5, 10, 3, 2], [4, 10, 10, 4, 9], [0, 4, 8, 10, 5]]
scalar = 8
expected = [[24, 40, 48, 32, 56], [80, 0, 24, 24, 24], [16, 24, 40, 80, 8], [32, 40, 80, 24, 16], [32, 80, 80, 32, 72], [0, 32, 64, 80, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #370 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 2, 4, 7, 0], [3, 7, 6, 6, 6, 6], [0, 7, 5, 5, 1, 2], [0, 9, 8, 8, 5, 10], [0, 8, 3, 7, 5, 10], [4, 4, 1, 6, 2, 6], [8, 3, 3, 0, 4, 3], [8, 6, 1, 5, 5, 9], [9, 0, 6, 9, 6, 8], [10, 7, 3, 9, 9, 5]]
scalar = 7
expected = [[70, 14, 14, 28, 49, 0], [21, 49, 42, 42, 42, 42], [0, 49, 35, 35, 7, 14], [0, 63, 56, 56, 35, 70], [0, 56, 21, 49, 35, 70], [28, 28, 7, 42, 14, 42], [56, 21, 21, 0, 28, 21], [56, 42, 7, 35, 35, 63], [63, 0, 42, 63, 42, 56], [70, 49, 21, 63, 63, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #371 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 3, 9, 4, 3, 1, 10], [8, 6, 7, 4, 8, 4, 3, 5], [2, 7, 4, 1, 3, 8, 2, 9], [7, 5, 8, 7, 6, 8, 1, 7], [6, 3, 10, 7, 0, 1, 1, 3], [10, 3, 0, 1, 3, 1, 6, 5], [8, 1, 10, 0, 4, 3, 5, 10], [8, 9, 4, 8, 0, 10, 0, 4], [10, 5, 10, 10, 6, 0, 7, 9], [8, 9, 2, 0, 4, 0, 6, 9]]
scalar = 7
expected = [[28, 35, 21, 63, 28, 21, 7, 70], [56, 42, 49, 28, 56, 28, 21, 35], [14, 49, 28, 7, 21, 56, 14, 63], [49, 35, 56, 49, 42, 56, 7, 49], [42, 21, 70, 49, 0, 7, 7, 21], [70, 21, 0, 7, 21, 7, 42, 35], [56, 7, 70, 0, 28, 21, 35, 70], [56, 63, 28, 56, 0, 70, 0, 28], [70, 35, 70, 70, 42, 0, 49, 63], [56, 63, 14, 0, 28, 0, 42, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #372 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 1, 3, 0], [5, 5, 7, 0, 1], [10, 7, 4, 7, 10], [3, 3, 8, 6, 10], [2, 8, 5, 4, 9], [8, 2, 6, 1, 10], [6, 6, 9, 7, 4], [3, 10, 7, 10, 7], [0, 9, 6, 0, 8]]
scalar = 9
expected = [[54, 72, 9, 27, 0], [45, 45, 63, 0, 9], [90, 63, 36, 63, 90], [27, 27, 72, 54, 90], [18, 72, 45, 36, 81], [72, 18, 54, 9, 90], [54, 54, 81, 63, 36], [27, 90, 63, 90, 63], [0, 81, 54, 0, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #373 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 4, 2, 2, 8], [7, 7, 3, 6, 8, 7]]
scalar = 5
expected = [[35, 40, 20, 10, 10, 40], [35, 35, 15, 30, 40, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #374 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 5, 7, 7, 0, 8, 2], [0, 7, 2, 10, 3, 10, 1, 0], [2, 8, 1, 8, 2, 1, 9, 4], [2, 9, 8, 3, 10, 6, 8, 4], [10, 4, 8, 4, 6, 5, 0, 6], [2, 7, 5, 0, 10, 6, 2, 6], [2, 4, 10, 5, 3, 8, 9, 2], [3, 8, 9, 9, 4, 3, 3, 2]]
scalar = 2
expected = [[12, 16, 10, 14, 14, 0, 16, 4], [0, 14, 4, 20, 6, 20, 2, 0], [4, 16, 2, 16, 4, 2, 18, 8], [4, 18, 16, 6, 20, 12, 16, 8], [20, 8, 16, 8, 12, 10, 0, 12], [4, 14, 10, 0, 20, 12, 4, 12], [4, 8, 20, 10, 6, 16, 18, 4], [6, 16, 18, 18, 8, 6, 6, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #375 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 7, 1, 9], [4, 8, 1, 1, 6], [9, 9, 0, 7, 4], [0, 6, 0, 3, 6], [2, 9, 1, 9, 5], [9, 10, 10, 8, 5], [10, 0, 2, 4, 10], [7, 3, 6, 2, 5]]
scalar = 10
expected = [[20, 100, 70, 10, 90], [40, 80, 10, 10, 60], [90, 90, 0, 70, 40], [0, 60, 0, 30, 60], [20, 90, 10, 90, 50], [90, 100, 100, 80, 50], [100, 0, 20, 40, 100], [70, 30, 60, 20, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #376 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 1, 1, 4, 7, 6, 4, 8, 0], [3, 3, 9, 5, 7, 4, 7, 2, 6, 8], [0, 6, 8, 4, 0, 8, 7, 9, 5, 4]]
scalar = 7
expected = [[56, 21, 7, 7, 28, 49, 42, 28, 56, 0], [21, 21, 63, 35, 49, 28, 49, 14, 42, 56], [0, 42, 56, 28, 0, 56, 49, 63, 35, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #377 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 4, 5, 4, 5, 5, 10, 1], [1, 2, 10, 2, 5, 10, 2, 9, 2]]
scalar = 9
expected = [[45, 90, 36, 45, 36, 45, 45, 90, 9], [9, 18, 90, 18, 45, 90, 18, 81, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #378 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [3], [8]]
scalar = 3
expected = [[9], [9], [24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #379 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5, 4, 7, 7, 1, 9, 5], [7, 10, 5, 1, 7, 7, 1, 6], [4, 1, 6, 4, 1, 9, 3, 4], [3, 7, 5, 9, 8, 10, 6, 2]]
scalar = 5
expected = [[10, 25, 20, 35, 35, 5, 45, 25], [35, 50, 25, 5, 35, 35, 5, 30], [20, 5, 30, 20, 5, 45, 15, 20], [15, 35, 25, 45, 40, 50, 30, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #380 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 3, 7, 3, 6, 10, 3, 6, 0], [4, 7, 9, 5, 5, 6, 10, 3, 0, 10], [1, 9, 2, 1, 6, 3, 7, 2, 9, 3], [9, 10, 8, 4, 7, 7, 8, 1, 8, 1], [2, 10, 7, 4, 2, 10, 3, 1, 3, 2], [3, 4, 1, 2, 10, 6, 1, 6, 8, 9], [9, 0, 5, 8, 6, 4, 8, 7, 1, 1]]
scalar = 10
expected = [[50, 20, 30, 70, 30, 60, 100, 30, 60, 0], [40, 70, 90, 50, 50, 60, 100, 30, 0, 100], [10, 90, 20, 10, 60, 30, 70, 20, 90, 30], [90, 100, 80, 40, 70, 70, 80, 10, 80, 10], [20, 100, 70, 40, 20, 100, 30, 10, 30, 20], [30, 40, 10, 20, 100, 60, 10, 60, 80, 90], [90, 0, 50, 80, 60, 40, 80, 70, 10, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #381 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 7, 5, 5, 1, 8, 0], [5, 2, 0, 7, 9, 0, 0, 9], [1, 5, 5, 8, 0, 5, 1, 10], [3, 3, 0, 0, 10, 4, 2, 7]]
scalar = 5
expected = [[0, 0, 35, 25, 25, 5, 40, 0], [25, 10, 0, 35, 45, 0, 0, 45], [5, 25, 25, 40, 0, 25, 5, 50], [15, 15, 0, 0, 50, 20, 10, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #382 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 2], [1, 2, 2], [2, 1, 3]]
scalar = 1
expected = [[6, 0, 2], [1, 2, 2], [2, 1, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #383 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 4, 0], [2, 5, 7, 2]]
scalar = 4
expected = [[28, 36, 16, 0], [8, 20, 28, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #384 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 1], [8, 8, 3], [0, 3, 1], [4, 7, 4]]
scalar = 4
expected = [[28, 20, 4], [32, 32, 12], [0, 12, 4], [16, 28, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #385 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4], [10, 8], [5, 9], [7, 2], [8, 7], [4, 5], [6, 8], [8, 0]]
scalar = 1
expected = [[3, 4], [10, 8], [5, 9], [7, 2], [8, 7], [4, 5], [6, 8], [8, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #386 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 8, 10, 6, 6, 10], [1, 6, 1, 10, 1, 4, 9], [1, 0, 1, 9, 5, 7, 3]]
scalar = 5
expected = [[0, 50, 40, 50, 30, 30, 50], [5, 30, 5, 50, 5, 20, 45], [5, 0, 5, 45, 25, 35, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #387 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2, 8, 1, 9, 5, 2, 6, 8, 4], [7, 6, 0, 6, 7, 3, 10, 9, 1, 7], [8, 6, 6, 7, 7, 1, 3, 6, 7, 10], [5, 8, 9, 8, 9, 6, 4, 0, 5, 7], [1, 4, 1, 10, 0, 0, 0, 10, 9, 0], [0, 5, 1, 0, 7, 9, 9, 4, 5, 0], [5, 6, 1, 5, 9, 4, 1, 5, 1, 6], [10, 9, 7, 0, 5, 10, 8, 2, 1, 7]]
scalar = 3
expected = [[18, 6, 24, 3, 27, 15, 6, 18, 24, 12], [21, 18, 0, 18, 21, 9, 30, 27, 3, 21], [24, 18, 18, 21, 21, 3, 9, 18, 21, 30], [15, 24, 27, 24, 27, 18, 12, 0, 15, 21], [3, 12, 3, 30, 0, 0, 0, 30, 27, 0], [0, 15, 3, 0, 21, 27, 27, 12, 15, 0], [15, 18, 3, 15, 27, 12, 3, 15, 3, 18], [30, 27, 21, 0, 15, 30, 24, 6, 3, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #388 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 0], [1, 8, 6], [8, 9, 8], [2, 0, 9], [10, 0, 3], [6, 9, 5], [5, 8, 9]]
scalar = 7
expected = [[35, 35, 0], [7, 56, 42], [56, 63, 56], [14, 0, 63], [70, 0, 21], [42, 63, 35], [35, 56, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #389 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 10, 10, 5, 0, 10, 3], [2, 0, 1, 2, 3, 2, 10, 3], [2, 4, 2, 4, 2, 4, 2, 10], [8, 2, 9, 6, 0, 9, 10, 3], [7, 0, 3, 6, 1, 3, 1, 5], [2, 0, 10, 1, 5, 1, 1, 3], [3, 4, 5, 9, 10, 1, 7, 4], [6, 5, 10, 8, 5, 1, 2, 2], [5, 0, 0, 7, 1, 0, 8, 10], [10, 2, 4, 5, 5, 0, 2, 0]]
scalar = 1
expected = [[10, 8, 10, 10, 5, 0, 10, 3], [2, 0, 1, 2, 3, 2, 10, 3], [2, 4, 2, 4, 2, 4, 2, 10], [8, 2, 9, 6, 0, 9, 10, 3], [7, 0, 3, 6, 1, 3, 1, 5], [2, 0, 10, 1, 5, 1, 1, 3], [3, 4, 5, 9, 10, 1, 7, 4], [6, 5, 10, 8, 5, 1, 2, 2], [5, 0, 0, 7, 1, 0, 8, 10], [10, 2, 4, 5, 5, 0, 2, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #390 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 5, 10]]
scalar = 8
expected = [[0, 64, 40, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #391 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 6, 3, 10, 9, 3, 7, 2, 4], [6, 5, 4, 9, 5, 9, 4, 6, 2], [5, 7, 9, 0, 1, 6, 6, 6, 3], [4, 6, 0, 4, 2, 9, 3, 2, 4], [2, 1, 4, 6, 1, 3, 9, 10, 0], [9, 7, 1, 2, 1, 3, 9, 0, 5], [9, 0, 7, 9, 2, 10, 2, 3, 2]]
scalar = 9
expected = [[18, 54, 27, 90, 81, 27, 63, 18, 36], [54, 45, 36, 81, 45, 81, 36, 54, 18], [45, 63, 81, 0, 9, 54, 54, 54, 27], [36, 54, 0, 36, 18, 81, 27, 18, 36], [18, 9, 36, 54, 9, 27, 81, 90, 0], [81, 63, 9, 18, 9, 27, 81, 0, 45], [81, 0, 63, 81, 18, 90, 18, 27, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #392 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 3, 2, 1, 5, 6], [2, 1, 6, 9, 3, 1, 6], [9, 5, 1, 3, 9, 0, 2], [3, 3, 9, 4, 4, 9, 1], [6, 6, 8, 1, 3, 4, 8], [7, 6, 7, 0, 3, 8, 10], [5, 4, 0, 1, 2, 1, 5], [4, 8, 10, 4, 5, 8, 10]]
scalar = 5
expected = [[35, 45, 15, 10, 5, 25, 30], [10, 5, 30, 45, 15, 5, 30], [45, 25, 5, 15, 45, 0, 10], [15, 15, 45, 20, 20, 45, 5], [30, 30, 40, 5, 15, 20, 40], [35, 30, 35, 0, 15, 40, 50], [25, 20, 0, 5, 10, 5, 25], [20, 40, 50, 20, 25, 40, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #393 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 3, 3, 9, 2, 6], [10, 3, 3, 1, 5, 1, 5], [0, 2, 0, 10, 9, 1, 4], [7, 7, 2, 6, 9, 1, 6], [7, 5, 4, 10, 2, 4, 7], [7, 3, 0, 9, 10, 1, 0], [4, 7, 2, 5, 10, 2, 9], [7, 5, 0, 8, 6, 9, 1]]
scalar = 2
expected = [[18, 10, 6, 6, 18, 4, 12], [20, 6, 6, 2, 10, 2, 10], [0, 4, 0, 20, 18, 2, 8], [14, 14, 4, 12, 18, 2, 12], [14, 10, 8, 20, 4, 8, 14], [14, 6, 0, 18, 20, 2, 0], [8, 14, 4, 10, 20, 4, 18], [14, 10, 0, 16, 12, 18, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #394 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 10, 3, 5, 4, 4, 6, 3], [8, 8, 4, 0, 4, 0, 3, 9, 7]]
scalar = 7
expected = [[28, 21, 70, 21, 35, 28, 28, 42, 21], [56, 56, 28, 0, 28, 0, 21, 63, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #395 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 1, 6, 10, 2], [9, 10, 8, 5, 10, 9], [9, 6, 9, 5, 7, 0], [10, 9, 8, 7, 7, 5], [5, 5, 9, 8, 7, 0], [1, 7, 4, 6, 5, 7], [10, 4, 10, 4, 2, 1], [2, 5, 5, 4, 10, 4]]
scalar = 7
expected = [[49, 7, 7, 42, 70, 14], [63, 70, 56, 35, 70, 63], [63, 42, 63, 35, 49, 0], [70, 63, 56, 49, 49, 35], [35, 35, 63, 56, 49, 0], [7, 49, 28, 42, 35, 49], [70, 28, 70, 28, 14, 7], [14, 35, 35, 28, 70, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #396 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3], [4, 8], [4, 6], [0, 5], [3, 4], [2, 2], [6, 9], [5, 3], [6, 4]]
scalar = 6
expected = [[18, 18], [24, 48], [24, 36], [0, 30], [18, 24], [12, 12], [36, 54], [30, 18], [36, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #397 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 2, 9, 10, 0, 2], [10, 8, 1, 6, 5, 5, 5], [7, 2, 7, 10, 3, 6, 9], [5, 10, 0, 9, 0, 4, 0]]
scalar = 4
expected = [[24, 32, 8, 36, 40, 0, 8], [40, 32, 4, 24, 20, 20, 20], [28, 8, 28, 40, 12, 24, 36], [20, 40, 0, 36, 0, 16, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #398 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 3], [6, 0, 6], [10, 3, 4], [10, 4, 9], [0, 5, 3], [8, 3, 1], [3, 9, 8]]
scalar = 1
expected = [[4, 7, 3], [6, 0, 6], [10, 3, 4], [10, 4, 9], [0, 5, 3], [8, 3, 1], [3, 9, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #399 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 1, 0, 8, 8], [5, 0, 8, 6, 4, 9], [5, 2, 8, 2, 7, 2], [5, 8, 6, 4, 4, 7], [0, 8, 2, 2, 5, 7], [9, 5, 0, 5, 1, 0]]
scalar = 10
expected = [[100, 80, 10, 0, 80, 80], [50, 0, 80, 60, 40, 90], [50, 20, 80, 20, 70, 20], [50, 80, 60, 40, 40, 70], [0, 80, 20, 20, 50, 70], [90, 50, 0, 50, 10, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #400 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8, 3, 3, 10, 6, 3, 7], [4, 6, 4, 2, 0, 2, 9, 3], [3, 10, 1, 2, 6, 5, 2, 2], [4, 2, 2, 10, 4, 7, 9, 7], [1, 9, 6, 9, 5, 5, 1, 3], [2, 0, 0, 8, 5, 6, 5, 7], [5, 4, 0, 6, 6, 0, 2, 9]]
scalar = 6
expected = [[48, 48, 18, 18, 60, 36, 18, 42], [24, 36, 24, 12, 0, 12, 54, 18], [18, 60, 6, 12, 36, 30, 12, 12], [24, 12, 12, 60, 24, 42, 54, 42], [6, 54, 36, 54, 30, 30, 6, 18], [12, 0, 0, 48, 30, 36, 30, 42], [30, 24, 0, 36, 36, 0, 12, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #401 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 6, 5, 6, 9, 8, 5, 8, 3], [1, 4, 7, 5, 5, 9, 4, 0, 3, 1], [4, 0, 1, 8, 7, 7, 7, 5, 8, 7], [10, 7, 4, 2, 4, 7, 7, 3, 8, 5], [3, 2, 2, 3, 0, 4, 7, 1, 3, 3], [9, 10, 5, 10, 10, 9, 0, 4, 8, 7], [1, 10, 0, 4, 2, 0, 6, 9, 8, 10], [6, 1, 0, 5, 1, 2, 10, 9, 10, 4], [5, 9, 0, 6, 3, 10, 6, 7, 4, 8], [3, 9, 0, 1, 7, 4, 0, 4, 1, 9]]
scalar = 6
expected = [[36, 6, 36, 30, 36, 54, 48, 30, 48, 18], [6, 24, 42, 30, 30, 54, 24, 0, 18, 6], [24, 0, 6, 48, 42, 42, 42, 30, 48, 42], [60, 42, 24, 12, 24, 42, 42, 18, 48, 30], [18, 12, 12, 18, 0, 24, 42, 6, 18, 18], [54, 60, 30, 60, 60, 54, 0, 24, 48, 42], [6, 60, 0, 24, 12, 0, 36, 54, 48, 60], [36, 6, 0, 30, 6, 12, 60, 54, 60, 24], [30, 54, 0, 36, 18, 60, 36, 42, 24, 48], [18, 54, 0, 6, 42, 24, 0, 24, 6, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #402 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 0, 4, 2, 7, 8, 0, 5], [7, 9, 8, 5, 4, 6, 8, 5], [0, 10, 0, 10, 2, 3, 8, 1]]
scalar = 9
expected = [[18, 0, 36, 18, 63, 72, 0, 45], [63, 81, 72, 45, 36, 54, 72, 45], [0, 90, 0, 90, 18, 27, 72, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #403 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [4], [5], [0], [4], [6], [3], [0], [0], [7]]
scalar = 5
expected = [[20], [20], [25], [0], [20], [30], [15], [0], [0], [35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #404 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 1], [10, 1, 6], [7, 5, 2], [10, 3, 4], [7, 6, 5], [0, 8, 1], [1, 4, 1], [1, 3, 4], [4, 9, 3], [6, 0, 9]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #405 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 0, 0, 3, 7, 4, 0], [1, 1, 8, 0, 5, 7, 4, 7], [9, 2, 1, 4, 9, 6, 2, 7], [9, 8, 8, 6, 10, 1, 6, 2], [7, 9, 7, 5, 4, 10, 4, 1]]
scalar = 3
expected = [[3, 3, 0, 0, 9, 21, 12, 0], [3, 3, 24, 0, 15, 21, 12, 21], [27, 6, 3, 12, 27, 18, 6, 21], [27, 24, 24, 18, 30, 3, 18, 6], [21, 27, 21, 15, 12, 30, 12, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #406 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 8, 4, 1, 9, 2]]
scalar = 6
expected = [[54, 54, 48, 24, 6, 54, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #407 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 1, 9, 5], [5, 10, 0, 0, 8], [7, 5, 8, 6, 3], [10, 3, 2, 6, 6], [6, 5, 3, 3, 4], [5, 9, 5, 9, 7], [8, 10, 4, 7, 6], [8, 2, 3, 4, 8], [0, 1, 5, 1, 9], [4, 9, 1, 5, 1]]
scalar = 10
expected = [[80, 70, 10, 90, 50], [50, 100, 0, 0, 80], [70, 50, 80, 60, 30], [100, 30, 20, 60, 60], [60, 50, 30, 30, 40], [50, 90, 50, 90, 70], [80, 100, 40, 70, 60], [80, 20, 30, 40, 80], [0, 10, 50, 10, 90], [40, 90, 10, 50, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #408 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [7]]
scalar = 3
expected = [[15], [21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #409 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 3], [10, 7, 9], [8, 6, 0], [9, 3, 2], [1, 4, 10], [1, 2, 0]]
scalar = 3
expected = [[15, 15, 9], [30, 21, 27], [24, 18, 0], [27, 9, 6], [3, 12, 30], [3, 6, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #410 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [4], [10], [9]]
scalar = 9
expected = [[27], [36], [90], [81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #411 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 0, 3, 4, 6, 2, 9], [10, 8, 7, 8, 4, 7, 1, 7], [7, 7, 4, 8, 5, 2, 4, 5], [5, 10, 8, 10, 5, 1, 6, 7], [8, 8, 0, 2, 4, 0, 7, 5], [10, 3, 3, 8, 1, 3, 4, 3], [9, 8, 9, 5, 5, 3, 0, 3], [9, 4, 3, 9, 5, 9, 2, 8], [1, 7, 2, 7, 3, 10, 6, 2]]
scalar = 3
expected = [[27, 21, 0, 9, 12, 18, 6, 27], [30, 24, 21, 24, 12, 21, 3, 21], [21, 21, 12, 24, 15, 6, 12, 15], [15, 30, 24, 30, 15, 3, 18, 21], [24, 24, 0, 6, 12, 0, 21, 15], [30, 9, 9, 24, 3, 9, 12, 9], [27, 24, 27, 15, 15, 9, 0, 9], [27, 12, 9, 27, 15, 27, 6, 24], [3, 21, 6, 21, 9, 30, 18, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #412 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 9, 6, 4, 7, 8, 9, 8], [2, 3, 4, 4, 8, 8, 5, 3, 0], [10, 8, 10, 10, 8, 5, 5, 8, 2], [0, 3, 1, 4, 8, 6, 7, 3, 8], [9, 10, 8, 7, 6, 0, 3, 9, 5], [4, 0, 4, 7, 7, 6, 10, 7, 0], [5, 2, 2, 0, 3, 7, 2, 8, 5], [10, 5, 3, 5, 0, 2, 1, 10, 4], [5, 0, 2, 3, 9, 5, 9, 9, 2], [9, 8, 8, 4, 6, 0, 2, 9, 5]]
scalar = 4
expected = [[20, 28, 36, 24, 16, 28, 32, 36, 32], [8, 12, 16, 16, 32, 32, 20, 12, 0], [40, 32, 40, 40, 32, 20, 20, 32, 8], [0, 12, 4, 16, 32, 24, 28, 12, 32], [36, 40, 32, 28, 24, 0, 12, 36, 20], [16, 0, 16, 28, 28, 24, 40, 28, 0], [20, 8, 8, 0, 12, 28, 8, 32, 20], [40, 20, 12, 20, 0, 8, 4, 40, 16], [20, 0, 8, 12, 36, 20, 36, 36, 8], [36, 32, 32, 16, 24, 0, 8, 36, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #413 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 1, 7, 5, 8, 2, 2], [6, 2, 2, 7, 2, 10, 10, 1], [2, 1, 5, 0, 10, 1, 5, 10], [5, 0, 6, 9, 6, 3, 7, 0]]
scalar = 6
expected = [[6, 60, 6, 42, 30, 48, 12, 12], [36, 12, 12, 42, 12, 60, 60, 6], [12, 6, 30, 0, 60, 6, 30, 60], [30, 0, 36, 54, 36, 18, 42, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #414 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 9, 9, 6, 3], [5, 8, 8, 5, 3, 1], [4, 7, 4, 6, 2, 0], [10, 10, 10, 9, 5, 9], [6, 2, 9, 9, 0, 2], [8, 4, 0, 7, 4, 6], [10, 2, 8, 3, 5, 6]]
scalar = 3
expected = [[12, 15, 27, 27, 18, 9], [15, 24, 24, 15, 9, 3], [12, 21, 12, 18, 6, 0], [30, 30, 30, 27, 15, 27], [18, 6, 27, 27, 0, 6], [24, 12, 0, 21, 12, 18], [30, 6, 24, 9, 15, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #415 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1], [10, 4], [1, 5], [7, 4], [0, 5], [6, 9], [2, 5], [2, 9], [8, 6], [8, 7]]
scalar = 5
expected = [[10, 5], [50, 20], [5, 25], [35, 20], [0, 25], [30, 45], [10, 25], [10, 45], [40, 30], [40, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #416 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 8, 9, 1, 4, 2, 2], [10, 5, 0, 4, 7, 1, 2, 8], [9, 10, 9, 5, 6, 6, 9, 3], [8, 2, 6, 1, 7, 2, 8, 9], [2, 6, 7, 1, 6, 7, 4, 2], [4, 9, 7, 2, 9, 8, 4, 9], [1, 10, 3, 0, 9, 5, 10, 7], [6, 9, 1, 10, 7, 6, 8, 8]]
scalar = 5
expected = [[50, 20, 40, 45, 5, 20, 10, 10], [50, 25, 0, 20, 35, 5, 10, 40], [45, 50, 45, 25, 30, 30, 45, 15], [40, 10, 30, 5, 35, 10, 40, 45], [10, 30, 35, 5, 30, 35, 20, 10], [20, 45, 35, 10, 45, 40, 20, 45], [5, 50, 15, 0, 45, 25, 50, 35], [30, 45, 5, 50, 35, 30, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #417 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 8, 7, 10, 6, 4], [0, 0, 4, 1, 1, 7, 0], [3, 3, 10, 4, 0, 7, 6], [6, 1, 9, 9, 6, 5, 10], [3, 7, 3, 4, 4, 3, 0], [7, 10, 2, 5, 10, 8, 7], [0, 3, 8, 3, 1, 5, 2], [9, 9, 5, 7, 2, 6, 4], [1, 2, 1, 0, 1, 0, 3], [0, 6, 1, 4, 4, 6, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #418 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10], [2, 8], [10, 4]]
scalar = 3
expected = [[27, 30], [6, 24], [30, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #419 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6]]
scalar = 3
expected = [[18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #420 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 10, 4, 5, 9, 4], [2, 9, 7, 7, 4, 0], [6, 5, 10, 3, 9, 2], [4, 5, 1, 5, 1, 4]]
scalar = 8
expected = [[80, 80, 32, 40, 72, 32], [16, 72, 56, 56, 32, 0], [48, 40, 80, 24, 72, 16], [32, 40, 8, 40, 8, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #421 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 9, 2, 4, 3, 10, 2], [2, 5, 3, 2, 0, 6, 1, 7], [6, 9, 6, 2, 5, 6, 4, 9], [3, 0, 8, 1, 5, 6, 6, 2], [6, 1, 4, 1, 8, 10, 8, 0], [3, 0, 10, 6, 3, 4, 3, 1]]
scalar = 1
expected = [[4, 3, 9, 2, 4, 3, 10, 2], [2, 5, 3, 2, 0, 6, 1, 7], [6, 9, 6, 2, 5, 6, 4, 9], [3, 0, 8, 1, 5, 6, 6, 2], [6, 1, 4, 1, 8, 10, 8, 0], [3, 0, 10, 6, 3, 4, 3, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #422 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 2], [4, 8, 1], [2, 2, 8], [3, 9, 0], [2, 2, 4], [1, 4, 4], [5, 0, 0]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #423 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 8, 9, 4, 2, 8]]
scalar = 10
expected = [[10, 10, 80, 90, 40, 20, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #424 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 10, 4, 5, 7, 2, 9, 8, 4, 3], [6, 3, 7, 8, 0, 0, 0, 5, 4, 0]]
scalar = 6
expected = [[0, 60, 24, 30, 42, 12, 54, 48, 24, 18], [36, 18, 42, 48, 0, 0, 0, 30, 24, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #425 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 4, 5, 7, 3, 5, 7], [6, 8, 8, 9, 6, 5, 4, 4], [9, 9, 5, 8, 5, 8, 9, 3], [2, 5, 9, 10, 0, 9, 5, 0], [10, 6, 4, 7, 2, 1, 4, 3], [3, 3, 1, 9, 4, 1, 0, 6], [1, 3, 9, 10, 9, 0, 8, 5], [7, 0, 0, 8, 1, 5, 0, 0]]
scalar = 10
expected = [[20, 10, 40, 50, 70, 30, 50, 70], [60, 80, 80, 90, 60, 50, 40, 40], [90, 90, 50, 80, 50, 80, 90, 30], [20, 50, 90, 100, 0, 90, 50, 0], [100, 60, 40, 70, 20, 10, 40, 30], [30, 30, 10, 90, 40, 10, 0, 60], [10, 30, 90, 100, 90, 0, 80, 50], [70, 0, 0, 80, 10, 50, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #426 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 4, 2, 6, 9, 0, 0], [3, 4, 3, 2, 1, 5, 8], [5, 9, 8, 7, 10, 5, 9], [2, 2, 8, 7, 9, 4, 10], [9, 2, 9, 7, 3, 9, 1], [10, 8, 3, 7, 1, 5, 2], [2, 10, 5, 9, 1, 0, 2], [5, 0, 1, 6, 10, 3, 0], [6, 4, 10, 0, 7, 8, 6]]
scalar = 2
expected = [[18, 8, 4, 12, 18, 0, 0], [6, 8, 6, 4, 2, 10, 16], [10, 18, 16, 14, 20, 10, 18], [4, 4, 16, 14, 18, 8, 20], [18, 4, 18, 14, 6, 18, 2], [20, 16, 6, 14, 2, 10, 4], [4, 20, 10, 18, 2, 0, 4], [10, 0, 2, 12, 20, 6, 0], [12, 8, 20, 0, 14, 16, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #427 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0], [2, 8], [3, 9], [2, 5], [0, 3], [3, 7], [0, 9]]
scalar = 10
expected = [[10, 0], [20, 80], [30, 90], [20, 50], [0, 30], [30, 70], [0, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #428 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 0, 3, 6], [5, 8, 10, 8, 7]]
scalar = 5
expected = [[5, 15, 0, 15, 30], [25, 40, 50, 40, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #429 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 0, 7, 7, 1, 8], [7, 0, 9, 4, 5, 1, 8], [3, 5, 10, 9, 10, 10, 7]]
scalar = 5
expected = [[15, 45, 0, 35, 35, 5, 40], [35, 0, 45, 20, 25, 5, 40], [15, 25, 50, 45, 50, 50, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #430 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 7], [0, 6, 1], [0, 3, 6], [2, 3, 1]]
scalar = 10
expected = [[90, 90, 70], [0, 60, 10], [0, 30, 60], [20, 30, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #431 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 3, 10, 5, 3, 1], [9, 7, 8, 2, 2, 1, 7], [5, 3, 9, 0, 3, 3, 6], [6, 6, 6, 1, 1, 8, 10], [8, 9, 6, 5, 6, 2, 6], [3, 8, 4, 5, 7, 2, 5], [8, 6, 0, 10, 6, 5, 5], [0, 7, 8, 2, 2, 1, 0], [8, 6, 9, 9, 4, 9, 6], [1, 4, 1, 8, 6, 6, 4]]
scalar = 7
expected = [[21, 0, 21, 70, 35, 21, 7], [63, 49, 56, 14, 14, 7, 49], [35, 21, 63, 0, 21, 21, 42], [42, 42, 42, 7, 7, 56, 70], [56, 63, 42, 35, 42, 14, 42], [21, 56, 28, 35, 49, 14, 35], [56, 42, 0, 70, 42, 35, 35], [0, 49, 56, 14, 14, 7, 0], [56, 42, 63, 63, 28, 63, 42], [7, 28, 7, 56, 42, 42, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #432 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 9, 10, 5, 5, 3, 10], [6, 10, 6, 4, 6, 9, 6, 1], [10, 10, 1, 2, 10, 10, 7, 9], [5, 0, 2, 8, 2, 8, 1, 10], [2, 4, 4, 2, 5, 5, 5, 1], [3, 1, 7, 2, 9, 5, 9, 7], [6, 4, 9, 10, 8, 10, 9, 4], [6, 2, 0, 0, 9, 1, 7, 8], [8, 2, 7, 4, 8, 0, 1, 8], [9, 6, 0, 5, 8, 10, 3, 7]]
scalar = 2
expected = [[20, 16, 18, 20, 10, 10, 6, 20], [12, 20, 12, 8, 12, 18, 12, 2], [20, 20, 2, 4, 20, 20, 14, 18], [10, 0, 4, 16, 4, 16, 2, 20], [4, 8, 8, 4, 10, 10, 10, 2], [6, 2, 14, 4, 18, 10, 18, 14], [12, 8, 18, 20, 16, 20, 18, 8], [12, 4, 0, 0, 18, 2, 14, 16], [16, 4, 14, 8, 16, 0, 2, 16], [18, 12, 0, 10, 16, 20, 6, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #433 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 9, 2, 5, 1, 8, 1], [8, 5, 9, 2, 5, 10, 2, 7]]
scalar = 2
expected = [[8, 16, 18, 4, 10, 2, 16, 2], [16, 10, 18, 4, 10, 20, 4, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #434 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 0, 7, 0, 1, 7, 2, 2], [2, 4, 10, 7, 4, 10, 5, 9, 3], [2, 9, 10, 0, 10, 2, 5, 5, 0], [5, 10, 10, 3, 10, 4, 10, 8, 8], [4, 1, 10, 3, 10, 1, 1, 8, 10], [8, 3, 4, 3, 6, 0, 7, 3, 9], [5, 10, 1, 9, 4, 10, 8, 7, 0]]
scalar = 9
expected = [[63, 0, 0, 63, 0, 9, 63, 18, 18], [18, 36, 90, 63, 36, 90, 45, 81, 27], [18, 81, 90, 0, 90, 18, 45, 45, 0], [45, 90, 90, 27, 90, 36, 90, 72, 72], [36, 9, 90, 27, 90, 9, 9, 72, 90], [72, 27, 36, 27, 54, 0, 63, 27, 81], [45, 90, 9, 81, 36, 90, 72, 63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #435 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 10, 2, 2, 6], [1, 9, 0, 1, 0, 9], [5, 0, 6, 5, 10, 1], [1, 2, 7, 2, 7, 2], [10, 5, 0, 10, 10, 0], [7, 10, 9, 7, 4, 1], [4, 2, 0, 10, 7, 6]]
scalar = 6
expected = [[24, 18, 60, 12, 12, 36], [6, 54, 0, 6, 0, 54], [30, 0, 36, 30, 60, 6], [6, 12, 42, 12, 42, 12], [60, 30, 0, 60, 60, 0], [42, 60, 54, 42, 24, 6], [24, 12, 0, 60, 42, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #436 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 0, 8, 4, 10], [4, 2, 10, 0, 3, 2], [3, 2, 9, 7, 0, 0], [7, 2, 8, 6, 0, 9], [9, 0, 10, 3, 4, 1], [10, 2, 2, 4, 5, 10], [8, 8, 2, 3, 5, 3], [7, 9, 6, 0, 10, 10], [4, 5, 3, 6, 8, 1], [1, 6, 8, 1, 8, 0]]
scalar = 5
expected = [[20, 35, 0, 40, 20, 50], [20, 10, 50, 0, 15, 10], [15, 10, 45, 35, 0, 0], [35, 10, 40, 30, 0, 45], [45, 0, 50, 15, 20, 5], [50, 10, 10, 20, 25, 50], [40, 40, 10, 15, 25, 15], [35, 45, 30, 0, 50, 50], [20, 25, 15, 30, 40, 5], [5, 30, 40, 5, 40, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #437 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6, 2, 2, 1], [1, 1, 10, 4, 10], [4, 7, 2, 2, 10], [5, 6, 9, 6, 10], [6, 7, 3, 7, 0]]
scalar = 7
expected = [[63, 42, 14, 14, 7], [7, 7, 70, 28, 70], [28, 49, 14, 14, 70], [35, 42, 63, 42, 70], [42, 49, 21, 49, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #438 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 6, 8, 10], [10, 6, 0, 9], [4, 9, 8, 4], [7, 8, 2, 4], [3, 6, 9, 10]]
scalar = 4
expected = [[28, 24, 32, 40], [40, 24, 0, 36], [16, 36, 32, 16], [28, 32, 8, 16], [12, 24, 36, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #439 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5, 3, 7, 3, 1, 2, 3], [8, 1, 6, 1, 2, 9, 1, 5], [3, 3, 10, 6, 0, 7, 0, 0], [7, 1, 9, 3, 3, 2, 6, 8], [5, 8, 6, 0, 4, 0, 10, 9], [4, 3, 6, 2, 4, 1, 0, 6], [8, 3, 6, 0, 4, 3, 9, 4], [4, 1, 1, 1, 8, 1, 1, 5], [1, 0, 7, 5, 7, 10, 10, 7]]
scalar = 7
expected = [[14, 35, 21, 49, 21, 7, 14, 21], [56, 7, 42, 7, 14, 63, 7, 35], [21, 21, 70, 42, 0, 49, 0, 0], [49, 7, 63, 21, 21, 14, 42, 56], [35, 56, 42, 0, 28, 0, 70, 63], [28, 21, 42, 14, 28, 7, 0, 42], [56, 21, 42, 0, 28, 21, 63, 28], [28, 7, 7, 7, 56, 7, 7, 35], [7, 0, 49, 35, 49, 70, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #440 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 0, 10, 6, 0, 0, 9], [2, 6, 2, 8, 6, 5, 7, 7], [9, 2, 3, 9, 3, 6, 2, 10], [8, 2, 2, 7, 10, 7, 3, 7], [7, 6, 5, 10, 10, 4, 0, 0], [5, 10, 6, 0, 8, 0, 4, 2], [9, 0, 5, 5, 4, 10, 9, 3], [9, 7, 0, 6, 9, 2, 4, 5], [8, 1, 2, 7, 5, 7, 8, 2], [9, 6, 0, 9, 7, 1, 4, 5]]
scalar = 1
expected = [[7, 2, 0, 10, 6, 0, 0, 9], [2, 6, 2, 8, 6, 5, 7, 7], [9, 2, 3, 9, 3, 6, 2, 10], [8, 2, 2, 7, 10, 7, 3, 7], [7, 6, 5, 10, 10, 4, 0, 0], [5, 10, 6, 0, 8, 0, 4, 2], [9, 0, 5, 5, 4, 10, 9, 3], [9, 7, 0, 6, 9, 2, 4, 5], [8, 1, 2, 7, 5, 7, 8, 2], [9, 6, 0, 9, 7, 1, 4, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #441 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 4, 3, 10], [6, 3, 8, 1, 7], [8, 10, 3, 10, 3], [9, 2, 9, 0, 6], [10, 0, 3, 0, 9], [6, 3, 10, 4, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #442 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 10, 8, 6, 5, 0], [0, 6, 9, 6, 7, 3, 10], [4, 1, 2, 10, 6, 0, 6], [8, 7, 3, 8, 10, 7, 9], [9, 10, 2, 10, 10, 6, 8]]
scalar = 4
expected = [[20, 0, 40, 32, 24, 20, 0], [0, 24, 36, 24, 28, 12, 40], [16, 4, 8, 40, 24, 0, 24], [32, 28, 12, 32, 40, 28, 36], [36, 40, 8, 40, 40, 24, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #443 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 4, 3, 1], [6, 10, 3, 8, 1], [0, 1, 6, 5, 10], [7, 7, 2, 9, 0], [6, 10, 10, 8, 8], [5, 8, 10, 2, 7], [0, 2, 7, 1, 4], [5, 9, 8, 9, 5], [0, 9, 9, 1, 2]]
scalar = 3
expected = [[9, 12, 12, 9, 3], [18, 30, 9, 24, 3], [0, 3, 18, 15, 30], [21, 21, 6, 27, 0], [18, 30, 30, 24, 24], [15, 24, 30, 6, 21], [0, 6, 21, 3, 12], [15, 27, 24, 27, 15], [0, 27, 27, 3, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #444 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [7], [8], [2], [5], [3]]
scalar = 10
expected = [[30], [70], [80], [20], [50], [30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #445 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 1, 7, 8, 10, 2, 9, 3, 3], [5, 0, 1, 10, 1, 8, 3, 7, 5, 8], [7, 9, 8, 7, 10, 1, 9, 10, 3, 4], [4, 1, 9, 8, 7, 4, 7, 5, 5, 0], [9, 2, 1, 1, 5, 9, 5, 4, 2, 5], [4, 5, 9, 1, 0, 3, 10, 0, 6, 7], [9, 6, 6, 8, 1, 1, 5, 0, 9, 5]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #446 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 4, 5, 2, 1], [6, 0, 4, 10, 4, 8], [4, 10, 9, 9, 2, 6], [7, 2, 10, 3, 3, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #447 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 8, 6, 4], [5, 10, 7, 4, 5], [9, 1, 0, 0, 0], [1, 0, 10, 1, 10], [0, 6, 3, 3, 7], [1, 7, 9, 3, 5], [1, 5, 8, 6, 9], [4, 1, 0, 2, 10], [2, 7, 2, 6, 7]]
scalar = 8
expected = [[40, 64, 64, 48, 32], [40, 80, 56, 32, 40], [72, 8, 0, 0, 0], [8, 0, 80, 8, 80], [0, 48, 24, 24, 56], [8, 56, 72, 24, 40], [8, 40, 64, 48, 72], [32, 8, 0, 16, 80], [16, 56, 16, 48, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #448 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 2, 0, 4, 0, 10, 6, 3, 9, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #449 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 7, 9, 2, 7, 2, 7], [1, 5, 10, 5, 4, 0, 8, 10], [7, 6, 10, 8, 0, 10, 3, 10], [3, 0, 3, 9, 2, 10, 7, 7]]
scalar = 3
expected = [[12, 0, 21, 27, 6, 21, 6, 21], [3, 15, 30, 15, 12, 0, 24, 30], [21, 18, 30, 24, 0, 30, 9, 30], [9, 0, 9, 27, 6, 30, 21, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #450 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 1, 4, 9, 1], [4, 5, 6, 9, 1, 0], [8, 2, 8, 7, 9, 5], [8, 9, 8, 1, 2, 2], [3, 3, 1, 8, 6, 2], [2, 9, 0, 9, 2, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #451 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 4, 6, 4, 4], [0, 2, 5, 4, 1], [4, 3, 1, 10, 5], [8, 9, 10, 10, 1], [3, 6, 1, 10, 2], [4, 8, 3, 10, 10], [7, 5, 2, 4, 5], [5, 7, 7, 7, 2], [5, 5, 7, 6, 10], [7, 0, 6, 6, 8]]
scalar = 10
expected = [[70, 40, 60, 40, 40], [0, 20, 50, 40, 10], [40, 30, 10, 100, 50], [80, 90, 100, 100, 10], [30, 60, 10, 100, 20], [40, 80, 30, 100, 100], [70, 50, 20, 40, 50], [50, 70, 70, 70, 20], [50, 50, 70, 60, 100], [70, 0, 60, 60, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #452 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 8, 9, 10, 6, 3, 9, 0], [3, 9, 1, 5, 0, 4, 7, 6, 10], [9, 8, 10, 4, 5, 8, 1, 2, 6], [5, 7, 0, 3, 3, 9, 0, 8, 1], [6, 4, 4, 1, 4, 5, 5, 7, 6], [7, 0, 10, 2, 4, 3, 9, 7, 2], [3, 7, 8, 2, 6, 6, 9, 1, 6], [6, 10, 0, 5, 4, 4, 1, 5, 3], [3, 4, 2, 7, 0, 7, 4, 4, 9], [6, 6, 6, 1, 0, 5, 1, 1, 8]]
scalar = 3
expected = [[30, 15, 24, 27, 30, 18, 9, 27, 0], [9, 27, 3, 15, 0, 12, 21, 18, 30], [27, 24, 30, 12, 15, 24, 3, 6, 18], [15, 21, 0, 9, 9, 27, 0, 24, 3], [18, 12, 12, 3, 12, 15, 15, 21, 18], [21, 0, 30, 6, 12, 9, 27, 21, 6], [9, 21, 24, 6, 18, 18, 27, 3, 18], [18, 30, 0, 15, 12, 12, 3, 15, 9], [9, 12, 6, 21, 0, 21, 12, 12, 27], [18, 18, 18, 3, 0, 15, 3, 3, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #453 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 7, 7, 8, 8, 5, 3, 4], [3, 8, 0, 0, 7, 8, 6, 9, 8]]
scalar = 6
expected = [[36, 24, 42, 42, 48, 48, 30, 18, 24], [18, 48, 0, 0, 42, 48, 36, 54, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #454 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 6], [3, 3, 6]]
scalar = 8
expected = [[0, 48, 48], [24, 24, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #455 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 4, 6, 4, 9, 7, 1], [5, 0, 6, 5, 5, 3, 4, 5], [3, 5, 6, 3, 3, 5, 10, 6], [2, 7, 2, 4, 2, 6, 6, 5], [4, 1, 7, 8, 5, 8, 9, 8], [0, 5, 5, 3, 5, 6, 0, 7], [0, 9, 9, 3, 9, 3, 9, 9]]
scalar = 2
expected = [[14, 20, 8, 12, 8, 18, 14, 2], [10, 0, 12, 10, 10, 6, 8, 10], [6, 10, 12, 6, 6, 10, 20, 12], [4, 14, 4, 8, 4, 12, 12, 10], [8, 2, 14, 16, 10, 16, 18, 16], [0, 10, 10, 6, 10, 12, 0, 14], [0, 18, 18, 6, 18, 6, 18, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #456 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 3, 2, 2, 5, 8], [6, 9, 8, 9, 6, 6, 0], [5, 1, 4, 0, 0, 7, 0], [1, 3, 0, 9, 10, 2, 4]]
scalar = 5
expected = [[40, 35, 15, 10, 10, 25, 40], [30, 45, 40, 45, 30, 30, 0], [25, 5, 20, 0, 0, 35, 0], [5, 15, 0, 45, 50, 10, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #457 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 10, 4, 9], [7, 5, 1, 6, 8], [1, 10, 2, 8, 7], [6, 9, 5, 8, 5], [1, 4, 3, 1, 9], [1, 6, 9, 6, 0], [5, 3, 7, 10, 5]]
scalar = 5
expected = [[40, 45, 50, 20, 45], [35, 25, 5, 30, 40], [5, 50, 10, 40, 35], [30, 45, 25, 40, 25], [5, 20, 15, 5, 45], [5, 30, 45, 30, 0], [25, 15, 35, 50, 25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #458 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 7, 3, 7, 4, 7], [9, 4, 4, 7, 8, 10, 2], [6, 5, 5, 6, 8, 1, 4], [4, 5, 2, 2, 1, 3, 2], [3, 6, 7, 8, 3, 7, 4], [1, 5, 5, 10, 6, 2, 4], [3, 3, 9, 1, 8, 9, 8], [6, 2, 7, 6, 7, 2, 8]]
scalar = 8
expected = [[48, 40, 56, 24, 56, 32, 56], [72, 32, 32, 56, 64, 80, 16], [48, 40, 40, 48, 64, 8, 32], [32, 40, 16, 16, 8, 24, 16], [24, 48, 56, 64, 24, 56, 32], [8, 40, 40, 80, 48, 16, 32], [24, 24, 72, 8, 64, 72, 64], [48, 16, 56, 48, 56, 16, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #459 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [0], [4], [10], [4], [1], [8], [9], [10], [9]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #460 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 6, 8, 3, 2, 2, 8, 10], [0, 8, 10, 7, 8, 3, 10, 6, 2], [5, 5, 9, 10, 1, 3, 5, 2, 1], [0, 0, 8, 8, 1, 6, 4, 8, 7], [1, 4, 7, 5, 1, 1, 5, 8, 6], [8, 1, 4, 4, 10, 10, 8, 3, 9], [4, 6, 1, 0, 2, 7, 2, 9, 4]]
scalar = 9
expected = [[18, 72, 54, 72, 27, 18, 18, 72, 90], [0, 72, 90, 63, 72, 27, 90, 54, 18], [45, 45, 81, 90, 9, 27, 45, 18, 9], [0, 0, 72, 72, 9, 54, 36, 72, 63], [9, 36, 63, 45, 9, 9, 45, 72, 54], [72, 9, 36, 36, 90, 90, 72, 27, 81], [36, 54, 9, 0, 18, 63, 18, 81, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #461 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 4, 1], [8, 2, 2], [3, 5, 7], [0, 10, 2], [4, 5, 6], [5, 3, 9], [9, 2, 0]]
scalar = 8
expected = [[40, 32, 8], [64, 16, 16], [24, 40, 56], [0, 80, 16], [32, 40, 48], [40, 24, 72], [72, 16, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #462 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0], [0, 9], [0, 7]]
scalar = 6
expected = [[6, 0], [0, 54], [0, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #463 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [3], [5], [6], [6], [7], [10], [2], [3]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #464 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 3, 9, 8, 7], [2, 6, 3, 7, 8, 7], [1, 7, 0, 2, 2, 8], [5, 0, 1, 1, 1, 5], [7, 0, 1, 9, 4, 2], [8, 3, 2, 9, 1, 3], [2, 8, 0, 1, 5, 8], [3, 5, 0, 3, 10, 10], [2, 2, 4, 3, 10, 8]]
scalar = 10
expected = [[10, 100, 30, 90, 80, 70], [20, 60, 30, 70, 80, 70], [10, 70, 0, 20, 20, 80], [50, 0, 10, 10, 10, 50], [70, 0, 10, 90, 40, 20], [80, 30, 20, 90, 10, 30], [20, 80, 0, 10, 50, 80], [30, 50, 0, 30, 100, 100], [20, 20, 40, 30, 100, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #465 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 6, 10, 7], [5, 4, 5, 4, 7], [9, 0, 8, 5, 4], [1, 5, 10, 1, 9], [1, 1, 7, 2, 7], [1, 3, 0, 6, 1], [9, 10, 0, 7, 7]]
scalar = 1
expected = [[2, 8, 6, 10, 7], [5, 4, 5, 4, 7], [9, 0, 8, 5, 4], [1, 5, 10, 1, 9], [1, 1, 7, 2, 7], [1, 3, 0, 6, 1], [9, 10, 0, 7, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #466 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 8, 5], [6, 6, 5, 9], [4, 6, 9, 0], [3, 4, 1, 4], [3, 6, 9, 2], [7, 0, 7, 4], [5, 6, 3, 10], [6, 7, 5, 2]]
scalar = 10
expected = [[20, 80, 80, 50], [60, 60, 50, 90], [40, 60, 90, 0], [30, 40, 10, 40], [30, 60, 90, 20], [70, 0, 70, 40], [50, 60, 30, 100], [60, 70, 50, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #467 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 6, 3], [3, 8, 3, 4]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #468 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 6], [9, 3, 10], [3, 2, 4], [3, 9, 1], [4, 10, 1], [0, 3, 10], [10, 10, 0], [3, 8, 3], [10, 6, 4]]
scalar = 7
expected = [[28, 7, 42], [63, 21, 70], [21, 14, 28], [21, 63, 7], [28, 70, 7], [0, 21, 70], [70, 70, 0], [21, 56, 21], [70, 42, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #469 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1], [8, 5], [4, 7], [7, 6], [6, 3], [5, 10]]
scalar = 5
expected = [[25, 5], [40, 25], [20, 35], [35, 30], [30, 15], [25, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #470 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [2], [7], [9], [0], [10], [0]]
scalar = 7
expected = [[56], [14], [49], [63], [0], [70], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #471 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 0, 1, 6, 5, 0, 3, 0, 4], [9, 5, 9, 5, 7, 2, 7, 9, 1, 9], [2, 5, 10, 5, 10, 8, 10, 8, 0, 4], [0, 8, 5, 7, 8, 6, 9, 4, 9, 3]]
scalar = 6
expected = [[60, 30, 0, 6, 36, 30, 0, 18, 0, 24], [54, 30, 54, 30, 42, 12, 42, 54, 6, 54], [12, 30, 60, 30, 60, 48, 60, 48, 0, 24], [0, 48, 30, 42, 48, 36, 54, 24, 54, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #472 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 8, 6, 2], [4, 3, 7, 6, 10], [3, 8, 2, 3, 10], [2, 2, 6, 10, 0], [7, 4, 3, 7, 4], [6, 5, 8, 2, 7]]
scalar = 4
expected = [[28, 28, 32, 24, 8], [16, 12, 28, 24, 40], [12, 32, 8, 12, 40], [8, 8, 24, 40, 0], [28, 16, 12, 28, 16], [24, 20, 32, 8, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #473 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [10], [2], [9]]
scalar = 0
expected = [[0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #474 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 3, 6, 2], [0, 5, 5, 0, 7]]
scalar = 10
expected = [[80, 60, 30, 60, 20], [0, 50, 50, 0, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #475 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 4, 5], [4, 9, 10, 0], [4, 6, 5, 10], [3, 9, 3, 1], [8, 0, 6, 7], [3, 2, 4, 10], [5, 9, 7, 0], [2, 1, 10, 5], [0, 3, 2, 2], [8, 2, 0, 1]]
scalar = 7
expected = [[14, 21, 28, 35], [28, 63, 70, 0], [28, 42, 35, 70], [21, 63, 21, 7], [56, 0, 42, 49], [21, 14, 28, 70], [35, 63, 49, 0], [14, 7, 70, 35], [0, 21, 14, 14], [56, 14, 0, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #476 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7], [7, 7]]
scalar = 5
expected = [[10, 35], [35, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #477 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7, 9], [4, 5, 4], [2, 8, 4], [2, 10, 0], [3, 7, 1], [7, 10, 7], [2, 9, 1], [1, 6, 0]]
scalar = 3
expected = [[18, 21, 27], [12, 15, 12], [6, 24, 12], [6, 30, 0], [9, 21, 3], [21, 30, 21], [6, 27, 3], [3, 18, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #478 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [0], [7]]
scalar = 1
expected = [[2], [0], [7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #479 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 6, 2, 3, 6], [1, 6, 0, 1, 5, 7], [10, 1, 10, 5, 3, 8], [9, 8, 2, 4, 2, 6], [10, 9, 1, 4, 6, 3], [2, 1, 6, 9, 7, 0], [3, 5, 9, 9, 7, 3], [1, 3, 2, 4, 9, 4], [3, 2, 4, 1, 2, 5], [10, 0, 6, 8, 0, 7]]
scalar = 2
expected = [[8, 16, 12, 4, 6, 12], [2, 12, 0, 2, 10, 14], [20, 2, 20, 10, 6, 16], [18, 16, 4, 8, 4, 12], [20, 18, 2, 8, 12, 6], [4, 2, 12, 18, 14, 0], [6, 10, 18, 18, 14, 6], [2, 6, 4, 8, 18, 8], [6, 4, 8, 2, 4, 10], [20, 0, 12, 16, 0, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #480 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 2, 2], [0, 4, 3, 9], [8, 3, 5, 8], [2, 1, 4, 6], [8, 10, 10, 1], [6, 10, 9, 3]]
scalar = 4
expected = [[12, 12, 8, 8], [0, 16, 12, 36], [32, 12, 20, 32], [8, 4, 16, 24], [32, 40, 40, 4], [24, 40, 36, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #481 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 3, 10, 4], [8, 9, 4, 2, 2], [6, 2, 10, 10, 3]]
scalar = 6
expected = [[6, 42, 18, 60, 24], [48, 54, 24, 12, 12], [36, 12, 60, 60, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #482 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 1, 1, 9, 4, 8, 7, 1, 8], [4, 7, 9, 1, 0, 3, 3, 7, 8, 3], [0, 3, 2, 10, 7, 2, 2, 6, 7, 3], [9, 6, 1, 7, 5, 7, 1, 4, 1, 7], [1, 10, 10, 10, 8, 4, 10, 9, 2, 5], [0, 4, 4, 5, 5, 8, 6, 2, 6, 10], [10, 4, 6, 3, 5, 4, 3, 8, 1, 2]]
scalar = 9
expected = [[63, 9, 9, 9, 81, 36, 72, 63, 9, 72], [36, 63, 81, 9, 0, 27, 27, 63, 72, 27], [0, 27, 18, 90, 63, 18, 18, 54, 63, 27], [81, 54, 9, 63, 45, 63, 9, 36, 9, 63], [9, 90, 90, 90, 72, 36, 90, 81, 18, 45], [0, 36, 36, 45, 45, 72, 54, 18, 54, 90], [90, 36, 54, 27, 45, 36, 27, 72, 9, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #483 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0], [3, 9], [6, 4], [1, 2], [7, 8], [1, 9], [2, 1]]
scalar = 7
expected = [[42, 0], [21, 63], [42, 28], [7, 14], [49, 56], [7, 63], [14, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #484 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 0], [1, 6, 8], [7, 0, 1], [9, 10, 5]]
scalar = 10
expected = [[20, 70, 0], [10, 60, 80], [70, 0, 10], [90, 100, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #485 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 7, 10, 3, 8, 8, 2], [4, 2, 3, 10, 7, 3, 8], [8, 0, 7, 1, 9, 7, 3], [9, 1, 8, 2, 10, 6, 4], [3, 10, 6, 6, 8, 8, 3], [7, 1, 3, 6, 0, 9, 2], [8, 3, 6, 3, 0, 6, 6], [4, 8, 6, 9, 9, 10, 5], [6, 7, 4, 4, 5, 0, 4], [7, 10, 6, 2, 10, 7, 1]]
scalar = 9
expected = [[90, 63, 90, 27, 72, 72, 18], [36, 18, 27, 90, 63, 27, 72], [72, 0, 63, 9, 81, 63, 27], [81, 9, 72, 18, 90, 54, 36], [27, 90, 54, 54, 72, 72, 27], [63, 9, 27, 54, 0, 81, 18], [72, 27, 54, 27, 0, 54, 54], [36, 72, 54, 81, 81, 90, 45], [54, 63, 36, 36, 45, 0, 36], [63, 90, 54, 18, 90, 63, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #486 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 1, 9, 3, 8, 7], [0, 7, 8, 1, 3, 0, 3], [5, 0, 1, 6, 4, 3, 6], [8, 6, 9, 3, 9, 4, 4], [8, 1, 6, 4, 5, 2, 2], [2, 0, 9, 9, 0, 9, 9], [10, 9, 8, 7, 5, 4, 3], [0, 9, 9, 3, 5, 2, 3], [3, 9, 10, 2, 10, 6, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #487 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 5], [0, 7, 4], [3, 9, 10], [8, 8, 9], [4, 7, 2], [0, 9, 8], [10, 8, 0], [3, 7, 0], [7, 5, 6]]
scalar = 9
expected = [[90, 0, 45], [0, 63, 36], [27, 81, 90], [72, 72, 81], [36, 63, 18], [0, 81, 72], [90, 72, 0], [27, 63, 0], [63, 45, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #488 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 10, 3, 5, 2, 1, 9]]
scalar = 3
expected = [[6, 12, 30, 9, 15, 6, 3, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #489 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4, 0, 3, 3, 10, 1, 10], [5, 1, 0, 3, 2, 7, 10, 2], [4, 8, 10, 9, 10, 10, 1, 5], [7, 9, 1, 5, 3, 0, 2, 4], [5, 9, 6, 6, 2, 0, 0, 2], [4, 10, 3, 1, 9, 7, 8, 0], [4, 7, 8, 9, 9, 7, 7, 10], [2, 0, 9, 2, 6, 8, 1, 7]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #490 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1], [6, 9], [4, 1], [1, 7], [6, 10], [3, 7], [8, 2]]
scalar = 3
expected = [[27, 3], [18, 27], [12, 3], [3, 21], [18, 30], [9, 21], [24, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #491 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [4], [0], [9], [0]]
scalar = 1
expected = [[9], [4], [0], [9], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #492 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 3, 5]]
scalar = 10
expected = [[10, 80, 30, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #493 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4], [7, 1], [3, 8]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #494 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 7, 6, 7, 0, 3, 3], [3, 1, 10, 5, 0, 10, 9, 10], [4, 4, 7, 9, 5, 9, 5, 5], [5, 0, 9, 7, 8, 1, 10, 5], [1, 2, 0, 6, 3, 4, 8, 3], [10, 6, 4, 9, 10, 9, 9, 1]]
scalar = 9
expected = [[63, 90, 63, 54, 63, 0, 27, 27], [27, 9, 90, 45, 0, 90, 81, 90], [36, 36, 63, 81, 45, 81, 45, 45], [45, 0, 81, 63, 72, 9, 90, 45], [9, 18, 0, 54, 27, 36, 72, 27], [90, 54, 36, 81, 90, 81, 81, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #495 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2], [0, 4], [3, 4], [5, 6], [8, 6], [9, 8], [1, 4], [2, 10], [2, 5], [8, 0]]
scalar = 4
expected = [[4, 8], [0, 16], [12, 16], [20, 24], [32, 24], [36, 32], [4, 16], [8, 40], [8, 20], [32, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #496 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 7, 7, 7, 5, 10, 10, 3], [9, 1, 0, 6, 10, 3, 10, 0, 6], [5, 3, 9, 10, 3, 0, 6, 8, 2], [5, 6, 4, 7, 0, 5, 6, 4, 6]]
scalar = 1
expected = [[0, 8, 7, 7, 7, 5, 10, 10, 3], [9, 1, 0, 6, 10, 3, 10, 0, 6], [5, 3, 9, 10, 3, 0, 6, 8, 2], [5, 6, 4, 7, 0, 5, 6, 4, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #497 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [6], [3], [7], [8], [8], [10]]
scalar = 9
expected = [[36], [54], [27], [63], [72], [72], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #498 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 8, 8], [3, 10, 0, 2], [6, 3, 6, 0], [0, 5, 8, 2], [6, 6, 6, 7], [5, 10, 1, 0], [6, 9, 8, 6]]
scalar = 2
expected = [[10, 2, 16, 16], [6, 20, 0, 4], [12, 6, 12, 0], [0, 10, 16, 4], [12, 12, 12, 14], [10, 20, 2, 0], [12, 18, 16, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #499 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 6, 4, 9, 3, 8, 1]]
scalar = 5
expected = [[25, 45, 30, 20, 45, 15, 40, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #500 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [0], [10], [7], [6]]
scalar = 5
expected = [[45], [0], [50], [35], [30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #501 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 2, 9, 5, 4, 3], [0, 8, 2, 9, 9, 9, 2]]
scalar = 2
expected = [[18, 18, 4, 18, 10, 8, 6], [0, 16, 4, 18, 18, 18, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #502 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 3, 7, 3, 2, 0, 6, 6], [1, 2, 3, 2, 2, 3, 1, 4], [9, 7, 4, 5, 2, 0, 9, 9], [2, 10, 8, 2, 10, 2, 10, 1], [6, 1, 6, 8, 6, 5, 2, 7], [0, 6, 3, 6, 4, 2, 4, 6]]
scalar = 4
expected = [[36, 12, 28, 12, 8, 0, 24, 24], [4, 8, 12, 8, 8, 12, 4, 16], [36, 28, 16, 20, 8, 0, 36, 36], [8, 40, 32, 8, 40, 8, 40, 4], [24, 4, 24, 32, 24, 20, 8, 28], [0, 24, 12, 24, 16, 8, 16, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #503 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 2, 1, 6], [0, 4, 6, 9, 6], [6, 7, 5, 6, 2], [8, 1, 7, 8, 2], [1, 4, 2, 1, 3], [6, 0, 10, 6, 3]]
scalar = 7
expected = [[35, 0, 14, 7, 42], [0, 28, 42, 63, 42], [42, 49, 35, 42, 14], [56, 7, 49, 56, 14], [7, 28, 14, 7, 21], [42, 0, 70, 42, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #504 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [6], [0], [2], [7], [1]]
scalar = 5
expected = [[25], [30], [0], [10], [35], [5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #505 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 2, 3, 7, 1, 5, 8], [6, 6, 9, 1, 6, 4, 7, 9], [5, 3, 4, 1, 9, 2, 6, 0], [6, 8, 10, 2, 1, 2, 2, 5], [5, 9, 3, 9, 4, 9, 1, 10], [2, 2, 3, 10, 5, 1, 1, 1], [2, 8, 5, 2, 10, 1, 5, 5], [5, 2, 6, 3, 10, 3, 4, 9], [2, 3, 5, 9, 7, 4, 2, 8]]
scalar = 6
expected = [[12, 54, 12, 18, 42, 6, 30, 48], [36, 36, 54, 6, 36, 24, 42, 54], [30, 18, 24, 6, 54, 12, 36, 0], [36, 48, 60, 12, 6, 12, 12, 30], [30, 54, 18, 54, 24, 54, 6, 60], [12, 12, 18, 60, 30, 6, 6, 6], [12, 48, 30, 12, 60, 6, 30, 30], [30, 12, 36, 18, 60, 18, 24, 54], [12, 18, 30, 54, 42, 24, 12, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #506 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9], [7, 10]]
scalar = 10
expected = [[70, 90], [70, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #507 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9], [2, 5], [9, 10], [1, 6], [8, 1]]
scalar = 6
expected = [[12, 54], [12, 30], [54, 60], [6, 36], [48, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #508 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 7, 10, 5, 8, 0], [1, 5, 1, 2, 3, 9, 9], [4, 1, 6, 1, 10, 1, 9], [2, 0, 2, 6, 8, 8, 3], [5, 10, 7, 7, 9, 9, 2], [8, 2, 0, 9, 2, 0, 0], [3, 3, 5, 4, 3, 10, 3], [6, 0, 10, 8, 9, 9, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #509 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 5, 8, 9, 2], [4, 6, 7, 1, 0, 3], [6, 3, 10, 9, 3, 5], [0, 6, 2, 2, 1, 2], [3, 0, 3, 2, 4, 9]]
scalar = 5
expected = [[10, 35, 25, 40, 45, 10], [20, 30, 35, 5, 0, 15], [30, 15, 50, 45, 15, 25], [0, 30, 10, 10, 5, 10], [15, 0, 15, 10, 20, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #510 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3, 10, 6], [8, 10, 4, 3], [3, 5, 2, 6], [0, 3, 4, 7], [2, 2, 5, 10], [4, 10, 3, 7], [6, 9, 1, 2], [4, 5, 8, 0]]
scalar = 8
expected = [[40, 24, 80, 48], [64, 80, 32, 24], [24, 40, 16, 48], [0, 24, 32, 56], [16, 16, 40, 80], [32, 80, 24, 56], [48, 72, 8, 16], [32, 40, 64, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #511 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 0, 0, 0, 3, 10], [4, 8, 2, 0, 1, 8, 7], [6, 6, 6, 1, 9, 2, 2], [0, 8, 5, 6, 2, 4, 4]]
scalar = 2
expected = [[16, 18, 0, 0, 0, 6, 20], [8, 16, 4, 0, 2, 16, 14], [12, 12, 12, 2, 18, 4, 4], [0, 16, 10, 12, 4, 8, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #512 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 3], [4, 6, 3], [0, 3, 6], [7, 4, 7], [0, 1, 1], [4, 2, 6], [10, 5, 7]]
scalar = 8
expected = [[40, 72, 24], [32, 48, 24], [0, 24, 48], [56, 32, 56], [0, 8, 8], [32, 16, 48], [80, 40, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #513 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 3, 3, 10, 2, 4]]
scalar = 6
expected = [[6, 36, 18, 18, 60, 12, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #514 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [4], [9], [5], [7], [8], [1], [10]]
scalar = 9
expected = [[81], [36], [81], [45], [63], [72], [9], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #515 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [2], [8], [5], [10], [9], [8]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #516 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 5, 4, 1, 2], [3, 7, 2, 4, 7, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #517 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 7, 6, 3], [3, 6, 3, 5, 9], [1, 6, 4, 8, 1], [1, 4, 10, 6, 2], [0, 7, 5, 4, 2], [6, 4, 6, 1, 6], [3, 5, 2, 10, 6], [4, 3, 4, 3, 8], [7, 8, 6, 10, 5], [7, 3, 9, 4, 2]]
scalar = 9
expected = [[72, 81, 63, 54, 27], [27, 54, 27, 45, 81], [9, 54, 36, 72, 9], [9, 36, 90, 54, 18], [0, 63, 45, 36, 18], [54, 36, 54, 9, 54], [27, 45, 18, 90, 54], [36, 27, 36, 27, 72], [63, 72, 54, 90, 45], [63, 27, 81, 36, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #518 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 2], [6, 10, 3], [5, 6, 10]]
scalar = 8
expected = [[48, 8, 16], [48, 80, 24], [40, 48, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #519 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [1], [7], [10], [5]]
scalar = 4
expected = [[24], [4], [28], [40], [20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #520 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 6], [4, 3], [7, 4], [0, 3], [10, 2], [5, 4], [6, 3], [4, 7], [5, 9]]
scalar = 3
expected = [[18, 18], [12, 9], [21, 12], [0, 9], [30, 6], [15, 12], [18, 9], [12, 21], [15, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #521 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3]]
scalar = 6
expected = [[6, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #522 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 5], [3, 10, 2], [6, 10, 0], [3, 6, 9], [1, 1, 9], [5, 3, 6], [4, 5, 3], [6, 6, 6], [2, 6, 2]]
scalar = 9
expected = [[81, 72, 45], [27, 90, 18], [54, 90, 0], [27, 54, 81], [9, 9, 81], [45, 27, 54], [36, 45, 27], [54, 54, 54], [18, 54, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #523 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 2], [0, 2, 7], [1, 5, 0], [3, 7, 9], [8, 7, 4], [10, 6, 3], [6, 4, 4], [8, 1, 6], [6, 3, 7]]
scalar = 2
expected = [[0, 8, 4], [0, 4, 14], [2, 10, 0], [6, 14, 18], [16, 14, 8], [20, 12, 6], [12, 8, 8], [16, 2, 12], [12, 6, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #524 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 5, 4, 6, 7, 9, 4, 1], [8, 8, 4, 6, 10, 8, 9, 2, 2], [1, 0, 1, 0, 5, 5, 5, 8, 9], [7, 6, 2, 0, 2, 8, 7, 0, 8], [6, 8, 8, 1, 9, 8, 10, 7, 6], [10, 9, 7, 1, 5, 6, 2, 10, 6], [1, 9, 3, 6, 2, 4, 0, 7, 7], [5, 8, 7, 5, 5, 4, 9, 5, 9], [0, 8, 6, 10, 1, 2, 0, 7, 0], [8, 10, 4, 6, 2, 6, 0, 5, 2]]
scalar = 9
expected = [[45, 63, 45, 36, 54, 63, 81, 36, 9], [72, 72, 36, 54, 90, 72, 81, 18, 18], [9, 0, 9, 0, 45, 45, 45, 72, 81], [63, 54, 18, 0, 18, 72, 63, 0, 72], [54, 72, 72, 9, 81, 72, 90, 63, 54], [90, 81, 63, 9, 45, 54, 18, 90, 54], [9, 81, 27, 54, 18, 36, 0, 63, 63], [45, 72, 63, 45, 45, 36, 81, 45, 81], [0, 72, 54, 90, 9, 18, 0, 63, 0], [72, 90, 36, 54, 18, 54, 0, 45, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #525 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 8, 2, 10], [10, 0, 6, 3, 1], [7, 9, 6, 2, 6], [2, 0, 10, 10, 1], [10, 9, 5, 9, 5], [0, 3, 4, 6, 6]]
scalar = 4
expected = [[0, 4, 32, 8, 40], [40, 0, 24, 12, 4], [28, 36, 24, 8, 24], [8, 0, 40, 40, 4], [40, 36, 20, 36, 20], [0, 12, 16, 24, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #526 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 2, 4, 4, 4, 9, 10], [2, 2, 7, 4, 0, 9, 9, 3], [10, 3, 9, 10, 6, 1, 2, 10], [8, 5, 9, 8, 6, 4, 2, 7], [8, 6, 7, 8, 1, 6, 2, 2], [0, 6, 2, 10, 7, 9, 2, 0], [10, 2, 6, 3, 5, 8, 9, 5]]
scalar = 10
expected = [[10, 30, 20, 40, 40, 40, 90, 100], [20, 20, 70, 40, 0, 90, 90, 30], [100, 30, 90, 100, 60, 10, 20, 100], [80, 50, 90, 80, 60, 40, 20, 70], [80, 60, 70, 80, 10, 60, 20, 20], [0, 60, 20, 100, 70, 90, 20, 0], [100, 20, 60, 30, 50, 80, 90, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #527 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 0, 2, 1, 8, 4, 9, 9], [3, 2, 2, 5, 10, 3, 1, 2, 6], [3, 10, 5, 0, 2, 2, 7, 2, 1], [0, 2, 7, 6, 9, 2, 3, 3, 9], [4, 3, 0, 4, 7, 5, 2, 0, 4], [6, 5, 2, 5, 9, 6, 1, 5, 5], [4, 0, 9, 4, 6, 4, 0, 3, 7], [10, 8, 4, 5, 2, 7, 10, 0, 10], [9, 1, 0, 10, 9, 9, 9, 10, 9]]
scalar = 1
expected = [[10, 0, 0, 2, 1, 8, 4, 9, 9], [3, 2, 2, 5, 10, 3, 1, 2, 6], [3, 10, 5, 0, 2, 2, 7, 2, 1], [0, 2, 7, 6, 9, 2, 3, 3, 9], [4, 3, 0, 4, 7, 5, 2, 0, 4], [6, 5, 2, 5, 9, 6, 1, 5, 5], [4, 0, 9, 4, 6, 4, 0, 3, 7], [10, 8, 4, 5, 2, 7, 10, 0, 10], [9, 1, 0, 10, 9, 9, 9, 10, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #528 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 9, 3, 9, 5, 7, 6, 1, 10], [3, 3, 1, 4, 9, 5, 1, 9, 10], [8, 4, 0, 6, 1, 8, 5, 8, 6], [1, 10, 10, 4, 3, 8, 4, 3, 10], [7, 2, 0, 1, 6, 5, 1, 3, 0]]
scalar = 5
expected = [[0, 45, 15, 45, 25, 35, 30, 5, 50], [15, 15, 5, 20, 45, 25, 5, 45, 50], [40, 20, 0, 30, 5, 40, 25, 40, 30], [5, 50, 50, 20, 15, 40, 20, 15, 50], [35, 10, 0, 5, 30, 25, 5, 15, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #529 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 7, 1, 6, 3], [5, 4, 8, 9, 3, 0], [2, 9, 6, 9, 3, 10], [7, 10, 10, 0, 2, 3], [7, 0, 5, 5, 2, 8], [9, 7, 0, 3, 4, 2], [9, 2, 3, 1, 1, 10], [7, 1, 9, 10, 3, 2]]
scalar = 5
expected = [[5, 45, 35, 5, 30, 15], [25, 20, 40, 45, 15, 0], [10, 45, 30, 45, 15, 50], [35, 50, 50, 0, 10, 15], [35, 0, 25, 25, 10, 40], [45, 35, 0, 15, 20, 10], [45, 10, 15, 5, 5, 50], [35, 5, 45, 50, 15, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #530 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 10]]
scalar = 8
expected = [[56, 0, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #531 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [7], [3], [0], [5]]
scalar = 10
expected = [[30], [70], [30], [0], [50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #532 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 2], [1, 3, 3], [1, 0, 10], [7, 9, 10], [0, 9, 9], [10, 0, 5], [10, 1, 10], [4, 7, 0]]
scalar = 9
expected = [[90, 81, 18], [9, 27, 27], [9, 0, 90], [63, 81, 90], [0, 81, 81], [90, 0, 45], [90, 9, 90], [36, 63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #533 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7], [6, 8], [0, 6], [5, 1], [6, 6], [3, 10], [1, 7], [5, 1]]
scalar = 4
expected = [[24, 28], [24, 32], [0, 24], [20, 4], [24, 24], [12, 40], [4, 28], [20, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #534 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2], [10, 5], [10, 1], [8, 3], [2, 1], [3, 2], [9, 2], [8, 2], [6, 0], [5, 8]]
scalar = 9
expected = [[27, 18], [90, 45], [90, 9], [72, 27], [18, 9], [27, 18], [81, 18], [72, 18], [54, 0], [45, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #535 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3], [8, 1], [4, 1], [8, 10], [3, 5], [10, 4], [6, 3], [10, 6], [8, 3], [5, 2]]
scalar = 9
expected = [[90, 27], [72, 9], [36, 9], [72, 90], [27, 45], [90, 36], [54, 27], [90, 54], [72, 27], [45, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #536 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 5, 8, 5, 1, 8, 1, 3, 10], [5, 2, 0, 3, 7, 1, 5, 5, 10, 1], [4, 0, 4, 10, 5, 8, 7, 10, 9, 1], [8, 0, 3, 3, 7, 9, 4, 7, 7, 1], [2, 0, 2, 7, 10, 5, 8, 6, 4, 2], [3, 6, 8, 9, 8, 8, 8, 8, 9, 10], [4, 7, 8, 7, 5, 9, 9, 1, 10, 6]]
scalar = 1
expected = [[4, 9, 5, 8, 5, 1, 8, 1, 3, 10], [5, 2, 0, 3, 7, 1, 5, 5, 10, 1], [4, 0, 4, 10, 5, 8, 7, 10, 9, 1], [8, 0, 3, 3, 7, 9, 4, 7, 7, 1], [2, 0, 2, 7, 10, 5, 8, 6, 4, 2], [3, 6, 8, 9, 8, 8, 8, 8, 9, 10], [4, 7, 8, 7, 5, 9, 9, 1, 10, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #537 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 5, 10, 0, 4], [10, 8, 0, 4, 8], [3, 1, 10, 0, 10], [10, 2, 2, 0, 5], [8, 0, 6, 7, 4], [6, 1, 4, 8, 4], [0, 10, 9, 10, 7]]
scalar = 6
expected = [[6, 30, 60, 0, 24], [60, 48, 0, 24, 48], [18, 6, 60, 0, 60], [60, 12, 12, 0, 30], [48, 0, 36, 42, 24], [36, 6, 24, 48, 24], [0, 60, 54, 60, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #538 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 6], [9, 6, 0], [9, 4, 9], [2, 0, 1], [8, 3, 3], [0, 10, 1], [5, 9, 6], [7, 5, 9], [2, 3, 7]]
scalar = 4
expected = [[16, 16, 24], [36, 24, 0], [36, 16, 36], [8, 0, 4], [32, 12, 12], [0, 40, 4], [20, 36, 24], [28, 20, 36], [8, 12, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #539 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8], [3, 9]]
scalar = 1
expected = [[0, 8], [3, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #540 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 9, 0, 0, 4, 4, 10, 5, 10], [7, 2, 5, 9, 3, 0, 2, 4, 5, 6], [0, 3, 8, 9, 8, 8, 7, 0, 7, 6], [9, 7, 7, 2, 3, 5, 1, 6, 5, 1], [8, 6, 4, 2, 8, 3, 0, 6, 8, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #541 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 7, 3, 4, 4, 2, 7, 10, 4]]
scalar = 4
expected = [[8, 16, 28, 12, 16, 16, 8, 28, 40, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #542 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [0], [7]]
scalar = 9
expected = [[45], [0], [63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #543 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6], [2, 1], [8, 2], [1, 2], [2, 6], [6, 4], [7, 5], [2, 2], [5, 9]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #544 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2]]
scalar = 3
expected = [[6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #545 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 3, 8, 2, 4, 9], [6, 3, 6, 6, 4, 5, 1]]
scalar = 6
expected = [[18, 54, 18, 48, 12, 24, 54], [36, 18, 36, 36, 24, 30, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #546 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 0, 3, 10, 7, 9], [0, 3, 3, 10, 4, 10, 8], [1, 9, 10, 4, 7, 5, 1], [4, 1, 8, 4, 6, 7, 6], [3, 10, 10, 2, 10, 7, 6], [6, 9, 10, 4, 10, 7, 3], [6, 8, 4, 3, 7, 8, 8], [10, 6, 4, 3, 9, 0, 5], [3, 10, 4, 1, 6, 10, 0], [5, 0, 3, 6, 5, 0, 9]]
scalar = 5
expected = [[25, 10, 0, 15, 50, 35, 45], [0, 15, 15, 50, 20, 50, 40], [5, 45, 50, 20, 35, 25, 5], [20, 5, 40, 20, 30, 35, 30], [15, 50, 50, 10, 50, 35, 30], [30, 45, 50, 20, 50, 35, 15], [30, 40, 20, 15, 35, 40, 40], [50, 30, 20, 15, 45, 0, 25], [15, 50, 20, 5, 30, 50, 0], [25, 0, 15, 30, 25, 0, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #547 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 1], [4, 9, 7], [6, 5, 2]]
scalar = 6
expected = [[48, 54, 6], [24, 54, 42], [36, 30, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #548 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 10], [3, 5, 7], [10, 9, 4]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #549 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 10, 7, 3, 5, 1, 6]]
scalar = 9
expected = [[90, 90, 63, 27, 45, 9, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #550 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [9], [1], [4], [3], [1]]
scalar = 7
expected = [[28], [63], [7], [28], [21], [7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #551 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10], [1, 1], [6, 9], [8, 1], [3, 3], [8, 9], [8, 0]]
scalar = 7
expected = [[42, 70], [7, 7], [42, 63], [56, 7], [21, 21], [56, 63], [56, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #552 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 0, 3, 6, 2, 3], [7, 6, 3, 9, 9, 0, 7], [0, 10, 7, 5, 9, 0, 3], [0, 5, 1, 8, 4, 4, 2], [5, 8, 3, 0, 4, 7, 5]]
scalar = 4
expected = [[40, 20, 0, 12, 24, 8, 12], [28, 24, 12, 36, 36, 0, 28], [0, 40, 28, 20, 36, 0, 12], [0, 20, 4, 32, 16, 16, 8], [20, 32, 12, 0, 16, 28, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #553 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 4, 10, 7, 7, 8, 0, 4], [4, 8, 3, 6, 2, 8, 2, 6, 9], [0, 5, 10, 8, 9, 8, 10, 0, 6], [3, 4, 3, 10, 4, 4, 6, 2, 7], [8, 8, 0, 9, 3, 9, 4, 6, 1], [3, 1, 1, 6, 1, 9, 5, 6, 2], [2, 0, 2, 10, 9, 10, 5, 1, 2], [4, 1, 8, 10, 8, 7, 0, 9, 1], [2, 5, 1, 4, 9, 9, 0, 1, 4], [2, 1, 3, 7, 0, 0, 7, 5, 10]]
scalar = 4
expected = [[0, 32, 16, 40, 28, 28, 32, 0, 16], [16, 32, 12, 24, 8, 32, 8, 24, 36], [0, 20, 40, 32, 36, 32, 40, 0, 24], [12, 16, 12, 40, 16, 16, 24, 8, 28], [32, 32, 0, 36, 12, 36, 16, 24, 4], [12, 4, 4, 24, 4, 36, 20, 24, 8], [8, 0, 8, 40, 36, 40, 20, 4, 8], [16, 4, 32, 40, 32, 28, 0, 36, 4], [8, 20, 4, 16, 36, 36, 0, 4, 16], [8, 4, 12, 28, 0, 0, 28, 20, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #554 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 4], [2, 5, 7], [6, 1, 6], [6, 0, 3], [7, 6, 5], [4, 0, 0], [4, 6, 6], [6, 2, 2]]
scalar = 9
expected = [[9, 90, 36], [18, 45, 63], [54, 9, 54], [54, 0, 27], [63, 54, 45], [36, 0, 0], [36, 54, 54], [54, 18, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #555 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 9, 10, 3, 7], [4, 4, 10, 1, 1, 10], [8, 7, 6, 7, 3, 8], [2, 7, 4, 7, 4, 0], [0, 5, 6, 8, 0, 7]]
scalar = 10
expected = [[60, 0, 90, 100, 30, 70], [40, 40, 100, 10, 10, 100], [80, 70, 60, 70, 30, 80], [20, 70, 40, 70, 40, 0], [0, 50, 60, 80, 0, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #556 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 2]]
scalar = 3
expected = [[27, 27, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #557 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 10], [1, 8, 8], [10, 4, 6], [6, 0, 6]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #558 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 3, 4, 7], [3, 4, 1, 3, 1], [0, 0, 6, 10, 6], [1, 9, 6, 9, 2], [0, 9, 4, 1, 9]]
scalar = 2
expected = [[14, 4, 6, 8, 14], [6, 8, 2, 6, 2], [0, 0, 12, 20, 12], [2, 18, 12, 18, 4], [0, 18, 8, 2, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #559 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 4, 7, 7, 5, 4, 4, 9], [0, 6, 1, 8, 4, 2, 9, 1, 9], [6, 8, 3, 1, 9, 2, 7, 3, 8], [7, 10, 1, 0, 5, 2, 9, 4, 1], [4, 9, 9, 4, 10, 3, 0, 4, 2], [9, 7, 9, 7, 9, 6, 5, 1, 4], [9, 9, 8, 2, 8, 6, 3, 5, 9], [0, 8, 6, 1, 1, 6, 4, 9, 0]]
scalar = 2
expected = [[8, 6, 8, 14, 14, 10, 8, 8, 18], [0, 12, 2, 16, 8, 4, 18, 2, 18], [12, 16, 6, 2, 18, 4, 14, 6, 16], [14, 20, 2, 0, 10, 4, 18, 8, 2], [8, 18, 18, 8, 20, 6, 0, 8, 4], [18, 14, 18, 14, 18, 12, 10, 2, 8], [18, 18, 16, 4, 16, 12, 6, 10, 18], [0, 16, 12, 2, 2, 12, 8, 18, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #560 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 5, 9, 7, 6, 0, 6], [7, 5, 9, 6, 9, 4, 2, 6], [7, 2, 3, 1, 2, 3, 10, 8], [1, 1, 10, 10, 7, 6, 9, 0]]
scalar = 1
expected = [[1, 1, 5, 9, 7, 6, 0, 6], [7, 5, 9, 6, 9, 4, 2, 6], [7, 2, 3, 1, 2, 3, 10, 8], [1, 1, 10, 10, 7, 6, 9, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #561 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 10, 4, 5]]
scalar = 6
expected = [[0, 0, 60, 24, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #562 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 0, 1, 6, 9], [1, 0, 6, 10, 9, 5], [4, 8, 0, 3, 1, 3], [7, 10, 1, 10, 5, 2], [1, 5, 5, 6, 5, 1]]
scalar = 3
expected = [[12, 0, 0, 3, 18, 27], [3, 0, 18, 30, 27, 15], [12, 24, 0, 9, 3, 9], [21, 30, 3, 30, 15, 6], [3, 15, 15, 18, 15, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #563 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 2, 5, 0, 1, 4], [4, 9, 1, 6, 6, 0, 1], [4, 8, 2, 2, 4, 7, 3], [2, 0, 10, 5, 4, 2, 0], [2, 6, 10, 7, 9, 1, 9], [1, 3, 4, 1, 9, 5, 5], [2, 6, 2, 2, 0, 4, 9], [1, 5, 10, 1, 5, 8, 3]]
scalar = 1
expected = [[3, 9, 2, 5, 0, 1, 4], [4, 9, 1, 6, 6, 0, 1], [4, 8, 2, 2, 4, 7, 3], [2, 0, 10, 5, 4, 2, 0], [2, 6, 10, 7, 9, 1, 9], [1, 3, 4, 1, 9, 5, 5], [2, 6, 2, 2, 0, 4, 9], [1, 5, 10, 1, 5, 8, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #564 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [3], [1], [3], [0], [2], [0], [7]]
scalar = 1
expected = [[3], [3], [1], [3], [0], [2], [0], [7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #565 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [6], [4], [6], [1], [4], [7]]
scalar = 1
expected = [[9], [6], [4], [6], [1], [4], [7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #566 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 2], [5, 4], [2, 8], [6, 8], [10, 0]]
scalar = 6
expected = [[36, 12], [30, 24], [12, 48], [36, 48], [60, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #567 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 2], [0, 4], [2, 3], [0, 9], [10, 2], [0, 8], [3, 3], [7, 7]]
scalar = 2
expected = [[4, 4], [0, 8], [4, 6], [0, 18], [20, 4], [0, 16], [6, 6], [14, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #568 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 8, 6, 1, 3, 3, 5, 2, 1], [10, 2, 5, 7, 6, 5, 4, 4, 1, 5], [9, 5, 7, 6, 5, 3, 0, 0, 5, 4], [9, 2, 10, 0, 3, 4, 4, 3, 7, 10], [9, 10, 1, 5, 5, 4, 5, 1, 8, 0], [5, 1, 9, 2, 10, 1, 10, 2, 3, 0], [2, 8, 0, 1, 7, 4, 1, 7, 2, 9], [10, 3, 3, 8, 4, 0, 5, 1, 6, 4]]
scalar = 1
expected = [[6, 10, 8, 6, 1, 3, 3, 5, 2, 1], [10, 2, 5, 7, 6, 5, 4, 4, 1, 5], [9, 5, 7, 6, 5, 3, 0, 0, 5, 4], [9, 2, 10, 0, 3, 4, 4, 3, 7, 10], [9, 10, 1, 5, 5, 4, 5, 1, 8, 0], [5, 1, 9, 2, 10, 1, 10, 2, 3, 0], [2, 8, 0, 1, 7, 4, 1, 7, 2, 9], [10, 3, 3, 8, 4, 0, 5, 1, 6, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #569 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 9, 10, 2, 4], [3, 2, 2, 2, 5, 10], [3, 5, 3, 4, 3, 7], [3, 5, 0, 7, 4, 7], [5, 3, 7, 7, 1, 5], [1, 8, 4, 2, 8, 7]]
scalar = 1
expected = [[1, 7, 9, 10, 2, 4], [3, 2, 2, 2, 5, 10], [3, 5, 3, 4, 3, 7], [3, 5, 0, 7, 4, 7], [5, 3, 7, 7, 1, 5], [1, 8, 4, 2, 8, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #570 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3, 2], [3, 2, 1], [0, 2, 2], [6, 1, 0], [9, 1, 9], [7, 3, 2]]
scalar = 1
expected = [[5, 3, 2], [3, 2, 1], [0, 2, 2], [6, 1, 0], [9, 1, 9], [7, 3, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #571 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 6, 5, 6, 9, 8], [8, 3, 0, 4, 6, 6, 9], [3, 8, 9, 7, 5, 9, 10], [2, 1, 5, 0, 10, 9, 5], [8, 8, 8, 2, 1, 9, 3], [5, 1, 9, 4, 8, 5, 1]]
scalar = 8
expected = [[16, 32, 48, 40, 48, 72, 64], [64, 24, 0, 32, 48, 48, 72], [24, 64, 72, 56, 40, 72, 80], [16, 8, 40, 0, 80, 72, 40], [64, 64, 64, 16, 8, 72, 24], [40, 8, 72, 32, 64, 40, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #572 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [0], [0], [7], [0]]
scalar = 9
expected = [[0], [0], [0], [63], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #573 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 6, 2, 4, 7, 9, 1, 3, 10, 5], [9, 7, 10, 6, 3, 8, 7, 10, 9, 4], [3, 9, 6, 0, 0, 2, 3, 4, 7, 0], [1, 2, 3, 2, 5, 2, 8, 3, 9, 10], [1, 3, 8, 9, 1, 5, 8, 5, 2, 2], [10, 6, 3, 3, 1, 6, 10, 2, 4, 6], [9, 1, 9, 3, 4, 0, 7, 7, 5, 7], [3, 9, 10, 3, 5, 8, 8, 2, 2, 5]]
scalar = 8
expected = [[16, 48, 16, 32, 56, 72, 8, 24, 80, 40], [72, 56, 80, 48, 24, 64, 56, 80, 72, 32], [24, 72, 48, 0, 0, 16, 24, 32, 56, 0], [8, 16, 24, 16, 40, 16, 64, 24, 72, 80], [8, 24, 64, 72, 8, 40, 64, 40, 16, 16], [80, 48, 24, 24, 8, 48, 80, 16, 32, 48], [72, 8, 72, 24, 32, 0, 56, 56, 40, 56], [24, 72, 80, 24, 40, 64, 64, 16, 16, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #574 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 4, 2, 3, 5, 5, 4, 10, 6, 2]]
scalar = 7
expected = [[35, 28, 14, 21, 35, 35, 28, 70, 42, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #575 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 6, 9], [8, 2, 8, 9], [5, 9, 2, 6], [5, 8, 2, 0], [8, 3, 8, 4], [4, 6, 2, 0], [1, 3, 9, 2], [8, 1, 10, 4], [9, 2, 4, 8]]
scalar = 2
expected = [[8, 12, 12, 18], [16, 4, 16, 18], [10, 18, 4, 12], [10, 16, 4, 0], [16, 6, 16, 8], [8, 12, 4, 0], [2, 6, 18, 4], [16, 2, 20, 8], [18, 4, 8, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #576 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 3, 6], [4, 7, 10, 10], [3, 4, 7, 6]]
scalar = 6
expected = [[12, 60, 18, 36], [24, 42, 60, 60], [18, 24, 42, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #577 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 9, 1, 2, 8, 5], [2, 5, 4, 9, 1, 5, 2], [6, 0, 4, 6, 9, 10, 9], [5, 5, 10, 4, 6, 6, 2], [6, 9, 6, 1, 9, 10, 3], [5, 3, 6, 9, 7, 2, 3], [3, 5, 6, 9, 8, 8, 8], [10, 1, 7, 6, 4, 8, 2]]
scalar = 10
expected = [[10, 10, 90, 10, 20, 80, 50], [20, 50, 40, 90, 10, 50, 20], [60, 0, 40, 60, 90, 100, 90], [50, 50, 100, 40, 60, 60, 20], [60, 90, 60, 10, 90, 100, 30], [50, 30, 60, 90, 70, 20, 30], [30, 50, 60, 90, 80, 80, 80], [100, 10, 70, 60, 40, 80, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #578 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2]]
scalar = 9
expected = [[18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #579 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 7, 2, 6, 8, 7, 4, 1, 1]]
scalar = 3
expected = [[30, 21, 6, 18, 24, 21, 12, 3, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #580 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 0, 4, 7, 6, 8, 6, 8], [8, 2, 10, 10, 7, 9, 6, 10, 1], [3, 6, 7, 4, 7, 5, 6, 10, 9], [9, 8, 9, 9, 8, 4, 10, 0, 2], [0, 0, 2, 7, 4, 6, 0, 3, 6], [0, 1, 0, 2, 8, 7, 2, 0, 2], [5, 3, 2, 4, 7, 4, 3, 6, 10]]
scalar = 3
expected = [[18, 30, 0, 12, 21, 18, 24, 18, 24], [24, 6, 30, 30, 21, 27, 18, 30, 3], [9, 18, 21, 12, 21, 15, 18, 30, 27], [27, 24, 27, 27, 24, 12, 30, 0, 6], [0, 0, 6, 21, 12, 18, 0, 9, 18], [0, 3, 0, 6, 24, 21, 6, 0, 6], [15, 9, 6, 12, 21, 12, 9, 18, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #581 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 8, 0, 3, 7, 4, 0, 9, 3], [3, 5, 8, 3, 3, 4, 6, 0, 9, 0], [1, 3, 4, 3, 7, 4, 9, 4, 0, 3], [6, 6, 10, 3, 8, 3, 0, 0, 1, 6], [5, 9, 0, 4, 2, 4, 0, 3, 6, 7], [5, 4, 2, 8, 9, 4, 10, 9, 3, 5], [8, 7, 1, 8, 1, 8, 0, 2, 6, 6]]
scalar = 8
expected = [[32, 80, 64, 0, 24, 56, 32, 0, 72, 24], [24, 40, 64, 24, 24, 32, 48, 0, 72, 0], [8, 24, 32, 24, 56, 32, 72, 32, 0, 24], [48, 48, 80, 24, 64, 24, 0, 0, 8, 48], [40, 72, 0, 32, 16, 32, 0, 24, 48, 56], [40, 32, 16, 64, 72, 32, 80, 72, 24, 40], [64, 56, 8, 64, 8, 64, 0, 16, 48, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #582 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 8], [10, 3, 4], [0, 5, 5]]
scalar = 2
expected = [[4, 16, 16], [20, 6, 8], [0, 10, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #583 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10], [7, 2], [1, 0], [3, 2], [6, 7], [9, 0]]
scalar = 7
expected = [[63, 70], [49, 14], [7, 0], [21, 14], [42, 49], [63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #584 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6, 1, 8], [2, 8, 0, 6], [0, 10, 6, 10], [8, 1, 6, 1], [3, 7, 0, 10], [5, 3, 0, 5]]
scalar = 9
expected = [[81, 54, 9, 72], [18, 72, 0, 54], [0, 90, 54, 90], [72, 9, 54, 9], [27, 63, 0, 90], [45, 27, 0, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #585 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 2, 2, 7, 9, 10, 1, 8], [6, 4, 9, 1, 5, 8, 9, 4], [6, 9, 8, 5, 9, 3, 0, 6], [8, 2, 4, 6, 10, 6, 3, 4], [9, 0, 4, 8, 6, 3, 6, 0]]
scalar = 5
expected = [[0, 10, 10, 35, 45, 50, 5, 40], [30, 20, 45, 5, 25, 40, 45, 20], [30, 45, 40, 25, 45, 15, 0, 30], [40, 10, 20, 30, 50, 30, 15, 20], [45, 0, 20, 40, 30, 15, 30, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #586 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [3], [3], [7], [0], [7], [3], [7]]
scalar = 4
expected = [[8], [12], [12], [28], [0], [28], [12], [28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #587 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 5, 4, 3, 8, 6, 6, 9], [7, 0, 9, 10, 8, 6, 9, 0]]
scalar = 4
expected = [[32, 20, 16, 12, 32, 24, 24, 36], [28, 0, 36, 40, 32, 24, 36, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #588 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 0, 4, 1], [3, 3, 0, 5, 7], [10, 9, 7, 2, 7], [3, 5, 8, 7, 5], [4, 1, 2, 5, 8]]
scalar = 7
expected = [[49, 56, 0, 28, 7], [21, 21, 0, 35, 49], [70, 63, 49, 14, 49], [21, 35, 56, 49, 35], [28, 7, 14, 35, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #589 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [1], [4], [9], [3], [10], [3], [4]]
scalar = 6
expected = [[30], [6], [24], [54], [18], [60], [18], [24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #590 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 5], [3, 0, 3], [6, 1, 3], [6, 2, 1], [4, 6, 7], [6, 0, 5], [6, 10, 0], [7, 5, 2], [9, 2, 9], [8, 5, 8]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #591 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 7, 8, 3, 5, 3], [3, 8, 10, 2, 3, 7], [8, 4, 1, 10, 4, 7], [0, 8, 6, 0, 3, 6]]
scalar = 7
expected = [[21, 49, 56, 21, 35, 21], [21, 56, 70, 14, 21, 49], [56, 28, 7, 70, 28, 49], [0, 56, 42, 0, 21, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #592 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6], [1, 6], [10, 10]]
scalar = 10
expected = [[0, 60], [10, 60], [100, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #593 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 5, 1, 0, 3], [6, 7, 9, 7, 4, 0], [4, 0, 6, 1, 1, 5], [4, 9, 7, 0, 10, 0], [7, 3, 3, 6, 8, 4], [9, 4, 8, 2, 2, 10], [9, 9, 0, 7, 10, 2], [10, 0, 0, 5, 2, 0], [4, 0, 1, 1, 6, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #594 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9]]
scalar = 7
expected = [[63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #595 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 9, 7, 6, 3, 8, 9, 8, 6], [10, 3, 1, 5, 3, 9, 7, 5, 2, 9]]
scalar = 2
expected = [[2, 4, 18, 14, 12, 6, 16, 18, 16, 12], [20, 6, 2, 10, 6, 18, 14, 10, 4, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #596 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 2], [4, 2, 0], [1, 9, 0]]
scalar = 10
expected = [[20, 10, 20], [40, 20, 0], [10, 90, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #597 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 7, 2, 10, 0, 10], [3, 8, 3, 2, 7, 7, 5], [7, 8, 1, 5, 6, 4, 9], [8, 9, 8, 8, 7, 7, 8], [3, 3, 2, 9, 4, 2, 3]]
scalar = 10
expected = [[40, 10, 70, 20, 100, 0, 100], [30, 80, 30, 20, 70, 70, 50], [70, 80, 10, 50, 60, 40, 90], [80, 90, 80, 80, 70, 70, 80], [30, 30, 20, 90, 40, 20, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #598 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 6, 5, 7, 2, 5], [4, 7, 1, 8, 9, 7], [8, 8, 6, 4, 10, 10], [9, 2, 0, 1, 2, 8], [9, 8, 10, 2, 7, 1], [6, 10, 10, 5, 6, 8]]
scalar = 4
expected = [[36, 24, 20, 28, 8, 20], [16, 28, 4, 32, 36, 28], [32, 32, 24, 16, 40, 40], [36, 8, 0, 4, 8, 32], [36, 32, 40, 8, 28, 4], [24, 40, 40, 20, 24, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #599 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 0, 1, 5, 4, 7, 0, 6, 9], [8, 1, 4, 4, 7, 8, 4, 5, 8, 6], [9, 7, 0, 1, 8, 5, 6, 10, 2, 4], [10, 9, 1, 10, 8, 10, 1, 10, 0, 9], [3, 4, 6, 10, 2, 10, 6, 0, 7, 4], [4, 0, 1, 9, 5, 0, 5, 3, 1, 10], [6, 0, 7, 6, 5, 0, 9, 2, 10, 5], [2, 3, 10, 4, 8, 3, 10, 7, 9, 3], [6, 5, 8, 10, 1, 3, 6, 6, 10, 5], [8, 5, 10, 9, 4, 4, 1, 10, 7, 2]]
scalar = 4
expected = [[12, 12, 0, 4, 20, 16, 28, 0, 24, 36], [32, 4, 16, 16, 28, 32, 16, 20, 32, 24], [36, 28, 0, 4, 32, 20, 24, 40, 8, 16], [40, 36, 4, 40, 32, 40, 4, 40, 0, 36], [12, 16, 24, 40, 8, 40, 24, 0, 28, 16], [16, 0, 4, 36, 20, 0, 20, 12, 4, 40], [24, 0, 28, 24, 20, 0, 36, 8, 40, 20], [8, 12, 40, 16, 32, 12, 40, 28, 36, 12], [24, 20, 32, 40, 4, 12, 24, 24, 40, 20], [32, 20, 40, 36, 16, 16, 4, 40, 28, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #600 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 3, 6, 0, 3, 5], [8, 3, 8, 10, 10, 1, 0], [1, 3, 8, 5, 1, 8, 10]]
scalar = 4
expected = [[0, 32, 12, 24, 0, 12, 20], [32, 12, 32, 40, 40, 4, 0], [4, 12, 32, 20, 4, 32, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #601 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3]]
scalar = 4
expected = [[12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #602 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 9, 5, 0, 5, 3, 2, 5, 7], [5, 10, 6, 3, 5, 2, 3, 6, 9, 10], [5, 6, 2, 6, 8, 6, 5, 1, 9, 5], [5, 9, 10, 2, 9, 2, 4, 6, 7, 5], [1, 1, 8, 5, 3, 10, 2, 2, 7, 9], [6, 7, 6, 8, 2, 10, 2, 10, 7, 10], [4, 5, 5, 3, 1, 1, 1, 7, 10, 8], [8, 9, 10, 9, 0, 3, 9, 5, 9, 1]]
scalar = 10
expected = [[50, 10, 90, 50, 0, 50, 30, 20, 50, 70], [50, 100, 60, 30, 50, 20, 30, 60, 90, 100], [50, 60, 20, 60, 80, 60, 50, 10, 90, 50], [50, 90, 100, 20, 90, 20, 40, 60, 70, 50], [10, 10, 80, 50, 30, 100, 20, 20, 70, 90], [60, 70, 60, 80, 20, 100, 20, 100, 70, 100], [40, 50, 50, 30, 10, 10, 10, 70, 100, 80], [80, 90, 100, 90, 0, 30, 90, 50, 90, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #603 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [4]]
scalar = 7
expected = [[35], [28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #604 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 10, 7, 2, 3], [9, 8, 10, 7, 3, 5]]
scalar = 7
expected = [[42, 56, 70, 49, 14, 21], [63, 56, 70, 49, 21, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #605 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 1, 4, 5, 6], [7, 1, 2, 7, 3, 3], [10, 3, 1, 2, 6, 3]]
scalar = 10
expected = [[40, 60, 10, 40, 50, 60], [70, 10, 20, 70, 30, 30], [100, 30, 10, 20, 60, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #606 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 2], [3, 4, 10], [8, 6, 10]]
scalar = 8
expected = [[32, 32, 16], [24, 32, 80], [64, 48, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #607 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 7, 8, 0, 10, 10, 7, 9, 4], [3, 5, 8, 2, 10, 9, 2, 9, 7, 9]]
scalar = 10
expected = [[100, 90, 70, 80, 0, 100, 100, 70, 90, 40], [30, 50, 80, 20, 100, 90, 20, 90, 70, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #608 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 1, 2], [0, 5, 9], [6, 9, 3], [9, 3, 3], [5, 6, 9], [3, 2, 1], [0, 10, 4], [9, 7, 9]]
scalar = 5
expected = [[15, 5, 10], [0, 25, 45], [30, 45, 15], [45, 15, 15], [25, 30, 45], [15, 10, 5], [0, 50, 20], [45, 35, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #609 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 3, 4, 1]]
scalar = 6
expected = [[48, 54, 18, 24, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #610 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 0, 5, 6, 9, 6, 1, 10, 9], [4, 10, 9, 6, 4, 2, 1, 8, 10]]
scalar = 2
expected = [[10, 0, 10, 12, 18, 12, 2, 20, 18], [8, 20, 18, 12, 8, 4, 2, 16, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #611 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 2, 4, 7, 8, 7, 0, 9], [3, 5, 0, 4, 0, 1, 3, 7]]
scalar = 9
expected = [[18, 18, 36, 63, 72, 63, 0, 81], [27, 45, 0, 36, 0, 9, 27, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #612 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 10, 8, 4, 0, 2, 5, 3, 0], [6, 5, 10, 10, 7, 3, 9, 4, 2, 6], [9, 7, 6, 6, 5, 10, 5, 7, 5, 3], [1, 8, 0, 1, 9, 5, 4, 8, 4, 10], [9, 5, 9, 1, 10, 0, 3, 8, 1, 1], [6, 8, 9, 2, 7, 3, 6, 7, 7, 6], [7, 7, 9, 5, 0, 6, 1, 8, 7, 6]]
scalar = 1
expected = [[7, 0, 10, 8, 4, 0, 2, 5, 3, 0], [6, 5, 10, 10, 7, 3, 9, 4, 2, 6], [9, 7, 6, 6, 5, 10, 5, 7, 5, 3], [1, 8, 0, 1, 9, 5, 4, 8, 4, 10], [9, 5, 9, 1, 10, 0, 3, 8, 1, 1], [6, 8, 9, 2, 7, 3, 6, 7, 7, 6], [7, 7, 9, 5, 0, 6, 1, 8, 7, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #613 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 5, 4, 3], [8, 1, 10, 4, 7], [5, 6, 3, 2, 1]]
scalar = 7
expected = [[28, 49, 35, 28, 21], [56, 7, 70, 28, 49], [35, 42, 21, 14, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #614 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [4], [9], [7], [3]]
scalar = 9
expected = [[54], [36], [81], [63], [27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #615 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [1], [10], [6], [8], [4], [9]]
scalar = 1
expected = [[5], [1], [10], [6], [8], [4], [9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #616 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 3, 8, 6, 3, 8, 0, 5], [5, 6, 0, 4, 1, 4, 8, 0, 10], [8, 0, 4, 4, 5, 2, 10, 4, 9]]
scalar = 9
expected = [[81, 45, 27, 72, 54, 27, 72, 0, 45], [45, 54, 0, 36, 9, 36, 72, 0, 90], [72, 0, 36, 36, 45, 18, 90, 36, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #617 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 1, 3], [6, 6, 6, 6], [9, 5, 6, 10]]
scalar = 6
expected = [[24, 18, 6, 18], [36, 36, 36, 36], [54, 30, 36, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #618 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 6, 10, 7], [6, 7, 9, 3, 5], [6, 4, 2, 10, 7]]
scalar = 7
expected = [[63, 49, 42, 70, 49], [42, 49, 63, 21, 35], [42, 28, 14, 70, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #619 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 4, 4, 6, 6, 6, 4], [2, 5, 9, 3, 3, 4, 9, 0]]
scalar = 10
expected = [[0, 10, 40, 40, 60, 60, 60, 40], [20, 50, 90, 30, 30, 40, 90, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #620 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 1, 4, 4, 10, 3], [10, 8, 5, 2, 8, 7]]
scalar = 1
expected = [[5, 1, 4, 4, 10, 3], [10, 8, 5, 2, 8, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #621 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 8, 5, 1, 5, 2, 4, 7, 8], [1, 0, 10, 2, 0, 6, 10, 10, 1, 3], [1, 4, 6, 3, 2, 9, 4, 2, 2, 6], [3, 2, 3, 7, 10, 2, 2, 7, 5, 7], [1, 9, 9, 2, 6, 0, 3, 7, 1, 0], [4, 8, 8, 1, 8, 8, 0, 9, 6, 8], [0, 10, 4, 5, 9, 1, 2, 4, 6, 7], [7, 2, 3, 2, 1, 3, 4, 10, 9, 7], [10, 7, 7, 1, 6, 9, 10, 2, 7, 5]]
scalar = 8
expected = [[32, 64, 64, 40, 8, 40, 16, 32, 56, 64], [8, 0, 80, 16, 0, 48, 80, 80, 8, 24], [8, 32, 48, 24, 16, 72, 32, 16, 16, 48], [24, 16, 24, 56, 80, 16, 16, 56, 40, 56], [8, 72, 72, 16, 48, 0, 24, 56, 8, 0], [32, 64, 64, 8, 64, 64, 0, 72, 48, 64], [0, 80, 32, 40, 72, 8, 16, 32, 48, 56], [56, 16, 24, 16, 8, 24, 32, 80, 72, 56], [80, 56, 56, 8, 48, 72, 80, 16, 56, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #622 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 2, 4], [6, 3, 5], [0, 2, 0]]
scalar = 9
expected = [[72, 18, 36], [54, 27, 45], [0, 18, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #623 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 7, 5], [9, 5, 2, 0], [6, 6, 4, 7], [8, 0, 8, 5], [8, 5, 4, 6], [6, 3, 7, 2], [4, 9, 8, 9]]
scalar = 3
expected = [[21, 0, 21, 15], [27, 15, 6, 0], [18, 18, 12, 21], [24, 0, 24, 15], [24, 15, 12, 18], [18, 9, 21, 6], [12, 27, 24, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #624 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 4, 5], [0, 2, 6, 3], [7, 2, 9, 9], [2, 9, 3, 10]]
scalar = 9
expected = [[18, 81, 36, 45], [0, 18, 54, 27], [63, 18, 81, 81], [18, 81, 27, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #625 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 4, 6, 0, 2, 9, 10, 9], [4, 2, 4, 10, 10, 5, 8, 4, 10], [9, 6, 2, 6, 2, 8, 1, 9, 7], [8, 1, 9, 3, 2, 3, 9, 5, 4], [0, 3, 10, 8, 9, 5, 8, 4, 2], [9, 0, 8, 9, 8, 7, 4, 8, 5], [1, 8, 3, 10, 6, 7, 6, 8, 1]]
scalar = 1
expected = [[3, 4, 4, 6, 0, 2, 9, 10, 9], [4, 2, 4, 10, 10, 5, 8, 4, 10], [9, 6, 2, 6, 2, 8, 1, 9, 7], [8, 1, 9, 3, 2, 3, 9, 5, 4], [0, 3, 10, 8, 9, 5, 8, 4, 2], [9, 0, 8, 9, 8, 7, 4, 8, 5], [1, 8, 3, 10, 6, 7, 6, 8, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #626 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9], [4, 10], [1, 7], [8, 5]]
scalar = 6
expected = [[18, 54], [24, 60], [6, 42], [48, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #627 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 0, 6, 9, 4, 6, 1, 1], [2, 3, 6, 2, 2, 6, 0, 1, 7], [9, 7, 9, 1, 7, 7, 10, 0, 9], [10, 3, 5, 9, 9, 3, 3, 0, 9]]
scalar = 7
expected = [[14, 28, 0, 42, 63, 28, 42, 7, 7], [14, 21, 42, 14, 14, 42, 0, 7, 49], [63, 49, 63, 7, 49, 49, 70, 0, 63], [70, 21, 35, 63, 63, 21, 21, 0, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #628 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 7], [8, 2], [3, 0]]
scalar = 1
expected = [[0, 7], [8, 2], [3, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #629 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 9, 1, 2, 3], [3, 7, 10, 1, 7, 2], [0, 2, 8, 1, 9, 1], [3, 8, 7, 1, 5, 7], [4, 3, 10, 9, 5, 10]]
scalar = 2
expected = [[2, 2, 18, 2, 4, 6], [6, 14, 20, 2, 14, 4], [0, 4, 16, 2, 18, 2], [6, 16, 14, 2, 10, 14], [8, 6, 20, 18, 10, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #630 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 8, 10]]
scalar = 5
expected = [[5, 5, 40, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #631 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 4, 6, 7, 0], [10, 5, 8, 0, 9, 5], [3, 3, 1, 9, 3, 8], [1, 9, 9, 6, 7, 0]]
scalar = 6
expected = [[36, 30, 24, 36, 42, 0], [60, 30, 48, 0, 54, 30], [18, 18, 6, 54, 18, 48], [6, 54, 54, 36, 42, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #632 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6], [0, 2], [8, 2], [10, 2], [7, 10]]
scalar = 7
expected = [[35, 42], [0, 14], [56, 14], [70, 14], [49, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #633 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4], [8, 1], [0, 3], [7, 2], [2, 7]]
scalar = 8
expected = [[8, 32], [64, 8], [0, 24], [56, 16], [16, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #634 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4, 0], [10, 7, 8], [2, 7, 3], [10, 0, 10], [5, 7, 9], [2, 9, 7]]
scalar = 5
expected = [[5, 20, 0], [50, 35, 40], [10, 35, 15], [50, 0, 50], [25, 35, 45], [10, 45, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #635 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 4, 5, 5, 10, 5, 8, 2, 10], [0, 6, 10, 3, 1, 5, 3, 4, 5, 2], [6, 4, 5, 4, 0, 7, 8, 1, 4, 5], [2, 1, 7, 5, 6, 10, 9, 7, 3, 7]]
scalar = 8
expected = [[80, 16, 32, 40, 40, 80, 40, 64, 16, 80], [0, 48, 80, 24, 8, 40, 24, 32, 40, 16], [48, 32, 40, 32, 0, 56, 64, 8, 32, 40], [16, 8, 56, 40, 48, 80, 72, 56, 24, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #636 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 3, 6, 2, 6, 10, 4, 6, 10], [7, 10, 0, 5, 0, 0, 1, 2, 0, 9], [6, 0, 0, 8, 0, 8, 0, 4, 10, 10], [5, 8, 2, 9, 6, 5, 9, 0, 6, 7], [2, 1, 2, 9, 2, 4, 6, 1, 10, 5], [4, 6, 3, 7, 4, 10, 4, 1, 2, 5], [5, 10, 6, 10, 4, 4, 2, 1, 5, 0]]
scalar = 6
expected = [[60, 48, 18, 36, 12, 36, 60, 24, 36, 60], [42, 60, 0, 30, 0, 0, 6, 12, 0, 54], [36, 0, 0, 48, 0, 48, 0, 24, 60, 60], [30, 48, 12, 54, 36, 30, 54, 0, 36, 42], [12, 6, 12, 54, 12, 24, 36, 6, 60, 30], [24, 36, 18, 42, 24, 60, 24, 6, 12, 30], [30, 60, 36, 60, 24, 24, 12, 6, 30, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #637 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 9], [8, 10, 2], [6, 1, 6], [10, 7, 9], [3, 3, 8], [7, 3, 8], [3, 6, 0], [0, 1, 3]]
scalar = 7
expected = [[49, 63, 63], [56, 70, 14], [42, 7, 42], [70, 49, 63], [21, 21, 56], [49, 21, 56], [21, 42, 0], [0, 7, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #638 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 7, 2, 9, 10, 4, 9, 1], [4, 10, 9, 2, 8, 9, 10, 9, 0], [0, 1, 5, 7, 1, 4, 9, 2, 2], [9, 7, 5, 0, 3, 2, 0, 7, 3], [5, 8, 10, 1, 8, 2, 0, 10, 6]]
scalar = 10
expected = [[70, 70, 70, 20, 90, 100, 40, 90, 10], [40, 100, 90, 20, 80, 90, 100, 90, 0], [0, 10, 50, 70, 10, 40, 90, 20, 20], [90, 70, 50, 0, 30, 20, 0, 70, 30], [50, 80, 100, 10, 80, 20, 0, 100, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #639 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 5, 5, 10, 6, 6]]
scalar = 1
expected = [[7, 2, 5, 5, 10, 6, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #640 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 7, 9, 2, 1], [10, 7, 5, 0, 9, 6], [7, 5, 0, 3, 4, 0], [0, 8, 4, 2, 6, 6], [10, 3, 5, 10, 10, 8], [2, 6, 3, 5, 7, 4], [4, 8, 1, 10, 10, 0], [2, 10, 7, 6, 6, 5], [6, 2, 5, 8, 2, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #641 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 7, 3, 6, 7, 5, 4, 1, 7], [9, 0, 2, 8, 2, 8, 6, 2, 6, 9], [5, 0, 4, 0, 8, 3, 1, 4, 3, 5], [3, 1, 9, 10, 4, 8, 3, 2, 2, 9], [6, 1, 0, 7, 6, 6, 7, 1, 9, 4], [1, 4, 4, 0, 2, 7, 6, 7, 1, 9], [9, 4, 6, 4, 5, 0, 7, 5, 3, 1], [9, 1, 3, 2, 1, 7, 4, 3, 5, 5], [7, 7, 3, 9, 0, 1, 8, 4, 9, 9]]
scalar = 9
expected = [[54, 90, 63, 27, 54, 63, 45, 36, 9, 63], [81, 0, 18, 72, 18, 72, 54, 18, 54, 81], [45, 0, 36, 0, 72, 27, 9, 36, 27, 45], [27, 9, 81, 90, 36, 72, 27, 18, 18, 81], [54, 9, 0, 63, 54, 54, 63, 9, 81, 36], [9, 36, 36, 0, 18, 63, 54, 63, 9, 81], [81, 36, 54, 36, 45, 0, 63, 45, 27, 9], [81, 9, 27, 18, 9, 63, 36, 27, 45, 45], [63, 63, 27, 81, 0, 9, 72, 36, 81, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #642 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 5, 9, 0, 0, 6, 4, 8], [6, 2, 1, 7, 9, 10, 7, 1, 3], [6, 7, 9, 1, 4, 1, 2, 3, 0], [2, 9, 10, 5, 10, 0, 9, 4, 9], [1, 4, 9, 8, 0, 0, 1, 10, 9], [10, 4, 2, 1, 4, 10, 2, 2, 8], [7, 5, 5, 0, 1, 3, 5, 10, 9], [10, 8, 6, 0, 3, 2, 6, 9, 2]]
scalar = 8
expected = [[48, 72, 40, 72, 0, 0, 48, 32, 64], [48, 16, 8, 56, 72, 80, 56, 8, 24], [48, 56, 72, 8, 32, 8, 16, 24, 0], [16, 72, 80, 40, 80, 0, 72, 32, 72], [8, 32, 72, 64, 0, 0, 8, 80, 72], [80, 32, 16, 8, 32, 80, 16, 16, 64], [56, 40, 40, 0, 8, 24, 40, 80, 72], [80, 64, 48, 0, 24, 16, 48, 72, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #643 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 1, 0, 7, 10, 6, 8, 8, 2, 2], [1, 6, 6, 4, 3, 7, 8, 6, 4, 7], [1, 6, 6, 4, 0, 5, 2, 6, 3, 9], [4, 7, 5, 10, 3, 0, 6, 7, 1, 9], [6, 0, 0, 10, 8, 1, 6, 1, 5, 3], [3, 7, 7, 2, 3, 1, 0, 0, 5, 5]]
scalar = 10
expected = [[100, 10, 0, 70, 100, 60, 80, 80, 20, 20], [10, 60, 60, 40, 30, 70, 80, 60, 40, 70], [10, 60, 60, 40, 0, 50, 20, 60, 30, 90], [40, 70, 50, 100, 30, 0, 60, 70, 10, 90], [60, 0, 0, 100, 80, 10, 60, 10, 50, 30], [30, 70, 70, 20, 30, 10, 0, 0, 50, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #644 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0], [8, 1], [2, 3], [8, 10], [5, 6], [0, 6], [2, 5], [2, 8]]
scalar = 10
expected = [[30, 0], [80, 10], [20, 30], [80, 100], [50, 60], [0, 60], [20, 50], [20, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #645 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 2, 2, 3, 1, 0, 6, 1, 2]]
scalar = 9
expected = [[81, 90, 18, 18, 27, 9, 0, 54, 9, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #646 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 4, 9, 1, 2, 8, 8, 10, 6], [4, 7, 2, 2, 9, 7, 1, 6, 7], [4, 8, 9, 6, 1, 3, 3, 7, 4], [6, 2, 3, 9, 2, 9, 8, 3, 5], [9, 1, 10, 4, 0, 2, 4, 9, 1], [6, 6, 5, 9, 6, 5, 3, 0, 3], [2, 2, 3, 5, 1, 2, 0, 1, 9], [4, 1, 7, 5, 5, 7, 6, 10, 5], [7, 6, 9, 5, 4, 7, 8, 9, 2]]
scalar = 7
expected = [[49, 28, 63, 7, 14, 56, 56, 70, 42], [28, 49, 14, 14, 63, 49, 7, 42, 49], [28, 56, 63, 42, 7, 21, 21, 49, 28], [42, 14, 21, 63, 14, 63, 56, 21, 35], [63, 7, 70, 28, 0, 14, 28, 63, 7], [42, 42, 35, 63, 42, 35, 21, 0, 21], [14, 14, 21, 35, 7, 14, 0, 7, 63], [28, 7, 49, 35, 35, 49, 42, 70, 35], [49, 42, 63, 35, 28, 49, 56, 63, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #647 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 10, 4, 4, 4, 0, 1], [2, 8, 5, 3, 9, 6, 6, 4], [10, 2, 0, 10, 2, 3, 4, 7], [2, 5, 5, 5, 9, 4, 1, 3], [10, 9, 8, 2, 3, 10, 7, 6], [6, 2, 2, 4, 7, 5, 1, 8], [8, 6, 7, 6, 9, 10, 5, 3], [10, 0, 9, 7, 8, 0, 9, 8]]
scalar = 6
expected = [[30, 54, 60, 24, 24, 24, 0, 6], [12, 48, 30, 18, 54, 36, 36, 24], [60, 12, 0, 60, 12, 18, 24, 42], [12, 30, 30, 30, 54, 24, 6, 18], [60, 54, 48, 12, 18, 60, 42, 36], [36, 12, 12, 24, 42, 30, 6, 48], [48, 36, 42, 36, 54, 60, 30, 18], [60, 0, 54, 42, 48, 0, 54, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #648 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 10, 4, 0, 1, 9, 1], [3, 10, 0, 5, 10, 3, 3, 10], [6, 1, 6, 7, 5, 5, 0, 9], [2, 2, 6, 2, 0, 10, 0, 6], [8, 5, 9, 2, 7, 8, 2, 3], [5, 3, 0, 3, 7, 5, 3, 2], [1, 4, 4, 8, 6, 5, 0, 8], [8, 6, 1, 3, 9, 7, 8, 5], [9, 1, 2, 3, 5, 6, 0, 3], [9, 6, 1, 0, 10, 5, 6, 5]]
scalar = 7
expected = [[70, 56, 70, 28, 0, 7, 63, 7], [21, 70, 0, 35, 70, 21, 21, 70], [42, 7, 42, 49, 35, 35, 0, 63], [14, 14, 42, 14, 0, 70, 0, 42], [56, 35, 63, 14, 49, 56, 14, 21], [35, 21, 0, 21, 49, 35, 21, 14], [7, 28, 28, 56, 42, 35, 0, 56], [56, 42, 7, 21, 63, 49, 56, 35], [63, 7, 14, 21, 35, 42, 0, 21], [63, 42, 7, 0, 70, 35, 42, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #649 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 7], [9, 8, 10], [1, 5, 3], [1, 5, 9], [7, 10, 7], [9, 5, 2], [1, 4, 2], [9, 6, 10], [7, 7, 4], [7, 4, 3]]
scalar = 6
expected = [[18, 18, 42], [54, 48, 60], [6, 30, 18], [6, 30, 54], [42, 60, 42], [54, 30, 12], [6, 24, 12], [54, 36, 60], [42, 42, 24], [42, 24, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #650 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 1, 8, 0, 6, 1, 1, 4, 0], [7, 1, 1, 10, 8, 8, 3, 10, 10, 4], [5, 0, 1, 4, 2, 9, 5, 0, 5, 10], [10, 4, 4, 3, 6, 7, 10, 1, 10, 7], [0, 0, 8, 6, 2, 5, 3, 10, 4, 1], [6, 1, 6, 7, 9, 3, 10, 10, 4, 5]]
scalar = 6
expected = [[12, 60, 6, 48, 0, 36, 6, 6, 24, 0], [42, 6, 6, 60, 48, 48, 18, 60, 60, 24], [30, 0, 6, 24, 12, 54, 30, 0, 30, 60], [60, 24, 24, 18, 36, 42, 60, 6, 60, 42], [0, 0, 48, 36, 12, 30, 18, 60, 24, 6], [36, 6, 36, 42, 54, 18, 60, 60, 24, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #651 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [0], [9], [9], [4], [4], [6]]
scalar = 2
expected = [[18], [0], [18], [18], [8], [8], [12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #652 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [1]]
scalar = 3
expected = [[18], [3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #653 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [6], [5]]
scalar = 9
expected = [[72], [54], [45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #654 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [1], [5], [7], [2], [5], [0], [10], [10], [0]]
scalar = 10
expected = [[60], [10], [50], [70], [20], [50], [0], [100], [100], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #655 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 6, 6, 9], [7, 4, 7, 1, 8], [1, 8, 1, 4, 10], [5, 1, 10, 7, 6], [4, 8, 5, 2, 0], [8, 10, 7, 0, 7], [4, 6, 7, 6, 8], [0, 3, 2, 4, 1], [8, 10, 4, 2, 8], [8, 8, 6, 10, 6]]
scalar = 9
expected = [[81, 9, 54, 54, 81], [63, 36, 63, 9, 72], [9, 72, 9, 36, 90], [45, 9, 90, 63, 54], [36, 72, 45, 18, 0], [72, 90, 63, 0, 63], [36, 54, 63, 54, 72], [0, 27, 18, 36, 9], [72, 90, 36, 18, 72], [72, 72, 54, 90, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #656 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 7, 1, 6, 7, 0, 8, 0, 3], [4, 0, 4, 10, 3, 3, 1, 6, 7, 6], [3, 5, 6, 5, 2, 2, 6, 0, 10, 0], [5, 2, 7, 9, 9, 9, 10, 8, 1, 5], [3, 3, 9, 0, 7, 2, 7, 9, 1, 8], [2, 2, 2, 3, 5, 2, 4, 2, 3, 1], [7, 3, 0, 3, 9, 8, 5, 5, 2, 3], [0, 1, 1, 6, 9, 7, 2, 1, 2, 7], [4, 5, 5, 7, 9, 5, 8, 5, 0, 5], [4, 3, 6, 4, 9, 10, 7, 7, 6, 5]]
scalar = 7
expected = [[7, 63, 49, 7, 42, 49, 0, 56, 0, 21], [28, 0, 28, 70, 21, 21, 7, 42, 49, 42], [21, 35, 42, 35, 14, 14, 42, 0, 70, 0], [35, 14, 49, 63, 63, 63, 70, 56, 7, 35], [21, 21, 63, 0, 49, 14, 49, 63, 7, 56], [14, 14, 14, 21, 35, 14, 28, 14, 21, 7], [49, 21, 0, 21, 63, 56, 35, 35, 14, 21], [0, 7, 7, 42, 63, 49, 14, 7, 14, 49], [28, 35, 35, 49, 63, 35, 56, 35, 0, 35], [28, 21, 42, 28, 63, 70, 49, 49, 42, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #657 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 4, 10, 10, 0], [1, 6, 6, 3, 10, 4], [7, 7, 9, 5, 3, 7], [0, 0, 10, 0, 3, 7], [6, 3, 2, 8, 8, 4], [8, 4, 2, 9, 0, 0], [9, 3, 5, 3, 9, 1]]
scalar = 2
expected = [[2, 18, 8, 20, 20, 0], [2, 12, 12, 6, 20, 8], [14, 14, 18, 10, 6, 14], [0, 0, 20, 0, 6, 14], [12, 6, 4, 16, 16, 8], [16, 8, 4, 18, 0, 0], [18, 6, 10, 6, 18, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #658 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2, 0, 3, 4, 3, 2, 4, 2, 3], [4, 3, 1, 3, 4, 8, 4, 0, 6, 5], [5, 3, 9, 0, 5, 3, 2, 1, 5, 0], [7, 4, 7, 9, 3, 0, 2, 6, 7, 6], [6, 5, 3, 4, 0, 6, 8, 6, 9, 3], [10, 9, 10, 10, 10, 7, 7, 5, 6, 9], [1, 7, 8, 7, 1, 8, 3, 0, 4, 3], [10, 6, 3, 8, 1, 2, 7, 2, 8, 1], [6, 8, 5, 0, 6, 5, 10, 9, 0, 7], [2, 6, 7, 10, 3, 1, 1, 10, 0, 7]]
scalar = 5
expected = [[15, 10, 0, 15, 20, 15, 10, 20, 10, 15], [20, 15, 5, 15, 20, 40, 20, 0, 30, 25], [25, 15, 45, 0, 25, 15, 10, 5, 25, 0], [35, 20, 35, 45, 15, 0, 10, 30, 35, 30], [30, 25, 15, 20, 0, 30, 40, 30, 45, 15], [50, 45, 50, 50, 50, 35, 35, 25, 30, 45], [5, 35, 40, 35, 5, 40, 15, 0, 20, 15], [50, 30, 15, 40, 5, 10, 35, 10, 40, 5], [30, 40, 25, 0, 30, 25, 50, 45, 0, 35], [10, 30, 35, 50, 15, 5, 5, 50, 0, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #659 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 4, 0], [0, 1, 1], [7, 8, 8], [5, 6, 1], [8, 1, 4]]
scalar = 7
expected = [[63, 28, 0], [0, 7, 7], [49, 56, 56], [35, 42, 7], [56, 7, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #660 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 4, 2, 6], [9, 7, 3, 5, 10], [8, 7, 0, 9, 8], [9, 3, 3, 3, 3]]
scalar = 6
expected = [[24, 6, 24, 12, 36], [54, 42, 18, 30, 60], [48, 42, 0, 54, 48], [54, 18, 18, 18, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #661 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 2], [8, 1, 0], [8, 1, 4]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #662 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7], [3], [5], [8], [10], [7]]
scalar = 2
expected = [[14], [6], [10], [16], [20], [14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #663 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4], [2, 3], [6, 9], [8, 3], [9, 4], [0, 7], [10, 7], [4, 7]]
scalar = 2
expected = [[2, 8], [4, 6], [12, 18], [16, 6], [18, 8], [0, 14], [20, 14], [8, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #664 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 1, 5, 10, 2, 6, 2], [10, 0, 2, 2, 1, 8, 3, 4], [4, 10, 0, 4, 7, 5, 5, 7], [10, 4, 0, 5, 1, 4, 6, 4], [3, 8, 5, 8, 7, 3, 6, 1], [2, 6, 0, 7, 7, 2, 1, 1], [0, 4, 6, 9, 6, 10, 3, 10]]
scalar = 2
expected = [[4, 18, 2, 10, 20, 4, 12, 4], [20, 0, 4, 4, 2, 16, 6, 8], [8, 20, 0, 8, 14, 10, 10, 14], [20, 8, 0, 10, 2, 8, 12, 8], [6, 16, 10, 16, 14, 6, 12, 2], [4, 12, 0, 14, 14, 4, 2, 2], [0, 8, 12, 18, 12, 20, 6, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #665 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 4, 4, 9, 1], [5, 0, 9, 2, 0], [2, 10, 1, 6, 1], [1, 2, 0, 0, 5], [1, 2, 10, 5, 7]]
scalar = 10
expected = [[50, 40, 40, 90, 10], [50, 0, 90, 20, 0], [20, 100, 10, 60, 10], [10, 20, 0, 0, 50], [10, 20, 100, 50, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #666 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 9, 9, 7, 10, 3, 3, 6], [2, 0, 4, 0, 2, 1, 4, 2, 2], [0, 7, 9, 1, 2, 2, 5, 5, 2], [1, 2, 4, 0, 10, 8, 0, 10, 1], [10, 3, 10, 5, 1, 2, 6, 10, 1], [0, 10, 3, 3, 8, 7, 0, 4, 9], [0, 10, 4, 8, 2, 0, 6, 7, 2], [3, 2, 4, 7, 10, 6, 7, 6, 3], [8, 2, 6, 8, 4, 3, 6, 10, 0], [1, 0, 5, 10, 6, 3, 3, 6, 9]]
scalar = 8
expected = [[80, 64, 72, 72, 56, 80, 24, 24, 48], [16, 0, 32, 0, 16, 8, 32, 16, 16], [0, 56, 72, 8, 16, 16, 40, 40, 16], [8, 16, 32, 0, 80, 64, 0, 80, 8], [80, 24, 80, 40, 8, 16, 48, 80, 8], [0, 80, 24, 24, 64, 56, 0, 32, 72], [0, 80, 32, 64, 16, 0, 48, 56, 16], [24, 16, 32, 56, 80, 48, 56, 48, 24], [64, 16, 48, 64, 32, 24, 48, 80, 0], [8, 0, 40, 80, 48, 24, 24, 48, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #667 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5]]
scalar = 2
expected = [[10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #668 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 0, 1, 9, 10, 9, 0], [3, 10, 9, 2, 6, 8, 6, 4], [6, 3, 9, 0, 0, 5, 8, 10], [10, 7, 10, 5, 8, 6, 3, 7], [4, 3, 6, 0, 6, 4, 0, 4], [9, 2, 2, 4, 0, 8, 5, 10], [10, 2, 7, 9, 0, 7, 1, 8], [1, 5, 9, 1, 8, 4, 4, 4]]
scalar = 10
expected = [[30, 40, 0, 10, 90, 100, 90, 0], [30, 100, 90, 20, 60, 80, 60, 40], [60, 30, 90, 0, 0, 50, 80, 100], [100, 70, 100, 50, 80, 60, 30, 70], [40, 30, 60, 0, 60, 40, 0, 40], [90, 20, 20, 40, 0, 80, 50, 100], [100, 20, 70, 90, 0, 70, 10, 80], [10, 50, 90, 10, 80, 40, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #669 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 7, 8, 8, 0, 6, 3, 1, 6]]
scalar = 2
expected = [[10, 10, 14, 16, 16, 0, 12, 6, 2, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #670 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 3, 6, 8, 6], [1, 5, 10, 4, 2, 4], [7, 4, 2, 9, 10, 6], [0, 6, 4, 1, 3, 2], [3, 7, 7, 9, 5, 5], [1, 10, 7, 10, 0, 10], [0, 4, 7, 6, 7, 8], [10, 10, 3, 9, 9, 1], [2, 2, 9, 4, 7, 8]]
scalar = 7
expected = [[56, 21, 21, 42, 56, 42], [7, 35, 70, 28, 14, 28], [49, 28, 14, 63, 70, 42], [0, 42, 28, 7, 21, 14], [21, 49, 49, 63, 35, 35], [7, 70, 49, 70, 0, 70], [0, 28, 49, 42, 49, 56], [70, 70, 21, 63, 63, 7], [14, 14, 63, 28, 49, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #671 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0, 1, 4, 3, 0], [10, 10, 6, 3, 5, 9], [7, 7, 1, 7, 10, 7], [7, 5, 3, 5, 10, 1]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #672 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 5, 1], [1, 8, 3, 5]]
scalar = 2
expected = [[4, 6, 10, 2], [2, 16, 6, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #673 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 9, 5, 5, 7]]
scalar = 6
expected = [[0, 54, 30, 30, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #674 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [8], [7], [10], [2], [9]]
scalar = 10
expected = [[30], [80], [70], [100], [20], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #675 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3, 5, 10, 8, 5, 2, 8, 4, 4], [6, 4, 4, 10, 3, 5, 8, 5, 1, 1], [9, 8, 6, 4, 7, 9, 1, 10, 0, 6], [0, 3, 4, 1, 7, 7, 1, 5, 0, 10], [3, 2, 10, 5, 6, 8, 5, 4, 8, 8], [7, 1, 10, 0, 4, 4, 3, 0, 0, 7], [8, 5, 6, 1, 7, 9, 1, 6, 7, 0]]
scalar = 4
expected = [[20, 12, 20, 40, 32, 20, 8, 32, 16, 16], [24, 16, 16, 40, 12, 20, 32, 20, 4, 4], [36, 32, 24, 16, 28, 36, 4, 40, 0, 24], [0, 12, 16, 4, 28, 28, 4, 20, 0, 40], [12, 8, 40, 20, 24, 32, 20, 16, 32, 32], [28, 4, 40, 0, 16, 16, 12, 0, 0, 28], [32, 20, 24, 4, 28, 36, 4, 24, 28, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #676 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 9, 6, 9, 8], [4, 3, 1, 5, 3, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #677 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [3], [10], [4]]
scalar = 9
expected = [[18], [27], [90], [36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #678 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 4, 4, 1, 3], [0, 1, 9, 1, 6], [8, 2, 0, 3, 5], [3, 10, 0, 5, 2], [1, 5, 6, 6, 10], [9, 5, 7, 8, 9], [0, 0, 7, 1, 1], [3, 2, 10, 2, 7]]
scalar = 3
expected = [[21, 12, 12, 3, 9], [0, 3, 27, 3, 18], [24, 6, 0, 9, 15], [9, 30, 0, 15, 6], [3, 15, 18, 18, 30], [27, 15, 21, 24, 27], [0, 0, 21, 3, 3], [9, 6, 30, 6, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #679 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 5, 2, 5, 0, 1, 5, 7, 4], [0, 5, 0, 0, 0, 6, 3, 1, 8, 0], [7, 3, 8, 5, 7, 3, 7, 10, 3, 7], [10, 3, 6, 3, 1, 6, 8, 2, 4, 8], [9, 1, 1, 4, 2, 4, 5, 2, 10, 6], [0, 8, 8, 6, 1, 8, 0, 7, 0, 7], [1, 0, 4, 8, 10, 0, 9, 9, 2, 9], [4, 10, 6, 1, 7, 7, 4, 2, 4, 9]]
scalar = 10
expected = [[10, 20, 50, 20, 50, 0, 10, 50, 70, 40], [0, 50, 0, 0, 0, 60, 30, 10, 80, 0], [70, 30, 80, 50, 70, 30, 70, 100, 30, 70], [100, 30, 60, 30, 10, 60, 80, 20, 40, 80], [90, 10, 10, 40, 20, 40, 50, 20, 100, 60], [0, 80, 80, 60, 10, 80, 0, 70, 0, 70], [10, 0, 40, 80, 100, 0, 90, 90, 20, 90], [40, 100, 60, 10, 70, 70, 40, 20, 40, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #680 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 2], [5, 0, 9], [6, 6, 6], [10, 2, 5], [9, 6, 9], [5, 1, 9], [2, 0, 8]]
scalar = 9
expected = [[27, 0, 18], [45, 0, 81], [54, 54, 54], [90, 18, 45], [81, 54, 81], [45, 9, 81], [18, 0, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #681 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 3, 5, 5, 5, 3], [6, 2, 6, 4, 6, 3, 9], [8, 10, 0, 7, 7, 2, 2], [4, 4, 10, 6, 5, 9, 1], [1, 2, 9, 9, 6, 8, 7], [3, 5, 7, 7, 5, 9, 8], [1, 6, 2, 6, 3, 7, 8], [0, 9, 2, 8, 9, 5, 6], [7, 0, 4, 10, 7, 7, 8], [10, 10, 5, 9, 0, 2, 10]]
scalar = 1
expected = [[2, 8, 3, 5, 5, 5, 3], [6, 2, 6, 4, 6, 3, 9], [8, 10, 0, 7, 7, 2, 2], [4, 4, 10, 6, 5, 9, 1], [1, 2, 9, 9, 6, 8, 7], [3, 5, 7, 7, 5, 9, 8], [1, 6, 2, 6, 3, 7, 8], [0, 9, 2, 8, 9, 5, 6], [7, 0, 4, 10, 7, 7, 8], [10, 10, 5, 9, 0, 2, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #682 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 1, 10, 0, 9, 2, 10, 3], [0, 3, 1, 7, 10, 2, 1, 2, 5], [0, 1, 6, 5, 6, 1, 1, 8, 9], [9, 0, 10, 5, 5, 4, 6, 0, 4], [2, 5, 3, 6, 5, 10, 1, 1, 1], [3, 5, 5, 8, 4, 4, 10, 7, 1], [2, 7, 0, 2, 0, 7, 1, 4, 4]]
scalar = 7
expected = [[28, 70, 7, 70, 0, 63, 14, 70, 21], [0, 21, 7, 49, 70, 14, 7, 14, 35], [0, 7, 42, 35, 42, 7, 7, 56, 63], [63, 0, 70, 35, 35, 28, 42, 0, 28], [14, 35, 21, 42, 35, 70, 7, 7, 7], [21, 35, 35, 56, 28, 28, 70, 49, 7], [14, 49, 0, 14, 0, 49, 7, 28, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #683 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3, 6, 9, 10, 4], [4, 5, 6, 8, 4, 2], [1, 9, 2, 1, 0, 5], [7, 0, 3, 8, 1, 5], [5, 0, 3, 5, 9, 5], [7, 1, 6, 1, 6, 0], [4, 4, 6, 6, 2, 10], [7, 4, 5, 5, 7, 1], [1, 6, 9, 6, 8, 6], [3, 0, 10, 10, 8, 9]]
scalar = 5
expected = [[25, 15, 30, 45, 50, 20], [20, 25, 30, 40, 20, 10], [5, 45, 10, 5, 0, 25], [35, 0, 15, 40, 5, 25], [25, 0, 15, 25, 45, 25], [35, 5, 30, 5, 30, 0], [20, 20, 30, 30, 10, 50], [35, 20, 25, 25, 35, 5], [5, 30, 45, 30, 40, 30], [15, 0, 50, 50, 40, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #684 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 8, 2, 10], [1, 2, 10, 4, 10], [5, 5, 7, 3, 9], [5, 4, 1, 0, 9], [0, 8, 7, 10, 1], [6, 9, 1, 6, 9], [4, 6, 5, 4, 7]]
scalar = 9
expected = [[81, 81, 72, 18, 90], [9, 18, 90, 36, 90], [45, 45, 63, 27, 81], [45, 36, 9, 0, 81], [0, 72, 63, 90, 9], [54, 81, 9, 54, 81], [36, 54, 45, 36, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #685 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 0, 2, 1, 8, 6, 6, 5, 5], [7, 9, 4, 2, 0, 6, 6, 2, 6, 4], [9, 10, 5, 7, 10, 7, 10, 8, 1, 7], [1, 8, 10, 9, 9, 2, 9, 8, 6, 7], [9, 6, 4, 9, 0, 0, 9, 10, 0, 9], [9, 9, 8, 3, 2, 0, 2, 3, 10, 10]]
scalar = 4
expected = [[0, 32, 0, 8, 4, 32, 24, 24, 20, 20], [28, 36, 16, 8, 0, 24, 24, 8, 24, 16], [36, 40, 20, 28, 40, 28, 40, 32, 4, 28], [4, 32, 40, 36, 36, 8, 36, 32, 24, 28], [36, 24, 16, 36, 0, 0, 36, 40, 0, 36], [36, 36, 32, 12, 8, 0, 8, 12, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #686 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 4, 6], [8, 10, 10, 7], [10, 0, 7, 8], [5, 9, 3, 10], [1, 6, 3, 1], [5, 2, 0, 6], [7, 1, 3, 2], [4, 4, 6, 5]]
scalar = 8
expected = [[80, 16, 32, 48], [64, 80, 80, 56], [80, 0, 56, 64], [40, 72, 24, 80], [8, 48, 24, 8], [40, 16, 0, 48], [56, 8, 24, 16], [32, 32, 48, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #687 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 5, 10, 7, 5, 8], [3, 8, 8, 9, 5, 10, 7], [2, 2, 3, 10, 9, 0, 9], [4, 7, 5, 10, 1, 6, 7], [8, 0, 3, 6, 10, 8, 1], [9, 8, 0, 6, 8, 5, 7], [1, 5, 9, 7, 5, 4, 0], [2, 2, 5, 7, 6, 3, 9]]
scalar = 4
expected = [[4, 28, 20, 40, 28, 20, 32], [12, 32, 32, 36, 20, 40, 28], [8, 8, 12, 40, 36, 0, 36], [16, 28, 20, 40, 4, 24, 28], [32, 0, 12, 24, 40, 32, 4], [36, 32, 0, 24, 32, 20, 28], [4, 20, 36, 28, 20, 16, 0], [8, 8, 20, 28, 24, 12, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #688 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [4], [0]]
scalar = 4
expected = [[24], [16], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #689 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 8, 0, 2, 1, 7, 6, 8], [9, 10, 5, 3, 8, 5, 8, 0], [0, 10, 3, 5, 8, 2, 10, 6], [8, 10, 7, 6, 2, 8, 6, 4], [9, 5, 8, 7, 4, 9, 8, 2], [6, 10, 6, 5, 2, 9, 10, 4], [2, 10, 4, 1, 2, 3, 7, 3], [0, 6, 7, 2, 1, 4, 5, 8]]
scalar = 4
expected = [[12, 32, 0, 8, 4, 28, 24, 32], [36, 40, 20, 12, 32, 20, 32, 0], [0, 40, 12, 20, 32, 8, 40, 24], [32, 40, 28, 24, 8, 32, 24, 16], [36, 20, 32, 28, 16, 36, 32, 8], [24, 40, 24, 20, 8, 36, 40, 16], [8, 40, 16, 4, 8, 12, 28, 12], [0, 24, 28, 8, 4, 16, 20, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #690 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 1, 3, 1, 10]]
scalar = 3
expected = [[24, 12, 3, 9, 3, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #691 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 4], [0, 4, 7], [10, 0, 0], [0, 10, 2], [4, 9, 8], [7, 10, 0], [9, 5, 0], [1, 8, 5], [4, 3, 1], [1, 8, 4]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #692 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3, 10, 2, 0, 4, 4, 7, 8], [8, 1, 8, 1, 9, 2, 4, 10, 7], [0, 6, 2, 5, 0, 8, 5, 7, 3], [4, 5, 6, 7, 3, 9, 7, 10, 3], [5, 7, 5, 4, 10, 10, 7, 3, 7]]
scalar = 7
expected = [[70, 21, 70, 14, 0, 28, 28, 49, 56], [56, 7, 56, 7, 63, 14, 28, 70, 49], [0, 42, 14, 35, 0, 56, 35, 49, 21], [28, 35, 42, 49, 21, 63, 49, 70, 21], [35, 49, 35, 28, 70, 70, 49, 21, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #693 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 7], [6, 3, 7]]
scalar = 2
expected = [[8, 0, 14], [12, 6, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #694 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 1, 0, 0], [10, 6, 10, 1], [5, 4, 8, 0], [6, 7, 0, 0], [9, 4, 6, 7], [7, 1, 5, 2], [0, 5, 3, 0], [0, 3, 10, 8]]
scalar = 3
expected = [[12, 3, 0, 0], [30, 18, 30, 3], [15, 12, 24, 0], [18, 21, 0, 0], [27, 12, 18, 21], [21, 3, 15, 6], [0, 15, 9, 0], [0, 9, 30, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #695 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 5, 8, 7, 3], [2, 9, 7, 7, 6, 0], [10, 1, 2, 2, 2, 3], [0, 0, 3, 7, 9, 6], [3, 0, 7, 3, 8, 3], [8, 3, 5, 8, 9, 9]]
scalar = 9
expected = [[63, 18, 45, 72, 63, 27], [18, 81, 63, 63, 54, 0], [90, 9, 18, 18, 18, 27], [0, 0, 27, 63, 81, 54], [27, 0, 63, 27, 72, 27], [72, 27, 45, 72, 81, 81]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #696 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 1, 0, 6, 10, 7, 8], [10, 5, 8, 3, 3, 5, 1], [1, 10, 0, 10, 10, 4, 1]]
scalar = 1
expected = [[3, 1, 0, 6, 10, 7, 8], [10, 5, 8, 3, 3, 5, 1], [1, 10, 0, 10, 10, 4, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #697 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 1, 10, 5, 8, 0, 8, 5], [9, 6, 0, 1, 1, 10, 1, 2, 8], [4, 3, 1, 7, 7, 6, 9, 3, 2], [1, 10, 8, 0, 7, 0, 10, 2, 7], [10, 5, 9, 0, 7, 2, 6, 3, 7], [4, 6, 4, 6, 1, 0, 10, 1, 7], [0, 9, 1, 5, 1, 5, 2, 10, 1], [1, 0, 0, 4, 0, 10, 3, 2, 8], [1, 9, 2, 7, 0, 5, 2, 3, 2], [4, 7, 4, 5, 7, 3, 7, 4, 7]]
scalar = 2
expected = [[20, 4, 2, 20, 10, 16, 0, 16, 10], [18, 12, 0, 2, 2, 20, 2, 4, 16], [8, 6, 2, 14, 14, 12, 18, 6, 4], [2, 20, 16, 0, 14, 0, 20, 4, 14], [20, 10, 18, 0, 14, 4, 12, 6, 14], [8, 12, 8, 12, 2, 0, 20, 2, 14], [0, 18, 2, 10, 2, 10, 4, 20, 2], [2, 0, 0, 8, 0, 20, 6, 4, 16], [2, 18, 4, 14, 0, 10, 4, 6, 4], [8, 14, 8, 10, 14, 6, 14, 8, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #698 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [1], [5], [6], [1], [2], [3]]
scalar = 10
expected = [[20], [10], [50], [60], [10], [20], [30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #699 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 5, 0, 0, 4, 8, 9], [2, 5, 9, 5, 1, 9, 1, 0], [8, 2, 1, 2, 9, 10, 6, 1], [4, 7, 2, 4, 4, 1, 3, 10], [9, 7, 0, 9, 1, 4, 4, 1], [1, 2, 9, 6, 8, 0, 10, 1], [2, 4, 1, 0, 6, 10, 10, 2], [10, 4, 7, 5, 0, 0, 7, 6], [5, 7, 0, 7, 3, 2, 3, 4], [10, 4, 8, 8, 0, 9, 5, 3]]
scalar = 9
expected = [[81, 90, 45, 0, 0, 36, 72, 81], [18, 45, 81, 45, 9, 81, 9, 0], [72, 18, 9, 18, 81, 90, 54, 9], [36, 63, 18, 36, 36, 9, 27, 90], [81, 63, 0, 81, 9, 36, 36, 9], [9, 18, 81, 54, 72, 0, 90, 9], [18, 36, 9, 0, 54, 90, 90, 18], [90, 36, 63, 45, 0, 0, 63, 54], [45, 63, 0, 63, 27, 18, 27, 36], [90, 36, 72, 72, 0, 81, 45, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #700 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 6, 7, 3, 1], [5, 10, 7, 5, 0, 7], [6, 4, 8, 7, 6, 5], [4, 4, 10, 6, 2, 7], [9, 7, 4, 8, 0, 7], [1, 2, 1, 8, 4, 6], [7, 4, 6, 0, 2, 7], [6, 1, 6, 2, 5, 2]]
scalar = 7
expected = [[49, 7, 42, 49, 21, 7], [35, 70, 49, 35, 0, 49], [42, 28, 56, 49, 42, 35], [28, 28, 70, 42, 14, 49], [63, 49, 28, 56, 0, 49], [7, 14, 7, 56, 28, 42], [49, 28, 42, 0, 14, 49], [42, 7, 42, 14, 35, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #701 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [10], [3], [7], [1], [5], [3]]
scalar = 4
expected = [[4], [40], [12], [28], [4], [20], [12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #702 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9]]
scalar = 0
expected = [[0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #703 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 0, 6, 5, 2, 10, 7, 1], [5, 8, 0, 10, 8, 6, 7, 0, 0], [4, 8, 2, 8, 8, 9, 5, 8, 10], [4, 0, 7, 1, 10, 1, 5, 6, 5], [2, 10, 3, 6, 9, 2, 6, 4, 9]]
scalar = 8
expected = [[48, 72, 0, 48, 40, 16, 80, 56, 8], [40, 64, 0, 80, 64, 48, 56, 0, 0], [32, 64, 16, 64, 64, 72, 40, 64, 80], [32, 0, 56, 8, 80, 8, 40, 48, 40], [16, 80, 24, 48, 72, 16, 48, 32, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #704 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [5], [0]]
scalar = 4
expected = [[0], [20], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #705 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5, 2, 1, 2], [1, 6, 10, 10, 8], [4, 2, 6, 7, 3], [10, 4, 8, 3, 5], [10, 3, 9, 0, 3], [3, 2, 10, 2, 8]]
scalar = 7
expected = [[14, 35, 14, 7, 14], [7, 42, 70, 70, 56], [28, 14, 42, 49, 21], [70, 28, 56, 21, 35], [70, 21, 63, 0, 21], [21, 14, 70, 14, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #706 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 2, 5, 6, 5, 3], [7, 0, 10, 1, 2, 7, 8]]
scalar = 7
expected = [[49, 35, 14, 35, 42, 35, 21], [49, 0, 70, 7, 14, 49, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #707 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 7, 7], [1, 10, 3, 8]]
scalar = 1
expected = [[7, 7, 7, 7], [1, 10, 3, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #708 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 0], [9, 7, 9], [4, 9, 0], [7, 9, 10], [9, 1, 6]]
scalar = 5
expected = [[35, 25, 0], [45, 35, 45], [20, 45, 0], [35, 45, 50], [45, 5, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #709 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 4], [10, 1], [9, 4], [3, 1], [5, 0], [5, 9], [2, 8], [8, 5], [8, 6]]
scalar = 4
expected = [[20, 16], [40, 4], [36, 16], [12, 4], [20, 0], [20, 36], [8, 32], [32, 20], [32, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #710 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 6, 1, 0, 6, 8, 7, 3], [7, 5, 0, 4, 7, 2, 6, 5], [6, 3, 8, 10, 4, 2, 1, 6], [1, 3, 5, 9, 9, 2, 10, 4], [1, 3, 5, 5, 4, 2, 5, 0], [8, 5, 8, 4, 0, 9, 0, 9], [7, 5, 9, 1, 7, 1, 0, 3], [3, 1, 0, 10, 8, 9, 4, 10], [4, 3, 4, 3, 8, 7, 8, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #711 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 7, 8, 7, 1, 5, 9, 4], [9, 8, 4, 7, 8, 0, 0, 3, 4], [1, 8, 0, 0, 6, 0, 3, 1, 10], [8, 6, 7, 6, 2, 6, 5, 4, 10], [3, 9, 5, 1, 5, 0, 1, 8, 3], [8, 5, 6, 2, 10, 2, 7, 4, 0], [0, 1, 7, 1, 10, 6, 0, 0, 4], [6, 6, 0, 2, 4, 9, 10, 7, 8], [10, 6, 6, 9, 8, 4, 2, 10, 6]]
scalar = 9
expected = [[45, 90, 63, 72, 63, 9, 45, 81, 36], [81, 72, 36, 63, 72, 0, 0, 27, 36], [9, 72, 0, 0, 54, 0, 27, 9, 90], [72, 54, 63, 54, 18, 54, 45, 36, 90], [27, 81, 45, 9, 45, 0, 9, 72, 27], [72, 45, 54, 18, 90, 18, 63, 36, 0], [0, 9, 63, 9, 90, 54, 0, 0, 36], [54, 54, 0, 18, 36, 81, 90, 63, 72], [90, 54, 54, 81, 72, 36, 18, 90, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #712 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 2, 10, 3, 3, 10, 6], [8, 4, 4, 7, 9, 3, 9, 2], [6, 0, 3, 2, 10, 3, 6, 10], [1, 8, 3, 7, 5, 7, 9, 8], [1, 10, 4, 10, 4, 0, 10, 1], [2, 1, 5, 8, 9, 4, 8, 6], [7, 3, 2, 4, 1, 9, 4, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #713 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 1], [2, 2, 0], [7, 1, 9], [9, 6, 5], [0, 8, 5], [8, 8, 10], [3, 1, 10]]
scalar = 9
expected = [[36, 36, 9], [18, 18, 0], [63, 9, 81], [81, 54, 45], [0, 72, 45], [72, 72, 90], [27, 9, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #714 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 1, 6, 3], [6, 7, 7, 2, 8], [9, 10, 7, 6, 1], [1, 7, 10, 2, 10], [3, 4, 0, 9, 8]]
scalar = 1
expected = [[2, 7, 1, 6, 3], [6, 7, 7, 2, 8], [9, 10, 7, 6, 1], [1, 7, 10, 2, 10], [3, 4, 0, 9, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #715 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6, 5, 0, 3, 7], [10, 2, 6, 9, 1, 3], [8, 10, 7, 3, 9, 4], [6, 4, 4, 8, 7, 0], [6, 8, 2, 9, 5, 1], [0, 10, 10, 5, 9, 0], [1, 0, 4, 9, 1, 1]]
scalar = 6
expected = [[30, 36, 30, 0, 18, 42], [60, 12, 36, 54, 6, 18], [48, 60, 42, 18, 54, 24], [36, 24, 24, 48, 42, 0], [36, 48, 12, 54, 30, 6], [0, 60, 60, 30, 54, 0], [6, 0, 24, 54, 6, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #716 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 0, 3], [5, 9, 9, 1], [5, 1, 9, 7], [7, 5, 2, 7], [3, 3, 8, 0], [8, 1, 7, 4], [8, 8, 0, 1]]
scalar = 1
expected = [[0, 1, 0, 3], [5, 9, 9, 1], [5, 1, 9, 7], [7, 5, 2, 7], [3, 3, 8, 0], [8, 1, 7, 4], [8, 8, 0, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #717 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 6, 6, 9, 6], [3, 0, 5, 7, 6, 8], [6, 4, 1, 7, 4, 4], [9, 5, 9, 0, 4, 1]]
scalar = 6
expected = [[36, 54, 36, 36, 54, 36], [18, 0, 30, 42, 36, 48], [36, 24, 6, 42, 24, 24], [54, 30, 54, 0, 24, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #718 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 7], [9, 8], [2, 6], [5, 2], [6, 3], [9, 6]]
scalar = 9
expected = [[0, 63], [81, 72], [18, 54], [45, 18], [54, 27], [81, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #719 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5], [10, 5], [3, 2], [9, 9], [5, 9], [4, 2], [4, 6], [8, 0], [8, 9], [10, 4]]
scalar = 3
expected = [[18, 15], [30, 15], [9, 6], [27, 27], [15, 27], [12, 6], [12, 18], [24, 0], [24, 27], [30, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #720 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 1, 1, 8], [7, 10, 4, 10, 7], [5, 9, 9, 1, 5], [7, 9, 7, 1, 5], [9, 2, 8, 5, 9], [10, 8, 9, 10, 3], [7, 8, 4, 7, 2]]
scalar = 8
expected = [[64, 72, 8, 8, 64], [56, 80, 32, 80, 56], [40, 72, 72, 8, 40], [56, 72, 56, 8, 40], [72, 16, 64, 40, 72], [80, 64, 72, 80, 24], [56, 64, 32, 56, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #721 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 6, 4, 5, 7, 5, 2, 8, 8, 8], [10, 6, 3, 3, 3, 7, 7, 3, 1, 6], [8, 4, 6, 8, 4, 6, 0, 0, 6, 9], [5, 6, 8, 0, 5, 5, 5, 1, 8, 7], [3, 10, 9, 2, 2, 1, 2, 4, 8, 2], [0, 6, 0, 9, 9, 6, 0, 5, 8, 10]]
scalar = 9
expected = [[18, 54, 36, 45, 63, 45, 18, 72, 72, 72], [90, 54, 27, 27, 27, 63, 63, 27, 9, 54], [72, 36, 54, 72, 36, 54, 0, 0, 54, 81], [45, 54, 72, 0, 45, 45, 45, 9, 72, 63], [27, 90, 81, 18, 18, 9, 18, 36, 72, 18], [0, 54, 0, 81, 81, 54, 0, 45, 72, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #722 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 7, 0, 8, 9, 4]]
scalar = 4
expected = [[36, 28, 28, 0, 32, 36, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #723 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8]]
scalar = 0
expected = [[0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #724 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 5, 6], [9, 8, 7, 7]]
scalar = 7
expected = [[56, 49, 35, 42], [63, 56, 49, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #725 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 5, 3, 7, 6, 10, 7, 9, 6], [4, 7, 4, 4, 8, 10, 1, 0, 0, 4], [7, 2, 10, 0, 5, 4, 6, 7, 9, 5], [0, 8, 9, 6, 3, 0, 2, 5, 10, 6], [5, 1, 0, 8, 0, 7, 10, 4, 2, 6]]
scalar = 9
expected = [[54, 0, 45, 27, 63, 54, 90, 63, 81, 54], [36, 63, 36, 36, 72, 90, 9, 0, 0, 36], [63, 18, 90, 0, 45, 36, 54, 63, 81, 45], [0, 72, 81, 54, 27, 0, 18, 45, 90, 54], [45, 9, 0, 72, 0, 63, 90, 36, 18, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #726 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 9, 10, 0, 9, 9, 0], [3, 0, 9, 4, 3, 0, 8, 6], [8, 8, 1, 2, 0, 6, 0, 0], [4, 6, 7, 7, 5, 5, 1, 7]]
scalar = 7
expected = [[7, 49, 63, 70, 0, 63, 63, 0], [21, 0, 63, 28, 21, 0, 56, 42], [56, 56, 7, 14, 0, 42, 0, 0], [28, 42, 49, 49, 35, 35, 7, 49]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #727 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 2, 8, 0, 3], [8, 3, 10, 2, 8, 4], [1, 3, 1, 6, 4, 2], [7, 9, 4, 3, 2, 0], [2, 9, 3, 6, 0, 7], [3, 0, 6, 6, 1, 7], [5, 5, 9, 0, 4, 8], [6, 0, 10, 1, 1, 9], [9, 9, 6, 7, 5, 5], [7, 2, 4, 10, 2, 0]]
scalar = 5
expected = [[35, 25, 10, 40, 0, 15], [40, 15, 50, 10, 40, 20], [5, 15, 5, 30, 20, 10], [35, 45, 20, 15, 10, 0], [10, 45, 15, 30, 0, 35], [15, 0, 30, 30, 5, 35], [25, 25, 45, 0, 20, 40], [30, 0, 50, 5, 5, 45], [45, 45, 30, 35, 25, 25], [35, 10, 20, 50, 10, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #728 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [2], [2], [7], [4], [0], [10], [9]]
scalar = 8
expected = [[64], [16], [16], [56], [32], [0], [80], [72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #729 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 6, 2, 2, 5, 7, 8, 6, 4], [5, 5, 0, 6, 5, 1, 4, 1, 2, 2], [7, 9, 10, 4, 8, 4, 9, 8, 9, 8], [4, 10, 1, 6, 0, 7, 6, 7, 10, 4], [1, 0, 6, 1, 4, 5, 9, 3, 4, 4], [1, 5, 1, 2, 0, 6, 7, 6, 5, 3], [0, 0, 3, 4, 7, 6, 8, 8, 4, 6]]
scalar = 7
expected = [[70, 42, 42, 14, 14, 35, 49, 56, 42, 28], [35, 35, 0, 42, 35, 7, 28, 7, 14, 14], [49, 63, 70, 28, 56, 28, 63, 56, 63, 56], [28, 70, 7, 42, 0, 49, 42, 49, 70, 28], [7, 0, 42, 7, 28, 35, 63, 21, 28, 28], [7, 35, 7, 14, 0, 42, 49, 42, 35, 21], [0, 0, 21, 28, 49, 42, 56, 56, 28, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #730 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 4, 10, 5, 10, 9], [10, 4, 0, 5, 10, 8, 5], [3, 8, 7, 8, 5, 4, 9]]
scalar = 10
expected = [[70, 50, 40, 100, 50, 100, 90], [100, 40, 0, 50, 100, 80, 50], [30, 80, 70, 80, 50, 40, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #731 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 7, 1, 9, 6, 6, 1, 4], [2, 4, 7, 0, 1, 0, 7, 10, 9], [5, 1, 1, 5, 6, 8, 3, 8, 6], [7, 5, 8, 8, 4, 6, 2, 5, 9], [1, 1, 9, 10, 8, 3, 0, 3, 6], [8, 2, 2, 9, 9, 1, 0, 0, 6], [1, 3, 10, 3, 9, 8, 9, 7, 8], [1, 5, 7, 2, 5, 0, 8, 0, 0], [4, 6, 0, 10, 6, 10, 3, 8, 3]]
scalar = 4
expected = [[40, 24, 28, 4, 36, 24, 24, 4, 16], [8, 16, 28, 0, 4, 0, 28, 40, 36], [20, 4, 4, 20, 24, 32, 12, 32, 24], [28, 20, 32, 32, 16, 24, 8, 20, 36], [4, 4, 36, 40, 32, 12, 0, 12, 24], [32, 8, 8, 36, 36, 4, 0, 0, 24], [4, 12, 40, 12, 36, 32, 36, 28, 32], [4, 20, 28, 8, 20, 0, 32, 0, 0], [16, 24, 0, 40, 24, 40, 12, 32, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #732 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 3, 1, 3], [9, 7, 10, 8, 3], [2, 4, 4, 4, 1], [7, 4, 5, 0, 4]]
scalar = 6
expected = [[6, 60, 18, 6, 18], [54, 42, 60, 48, 18], [12, 24, 24, 24, 6], [42, 24, 30, 0, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #733 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [7], [10], [1]]
scalar = 10
expected = [[0], [70], [100], [10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #734 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 6, 7, 10, 9, 10, 7, 3], [2, 10, 1, 0, 6, 9, 5, 1], [4, 5, 0, 10, 5, 8, 5, 2], [3, 9, 7, 10, 0, 8, 10, 7], [5, 3, 3, 5, 2, 2, 6, 5], [0, 9, 8, 8, 1, 6, 9, 1], [1, 7, 5, 4, 9, 4, 7, 6], [2, 7, 4, 9, 4, 3, 9, 10]]
scalar = 3
expected = [[21, 18, 21, 30, 27, 30, 21, 9], [6, 30, 3, 0, 18, 27, 15, 3], [12, 15, 0, 30, 15, 24, 15, 6], [9, 27, 21, 30, 0, 24, 30, 21], [15, 9, 9, 15, 6, 6, 18, 15], [0, 27, 24, 24, 3, 18, 27, 3], [3, 21, 15, 12, 27, 12, 21, 18], [6, 21, 12, 27, 12, 9, 27, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #735 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 0, 4, 7, 4, 6, 0, 8], [1, 2, 2, 3, 5, 7, 8, 4], [8, 2, 4, 4, 10, 1, 4, 4], [1, 6, 2, 0, 3, 1, 10, 2]]
scalar = 10
expected = [[0, 0, 40, 70, 40, 60, 0, 80], [10, 20, 20, 30, 50, 70, 80, 40], [80, 20, 40, 40, 100, 10, 40, 40], [10, 60, 20, 0, 30, 10, 100, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #736 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [10], [9], [2], [4], [0], [10], [9], [3]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #737 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 3, 5, 7, 1, 6], [2, 4, 6, 3, 3, 3, 4], [9, 9, 4, 9, 6, 10, 4], [8, 10, 3, 3, 1, 0, 4], [6, 2, 3, 8, 1, 2, 1], [1, 1, 4, 2, 9, 9, 7], [1, 4, 9, 5, 3, 5, 3], [4, 3, 9, 8, 8, 2, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #738 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 1, 6, 7], [1, 2, 8, 2, 10], [4, 1, 7, 6, 10]]
scalar = 7
expected = [[28, 28, 7, 42, 49], [7, 14, 56, 14, 70], [28, 7, 49, 42, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #739 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 10], [1, 4, 5], [4, 7, 9], [7, 8, 8], [4, 1, 4]]
scalar = 3
expected = [[3, 18, 30], [3, 12, 15], [12, 21, 27], [21, 24, 24], [12, 3, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #740 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 0, 5], [6, 3, 2, 10], [4, 2, 5, 2], [2, 2, 8, 1], [4, 10, 9, 6], [5, 8, 3, 7], [9, 8, 8, 6]]
scalar = 7
expected = [[70, 28, 0, 35], [42, 21, 14, 70], [28, 14, 35, 14], [14, 14, 56, 7], [28, 70, 63, 42], [35, 56, 21, 49], [63, 56, 56, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #741 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 5, 8, 1, 1, 2, 5, 3], [0, 5, 2, 4, 2, 5, 0, 7, 4], [7, 9, 2, 2, 1, 8, 7, 0, 0], [8, 0, 10, 10, 4, 0, 9, 8, 4], [4, 10, 0, 10, 8, 4, 9, 2, 6], [7, 9, 1, 5, 4, 10, 7, 0, 10], [10, 3, 2, 10, 10, 6, 5, 5, 10]]
scalar = 4
expected = [[16, 20, 20, 32, 4, 4, 8, 20, 12], [0, 20, 8, 16, 8, 20, 0, 28, 16], [28, 36, 8, 8, 4, 32, 28, 0, 0], [32, 0, 40, 40, 16, 0, 36, 32, 16], [16, 40, 0, 40, 32, 16, 36, 8, 24], [28, 36, 4, 20, 16, 40, 28, 0, 40], [40, 12, 8, 40, 40, 24, 20, 20, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #742 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 0, 8], [4, 10, 0, 2], [8, 2, 2, 8], [5, 10, 2, 10], [0, 5, 2, 5], [2, 5, 5, 9]]
scalar = 5
expected = [[15, 15, 0, 40], [20, 50, 0, 10], [40, 10, 10, 40], [25, 50, 10, 50], [0, 25, 10, 25], [10, 25, 25, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #743 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 7, 8, 9, 3, 1, 5, 5], [10, 5, 7, 6, 4, 1, 10, 8, 6], [4, 8, 4, 7, 1, 0, 6, 10, 7], [2, 8, 0, 5, 5, 0, 7, 10, 4], [2, 6, 0, 4, 3, 10, 5, 5, 7], [0, 9, 8, 3, 3, 6, 0, 6, 2], [7, 2, 8, 8, 0, 1, 0, 10, 8]]
scalar = 8
expected = [[56, 8, 56, 64, 72, 24, 8, 40, 40], [80, 40, 56, 48, 32, 8, 80, 64, 48], [32, 64, 32, 56, 8, 0, 48, 80, 56], [16, 64, 0, 40, 40, 0, 56, 80, 32], [16, 48, 0, 32, 24, 80, 40, 40, 56], [0, 72, 64, 24, 24, 48, 0, 48, 16], [56, 16, 64, 64, 0, 8, 0, 80, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #744 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8]]
scalar = 7
expected = [[56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #745 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 5], [10, 4, 0], [10, 4, 7], [7, 8, 4]]
scalar = 7
expected = [[63, 7, 35], [70, 28, 0], [70, 28, 49], [49, 56, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #746 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 0, 0, 1, 2], [4, 1, 6, 8, 6, 0], [3, 5, 4, 2, 4, 8], [3, 10, 1, 7, 8, 3], [4, 0, 7, 2, 6, 3], [3, 8, 9, 4, 10, 9], [6, 7, 3, 1, 9, 3]]
scalar = 8
expected = [[8, 56, 0, 0, 8, 16], [32, 8, 48, 64, 48, 0], [24, 40, 32, 16, 32, 64], [24, 80, 8, 56, 64, 24], [32, 0, 56, 16, 48, 24], [24, 64, 72, 32, 80, 72], [48, 56, 24, 8, 72, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #747 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 5, 2], [2, 5, 1, 1], [9, 6, 5, 10], [0, 7, 0, 8], [8, 5, 9, 9], [3, 0, 5, 9]]
scalar = 8
expected = [[8, 48, 40, 16], [16, 40, 8, 8], [72, 48, 40, 80], [0, 56, 0, 64], [64, 40, 72, 72], [24, 0, 40, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #748 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 2], [10, 1], [5, 3], [3, 4], [0, 0], [0, 9], [5, 3], [9, 7]]
scalar = 2
expected = [[4, 4], [20, 2], [10, 6], [6, 8], [0, 0], [0, 18], [10, 6], [18, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #749 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5, 8], [4, 9, 9], [7, 9, 3], [6, 5, 7], [4, 9, 2], [1, 0, 4], [7, 2, 6]]
scalar = 10
expected = [[0, 50, 80], [40, 90, 90], [70, 90, 30], [60, 50, 70], [40, 90, 20], [10, 0, 40], [70, 20, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #750 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 2]]
scalar = 10
expected = [[90, 50, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #751 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 3, 7, 7, 0, 8], [10, 5, 9, 0, 9, 7], [8, 0, 9, 1, 0, 6]]
scalar = 2
expected = [[20, 6, 14, 14, 0, 16], [20, 10, 18, 0, 18, 14], [16, 0, 18, 2, 0, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #752 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 6, 4, 0, 9, 3, 0, 0], [8, 3, 4, 1, 10, 9, 8, 3]]
scalar = 3
expected = [[30, 18, 12, 0, 27, 9, 0, 0], [24, 9, 12, 3, 30, 27, 24, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #753 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 5, 7, 9, 3, 6, 4, 8, 2, 6], [6, 0, 4, 5, 7, 6, 3, 5, 5, 9], [0, 4, 6, 9, 6, 4, 10, 4, 0, 4], [4, 3, 2, 0, 1, 7, 3, 0, 5, 4], [8, 9, 1, 3, 9, 7, 9, 3, 2, 6]]
scalar = 5
expected = [[25, 25, 35, 45, 15, 30, 20, 40, 10, 30], [30, 0, 20, 25, 35, 30, 15, 25, 25, 45], [0, 20, 30, 45, 30, 20, 50, 20, 0, 20], [20, 15, 10, 0, 5, 35, 15, 0, 25, 20], [40, 45, 5, 15, 45, 35, 45, 15, 10, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #754 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 4, 3, 9], [10, 4, 4, 10, 10], [6, 1, 8, 4, 1], [9, 7, 10, 5, 8]]
scalar = 5
expected = [[20, 0, 20, 15, 45], [50, 20, 20, 50, 50], [30, 5, 40, 20, 5], [45, 35, 50, 25, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #755 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 10, 2, 8], [6, 2, 4, 9, 2], [10, 1, 5, 6, 7]]
scalar = 5
expected = [[25, 40, 50, 10, 40], [30, 10, 20, 45, 10], [50, 5, 25, 30, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #756 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [1], [6], [10]]
scalar = 4
expected = [[8], [4], [24], [40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #757 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 6, 3, 8], [9, 0, 6, 1], [6, 3, 5, 8], [2, 8, 9, 2], [9, 4, 1, 1], [2, 2, 8, 7], [1, 6, 2, 8], [3, 0, 8, 5]]
scalar = 3
expected = [[6, 18, 9, 24], [27, 0, 18, 3], [18, 9, 15, 24], [6, 24, 27, 6], [27, 12, 3, 3], [6, 6, 24, 21], [3, 18, 6, 24], [9, 0, 24, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #758 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 3, 4, 8, 2, 3, 10, 5], [9, 10, 0, 4, 10, 6, 7, 2], [1, 3, 5, 9, 10, 6, 10, 1], [2, 7, 7, 1, 4, 3, 8, 8], [7, 2, 4, 9, 5, 4, 10, 10], [4, 7, 7, 7, 8, 3, 8, 8], [9, 1, 3, 6, 2, 8, 8, 1]]
scalar = 10
expected = [[60, 30, 40, 80, 20, 30, 100, 50], [90, 100, 0, 40, 100, 60, 70, 20], [10, 30, 50, 90, 100, 60, 100, 10], [20, 70, 70, 10, 40, 30, 80, 80], [70, 20, 40, 90, 50, 40, 100, 100], [40, 70, 70, 70, 80, 30, 80, 80], [90, 10, 30, 60, 20, 80, 80, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #759 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5, 1, 6], [6, 0, 3, 9], [0, 6, 2, 4], [1, 8, 0, 9], [4, 8, 4, 2], [8, 6, 1, 5], [2, 9, 5, 7], [3, 7, 5, 0]]
scalar = 3
expected = [[0, 15, 3, 18], [18, 0, 9, 27], [0, 18, 6, 12], [3, 24, 0, 27], [12, 24, 12, 6], [24, 18, 3, 15], [6, 27, 15, 21], [9, 21, 15, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #760 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 7, 6, 6, 0], [7, 2, 6, 6, 4], [0, 5, 1, 1, 1], [6, 7, 4, 10, 4], [5, 7, 6, 10, 3], [4, 3, 1, 8, 1]]
scalar = 1
expected = [[10, 7, 6, 6, 0], [7, 2, 6, 6, 4], [0, 5, 1, 1, 1], [6, 7, 4, 10, 4], [5, 7, 6, 10, 3], [4, 3, 1, 8, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #761 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 9, 0, 7, 8, 2, 9, 7], [9, 5, 7, 2, 3, 0, 0, 10, 10], [9, 0, 0, 6, 0, 5, 7, 0, 3], [10, 1, 6, 1, 10, 0, 3, 2, 9], [8, 5, 0, 6, 7, 0, 0, 2, 10], [4, 8, 2, 3, 6, 7, 5, 2, 4], [2, 7, 4, 6, 10, 4, 7, 5, 10], [9, 1, 0, 4, 10, 0, 3, 7, 7], [4, 4, 5, 7, 0, 10, 9, 0, 5]]
scalar = 3
expected = [[6, 24, 27, 0, 21, 24, 6, 27, 21], [27, 15, 21, 6, 9, 0, 0, 30, 30], [27, 0, 0, 18, 0, 15, 21, 0, 9], [30, 3, 18, 3, 30, 0, 9, 6, 27], [24, 15, 0, 18, 21, 0, 0, 6, 30], [12, 24, 6, 9, 18, 21, 15, 6, 12], [6, 21, 12, 18, 30, 12, 21, 15, 30], [27, 3, 0, 12, 30, 0, 9, 21, 21], [12, 12, 15, 21, 0, 30, 27, 0, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #762 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 2, 6, 4, 7, 10], [8, 9, 5, 5, 0, 7, 4], [5, 9, 5, 8, 10, 0, 1], [9, 3, 9, 5, 4, 3, 9]]
scalar = 3
expected = [[27, 3, 6, 18, 12, 21, 30], [24, 27, 15, 15, 0, 21, 12], [15, 27, 15, 24, 30, 0, 3], [27, 9, 27, 15, 12, 9, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #763 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 9, 2, 8], [2, 3, 0, 2, 10], [8, 10, 6, 10, 10], [5, 6, 0, 0, 7], [4, 8, 5, 5, 2], [10, 6, 0, 4, 8], [1, 8, 0, 4, 5]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #764 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 2, 1, 2, 0, 5, 5, 9, 7]]
scalar = 3
expected = [[9, 6, 3, 6, 0, 15, 15, 27, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #765 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 1, 6], [4, 7, 7, 10], [7, 4, 10, 0], [4, 2, 8, 3], [1, 0, 2, 7], [10, 5, 8, 3], [6, 9, 4, 4], [8, 3, 2, 6], [9, 0, 4, 0]]
scalar = 5
expected = [[15, 50, 5, 30], [20, 35, 35, 50], [35, 20, 50, 0], [20, 10, 40, 15], [5, 0, 10, 35], [50, 25, 40, 15], [30, 45, 20, 20], [40, 15, 10, 30], [45, 0, 20, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #766 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 4, 2, 8, 5, 3], [9, 9, 0, 10, 1, 3, 0], [0, 5, 6, 8, 8, 8, 2], [10, 0, 2, 1, 4, 6, 8], [8, 2, 4, 6, 6, 0, 1], [3, 6, 9, 4, 0, 4, 2], [4, 4, 0, 4, 1, 7, 2]]
scalar = 6
expected = [[12, 6, 24, 12, 48, 30, 18], [54, 54, 0, 60, 6, 18, 0], [0, 30, 36, 48, 48, 48, 12], [60, 0, 12, 6, 24, 36, 48], [48, 12, 24, 36, 36, 0, 6], [18, 36, 54, 24, 0, 24, 12], [24, 24, 0, 24, 6, 42, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #767 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7, 4, 10, 9, 9], [1, 0, 7, 10, 4, 0], [4, 5, 5, 2, 5, 5], [2, 7, 1, 4, 2, 0], [5, 7, 8, 6, 5, 10], [0, 4, 8, 5, 9, 10]]
scalar = 7
expected = [[42, 49, 28, 70, 63, 63], [7, 0, 49, 70, 28, 0], [28, 35, 35, 14, 35, 35], [14, 49, 7, 28, 14, 0], [35, 49, 56, 42, 35, 70], [0, 28, 56, 35, 63, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #768 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 1, 8, 8], [1, 2, 7, 9, 0], [7, 0, 6, 2, 5], [7, 1, 6, 9, 10], [6, 10, 10, 0, 5], [7, 3, 2, 8, 0], [8, 6, 5, 0, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #769 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 10, 9, 2, 0, 10, 2, 3], [0, 1, 6, 5, 5, 8, 5, 8, 6], [4, 3, 8, 3, 3, 6, 1, 7, 3], [0, 9, 2, 8, 10, 3, 5, 7, 5], [4, 1, 7, 3, 5, 5, 8, 7, 7], [10, 2, 9, 2, 2, 0, 10, 7, 8]]
scalar = 8
expected = [[64, 8, 80, 72, 16, 0, 80, 16, 24], [0, 8, 48, 40, 40, 64, 40, 64, 48], [32, 24, 64, 24, 24, 48, 8, 56, 24], [0, 72, 16, 64, 80, 24, 40, 56, 40], [32, 8, 56, 24, 40, 40, 64, 56, 56], [80, 16, 72, 16, 16, 0, 80, 56, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #770 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [3], [2], [4], [2], [3], [4], [1]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #771 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 6, 5, 9, 10, 9, 2], [4, 7, 3, 10, 3, 6, 0], [3, 4, 8, 7, 9, 4, 10], [6, 7, 10, 6, 0, 0, 0], [4, 8, 3, 3, 1, 0, 5]]
scalar = 3
expected = [[9, 18, 15, 27, 30, 27, 6], [12, 21, 9, 30, 9, 18, 0], [9, 12, 24, 21, 27, 12, 30], [18, 21, 30, 18, 0, 0, 0], [12, 24, 9, 9, 3, 0, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #772 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 5, 1, 5, 0, 4], [0, 4, 5, 7, 9, 9, 8], [1, 7, 1, 10, 9, 4, 9], [0, 7, 10, 9, 4, 10, 8], [8, 0, 3, 6, 7, 9, 5], [9, 10, 8, 9, 8, 6, 10], [1, 2, 2, 5, 4, 6, 4], [1, 1, 6, 9, 5, 7, 9], [8, 10, 1, 8, 4, 10, 0], [5, 10, 10, 2, 6, 6, 4]]
scalar = 10
expected = [[20, 100, 50, 10, 50, 0, 40], [0, 40, 50, 70, 90, 90, 80], [10, 70, 10, 100, 90, 40, 90], [0, 70, 100, 90, 40, 100, 80], [80, 0, 30, 60, 70, 90, 50], [90, 100, 80, 90, 80, 60, 100], [10, 20, 20, 50, 40, 60, 40], [10, 10, 60, 90, 50, 70, 90], [80, 100, 10, 80, 40, 100, 0], [50, 100, 100, 20, 60, 60, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #773 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6, 5, 7, 3, 5, 10, 1, 1, 10]]
scalar = 8
expected = [[32, 48, 40, 56, 24, 40, 80, 8, 8, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #774 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 9, 5, 1, 5, 1, 9], [1, 4, 3, 10, 3, 6, 8, 5], [5, 1, 9, 10, 2, 5, 3, 2], [3, 0, 8, 0, 5, 5, 5, 7], [5, 5, 5, 3, 7, 7, 4, 0], [9, 5, 8, 7, 6, 5, 2, 0], [7, 5, 9, 6, 10, 1, 3, 8], [8, 1, 8, 0, 3, 10, 8, 2], [7, 5, 1, 6, 1, 7, 9, 6], [0, 9, 10, 4, 5, 8, 6, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #775 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8, 1, 4, 1, 6, 3, 6, 1, 9], [6, 9, 3, 3, 6, 6, 5, 4, 4, 7], [1, 3, 4, 10, 1, 7, 9, 1, 6, 9], [0, 1, 0, 9, 0, 5, 0, 3, 2, 8], [10, 3, 1, 3, 7, 3, 2, 4, 10, 3], [3, 5, 7, 3, 9, 5, 4, 10, 9, 9], [6, 0, 1, 10, 6, 6, 7, 6, 8, 1], [3, 5, 2, 0, 3, 2, 10, 8, 9, 3], [6, 1, 8, 4, 6, 0, 0, 9, 8, 10], [10, 6, 6, 0, 3, 6, 9, 1, 8, 6]]
scalar = 8
expected = [[64, 64, 8, 32, 8, 48, 24, 48, 8, 72], [48, 72, 24, 24, 48, 48, 40, 32, 32, 56], [8, 24, 32, 80, 8, 56, 72, 8, 48, 72], [0, 8, 0, 72, 0, 40, 0, 24, 16, 64], [80, 24, 8, 24, 56, 24, 16, 32, 80, 24], [24, 40, 56, 24, 72, 40, 32, 80, 72, 72], [48, 0, 8, 80, 48, 48, 56, 48, 64, 8], [24, 40, 16, 0, 24, 16, 80, 64, 72, 24], [48, 8, 64, 32, 48, 0, 0, 72, 64, 80], [80, 48, 48, 0, 24, 48, 72, 8, 64, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #776 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 7], [5, 7, 7], [8, 7, 2], [2, 6, 7], [3, 5, 8]]
scalar = 3
expected = [[3, 9, 21], [15, 21, 21], [24, 21, 6], [6, 18, 21], [9, 15, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #777 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 10, 3, 1, 3, 0, 8, 9], [1, 7, 9, 10, 8, 0, 4, 10, 2], [7, 9, 9, 0, 10, 0, 5, 5, 4], [6, 2, 3, 8, 9, 6, 6, 3, 8], [2, 9, 0, 7, 7, 10, 3, 9, 3]]
scalar = 7
expected = [[49, 70, 70, 21, 7, 21, 0, 56, 63], [7, 49, 63, 70, 56, 0, 28, 70, 14], [49, 63, 63, 0, 70, 0, 35, 35, 28], [42, 14, 21, 56, 63, 42, 42, 21, 56], [14, 63, 0, 49, 49, 70, 21, 63, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #778 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 0, 9, 6, 10, 8, 0, 8], [0, 2, 9, 7, 0, 9, 5, 9, 10], [2, 1, 10, 8, 7, 6, 0, 8, 1], [1, 6, 2, 4, 1, 4, 3, 2, 5], [5, 5, 2, 0, 1, 8, 7, 10, 8]]
scalar = 1
expected = [[6, 0, 0, 9, 6, 10, 8, 0, 8], [0, 2, 9, 7, 0, 9, 5, 9, 10], [2, 1, 10, 8, 7, 6, 0, 8, 1], [1, 6, 2, 4, 1, 4, 3, 2, 5], [5, 5, 2, 0, 1, 8, 7, 10, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #779 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5, 8, 7, 4, 5, 4, 8, 2], [2, 3, 4, 4, 5, 1, 9, 6, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #780 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 6, 10], [0, 2, 9, 10]]
scalar = 9
expected = [[72, 81, 54, 90], [0, 18, 81, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #781 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8, 9, 0, 8, 9], [3, 3, 10, 4, 2, 7]]
scalar = 8
expected = [[32, 64, 72, 0, 64, 72], [24, 24, 80, 32, 16, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #782 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 5, 0, 7, 1, 0, 3, 3, 2], [8, 0, 2, 10, 6, 6, 4, 0, 9, 8]]
scalar = 6
expected = [[60, 30, 30, 0, 42, 6, 0, 18, 18, 12], [48, 0, 12, 60, 36, 36, 24, 0, 54, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #783 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 5, 6], [0, 9, 2, 3], [9, 8, 0, 8], [10, 5, 1, 3], [10, 8, 2, 10], [5, 6, 5, 7], [7, 4, 9, 1], [3, 8, 5, 3], [8, 1, 2, 0], [10, 1, 0, 6]]
scalar = 9
expected = [[54, 9, 45, 54], [0, 81, 18, 27], [81, 72, 0, 72], [90, 45, 9, 27], [90, 72, 18, 90], [45, 54, 45, 63], [63, 36, 81, 9], [27, 72, 45, 27], [72, 9, 18, 0], [90, 9, 0, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #784 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [1], [2], [7], [1], [2], [1], [9]]
scalar = 10
expected = [[90], [10], [20], [70], [10], [20], [10], [90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #785 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9, 7, 10, 4, 6, 6, 4, 7, 5], [2, 10, 1, 4, 2, 7, 10, 7, 4, 10], [7, 6, 7, 6, 2, 10, 8, 2, 8, 6], [1, 8, 6, 5, 4, 5, 6, 7, 8, 10]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #786 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 9], [0, 6, 2], [7, 10, 4], [1, 5, 5]]
scalar = 8
expected = [[40, 64, 72], [0, 48, 16], [56, 80, 32], [8, 40, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #787 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 8, 4, 7, 9, 10], [8, 4, 1, 5, 1, 2, 6], [8, 8, 2, 9, 6, 3, 0], [10, 7, 0, 2, 1, 7, 5], [10, 8, 8, 8, 6, 8, 4], [2, 2, 10, 9, 4, 2, 1], [0, 3, 6, 4, 8, 7, 3], [7, 7, 0, 9, 6, 5, 7], [4, 7, 7, 8, 7, 7, 9], [6, 1, 4, 1, 10, 6, 3]]
scalar = 3
expected = [[27, 3, 24, 12, 21, 27, 30], [24, 12, 3, 15, 3, 6, 18], [24, 24, 6, 27, 18, 9, 0], [30, 21, 0, 6, 3, 21, 15], [30, 24, 24, 24, 18, 24, 12], [6, 6, 30, 27, 12, 6, 3], [0, 9, 18, 12, 24, 21, 9], [21, 21, 0, 27, 18, 15, 21], [12, 21, 21, 24, 21, 21, 27], [18, 3, 12, 3, 30, 18, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #788 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 4], [2, 8, 9], [3, 7, 9], [10, 0, 0], [5, 7, 5]]
scalar = 5
expected = [[10, 50, 20], [10, 40, 45], [15, 35, 45], [50, 0, 0], [25, 35, 25]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #789 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 3, 9, 9, 2, 3, 7, 10, 1], [5, 7, 6, 6, 10, 10, 6, 7, 5], [8, 3, 0, 8, 3, 2, 7, 4, 9], [3, 1, 8, 4, 3, 2, 0, 5, 1], [5, 7, 7, 7, 0, 5, 1, 10, 4], [4, 0, 10, 8, 1, 2, 1, 9, 7], [7, 5, 5, 0, 8, 3, 2, 9, 1], [4, 4, 6, 8, 7, 4, 0, 2, 0], [1, 6, 5, 3, 9, 9, 2, 1, 3]]
scalar = 6
expected = [[36, 18, 54, 54, 12, 18, 42, 60, 6], [30, 42, 36, 36, 60, 60, 36, 42, 30], [48, 18, 0, 48, 18, 12, 42, 24, 54], [18, 6, 48, 24, 18, 12, 0, 30, 6], [30, 42, 42, 42, 0, 30, 6, 60, 24], [24, 0, 60, 48, 6, 12, 6, 54, 42], [42, 30, 30, 0, 48, 18, 12, 54, 6], [24, 24, 36, 48, 42, 24, 0, 12, 0], [6, 36, 30, 18, 54, 54, 12, 6, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #790 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 7, 10, 1, 6, 4, 10, 6], [10, 9, 0, 8, 5, 0, 6, 4], [1, 2, 3, 6, 5, 2, 0, 3], [7, 4, 10, 7, 3, 9, 8, 2], [7, 7, 5, 9, 4, 8, 4, 6], [8, 6, 5, 8, 7, 9, 7, 7]]
scalar = 6
expected = [[12, 42, 60, 6, 36, 24, 60, 36], [60, 54, 0, 48, 30, 0, 36, 24], [6, 12, 18, 36, 30, 12, 0, 18], [42, 24, 60, 42, 18, 54, 48, 12], [42, 42, 30, 54, 24, 48, 24, 36], [48, 36, 30, 48, 42, 54, 42, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #791 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 10, 0, 10, 4, 6, 0, 4, 3], [7, 1, 5, 7, 4, 6, 2, 1, 1, 10], [5, 3, 2, 3, 6, 8, 0, 8, 8, 2], [3, 6, 7, 9, 10, 5, 8, 6, 5, 4], [9, 5, 3, 3, 5, 0, 2, 5, 9, 0]]
scalar = 7
expected = [[56, 42, 70, 0, 70, 28, 42, 0, 28, 21], [49, 7, 35, 49, 28, 42, 14, 7, 7, 70], [35, 21, 14, 21, 42, 56, 0, 56, 56, 14], [21, 42, 49, 63, 70, 35, 56, 42, 35, 28], [63, 35, 21, 21, 35, 0, 14, 35, 63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #792 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 1, 0], [10, 4, 2, 4], [6, 6, 4, 3]]
scalar = 3
expected = [[6, 24, 3, 0], [30, 12, 6, 12], [18, 18, 12, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #793 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 3, 9, 1, 4, 0, 5], [10, 2, 5, 8, 8, 10, 3, 9], [6, 7, 1, 7, 2, 5, 6, 6], [2, 8, 2, 7, 10, 1, 8, 2], [5, 6, 0, 5, 9, 6, 5, 10], [6, 9, 3, 5, 3, 6, 0, 8], [7, 0, 9, 2, 3, 1, 5, 0], [7, 2, 8, 6, 5, 0, 7, 5], [0, 4, 6, 10, 5, 3, 9, 10], [10, 4, 4, 9, 2, 4, 0, 2]]
scalar = 10
expected = [[40, 0, 30, 90, 10, 40, 0, 50], [100, 20, 50, 80, 80, 100, 30, 90], [60, 70, 10, 70, 20, 50, 60, 60], [20, 80, 20, 70, 100, 10, 80, 20], [50, 60, 0, 50, 90, 60, 50, 100], [60, 90, 30, 50, 30, 60, 0, 80], [70, 0, 90, 20, 30, 10, 50, 0], [70, 20, 80, 60, 50, 0, 70, 50], [0, 40, 60, 100, 50, 30, 90, 100], [100, 40, 40, 90, 20, 40, 0, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #794 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 3, 0, 3], [8, 0, 9, 3, 1]]
scalar = 7
expected = [[63, 70, 21, 0, 21], [56, 0, 63, 21, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #795 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 1, 3, 6, 8, 2, 2, 7, 10]]
scalar = 6
expected = [[24, 24, 6, 18, 36, 48, 12, 12, 42, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #796 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 4, 3, 5, 3, 5, 0, 10], [0, 5, 4, 4, 3, 7, 4, 5, 10], [8, 2, 0, 5, 0, 9, 1, 2, 6], [8, 6, 8, 6, 5, 4, 4, 10, 9], [7, 4, 7, 3, 9, 8, 5, 9, 1], [7, 9, 7, 5, 7, 7, 4, 9, 2], [10, 0, 1, 2, 7, 0, 3, 2, 6]]
scalar = 2
expected = [[4, 8, 8, 6, 10, 6, 10, 0, 20], [0, 10, 8, 8, 6, 14, 8, 10, 20], [16, 4, 0, 10, 0, 18, 2, 4, 12], [16, 12, 16, 12, 10, 8, 8, 20, 18], [14, 8, 14, 6, 18, 16, 10, 18, 2], [14, 18, 14, 10, 14, 14, 8, 18, 4], [20, 0, 2, 4, 14, 0, 6, 4, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #797 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 2, 2, 9], [3, 9, 8, 5], [0, 6, 3, 0], [3, 10, 5, 7], [2, 2, 5, 2], [3, 9, 7, 1], [3, 4, 7, 4], [6, 10, 6, 9], [1, 9, 9, 10]]
scalar = 6
expected = [[0, 12, 12, 54], [18, 54, 48, 30], [0, 36, 18, 0], [18, 60, 30, 42], [12, 12, 30, 12], [18, 54, 42, 6], [18, 24, 42, 24], [36, 60, 36, 54], [6, 54, 54, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #798 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9]]
scalar = 1
expected = [[4, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #799 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 3, 8, 6], [6, 2, 4, 4], [9, 7, 4, 8], [3, 1, 6, 6], [2, 9, 1, 2]]
scalar = 9
expected = [[54, 27, 72, 54], [54, 18, 36, 36], [81, 63, 36, 72], [27, 9, 54, 54], [18, 81, 9, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #800 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 9, 10, 0, 6, 7]]
scalar = 6
expected = [[0, 54, 60, 0, 36, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #801 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 0, 1, 3], [0, 10, 3, 0], [10, 9, 7, 6], [5, 4, 4, 0], [4, 10, 3, 5], [1, 10, 8, 3], [7, 10, 1, 0]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #802 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2], [9], [6], [9], [4], [6], [0], [3], [3]]
scalar = 8
expected = [[16], [72], [48], [72], [32], [48], [0], [24], [24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #803 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 1, 4, 2, 1, 4], [4, 9, 2, 8, 2, 1, 2], [3, 6, 3, 1, 4, 10, 6], [6, 2, 9, 7, 2, 0, 3], [3, 8, 0, 8, 9, 2, 0], [1, 2, 7, 0, 5, 6, 4], [8, 5, 5, 2, 7, 7, 10], [1, 1, 2, 2, 0, 10, 2], [5, 5, 6, 1, 4, 2, 4]]
scalar = 8
expected = [[32, 24, 8, 32, 16, 8, 32], [32, 72, 16, 64, 16, 8, 16], [24, 48, 24, 8, 32, 80, 48], [48, 16, 72, 56, 16, 0, 24], [24, 64, 0, 64, 72, 16, 0], [8, 16, 56, 0, 40, 48, 32], [64, 40, 40, 16, 56, 56, 80], [8, 8, 16, 16, 0, 80, 16], [40, 40, 48, 8, 32, 16, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #804 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 10, 2, 2], [4, 10, 10, 5, 0], [1, 4, 0, 4, 2], [3, 1, 3, 7, 5], [7, 4, 2, 7, 5], [10, 5, 8, 2, 3], [6, 6, 1, 10, 3], [1, 7, 8, 1, 1], [2, 2, 10, 1, 9]]
scalar = 7
expected = [[21, 21, 70, 14, 14], [28, 70, 70, 35, 0], [7, 28, 0, 28, 14], [21, 7, 21, 49, 35], [49, 28, 14, 49, 35], [70, 35, 56, 14, 21], [42, 42, 7, 70, 21], [7, 49, 56, 7, 7], [14, 14, 70, 7, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #805 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 9], [8, 4, 5], [2, 6, 2], [6, 2, 5], [6, 4, 7]]
scalar = 8
expected = [[80, 16, 72], [64, 32, 40], [16, 48, 16], [48, 16, 40], [48, 32, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #806 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 1, 4, 3], [5, 6, 5, 9, 5], [0, 7, 0, 9, 5], [8, 5, 4, 6, 1]]
scalar = 4
expected = [[4, 24, 4, 16, 12], [20, 24, 20, 36, 20], [0, 28, 0, 36, 20], [32, 20, 16, 24, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #807 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 1, 0], [7, 10, 8, 10]]
scalar = 10
expected = [[90, 90, 10, 0], [70, 100, 80, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #808 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 3, 7, 10, 7, 2], [6, 3, 0, 2, 3, 3, 3], [3, 0, 3, 0, 10, 8, 10], [8, 1, 6, 5, 6, 6, 6], [10, 9, 1, 8, 2, 8, 6], [4, 5, 0, 9, 1, 9, 1]]
scalar = 8
expected = [[32, 40, 24, 56, 80, 56, 16], [48, 24, 0, 16, 24, 24, 24], [24, 0, 24, 0, 80, 64, 80], [64, 8, 48, 40, 48, 48, 48], [80, 72, 8, 64, 16, 64, 48], [32, 40, 0, 72, 8, 72, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #809 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3, 0, 9, 1], [7, 0, 1, 1, 1], [8, 1, 8, 10, 2], [4, 3, 7, 4, 6], [2, 10, 3, 5, 3], [10, 2, 5, 10, 6], [3, 8, 2, 2, 0]]
scalar = 4
expected = [[16, 12, 0, 36, 4], [28, 0, 4, 4, 4], [32, 4, 32, 40, 8], [16, 12, 28, 16, 24], [8, 40, 12, 20, 12], [40, 8, 20, 40, 24], [12, 32, 8, 8, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #810 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 9, 3, 1, 1, 9, 2, 6, 1], [10, 5, 8, 10, 3, 5, 10, 4, 6, 9], [2, 9, 8, 1, 0, 6, 7, 0, 2, 9], [2, 9, 6, 0, 2, 2, 10, 9, 10, 3], [5, 8, 4, 8, 5, 7, 6, 1, 4, 9], [9, 2, 0, 6, 6, 0, 10, 4, 0, 6], [10, 4, 5, 8, 2, 10, 6, 1, 5, 4], [8, 6, 2, 1, 6, 7, 10, 3, 10, 9], [0, 1, 4, 6, 3, 3, 3, 5, 3, 0], [8, 0, 10, 7, 5, 6, 2, 6, 10, 7]]
scalar = 8
expected = [[56, 64, 72, 24, 8, 8, 72, 16, 48, 8], [80, 40, 64, 80, 24, 40, 80, 32, 48, 72], [16, 72, 64, 8, 0, 48, 56, 0, 16, 72], [16, 72, 48, 0, 16, 16, 80, 72, 80, 24], [40, 64, 32, 64, 40, 56, 48, 8, 32, 72], [72, 16, 0, 48, 48, 0, 80, 32, 0, 48], [80, 32, 40, 64, 16, 80, 48, 8, 40, 32], [64, 48, 16, 8, 48, 56, 80, 24, 80, 72], [0, 8, 32, 48, 24, 24, 24, 40, 24, 0], [64, 0, 80, 56, 40, 48, 16, 48, 80, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #811 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 3, 7, 5, 0, 3, 9], [6, 10, 7, 6, 6, 10, 8, 4], [1, 0, 8, 2, 5, 10, 7, 3], [6, 9, 9, 10, 7, 7, 0, 2], [6, 10, 4, 2, 0, 10, 10, 6], [8, 1, 1, 5, 8, 6, 0, 3], [4, 0, 10, 9, 3, 1, 10, 4], [10, 8, 1, 3, 3, 6, 6, 5], [4, 3, 3, 7, 5, 10, 5, 3]]
scalar = 8
expected = [[56, 56, 24, 56, 40, 0, 24, 72], [48, 80, 56, 48, 48, 80, 64, 32], [8, 0, 64, 16, 40, 80, 56, 24], [48, 72, 72, 80, 56, 56, 0, 16], [48, 80, 32, 16, 0, 80, 80, 48], [64, 8, 8, 40, 64, 48, 0, 24], [32, 0, 80, 72, 24, 8, 80, 32], [80, 64, 8, 24, 24, 48, 48, 40], [32, 24, 24, 56, 40, 80, 40, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #812 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1], [0], [6], [5], [2], [5], [0]]
scalar = 2
expected = [[2], [0], [12], [10], [4], [10], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #813 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 10], [10, 10], [6, 3], [2, 8], [2, 5], [8, 10], [8, 0], [4, 0], [9, 10]]
scalar = 3
expected = [[24, 30], [30, 30], [18, 9], [6, 24], [6, 15], [24, 30], [24, 0], [12, 0], [27, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #814 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 9, 7, 9, 2, 1, 5, 9, 2], [9, 4, 0, 5, 9, 9, 1, 4, 5, 0], [5, 4, 9, 8, 3, 9, 5, 1, 10, 9], [5, 2, 3, 8, 0, 7, 4, 4, 2, 6], [1, 5, 3, 10, 7, 7, 10, 7, 7, 10], [10, 2, 8, 8, 9, 2, 2, 3, 4, 3], [10, 3, 6, 1, 10, 10, 1, 10, 8, 3], [1, 8, 8, 2, 9, 4, 5, 0, 10, 5], [0, 4, 3, 10, 3, 2, 8, 8, 1, 1]]
scalar = 6
expected = [[12, 54, 54, 42, 54, 12, 6, 30, 54, 12], [54, 24, 0, 30, 54, 54, 6, 24, 30, 0], [30, 24, 54, 48, 18, 54, 30, 6, 60, 54], [30, 12, 18, 48, 0, 42, 24, 24, 12, 36], [6, 30, 18, 60, 42, 42, 60, 42, 42, 60], [60, 12, 48, 48, 54, 12, 12, 18, 24, 18], [60, 18, 36, 6, 60, 60, 6, 60, 48, 18], [6, 48, 48, 12, 54, 24, 30, 0, 60, 30], [0, 24, 18, 60, 18, 12, 48, 48, 6, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #815 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0, 3, 2], [8, 0, 1, 1], [5, 7, 2, 8], [3, 2, 2, 3], [9, 6, 9, 10], [9, 7, 8, 8]]
scalar = 7
expected = [[7, 0, 21, 14], [56, 0, 7, 7], [35, 49, 14, 56], [21, 14, 14, 21], [63, 42, 63, 70], [63, 49, 56, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #816 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 7, 5, 8, 8, 9]]
scalar = 1
expected = [[9, 9, 7, 5, 8, 8, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #817 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 6], [0, 2], [4, 2], [0, 4], [6, 8], [9, 2], [3, 6]]
scalar = 5
expected = [[20, 30], [0, 10], [20, 10], [0, 20], [30, 40], [45, 10], [15, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #818 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5], [2, 9], [10, 6], [10, 8], [4, 6], [0, 2], [8, 6], [4, 0]]
scalar = 1
expected = [[0, 5], [2, 9], [10, 6], [10, 8], [4, 6], [0, 2], [8, 6], [4, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #819 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 9, 0, 1, 2, 2, 4, 9, 0, 7], [7, 2, 2, 1, 9, 8, 3, 1, 1, 10], [10, 3, 5, 3, 8, 1, 0, 1, 10, 4], [2, 9, 8, 4, 6, 0, 1, 0, 5, 0], [6, 3, 2, 1, 8, 10, 1, 2, 3, 3], [5, 3, 1, 1, 9, 10, 3, 7, 6, 6], [9, 5, 5, 2, 0, 4, 5, 9, 4, 10]]
scalar = 7
expected = [[63, 63, 0, 7, 14, 14, 28, 63, 0, 49], [49, 14, 14, 7, 63, 56, 21, 7, 7, 70], [70, 21, 35, 21, 56, 7, 0, 7, 70, 28], [14, 63, 56, 28, 42, 0, 7, 0, 35, 0], [42, 21, 14, 7, 56, 70, 7, 14, 21, 21], [35, 21, 7, 7, 63, 70, 21, 49, 42, 42], [63, 35, 35, 14, 0, 28, 35, 63, 28, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #820 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 9, 4, 1, 2, 6, 7, 7], [6, 9, 2, 0, 6, 4, 1, 0, 0], [3, 1, 8, 6, 2, 0, 6, 7, 4], [5, 0, 0, 5, 2, 4, 2, 10, 6]]
scalar = 1
expected = [[4, 10, 9, 4, 1, 2, 6, 7, 7], [6, 9, 2, 0, 6, 4, 1, 0, 0], [3, 1, 8, 6, 2, 0, 6, 7, 4], [5, 0, 0, 5, 2, 4, 2, 10, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #821 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4], [2, 7], [2, 4], [6, 1], [0, 7], [9, 10], [9, 5], [1, 10]]
scalar = 10
expected = [[100, 40], [20, 70], [20, 40], [60, 10], [0, 70], [90, 100], [90, 50], [10, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #822 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 1, 10, 9, 10, 7], [4, 5, 7, 5, 4, 2, 0], [5, 1, 6, 5, 2, 3, 10]]
scalar = 8
expected = [[48, 0, 8, 80, 72, 80, 56], [32, 40, 56, 40, 32, 16, 0], [40, 8, 48, 40, 16, 24, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #823 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 5, 4, 0, 5, 7], [2, 6, 2, 9, 9, 2, 8], [2, 1, 3, 0, 6, 3, 6], [8, 5, 7, 10, 1, 4, 1], [1, 1, 9, 3, 6, 3, 9], [4, 5, 9, 9, 1, 7, 6], [8, 0, 1, 5, 2, 0, 1], [2, 3, 7, 6, 8, 10, 6], [9, 3, 5, 5, 1, 9, 5], [0, 5, 0, 10, 8, 4, 9]]
scalar = 1
expected = [[7, 3, 5, 4, 0, 5, 7], [2, 6, 2, 9, 9, 2, 8], [2, 1, 3, 0, 6, 3, 6], [8, 5, 7, 10, 1, 4, 1], [1, 1, 9, 3, 6, 3, 9], [4, 5, 9, 9, 1, 7, 6], [8, 0, 1, 5, 2, 0, 1], [2, 3, 7, 6, 8, 10, 6], [9, 3, 5, 5, 1, 9, 5], [0, 5, 0, 10, 8, 4, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #824 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 8, 6], [3, 4, 1, 4], [1, 7, 4, 1], [9, 3, 9, 10], [7, 4, 6, 4], [9, 1, 6, 9], [5, 7, 8, 0], [1, 2, 10, 2], [3, 10, 9, 0], [3, 2, 8, 7]]
scalar = 8
expected = [[64, 32, 64, 48], [24, 32, 8, 32], [8, 56, 32, 8], [72, 24, 72, 80], [56, 32, 48, 32], [72, 8, 48, 72], [40, 56, 64, 0], [8, 16, 80, 16], [24, 80, 72, 0], [24, 16, 64, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #825 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 8], [7, 4], [5, 0], [6, 5], [2, 7], [10, 7], [0, 4]]
scalar = 9
expected = [[27, 72], [63, 36], [45, 0], [54, 45], [18, 63], [90, 63], [0, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #826 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 10, 2], [6, 3, 2, 1], [3, 7, 2, 7], [10, 0, 10, 4], [3, 0, 3, 2]]
scalar = 2
expected = [[20, 18, 20, 4], [12, 6, 4, 2], [6, 14, 4, 14], [20, 0, 20, 8], [6, 0, 6, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #827 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10], [1], [7], [4], [0], [2], [4], [5], [4], [7]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #828 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 8, 1, 9, 1, 0], [0, 10, 5, 4, 0, 10], [7, 3, 10, 1, 2, 8], [10, 0, 10, 9, 0, 5], [9, 7, 2, 4, 8, 5], [4, 10, 1, 4, 4, 4], [9, 7, 2, 5, 7, 6], [1, 6, 4, 0, 9, 5]]
scalar = 8
expected = [[40, 64, 8, 72, 8, 0], [0, 80, 40, 32, 0, 80], [56, 24, 80, 8, 16, 64], [80, 0, 80, 72, 0, 40], [72, 56, 16, 32, 64, 40], [32, 80, 8, 32, 32, 32], [72, 56, 16, 40, 56, 48], [8, 48, 32, 0, 72, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #829 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [6], [10], [8]]
scalar = 8
expected = [[0], [48], [80], [64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #830 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 6], [4, 0, 6]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #831 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [4], [7], [7], [9], [0], [7], [10], [2]]
scalar = 10
expected = [[80], [40], [70], [70], [90], [0], [70], [100], [20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #832 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 2, 1, 3, 8, 2, 2], [5, 0, 2, 4, 9, 9, 5, 6], [2, 1, 6, 4, 3, 10, 0, 1], [8, 9, 1, 8, 0, 4, 7, 4], [3, 1, 1, 0, 5, 1, 3, 8], [3, 3, 1, 9, 10, 0, 1, 8], [8, 6, 0, 7, 1, 10, 6, 9], [8, 9, 5, 3, 3, 0, 7, 2], [10, 9, 0, 6, 6, 9, 1, 3]]
scalar = 5
expected = [[35, 35, 10, 5, 15, 40, 10, 10], [25, 0, 10, 20, 45, 45, 25, 30], [10, 5, 30, 20, 15, 50, 0, 5], [40, 45, 5, 40, 0, 20, 35, 20], [15, 5, 5, 0, 25, 5, 15, 40], [15, 15, 5, 45, 50, 0, 5, 40], [40, 30, 0, 35, 5, 50, 30, 45], [40, 45, 25, 15, 15, 0, 35, 10], [50, 45, 0, 30, 30, 45, 5, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #833 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 3, 8, 3, 10, 10, 9, 1], [0, 9, 8, 4, 6, 4, 5, 4, 0]]
scalar = 10
expected = [[100, 20, 30, 80, 30, 100, 100, 90, 10], [0, 90, 80, 40, 60, 40, 50, 40, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #834 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5], [8, 1], [5, 4], [7, 2], [9, 1], [4, 3]]
scalar = 2
expected = [[8, 10], [16, 2], [10, 8], [14, 4], [18, 2], [8, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #835 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 9, 9, 0], [8, 6, 4, 1, 1], [1, 4, 4, 0, 1], [0, 6, 5, 7, 9], [1, 3, 1, 5, 10]]
scalar = 5
expected = [[5, 45, 45, 45, 0], [40, 30, 20, 5, 5], [5, 20, 20, 0, 5], [0, 30, 25, 35, 45], [5, 15, 5, 25, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #836 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [4]]
scalar = 10
expected = [[50], [40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #837 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 7, 3], [0, 3, 9], [1, 6, 5], [0, 7, 2]]
scalar = 9
expected = [[72, 63, 27], [0, 27, 81], [9, 54, 45], [0, 63, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #838 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 0, 2, 1, 10], [10, 4, 7, 3, 8, 4], [3, 2, 1, 2, 4, 9], [5, 6, 10, 8, 6, 6], [3, 4, 0, 6, 6, 6], [7, 1, 8, 0, 4, 0], [6, 9, 7, 9, 8, 10]]
scalar = 9
expected = [[36, 63, 0, 18, 9, 90], [90, 36, 63, 27, 72, 36], [27, 18, 9, 18, 36, 81], [45, 54, 90, 72, 54, 54], [27, 36, 0, 54, 54, 54], [63, 9, 72, 0, 36, 0], [54, 81, 63, 81, 72, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #839 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 4], [8, 1], [3, 8], [3, 7], [3, 9], [9, 4], [5, 10]]
scalar = 1
expected = [[5, 4], [8, 1], [3, 8], [3, 7], [3, 9], [9, 4], [5, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #840 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6], [0], [9], [9], [1], [8], [6], [0], [1]]
scalar = 8
expected = [[48], [0], [72], [72], [8], [64], [48], [0], [8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #841 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 2, 5, 6, 0, 6, 1, 10, 9], [0, 6, 3, 6, 10, 2, 4, 5, 5], [1, 2, 5, 1, 3, 7, 6, 10, 5], [2, 5, 10, 4, 3, 2, 10, 10, 10], [3, 8, 9, 10, 10, 5, 3, 4, 5], [9, 3, 4, 4, 5, 8, 10, 3, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #842 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 7], [8, 5], [7, 1]]
scalar = 1
expected = [[6, 7], [8, 5], [7, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #843 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [7], [1], [3], [1], [1], [0], [10]]
scalar = 6
expected = [[18], [42], [6], [18], [6], [6], [0], [60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #844 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 9, 6, 10, 6, 3], [9, 4, 3, 0, 1, 6, 8]]
scalar = 10
expected = [[50, 20, 90, 60, 100, 60, 30], [90, 40, 30, 0, 10, 60, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #845 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 8, 5, 6, 7, 2, 10]]
scalar = 8
expected = [[48, 0, 64, 40, 48, 56, 16, 80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #846 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0], [4, 0], [8, 1]]
scalar = 6
expected = [[6, 0], [24, 0], [48, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #847 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 6, 1, 6, 9, 5, 5, 9, 2, 8], [2, 4, 6, 1, 6, 4, 3, 7, 5, 0], [9, 7, 1, 9, 8, 8, 2, 0, 6, 8], [2, 0, 10, 8, 4, 2, 1, 3, 0, 4], [0, 7, 4, 0, 9, 10, 5, 1, 10, 1], [5, 6, 6, 8, 5, 3, 5, 3, 10, 4], [9, 2, 0, 6, 2, 6, 0, 10, 1, 6]]
scalar = 10
expected = [[0, 60, 10, 60, 90, 50, 50, 90, 20, 80], [20, 40, 60, 10, 60, 40, 30, 70, 50, 0], [90, 70, 10, 90, 80, 80, 20, 0, 60, 80], [20, 0, 100, 80, 40, 20, 10, 30, 0, 40], [0, 70, 40, 0, 90, 100, 50, 10, 100, 10], [50, 60, 60, 80, 50, 30, 50, 30, 100, 40], [90, 20, 0, 60, 20, 60, 0, 100, 10, 60]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #848 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 0, 8, 6], [7, 6, 2, 2], [9, 2, 5, 2], [1, 0, 1, 5], [5, 3, 4, 2]]
scalar = 2
expected = [[14, 0, 16, 12], [14, 12, 4, 4], [18, 4, 10, 4], [2, 0, 2, 10], [10, 6, 8, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #849 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 6, 0, 5, 8, 4, 7, 4, 1], [0, 2, 7, 7, 0, 0, 6, 4, 3], [2, 3, 8, 4, 8, 2, 0, 0, 1], [10, 0, 9, 1, 8, 0, 5, 4, 7], [1, 4, 8, 2, 7, 5, 9, 8, 4]]
scalar = 6
expected = [[6, 36, 0, 30, 48, 24, 42, 24, 6], [0, 12, 42, 42, 0, 0, 36, 24, 18], [12, 18, 48, 24, 48, 12, 0, 0, 6], [60, 0, 54, 6, 48, 0, 30, 24, 42], [6, 24, 48, 12, 42, 30, 54, 48, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #850 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 4, 4, 5, 6], [5, 2, 9, 8, 2, 0], [2, 5, 5, 6, 1, 10], [4, 10, 9, 6, 9, 6]]
scalar = 5
expected = [[0, 40, 20, 20, 25, 30], [25, 10, 45, 40, 10, 0], [10, 25, 25, 30, 5, 50], [20, 50, 45, 30, 45, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #851 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 3, 2, 7, 2, 8, 8], [10, 0, 0, 4, 7, 0, 4, 7]]
scalar = 8
expected = [[24, 72, 24, 16, 56, 16, 64, 64], [80, 0, 0, 32, 56, 0, 32, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #852 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 4], [0, 0], [10, 6]]
scalar = 7
expected = [[49, 28], [0, 0], [70, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #853 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 1, 3], [9, 8, 1, 5], [4, 0, 5, 7], [5, 10, 9, 0], [3, 4, 3, 5], [2, 1, 6, 9], [0, 8, 1, 4], [7, 9, 8, 0], [3, 8, 6, 7], [10, 3, 9, 6]]
scalar = 5
expected = [[35, 40, 5, 15], [45, 40, 5, 25], [20, 0, 25, 35], [25, 50, 45, 0], [15, 20, 15, 25], [10, 5, 30, 45], [0, 40, 5, 20], [35, 45, 40, 0], [15, 40, 30, 35], [50, 15, 45, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #854 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 9], [10, 1, 6], [5, 8, 3], [5, 0, 10]]
scalar = 7
expected = [[70, 0, 63], [70, 7, 42], [35, 56, 21], [35, 0, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #855 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 0, 10, 3], [2, 3, 1, 2]]
scalar = 9
expected = [[90, 0, 90, 27], [18, 27, 9, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #856 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 5, 9, 7, 2, 8, 5, 0], [7, 9, 0, 6, 4, 0, 6, 7, 3], [4, 0, 4, 5, 1, 5, 3, 6, 10], [5, 2, 2, 6, 3, 1, 5, 4, 0], [0, 1, 3, 10, 3, 6, 0, 2, 7], [3, 10, 5, 7, 5, 2, 9, 9, 8], [0, 5, 5, 2, 2, 0, 9, 7, 5], [9, 10, 9, 10, 6, 10, 3, 4, 8]]
scalar = 6
expected = [[18, 54, 30, 54, 42, 12, 48, 30, 0], [42, 54, 0, 36, 24, 0, 36, 42, 18], [24, 0, 24, 30, 6, 30, 18, 36, 60], [30, 12, 12, 36, 18, 6, 30, 24, 0], [0, 6, 18, 60, 18, 36, 0, 12, 42], [18, 60, 30, 42, 30, 12, 54, 54, 48], [0, 30, 30, 12, 12, 0, 54, 42, 30], [54, 60, 54, 60, 36, 60, 18, 24, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #857 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 2, 6, 1, 2], [1, 1, 10, 5, 4, 3], [10, 10, 2, 5, 6, 4], [3, 4, 5, 2, 0, 9], [6, 7, 8, 1, 5, 1], [0, 8, 10, 4, 0, 3], [10, 1, 4, 1, 4, 7], [1, 10, 3, 2, 2, 6], [9, 4, 4, 3, 1, 0], [2, 3, 8, 7, 5, 0]]
scalar = 6
expected = [[54, 42, 12, 36, 6, 12], [6, 6, 60, 30, 24, 18], [60, 60, 12, 30, 36, 24], [18, 24, 30, 12, 0, 54], [36, 42, 48, 6, 30, 6], [0, 48, 60, 24, 0, 18], [60, 6, 24, 6, 24, 42], [6, 60, 18, 12, 12, 36], [54, 24, 24, 18, 6, 0], [12, 18, 48, 42, 30, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #858 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 5], [3, 9, 3], [3, 5, 5]]
scalar = 7
expected = [[49, 21, 35], [21, 63, 21], [21, 35, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #859 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7], [10, 4], [1, 8], [5, 2]]
scalar = 1
expected = [[4, 7], [10, 4], [1, 8], [5, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #860 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 2, 4, 6], [5, 5, 1, 0]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #861 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 0], [5, 7], [10, 0], [7, 0]]
scalar = 9
expected = [[81, 0], [45, 63], [90, 0], [63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #862 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 8, 2, 8, 9, 2], [8, 3, 9, 8, 9, 10], [6, 4, 6, 5, 3, 4], [7, 1, 4, 9, 8, 10], [2, 1, 3, 1, 4, 7], [6, 4, 8, 6, 6, 3], [2, 6, 2, 2, 10, 7], [8, 4, 10, 10, 0, 1], [3, 5, 4, 0, 1, 10]]
scalar = 9
expected = [[72, 72, 18, 72, 81, 18], [72, 27, 81, 72, 81, 90], [54, 36, 54, 45, 27, 36], [63, 9, 36, 81, 72, 90], [18, 9, 27, 9, 36, 63], [54, 36, 72, 54, 54, 27], [18, 54, 18, 18, 90, 63], [72, 36, 90, 90, 0, 9], [27, 45, 36, 0, 9, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #863 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 2, 8, 10, 5, 3, 8, 4, 0]]
scalar = 4
expected = [[36, 4, 8, 32, 40, 20, 12, 32, 16, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #864 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 10, 9, 5, 0, 2], [0, 9, 7, 8, 6, 9], [3, 9, 3, 5, 4, 1], [7, 9, 1, 7, 3, 8], [2, 0, 8, 3, 10, 9], [9, 3, 7, 9, 10, 4], [8, 10, 2, 6, 3, 9], [3, 5, 3, 6, 1, 0]]
scalar = 2
expected = [[4, 20, 18, 10, 0, 4], [0, 18, 14, 16, 12, 18], [6, 18, 6, 10, 8, 2], [14, 18, 2, 14, 6, 16], [4, 0, 16, 6, 20, 18], [18, 6, 14, 18, 20, 8], [16, 20, 4, 12, 6, 18], [6, 10, 6, 12, 2, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #865 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 3, 3, 0], [0, 5, 2, 1], [6, 2, 2, 8], [10, 3, 8, 9], [5, 10, 10, 2], [6, 8, 8, 9], [9, 4, 2, 0], [6, 8, 0, 3]]
scalar = 10
expected = [[0, 30, 30, 0], [0, 50, 20, 10], [60, 20, 20, 80], [100, 30, 80, 90], [50, 100, 100, 20], [60, 80, 80, 90], [90, 40, 20, 0], [60, 80, 0, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #866 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [10]]
scalar = 2
expected = [[8], [20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #867 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0]]
scalar = 8
expected = [[8, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #868 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 3, 8, 10, 3], [8, 0, 1, 0, 9, 8], [9, 6, 9, 3, 5, 2], [10, 0, 9, 10, 6, 6], [9, 4, 7, 7, 8, 2]]
scalar = 5
expected = [[25, 35, 15, 40, 50, 15], [40, 0, 5, 0, 45, 40], [45, 30, 45, 15, 25, 10], [50, 0, 45, 50, 30, 30], [45, 20, 35, 35, 40, 10]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #869 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 5, 0, 1, 8, 8, 4, 2], [2, 3, 8, 4, 5, 7, 4, 4, 0], [3, 8, 5, 0, 2, 1, 2, 6, 7], [0, 5, 10, 4, 5, 4, 6, 3, 5], [4, 9, 5, 8, 7, 9, 3, 3, 0], [6, 8, 6, 8, 0, 10, 5, 8, 5]]
scalar = 10
expected = [[10, 10, 50, 0, 10, 80, 80, 40, 20], [20, 30, 80, 40, 50, 70, 40, 40, 0], [30, 80, 50, 0, 20, 10, 20, 60, 70], [0, 50, 100, 40, 50, 40, 60, 30, 50], [40, 90, 50, 80, 70, 90, 30, 30, 0], [60, 80, 60, 80, 0, 100, 50, 80, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #870 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 5, 10, 9, 4, 2, 1], [8, 4, 7, 0, 5, 3, 5, 0], [5, 1, 5, 4, 4, 3, 9, 9], [8, 2, 0, 7, 8, 8, 0, 8], [7, 9, 7, 8, 2, 4, 10, 1]]
scalar = 2
expected = [[8, 14, 10, 20, 18, 8, 4, 2], [16, 8, 14, 0, 10, 6, 10, 0], [10, 2, 10, 8, 8, 6, 18, 18], [16, 4, 0, 14, 16, 16, 0, 16], [14, 18, 14, 16, 4, 8, 20, 2]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #871 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 5, 4, 5, 2, 1, 6, 0, 0], [4, 4, 4, 5, 3, 4, 1, 5, 6]]
scalar = 3
expected = [[21, 15, 12, 15, 6, 3, 18, 0, 0], [12, 12, 12, 15, 9, 12, 3, 15, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #872 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 4, 2, 7, 6, 7, 10], [3, 6, 10, 9, 6, 5, 7, 0]]
scalar = 9
expected = [[9, 9, 36, 18, 63, 54, 63, 90], [27, 54, 90, 81, 54, 45, 63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #873 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 7, 9, 5, 7], [6, 3, 2, 1, 0, 9]]
scalar = 6
expected = [[60, 24, 42, 54, 30, 42], [36, 18, 12, 6, 0, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #874 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 2, 5, 5, 6, 7, 2], [2, 2, 8, 8, 8, 7, 7], [7, 9, 10, 6, 3, 0, 0], [6, 2, 5, 8, 3, 1, 10], [6, 1, 1, 5, 10, 6, 3], [2, 1, 2, 9, 10, 7, 0], [4, 8, 1, 8, 4, 0, 6], [2, 2, 5, 6, 6, 0, 3], [10, 0, 5, 7, 10, 3, 5], [6, 8, 8, 5, 3, 6, 7]]
scalar = 10
expected = [[10, 20, 50, 50, 60, 70, 20], [20, 20, 80, 80, 80, 70, 70], [70, 90, 100, 60, 30, 0, 0], [60, 20, 50, 80, 30, 10, 100], [60, 10, 10, 50, 100, 60, 30], [20, 10, 20, 90, 100, 70, 0], [40, 80, 10, 80, 40, 0, 60], [20, 20, 50, 60, 60, 0, 30], [100, 0, 50, 70, 100, 30, 50], [60, 80, 80, 50, 30, 60, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #875 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 6, 9, 1, 7, 8, 5, 1], [8, 7, 8, 5, 0, 7, 5, 3], [9, 8, 6, 1, 9, 2, 7, 4]]
scalar = 3
expected = [[24, 18, 27, 3, 21, 24, 15, 3], [24, 21, 24, 15, 0, 21, 15, 9], [27, 24, 18, 3, 27, 6, 21, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #876 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 3, 0, 0, 5, 2, 10], [2, 3, 0, 7, 4, 9, 1]]
scalar = 1
expected = [[3, 3, 0, 0, 5, 2, 10], [2, 3, 0, 7, 4, 9, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #877 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 1, 6, 0], [1, 7, 10, 10], [6, 2, 8, 9], [1, 2, 2, 2], [0, 7, 2, 9], [5, 0, 9, 3], [10, 9, 7, 9], [7, 1, 8, 8], [3, 4, 8, 10], [2, 4, 4, 8]]
scalar = 2
expected = [[16, 2, 12, 0], [2, 14, 20, 20], [12, 4, 16, 18], [2, 4, 4, 4], [0, 14, 4, 18], [10, 0, 18, 6], [20, 18, 14, 18], [14, 2, 16, 16], [6, 8, 16, 20], [4, 8, 8, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #878 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 8, 3, 6, 5, 9], [9, 3, 5, 7, 7, 1], [1, 4, 6, 9, 3, 0], [8, 4, 4, 2, 6, 4], [0, 5, 7, 7, 7, 4], [10, 8, 10, 2, 6, 7], [0, 2, 0, 3, 10, 3], [1, 6, 6, 10, 5, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #879 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 9, 6, 6, 7, 2, 3, 7], [4, 8, 5, 6, 1, 2, 3, 0], [10, 8, 8, 10, 9, 5, 6, 5], [9, 7, 8, 4, 10, 0, 5, 5], [6, 0, 1, 8, 6, 6, 0, 1]]
scalar = 6
expected = [[48, 54, 36, 36, 42, 12, 18, 42], [24, 48, 30, 36, 6, 12, 18, 0], [60, 48, 48, 60, 54, 30, 36, 30], [54, 42, 48, 24, 60, 0, 30, 30], [36, 0, 6, 48, 36, 36, 0, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #880 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 3, 1, 3, 5], [2, 2, 9, 0, 9], [3, 4, 5, 6, 2], [3, 3, 4, 8, 9], [3, 4, 3, 4, 4], [3, 4, 10, 0, 9], [7, 6, 10, 10, 9], [3, 9, 3, 8, 9], [10, 4, 10, 4, 7], [9, 10, 2, 8, 3]]
scalar = 4
expected = [[28, 12, 4, 12, 20], [8, 8, 36, 0, 36], [12, 16, 20, 24, 8], [12, 12, 16, 32, 36], [12, 16, 12, 16, 16], [12, 16, 40, 0, 36], [28, 24, 40, 40, 36], [12, 36, 12, 32, 36], [40, 16, 40, 16, 28], [36, 40, 8, 32, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #881 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8], [6], [3], [3], [0], [8], [9], [1]]
scalar = 0
expected = [[0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #882 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 4, 1, 6, 4, 8], [9, 0, 6, 7, 5, 5], [8, 9, 6, 10, 3, 7], [3, 4, 3, 4, 2, 6]]
scalar = 2
expected = [[18, 8, 2, 12, 8, 16], [18, 0, 12, 14, 10, 10], [16, 18, 12, 20, 6, 14], [6, 8, 6, 8, 4, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #883 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 3, 5, 4, 3, 10, 0], [4, 0, 2, 4, 8, 5, 10], [0, 5, 0, 9, 1, 0, 9], [8, 7, 6, 7, 6, 1, 4], [10, 8, 0, 9, 5, 0, 5], [3, 10, 10, 5, 9, 2, 2], [10, 6, 7, 5, 0, 3, 1], [7, 9, 9, 5, 3, 2, 3]]
scalar = 3
expected = [[18, 9, 15, 12, 9, 30, 0], [12, 0, 6, 12, 24, 15, 30], [0, 15, 0, 27, 3, 0, 27], [24, 21, 18, 21, 18, 3, 12], [30, 24, 0, 27, 15, 0, 15], [9, 30, 30, 15, 27, 6, 6], [30, 18, 21, 15, 0, 9, 3], [21, 27, 27, 15, 9, 6, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #884 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 6, 9, 9, 6, 3, 1, 9, 3, 6], [9, 9, 5, 7, 1, 8, 6, 3, 8, 8], [5, 9, 1, 4, 0, 5, 9, 2, 5, 8], [8, 7, 4, 2, 8, 3, 8, 7, 0, 3], [4, 9, 0, 8, 3, 2, 3, 8, 10, 5], [4, 8, 7, 0, 6, 2, 1, 9, 7, 0], [7, 2, 2, 2, 7, 7, 6, 10, 8, 1], [0, 2, 5, 0, 10, 7, 10, 1, 0, 4], [4, 8, 0, 0, 3, 4, 3, 4, 6, 4]]
scalar = 2
expected = [[12, 12, 18, 18, 12, 6, 2, 18, 6, 12], [18, 18, 10, 14, 2, 16, 12, 6, 16, 16], [10, 18, 2, 8, 0, 10, 18, 4, 10, 16], [16, 14, 8, 4, 16, 6, 16, 14, 0, 6], [8, 18, 0, 16, 6, 4, 6, 16, 20, 10], [8, 16, 14, 0, 12, 4, 2, 18, 14, 0], [14, 4, 4, 4, 14, 14, 12, 20, 16, 2], [0, 4, 10, 0, 20, 14, 20, 2, 0, 8], [8, 16, 0, 0, 6, 8, 6, 8, 12, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #885 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [8], [6], [7], [8], [2], [0], [7], [3], [7]]
scalar = 9
expected = [[45], [72], [54], [63], [72], [18], [0], [63], [27], [63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #886 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 4, 6, 7], [5, 8, 9, 9, 3], [1, 10, 8, 3, 9], [8, 8, 10, 5, 5], [3, 4, 7, 3, 3]]
scalar = 6
expected = [[12, 24, 24, 36, 42], [30, 48, 54, 54, 18], [6, 60, 48, 18, 54], [48, 48, 60, 30, 30], [18, 24, 42, 18, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #887 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 8, 9, 8, 1, 4], [1, 3, 9, 6, 2, 5], [5, 4, 6, 2, 3, 7], [1, 10, 7, 10, 9, 10]]
scalar = 9
expected = [[0, 72, 81, 72, 9, 36], [9, 27, 81, 54, 18, 45], [45, 36, 54, 18, 27, 63], [9, 90, 63, 90, 81, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #888 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 5, 0, 9, 10, 8, 7, 6], [4, 10, 9, 8, 6, 1, 10, 3, 0], [10, 5, 3, 10, 4, 6, 5, 0, 1], [0, 9, 2, 5, 10, 4, 5, 9, 2], [4, 5, 10, 0, 9, 8, 9, 1, 10], [3, 6, 6, 6, 7, 5, 2, 5, 3], [7, 5, 1, 3, 2, 10, 1, 10, 5], [7, 9, 1, 9, 0, 8, 3, 10, 3], [9, 8, 3, 5, 8, 0, 5, 6, 1]]
scalar = 1
expected = [[2, 8, 5, 0, 9, 10, 8, 7, 6], [4, 10, 9, 8, 6, 1, 10, 3, 0], [10, 5, 3, 10, 4, 6, 5, 0, 1], [0, 9, 2, 5, 10, 4, 5, 9, 2], [4, 5, 10, 0, 9, 8, 9, 1, 10], [3, 6, 6, 6, 7, 5, 2, 5, 3], [7, 5, 1, 3, 2, 10, 1, 10, 5], [7, 9, 1, 9, 0, 8, 3, 10, 3], [9, 8, 3, 5, 8, 0, 5, 6, 1]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #889 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 8], [9, 6, 4]]
scalar = 8
expected = [[48, 40, 64], [72, 48, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #890 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 2, 6, 7]]
scalar = 10
expected = [[100, 20, 60, 70]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #891 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4], [10, 3], [8, 6], [10, 10], [7, 10], [5, 7]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #892 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 6, 9, 6], [8, 7, 6, 8, 8], [0, 6, 8, 10, 3], [0, 4, 7, 0, 10]]
scalar = 10
expected = [[20, 40, 60, 90, 60], [80, 70, 60, 80, 80], [0, 60, 80, 100, 30], [0, 40, 70, 0, 100]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #893 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4, 10], [6, 3, 7], [6, 8, 4]]
scalar = 5
expected = [[50, 20, 50], [30, 15, 35], [30, 40, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #894 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 9, 9, 6, 9, 3], [10, 6, 7, 9, 7, 2, 8], [5, 6, 4, 8, 3, 3, 7], [8, 2, 9, 8, 8, 2, 5], [3, 2, 10, 5, 3, 1, 0], [8, 4, 2, 4, 9, 7, 7]]
scalar = 2
expected = [[0, 2, 18, 18, 12, 18, 6], [20, 12, 14, 18, 14, 4, 16], [10, 12, 8, 16, 6, 6, 14], [16, 4, 18, 16, 16, 4, 10], [6, 4, 20, 10, 6, 2, 0], [16, 8, 4, 8, 18, 14, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #895 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 4, 7], [4, 4, 9], [6, 8, 7], [5, 9, 10], [6, 8, 7], [3, 4, 3]]
scalar = 5
expected = [[0, 20, 35], [20, 20, 45], [30, 40, 35], [25, 45, 50], [30, 40, 35], [15, 20, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #896 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 7, 9]]
scalar = 7
expected = [[42, 28, 49, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #897 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 7, 2, 9, 5], [10, 5, 9, 10, 7], [10, 1, 2, 7, 3], [9, 6, 10, 2, 9], [3, 4, 1, 3, 2], [0, 4, 9, 10, 5], [6, 0, 2, 0, 1], [4, 8, 8, 7, 8], [3, 1, 6, 9, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #898 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 5, 9, 4, 7, 4, 5, 5, 5, 10], [1, 6, 0, 10, 0, 10, 2, 6, 5, 4], [2, 7, 9, 0, 3, 5, 4, 3, 6, 3], [10, 3, 0, 10, 4, 0, 10, 7, 3, 5], [1, 2, 8, 3, 6, 3, 5, 9, 2, 1], [4, 3, 8, 3, 0, 8, 4, 10, 1, 1], [1, 3, 0, 10, 8, 3, 1, 1, 5, 2], [6, 10, 0, 9, 8, 9, 9, 9, 5, 0], [1, 0, 5, 1, 3, 0, 4, 9, 6, 8]]
scalar = 9
expected = [[72, 45, 81, 36, 63, 36, 45, 45, 45, 90], [9, 54, 0, 90, 0, 90, 18, 54, 45, 36], [18, 63, 81, 0, 27, 45, 36, 27, 54, 27], [90, 27, 0, 90, 36, 0, 90, 63, 27, 45], [9, 18, 72, 27, 54, 27, 45, 81, 18, 9], [36, 27, 72, 27, 0, 72, 36, 90, 9, 9], [9, 27, 0, 90, 72, 27, 9, 9, 45, 18], [54, 90, 0, 81, 72, 81, 81, 81, 45, 0], [9, 0, 45, 9, 27, 0, 36, 81, 54, 72]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #899 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 1, 5], [3, 2, 2, 1], [6, 1, 3, 7], [10, 4, 3, 6], [9, 1, 3, 8]]
scalar = 8
expected = [[48, 32, 8, 40], [24, 16, 16, 8], [48, 8, 24, 56], [80, 32, 24, 48], [72, 8, 24, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #900 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8], [3, 9], [0, 1], [0, 7], [8, 5]]
scalar = 8
expected = [[72, 64], [24, 72], [0, 8], [0, 56], [64, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #901 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 2, 5, 2, 4, 3], [10, 2, 5, 7, 6, 7], [2, 4, 7, 6, 7, 0], [8, 1, 4, 6, 6, 1], [2, 5, 10, 1, 7, 6]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #902 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 4, 6, 7, 0, 4, 9, 8], [6, 8, 8, 1, 0, 4, 0, 6], [6, 3, 10, 0, 0, 4, 10, 8], [2, 6, 0, 1, 5, 9, 5, 9]]
scalar = 2
expected = [[6, 8, 12, 14, 0, 8, 18, 16], [12, 16, 16, 2, 0, 8, 0, 12], [12, 6, 20, 0, 0, 8, 20, 16], [4, 12, 0, 2, 10, 18, 10, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #903 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 10, 8, 7, 2, 3, 5], [0, 10, 4, 7, 1, 8, 6], [4, 7, 8, 1, 10, 10, 7], [3, 9, 6, 10, 3, 4, 9], [7, 6, 1, 2, 5, 9, 8], [7, 8, 7, 4, 8, 10, 10], [10, 3, 7, 5, 8, 0, 2]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #904 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 3, 2, 5, 5, 8]]
scalar = 2
expected = [[16, 6, 4, 10, 10, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #905 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9], [2, 7], [5, 4], [8, 2]]
scalar = 10
expected = [[20, 90], [20, 70], [50, 40], [80, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #906 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1], [10, 1], [10, 9], [0, 4], [9, 8], [9, 10], [9, 4]]
scalar = 1
expected = [[0, 1], [10, 1], [10, 9], [0, 4], [9, 8], [9, 10], [9, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #907 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0], [8, 5], [5, 8], [7, 4], [5, 3], [0, 4], [3, 9], [7, 1]]
scalar = 0
expected = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #908 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 6, 10, 6, 6, 8, 5, 3], [6, 0, 5, 0, 0, 3, 1, 5, 4], [6, 6, 10, 9, 3, 5, 9, 2, 2], [2, 3, 3, 8, 8, 6, 8, 6, 8], [8, 0, 5, 8, 10, 9, 3, 2, 7]]
scalar = 8
expected = [[56, 64, 48, 80, 48, 48, 64, 40, 24], [48, 0, 40, 0, 0, 24, 8, 40, 32], [48, 48, 80, 72, 24, 40, 72, 16, 16], [16, 24, 24, 64, 64, 48, 64, 48, 64], [64, 0, 40, 64, 80, 72, 24, 16, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #909 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5], [7], [10], [7], [7]]
scalar = 9
expected = [[45], [63], [90], [63], [63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #910 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 10, 2, 3, 8, 1, 8, 0, 9], [3, 0, 7, 7, 8, 8, 1, 10, 0, 4], [0, 4, 0, 4, 9, 9, 9, 4, 4, 2], [4, 4, 3, 4, 3, 10, 3, 7, 7, 3]]
scalar = 9
expected = [[18, 9, 90, 18, 27, 72, 9, 72, 0, 81], [27, 0, 63, 63, 72, 72, 9, 90, 0, 36], [0, 36, 0, 36, 81, 81, 81, 36, 36, 18], [36, 36, 27, 36, 27, 90, 27, 63, 63, 27]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #911 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 9, 1, 1, 1, 1, 5, 6, 0], [7, 0, 4, 6, 6, 4, 0, 1, 1]]
scalar = 4
expected = [[20, 36, 4, 4, 4, 4, 20, 24, 0], [28, 0, 16, 24, 24, 16, 0, 4, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #912 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 8, 2, 6, 4], [6, 1, 2, 10, 10], [5, 6, 1, 9, 10], [9, 10, 1, 10, 0], [1, 7, 9, 7, 3], [10, 4, 5, 4, 8], [9, 4, 3, 8, 5], [7, 3, 3, 5, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #913 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1, 4], [10, 0, 1], [5, 3, 1], [1, 3, 9], [2, 8, 8], [7, 6, 10], [1, 10, 9], [1, 6, 3]]
scalar = 7
expected = [[42, 7, 28], [70, 0, 7], [35, 21, 7], [7, 21, 63], [14, 56, 56], [49, 42, 70], [7, 70, 63], [7, 42, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #914 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 5, 1], [10, 0, 3], [9, 9, 8], [6, 1, 5], [0, 2, 8], [2, 3, 4]]
scalar = 3
expected = [[12, 15, 3], [30, 0, 9], [27, 27, 24], [18, 3, 15], [0, 6, 24], [6, 9, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #915 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 5, 1, 10, 10, 9], [4, 5, 0, 2, 6, 9, 4], [3, 2, 7, 2, 8, 4, 6], [2, 7, 8, 7, 0, 4, 1], [10, 8, 4, 6, 10, 7, 9], [1, 9, 2, 7, 3, 1, 5], [9, 5, 10, 6, 2, 2, 6], [2, 7, 9, 7, 3, 9, 7], [3, 5, 4, 10, 9, 3, 10]]
scalar = 5
expected = [[45, 50, 25, 5, 50, 50, 45], [20, 25, 0, 10, 30, 45, 20], [15, 10, 35, 10, 40, 20, 30], [10, 35, 40, 35, 0, 20, 5], [50, 40, 20, 30, 50, 35, 45], [5, 45, 10, 35, 15, 5, 25], [45, 25, 50, 30, 10, 10, 30], [10, 35, 45, 35, 15, 45, 35], [15, 25, 20, 50, 45, 15, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #916 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8], [10, 2], [3, 8], [6, 7], [9, 10], [3, 1], [4, 3], [2, 0], [9, 5]]
scalar = 4
expected = [[8, 32], [40, 8], [12, 32], [24, 28], [36, 40], [12, 4], [16, 12], [8, 0], [36, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #917 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 10, 4], [1, 4, 8, 7], [7, 6, 1, 6], [8, 6, 5, 8], [8, 5, 6, 1], [4, 3, 3, 5], [5, 6, 5, 0], [7, 9, 10, 7]]
scalar = 2
expected = [[4, 18, 20, 8], [2, 8, 16, 14], [14, 12, 2, 12], [16, 12, 10, 16], [16, 10, 12, 2], [8, 6, 6, 10], [10, 12, 10, 0], [14, 18, 20, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #918 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 10, 6, 10, 10, 4, 9, 10, 6], [10, 7, 10, 10, 5, 7, 5, 3, 10], [0, 5, 1, 5, 8, 5, 8, 10, 7]]
scalar = 4
expected = [[24, 40, 24, 40, 40, 16, 36, 40, 24], [40, 28, 40, 40, 20, 28, 20, 12, 40], [0, 20, 4, 20, 32, 20, 32, 40, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #919 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 4, 2, 0, 10, 10, 10, 3, 9, 3], [2, 0, 9, 5, 2, 7, 2, 9, 7, 2], [5, 6, 10, 4, 10, 3, 5, 3, 4, 8], [2, 8, 9, 8, 8, 10, 5, 7, 2, 6], [7, 4, 10, 8, 10, 2, 8, 6, 4, 5], [2, 3, 4, 9, 8, 3, 8, 4, 3, 6], [3, 0, 10, 7, 6, 1, 0, 8, 6, 10], [1, 6, 4, 1, 9, 0, 4, 6, 6, 10], [4, 9, 0, 6, 0, 0, 9, 8, 0, 8], [7, 1, 6, 10, 10, 0, 9, 1, 3, 8]]
scalar = 6
expected = [[6, 24, 12, 0, 60, 60, 60, 18, 54, 18], [12, 0, 54, 30, 12, 42, 12, 54, 42, 12], [30, 36, 60, 24, 60, 18, 30, 18, 24, 48], [12, 48, 54, 48, 48, 60, 30, 42, 12, 36], [42, 24, 60, 48, 60, 12, 48, 36, 24, 30], [12, 18, 24, 54, 48, 18, 48, 24, 18, 36], [18, 0, 60, 42, 36, 6, 0, 48, 36, 60], [6, 36, 24, 6, 54, 0, 24, 36, 36, 60], [24, 54, 0, 36, 0, 0, 54, 48, 0, 48], [42, 6, 36, 60, 60, 0, 54, 6, 18, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #920 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 1, 0, 3, 7, 2, 4, 7, 7, 8], [0, 4, 4, 6, 6, 5, 6, 10, 6, 4], [9, 8, 1, 5, 3, 8, 9, 8, 3, 6], [10, 7, 8, 7, 5, 3, 8, 10, 5, 9]]
scalar = 10
expected = [[100, 10, 0, 30, 70, 20, 40, 70, 70, 80], [0, 40, 40, 60, 60, 50, 60, 100, 60, 40], [90, 80, 10, 50, 30, 80, 90, 80, 30, 60], [100, 70, 80, 70, 50, 30, 80, 100, 50, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #921 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 10, 4, 9, 2], [6, 8, 6, 1, 7], [3, 1, 1, 1, 7], [10, 5, 10, 1, 10], [7, 9, 2, 7, 2], [0, 9, 3, 9, 9], [2, 5, 2, 5, 1], [6, 8, 8, 5, 9], [1, 7, 6, 0, 1]]
scalar = 5
expected = [[50, 50, 20, 45, 10], [30, 40, 30, 5, 35], [15, 5, 5, 5, 35], [50, 25, 50, 5, 50], [35, 45, 10, 35, 10], [0, 45, 15, 45, 45], [10, 25, 10, 25, 5], [30, 40, 40, 25, 45], [5, 35, 30, 0, 5]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #922 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 1], [7, 7, 7], [1, 5, 8], [6, 9, 7], [0, 1, 3], [2, 4, 7], [4, 8, 8], [3, 9, 9], [1, 1, 4], [2, 7, 5]]
scalar = 7
expected = [[63, 70, 7], [49, 49, 49], [7, 35, 56], [42, 63, 49], [0, 7, 21], [14, 28, 49], [28, 56, 56], [21, 63, 63], [7, 7, 28], [14, 49, 35]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #923 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 5, 1, 8, 10, 3], [1, 0, 7, 5, 2, 1, 0], [4, 2, 3, 10, 8, 3, 1], [0, 0, 6, 5, 10, 7, 8], [10, 5, 10, 5, 7, 2, 6], [3, 9, 5, 8, 1, 10, 4]]
scalar = 7
expected = [[70, 35, 35, 7, 56, 70, 21], [7, 0, 49, 35, 14, 7, 0], [28, 14, 21, 70, 56, 21, 7], [0, 0, 42, 35, 70, 49, 56], [70, 35, 70, 35, 49, 14, 42], [21, 63, 35, 56, 7, 70, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #924 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 4, 6, 5, 2, 4, 6, 8, 1], [9, 5, 0, 0, 8, 5, 4, 9, 1, 7], [5, 3, 7, 5, 5, 7, 6, 8, 2, 1], [3, 3, 10, 9, 9, 4, 10, 2, 1, 2], [7, 6, 6, 6, 9, 10, 2, 10, 5, 9]]
scalar = 5
expected = [[45, 25, 20, 30, 25, 10, 20, 30, 40, 5], [45, 25, 0, 0, 40, 25, 20, 45, 5, 35], [25, 15, 35, 25, 25, 35, 30, 40, 10, 5], [15, 15, 50, 45, 45, 20, 50, 10, 5, 10], [35, 30, 30, 30, 45, 50, 10, 50, 25, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #925 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 9, 2, 5, 10], [6, 8, 4, 8, 5], [6, 10, 8, 3, 8], [4, 0, 4, 1, 3]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #926 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10, 4, 10, 1, 1, 2, 4, 6], [4, 6, 1, 5, 7, 6, 2, 0, 8], [10, 4, 7, 3, 5, 7, 8, 9, 2], [6, 2, 10, 4, 5, 10, 5, 6, 9], [5, 0, 1, 5, 4, 3, 3, 5, 9]]
scalar = 6
expected = [[24, 60, 24, 60, 6, 6, 12, 24, 36], [24, 36, 6, 30, 42, 36, 12, 0, 48], [60, 24, 42, 18, 30, 42, 48, 54, 12], [36, 12, 60, 24, 30, 60, 30, 36, 54], [30, 0, 6, 30, 24, 18, 18, 30, 54]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #927 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 7, 8, 9], [7, 7, 1, 9], [8, 4, 1, 3], [1, 10, 3, 4], [6, 6, 5, 7], [7, 3, 9, 3], [2, 8, 10, 6], [7, 0, 6, 2], [0, 10, 0, 6]]
scalar = 4
expected = [[36, 28, 32, 36], [28, 28, 4, 36], [32, 16, 4, 12], [4, 40, 12, 16], [24, 24, 20, 28], [28, 12, 36, 12], [8, 32, 40, 24], [28, 0, 24, 8], [0, 40, 0, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #928 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 0, 0, 9, 3, 0, 4, 4], [2, 1, 4, 8, 3, 2, 8, 2, 5], [5, 5, 8, 7, 9, 10, 6, 2, 10], [5, 4, 9, 8, 7, 4, 1, 0, 5], [4, 2, 2, 3, 2, 6, 3, 1, 6], [9, 7, 8, 1, 10, 10, 2, 2, 4], [5, 7, 2, 8, 8, 4, 2, 0, 10], [8, 0, 5, 6, 10, 5, 6, 2, 4], [0, 10, 5, 10, 4, 9, 3, 5, 6]]
scalar = 8
expected = [[16, 24, 0, 0, 72, 24, 0, 32, 32], [16, 8, 32, 64, 24, 16, 64, 16, 40], [40, 40, 64, 56, 72, 80, 48, 16, 80], [40, 32, 72, 64, 56, 32, 8, 0, 40], [32, 16, 16, 24, 16, 48, 24, 8, 48], [72, 56, 64, 8, 80, 80, 16, 16, 32], [40, 56, 16, 64, 64, 32, 16, 0, 80], [64, 0, 40, 48, 80, 40, 48, 16, 32], [0, 80, 40, 80, 32, 72, 24, 40, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #929 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 1, 6, 3, 7], [4, 9, 3, 7, 6, 10], [3, 4, 5, 6, 0, 8], [1, 8, 3, 10, 2, 3], [1, 4, 4, 9, 1, 8], [10, 5, 7, 8, 8, 6], [5, 2, 9, 3, 6, 4], [0, 0, 4, 7, 4, 1], [2, 7, 5, 1, 9, 1], [8, 3, 2, 0, 7, 8]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #930 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 1, 4, 8, 0, 8, 9, 6], [2, 0, 0, 9, 2, 2, 10, 9]]
scalar = 10
expected = [[10, 10, 40, 80, 0, 80, 90, 60], [20, 0, 0, 90, 20, 20, 100, 90]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #931 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 3, 8, 9, 3, 2], [10, 8, 9, 0, 4, 5], [10, 9, 7, 8, 3, 1], [5, 5, 9, 7, 10, 1], [8, 2, 1, 5, 8, 4], [5, 7, 7, 9, 0, 8]]
scalar = 7
expected = [[7, 21, 56, 63, 21, 14], [70, 56, 63, 0, 28, 35], [70, 63, 49, 56, 21, 7], [35, 35, 63, 49, 70, 7], [56, 14, 7, 35, 56, 28], [35, 49, 49, 63, 0, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #932 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 1, 6, 2], [1, 0, 3, 9], [2, 3, 5, 10], [5, 8, 6, 3], [2, 9, 7, 10], [5, 8, 0, 5], [1, 7, 5, 9], [4, 5, 3, 2], [4, 3, 9, 3]]
scalar = 5
expected = [[10, 5, 30, 10], [5, 0, 15, 45], [10, 15, 25, 50], [25, 40, 30, 15], [10, 45, 35, 50], [25, 40, 0, 25], [5, 35, 25, 45], [20, 25, 15, 10], [20, 15, 45, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #933 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8, 5, 7, 9, 6]]
scalar = 5
expected = [[10, 40, 25, 35, 45, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #934 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 0, 3, 8, 7, 2], [7, 0, 2, 1, 8, 3, 10], [7, 10, 9, 0, 3, 10, 1], [1, 4, 9, 9, 1, 2, 3], [5, 7, 6, 10, 2, 9, 1], [10, 10, 5, 0, 7, 1, 2]]
scalar = 2
expected = [[12, 8, 0, 6, 16, 14, 4], [14, 0, 4, 2, 16, 6, 20], [14, 20, 18, 0, 6, 20, 2], [2, 8, 18, 18, 2, 4, 6], [10, 14, 12, 20, 4, 18, 2], [20, 20, 10, 0, 14, 2, 4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #935 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 9, 5], [0, 9, 9], [2, 7, 8], [0, 3, 6], [6, 5, 8], [1, 1, 4], [3, 3, 5], [4, 9, 3], [0, 6, 3], [5, 5, 8]]
scalar = 8
expected = [[24, 72, 40], [0, 72, 72], [16, 56, 64], [0, 24, 48], [48, 40, 64], [8, 8, 32], [24, 24, 40], [32, 72, 24], [0, 48, 24], [40, 40, 64]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #936 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10], [5, 6], [9, 7], [1, 5]]
scalar = 8
expected = [[72, 80], [40, 48], [72, 56], [8, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #937 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 5, 8, 4, 9], [4, 3, 0, 2, 1, 4], [10, 1, 8, 2, 4, 6], [6, 3, 10, 2, 5, 5], [10, 9, 7, 8, 6, 9]]
scalar = 4
expected = [[24, 20, 20, 32, 16, 36], [16, 12, 0, 8, 4, 16], [40, 4, 32, 8, 16, 24], [24, 12, 40, 8, 20, 20], [40, 36, 28, 32, 24, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #938 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 8]]
scalar = 4
expected = [[8, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #939 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 3], [5, 9], [4, 8], [7, 1], [3, 2], [10, 3], [9, 7], [5, 8], [6, 3]]
scalar = 7
expected = [[28, 21], [35, 63], [28, 56], [49, 7], [21, 14], [70, 21], [63, 49], [35, 56], [42, 21]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #940 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3], [4]]
scalar = 9
expected = [[27], [36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #941 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [9], [8], [7], [7], [1]]
scalar = 3
expected = [[12], [27], [24], [21], [21], [3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #942 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 7, 4, 1, 7, 3, 2, 10, 1, 6], [2, 2, 5, 7, 2, 10, 3, 0, 10, 4], [3, 4, 7, 3, 10, 7, 7, 5, 4, 9]]
scalar = 4
expected = [[20, 28, 16, 4, 28, 12, 8, 40, 4, 24], [8, 8, 20, 28, 8, 40, 12, 0, 40, 16], [12, 16, 28, 12, 40, 28, 28, 20, 16, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #943 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 0, 8, 9, 3, 7, 0, 7, 8], [0, 1, 5, 7, 9, 0, 9, 5, 6], [5, 2, 5, 3, 3, 9, 6, 4, 0]]
scalar = 0
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #944 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 4, 4], [1, 10, 7, 7], [7, 3, 1, 5], [4, 9, 3, 6], [3, 9, 8, 7], [3, 4, 2, 9], [9, 3, 5, 9], [2, 7, 2, 0], [6, 1, 1, 3], [10, 5, 10, 4]]
scalar = 10
expected = [[60, 50, 40, 40], [10, 100, 70, 70], [70, 30, 10, 50], [40, 90, 30, 60], [30, 90, 80, 70], [30, 40, 20, 90], [90, 30, 50, 90], [20, 70, 20, 0], [60, 10, 10, 30], [100, 50, 100, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #945 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 0, 9, 7, 9, 3, 8, 3, 1, 9]]
scalar = 2
expected = [[2, 0, 18, 14, 18, 6, 16, 6, 2, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #946 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 4, 0, 1, 5], [9, 9, 2, 8, 10], [2, 0, 0, 6, 9], [5, 9, 4, 4, 10], [0, 6, 3, 6, 2], [5, 0, 3, 5, 1], [3, 0, 5, 2, 4], [3, 0, 3, 6, 2]]
scalar = 3
expected = [[12, 12, 0, 3, 15], [27, 27, 6, 24, 30], [6, 0, 0, 18, 27], [15, 27, 12, 12, 30], [0, 18, 9, 18, 6], [15, 0, 9, 15, 3], [9, 0, 15, 6, 12], [9, 0, 9, 18, 6]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #947 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 5, 7, 8, 4, 9], [1, 2, 8, 3, 4, 4]]
scalar = 9
expected = [[0, 45, 63, 72, 36, 81], [9, 18, 72, 27, 36, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #948 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 1, 0, 7, 2, 9], [6, 3, 0, 4, 1, 9], [0, 7, 4, 0, 6, 2], [1, 0, 10, 5, 6, 4], [5, 10, 0, 6, 9, 9], [5, 7, 3, 3, 2, 3], [5, 7, 1, 8, 9, 2], [7, 7, 9, 6, 3, 8], [0, 7, 4, 10, 5, 3]]
scalar = 3
expected = [[0, 3, 0, 21, 6, 27], [18, 9, 0, 12, 3, 27], [0, 21, 12, 0, 18, 6], [3, 0, 30, 15, 18, 12], [15, 30, 0, 18, 27, 27], [15, 21, 9, 9, 6, 9], [15, 21, 3, 24, 27, 6], [21, 21, 27, 18, 9, 24], [0, 21, 12, 30, 15, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #949 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 0, 6, 8], [2, 4, 8, 1], [6, 3, 7, 2], [3, 6, 0, 1]]
scalar = 7
expected = [[63, 0, 42, 56], [14, 28, 56, 7], [42, 21, 49, 14], [21, 42, 0, 7]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #950 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 4, 0], [9, 8, 10]]
scalar = 0
expected = [[0, 0, 0], [0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #951 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 1, 3, 9, 9, 9, 0, 10, 6], [6, 2, 10, 1, 1, 0, 0, 2, 6], [1, 3, 4, 4, 1, 1, 8, 5, 7], [1, 6, 10, 0, 7, 4, 10, 5, 2], [5, 2, 3, 5, 8, 10, 5, 1, 10], [7, 9, 1, 8, 1, 0, 3, 10, 5], [7, 2, 7, 4, 2, 6, 6, 5, 9], [6, 8, 7, 7, 9, 5, 3, 6, 3], [10, 5, 5, 7, 5, 9, 3, 7, 2]]
scalar = 4
expected = [[28, 4, 12, 36, 36, 36, 0, 40, 24], [24, 8, 40, 4, 4, 0, 0, 8, 24], [4, 12, 16, 16, 4, 4, 32, 20, 28], [4, 24, 40, 0, 28, 16, 40, 20, 8], [20, 8, 12, 20, 32, 40, 20, 4, 40], [28, 36, 4, 32, 4, 0, 12, 40, 20], [28, 8, 28, 16, 8, 24, 24, 20, 36], [24, 32, 28, 28, 36, 20, 12, 24, 12], [40, 20, 20, 28, 20, 36, 12, 28, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #952 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 9, 10, 6], [6, 3, 10, 8]]
scalar = 5
expected = [[5, 45, 50, 30], [30, 15, 50, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #953 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 3, 0, 6], [1, 2, 4, 8, 1], [4, 10, 7, 2, 0], [7, 0, 10, 3, 0], [9, 8, 0, 8, 8], [10, 2, 5, 5, 4], [4, 8, 9, 6, 7], [5, 1, 3, 7, 6], [3, 2, 5, 5, 10], [8, 3, 8, 5, 5]]
scalar = 6
expected = [[54, 60, 18, 0, 36], [6, 12, 24, 48, 6], [24, 60, 42, 12, 0], [42, 0, 60, 18, 0], [54, 48, 0, 48, 48], [60, 12, 30, 30, 24], [24, 48, 54, 36, 42], [30, 6, 18, 42, 36], [18, 12, 30, 30, 60], [48, 18, 48, 30, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #954 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 4, 1, 10, 8, 4]]
scalar = 8
expected = [[16, 32, 8, 80, 64, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #955 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4], [8], [10], [9], [10], [3], [4], [5], [6]]
scalar = 8
expected = [[32], [64], [80], [72], [80], [24], [32], [40], [48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #956 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 7, 2, 10, 4, 4]]
scalar = 4
expected = [[16, 28, 8, 40, 16, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #957 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 3]]
scalar = 4
expected = [[20, 12]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #958 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [3], [6], [7], [9], [7], [7], [2], [1]]
scalar = 4
expected = [[0], [12], [24], [28], [36], [28], [28], [8], [4]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #959 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 10, 4, 1, 7, 3], [9, 2, 2, 3, 3, 6], [9, 7, 6, 1, 4, 0], [0, 9, 10, 10, 10, 10], [2, 2, 9, 4, 9, 4], [8, 7, 10, 9, 3, 2], [9, 3, 7, 4, 6, 7], [2, 5, 3, 3, 10, 1], [4, 7, 8, 2, 7, 4]]
scalar = 5
expected = [[45, 50, 20, 5, 35, 15], [45, 10, 10, 15, 15, 30], [45, 35, 30, 5, 20, 0], [0, 45, 50, 50, 50, 50], [10, 10, 45, 20, 45, 20], [40, 35, 50, 45, 15, 10], [45, 15, 35, 20, 30, 35], [10, 25, 15, 15, 50, 5], [20, 35, 40, 10, 35, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #960 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 1, 3, 3, 6, 6, 3, 0], [3, 5, 9, 1, 10, 3, 4, 4], [5, 5, 3, 5, 6, 6, 4, 9], [0, 10, 1, 1, 0, 0, 8, 8], [0, 8, 10, 3, 8, 10, 2, 6]]
scalar = 8
expected = [[24, 8, 24, 24, 48, 48, 24, 0], [24, 40, 72, 8, 80, 24, 32, 32], [40, 40, 24, 40, 48, 48, 32, 72], [0, 80, 8, 8, 0, 0, 64, 64], [0, 64, 80, 24, 64, 80, 16, 48]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #961 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 10, 0, 3, 7, 10, 7, 10], [4, 2, 7, 4, 5, 10, 3, 4], [10, 3, 0, 6, 6, 3, 3, 9], [5, 5, 5, 7, 2, 9, 5, 10], [8, 5, 6, 3, 0, 2, 10, 6], [4, 5, 4, 9, 1, 3, 3, 0], [4, 5, 3, 0, 1, 10, 4, 9], [4, 3, 5, 10, 1, 5, 6, 3], [2, 10, 10, 6, 5, 0, 6, 1], [0, 1, 3, 10, 4, 7, 1, 7]]
scalar = 8
expected = [[8, 80, 0, 24, 56, 80, 56, 80], [32, 16, 56, 32, 40, 80, 24, 32], [80, 24, 0, 48, 48, 24, 24, 72], [40, 40, 40, 56, 16, 72, 40, 80], [64, 40, 48, 24, 0, 16, 80, 48], [32, 40, 32, 72, 8, 24, 24, 0], [32, 40, 24, 0, 8, 80, 32, 72], [32, 24, 40, 80, 8, 40, 48, 24], [16, 80, 80, 48, 40, 0, 48, 8], [0, 8, 24, 80, 32, 56, 8, 56]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #962 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [1], [8], [4], [2], [3]]
scalar = 10
expected = [[90], [10], [80], [40], [20], [30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #963 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 9, 5, 6, 7, 1, 0, 0, 10, 7], [8, 5, 10, 7, 1, 4, 7, 4, 7, 2], [1, 5, 1, 9, 4, 4, 3, 4, 10, 7], [3, 0, 6, 6, 9, 10, 10, 10, 10, 7], [9, 6, 7, 4, 6, 8, 5, 5, 9, 8], [6, 10, 0, 5, 9, 0, 8, 2, 3, 2], [0, 10, 9, 0, 4, 9, 1, 6, 8, 3], [10, 10, 3, 9, 6, 2, 2, 5, 4, 1], [1, 1, 4, 4, 0, 9, 1, 9, 3, 8], [6, 0, 4, 0, 3, 2, 10, 4, 6, 9]]
scalar = 5
expected = [[0, 45, 25, 30, 35, 5, 0, 0, 50, 35], [40, 25, 50, 35, 5, 20, 35, 20, 35, 10], [5, 25, 5, 45, 20, 20, 15, 20, 50, 35], [15, 0, 30, 30, 45, 50, 50, 50, 50, 35], [45, 30, 35, 20, 30, 40, 25, 25, 45, 40], [30, 50, 0, 25, 45, 0, 40, 10, 15, 10], [0, 50, 45, 0, 20, 45, 5, 30, 40, 15], [50, 50, 15, 45, 30, 10, 10, 25, 20, 5], [5, 5, 20, 20, 0, 45, 5, 45, 15, 40], [30, 0, 20, 0, 15, 10, 50, 20, 30, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #964 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 8], [3, 4], [0, 3], [3, 5], [6, 6], [7, 9]]
scalar = 7
expected = [[28, 56], [21, 28], [0, 21], [21, 35], [42, 42], [49, 63]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #965 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0]]
scalar = 3
expected = [[0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #966 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 9, 9, 8, 4, 6, 9], [1, 10, 4, 2, 10, 1, 8], [4, 10, 9, 0, 5, 3, 0], [1, 7, 10, 9, 0, 6, 6], [7, 10, 3, 0, 10, 5, 9], [2, 3, 1, 2, 7, 5, 4], [8, 4, 1, 5, 10, 9, 2]]
scalar = 7
expected = [[70, 63, 63, 56, 28, 42, 63], [7, 70, 28, 14, 70, 7, 56], [28, 70, 63, 0, 35, 21, 0], [7, 49, 70, 63, 0, 42, 42], [49, 70, 21, 0, 70, 35, 63], [14, 21, 7, 14, 49, 35, 28], [56, 28, 7, 35, 70, 63, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #967 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 9], [7, 7], [6, 7], [4, 5], [4, 4], [1, 2], [9, 5], [6, 7], [6, 3], [7, 5]]
scalar = 9
expected = [[54, 81], [63, 63], [54, 63], [36, 45], [36, 36], [9, 18], [81, 45], [54, 63], [54, 27], [63, 45]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #968 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 5, 5, 10, 9, 3, 7], [3, 8, 9, 7, 0, 4, 7], [7, 6, 0, 7, 5, 4, 8], [4, 4, 2, 3, 4, 8, 4], [1, 4, 1, 9, 10, 7, 8]]
scalar = 1
expected = [[6, 5, 5, 10, 9, 3, 7], [3, 8, 9, 7, 0, 4, 7], [7, 6, 0, 7, 5, 4, 8], [4, 4, 2, 3, 4, 8, 4], [1, 4, 1, 9, 10, 7, 8]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #969 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0], [1], [0]]
scalar = 6
expected = [[0], [6], [0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #970 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0, 6, 5, 8, 10, 2, 1, 4], [7, 1, 2, 5, 0, 3, 0, 3, 2], [1, 1, 10, 1, 10, 0, 0, 5, 5], [5, 8, 7, 4, 3, 8, 1, 8, 9], [5, 7, 5, 7, 6, 8, 6, 10, 8], [4, 2, 9, 8, 4, 6, 7, 9, 3], [2, 8, 2, 10, 0, 8, 8, 8, 1], [7, 6, 10, 0, 4, 10, 1, 4, 10], [6, 8, 7, 6, 5, 2, 5, 8, 6]]
scalar = 6
expected = [[48, 0, 36, 30, 48, 60, 12, 6, 24], [42, 6, 12, 30, 0, 18, 0, 18, 12], [6, 6, 60, 6, 60, 0, 0, 30, 30], [30, 48, 42, 24, 18, 48, 6, 48, 54], [30, 42, 30, 42, 36, 48, 36, 60, 48], [24, 12, 54, 48, 24, 36, 42, 54, 18], [12, 48, 12, 60, 0, 48, 48, 48, 6], [42, 36, 60, 0, 24, 60, 6, 24, 60], [36, 48, 42, 36, 30, 12, 30, 48, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #971 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 0, 8, 8, 2, 6, 8, 2, 2, 6], [7, 10, 8, 10, 4, 8, 8, 6, 1, 5], [9, 2, 9, 8, 6, 6, 6, 3, 0, 4], [6, 2, 4, 6, 10, 9, 6, 1, 7, 0]]
scalar = 9
expected = [[72, 0, 72, 72, 18, 54, 72, 18, 18, 54], [63, 90, 72, 90, 36, 72, 72, 54, 9, 45], [81, 18, 81, 72, 54, 54, 54, 27, 0, 36], [54, 18, 36, 54, 90, 81, 54, 9, 63, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #972 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 0, 8, 7], [1, 5, 10, 9], [10, 5, 8, 4], [2, 1, 10, 3], [6, 3, 7, 10], [1, 10, 5, 9], [7, 5, 7, 0], [6, 4, 6, 8], [1, 3, 1, 7], [0, 1, 3, 2]]
scalar = 8
expected = [[24, 0, 64, 56], [8, 40, 80, 72], [80, 40, 64, 32], [16, 8, 80, 24], [48, 24, 56, 80], [8, 80, 40, 72], [56, 40, 56, 0], [48, 32, 48, 64], [8, 24, 8, 56], [0, 8, 24, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #973 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 5, 9, 6, 5, 7, 7, 8, 5, 6], [1, 1, 0, 0, 8, 4, 2, 5, 6, 7], [10, 1, 6, 8, 9, 8, 6, 1, 7, 3], [0, 9, 2, 0, 2, 9, 7, 3, 9, 4], [0, 8, 0, 4, 4, 0, 5, 0, 2, 2], [8, 3, 5, 10, 5, 7, 10, 0, 3, 5], [4, 4, 1, 3, 4, 8, 5, 5, 3, 0], [8, 0, 4, 9, 8, 6, 2, 3, 9, 0], [6, 10, 6, 10, 10, 3, 2, 4, 3, 3]]
scalar = 10
expected = [[100, 50, 90, 60, 50, 70, 70, 80, 50, 60], [10, 10, 0, 0, 80, 40, 20, 50, 60, 70], [100, 10, 60, 80, 90, 80, 60, 10, 70, 30], [0, 90, 20, 0, 20, 90, 70, 30, 90, 40], [0, 80, 0, 40, 40, 0, 50, 0, 20, 20], [80, 30, 50, 100, 50, 70, 100, 0, 30, 50], [40, 40, 10, 30, 40, 80, 50, 50, 30, 0], [80, 0, 40, 90, 80, 60, 20, 30, 90, 0], [60, 100, 60, 100, 100, 30, 20, 40, 30, 30]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #974 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 8, 7, 5, 1, 8, 4], [9, 6, 3, 8, 5, 9, 6], [4, 0, 5, 8, 6, 1, 2], [3, 5, 3, 6, 10, 3, 4], [3, 0, 2, 1, 1, 9, 9], [6, 5, 9, 10, 3, 0, 5]]
scalar = 10
expected = [[70, 80, 70, 50, 10, 80, 40], [90, 60, 30, 80, 50, 90, 60], [40, 0, 50, 80, 60, 10, 20], [30, 50, 30, 60, 100, 30, 40], [30, 0, 20, 10, 10, 90, 90], [60, 50, 90, 100, 30, 0, 50]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #975 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 8, 0, 7, 4], [0, 0, 10, 5, 1], [1, 5, 1, 9, 9], [2, 0, 5, 10, 5], [1, 8, 6, 1, 1], [1, 0, 5, 5, 8], [5, 7, 7, 4, 6], [5, 1, 9, 0, 2], [2, 7, 2, 1, 5], [0, 0, 10, 6, 4]]
scalar = 5
expected = [[45, 40, 0, 35, 20], [0, 0, 50, 25, 5], [5, 25, 5, 45, 45], [10, 0, 25, 50, 25], [5, 40, 30, 5, 5], [5, 0, 25, 25, 40], [25, 35, 35, 20, 30], [25, 5, 45, 0, 10], [10, 35, 10, 5, 25], [0, 0, 50, 30, 20]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #976 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 5, 9, 3, 9, 3, 1], [1, 3, 10, 10, 10, 4, 5], [4, 7, 3, 7, 2, 9, 0], [4, 1, 10, 10, 1, 8, 5], [9, 0, 8, 3, 0, 10, 0]]
scalar = 6
expected = [[54, 30, 54, 18, 54, 18, 6], [6, 18, 60, 60, 60, 24, 30], [24, 42, 18, 42, 12, 54, 0], [24, 6, 60, 60, 6, 48, 30], [54, 0, 48, 18, 0, 60, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #977 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 3, 2, 5, 3, 8], [7, 10, 10, 3, 0, 6], [1, 10, 9, 9, 4, 6], [7, 2, 4, 5, 1, 4], [4, 4, 10, 9, 1, 1], [9, 8, 3, 4, 6, 1], [3, 2, 0, 5, 2, 2], [9, 5, 9, 9, 7, 10], [10, 6, 3, 4, 2, 5], [3, 10, 10, 0, 2, 3]]
scalar = 6
expected = [[12, 18, 12, 30, 18, 48], [42, 60, 60, 18, 0, 36], [6, 60, 54, 54, 24, 36], [42, 12, 24, 30, 6, 24], [24, 24, 60, 54, 6, 6], [54, 48, 18, 24, 36, 6], [18, 12, 0, 30, 12, 12], [54, 30, 54, 54, 42, 60], [60, 36, 18, 24, 12, 30], [18, 60, 60, 0, 12, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #978 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 5, 5, 3, 5, 0, 2], [5, 8, 8, 5, 1, 7, 9], [6, 3, 4, 8, 10, 9, 9], [7, 6, 4, 0, 4, 2, 0], [5, 10, 2, 10, 6, 9, 4], [9, 5, 4, 6, 4, 7, 10], [7, 7, 10, 1, 9, 6, 2], [9, 9, 8, 6, 9, 7, 4], [3, 5, 1, 9, 9, 7, 6], [3, 9, 2, 1, 5, 6, 0]]
scalar = 6
expected = [[18, 30, 30, 18, 30, 0, 12], [30, 48, 48, 30, 6, 42, 54], [36, 18, 24, 48, 60, 54, 54], [42, 36, 24, 0, 24, 12, 0], [30, 60, 12, 60, 36, 54, 24], [54, 30, 24, 36, 24, 42, 60], [42, 42, 60, 6, 54, 36, 12], [54, 54, 48, 36, 54, 42, 24], [18, 30, 6, 54, 54, 42, 36], [18, 54, 12, 6, 30, 36, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #979 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 10], [4, 9], [5, 9], [9, 3]]
scalar = 3
expected = [[12, 30], [12, 27], [15, 27], [27, 9]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #980 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 8, 4, 8, 8], [2, 3, 10, 6, 2], [0, 5, 7, 3, 9], [3, 0, 6, 0, 0], [5, 4, 7, 1, 9]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #981 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8, 4, 8, 9], [3, 1, 0, 4], [1, 1, 3, 10], [9, 10, 0, 9], [8, 3, 3, 4]]
scalar = 6
expected = [[48, 24, 48, 54], [18, 6, 0, 24], [6, 6, 18, 60], [54, 60, 0, 54], [48, 18, 18, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #982 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 7, 0, 2, 4], [0, 0, 8, 3, 3], [7, 9, 6, 6, 3], [5, 10, 6, 4, 6], [8, 9, 10, 7, 2], [10, 5, 10, 0, 10], [6, 9, 5, 9, 4]]
scalar = 0
expected = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #983 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[8]]
scalar = 10
expected = [[80]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #984 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[4, 9, 2, 8, 10], [3, 7, 4, 9, 4]]
scalar = 4
expected = [[16, 36, 8, 32, 40], [12, 28, 16, 36, 16]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #985 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 6, 3, 4, 4, 5, 10, 3, 2], [5, 2, 8, 4, 5, 5, 4, 9, 3], [8, 1, 3, 4, 5, 3, 8, 10, 4], [9, 6, 2, 2, 5, 5, 1, 7, 4]]
scalar = 8
expected = [[24, 48, 24, 32, 32, 40, 80, 24, 16], [40, 16, 64, 32, 40, 40, 32, 72, 24], [64, 8, 24, 32, 40, 24, 64, 80, 32], [72, 48, 16, 16, 40, 40, 8, 56, 32]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #986 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 0, 6, 6, 2, 2, 0, 7, 7], [6, 0, 8, 2, 5, 10, 0, 3, 7]]
scalar = 4
expected = [[24, 0, 24, 24, 8, 8, 0, 28, 28], [24, 0, 32, 8, 20, 40, 0, 12, 28]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #987 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[3, 10, 2, 3, 9], [0, 6, 0, 5, 6], [0, 0, 0, 4, 0], [2, 1, 1, 10, 5]]
scalar = 8
expected = [[24, 80, 16, 24, 72], [0, 48, 0, 40, 48], [0, 0, 0, 32, 0], [16, 8, 8, 80, 40]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #988 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 6], [1, 9, 1], [1, 5, 3]]
scalar = 6
expected = [[30, 60, 36], [6, 54, 6], [6, 30, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #989 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[1, 7, 1, 6, 1, 2, 0, 1], [0, 10, 3, 6, 2, 5, 7, 9]]
scalar = 2
expected = [[2, 14, 2, 12, 2, 4, 0, 2], [0, 20, 6, 12, 4, 10, 14, 18]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #990 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9, 1, 8, 7, 10, 7, 9, 5], [6, 7, 0, 4, 4, 6, 7, 4], [6, 6, 1, 6, 5, 5, 9, 7], [8, 5, 8, 4, 4, 9, 0, 10], [2, 8, 3, 5, 3, 3, 3, 9], [6, 10, 10, 8, 6, 6, 4, 4]]
scalar = 6
expected = [[54, 6, 48, 42, 60, 42, 54, 30], [36, 42, 0, 24, 24, 36, 42, 24], [36, 36, 6, 36, 30, 30, 54, 42], [48, 30, 48, 24, 24, 54, 0, 60], [12, 48, 18, 30, 18, 18, 18, 54], [36, 60, 60, 48, 36, 36, 24, 24]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #991 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 6], [7, 6], [9, 10], [1, 2], [10, 9], [9, 2], [10, 7], [9, 7]]
scalar = 6
expected = [[30, 36], [42, 36], [54, 60], [6, 12], [60, 54], [54, 12], [60, 42], [54, 42]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #992 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[7, 9, 0, 0, 0, 7, 5, 6, 1], [8, 9, 10, 2, 6, 6, 5, 4, 4], [0, 1, 4, 1, 1, 1, 4, 1, 1], [6, 6, 3, 10, 1, 0, 2, 10, 6], [9, 4, 4, 0, 7, 4, 2, 8, 4], [7, 3, 6, 4, 4, 9, 7, 4, 7], [6, 6, 2, 2, 6, 1, 1, 6, 4], [6, 10, 3, 3, 1, 1, 7, 1, 7], [8, 3, 6, 0, 1, 3, 6, 0, 9], [3, 5, 6, 8, 0, 0, 2, 5, 7]]
scalar = 2
expected = [[14, 18, 0, 0, 0, 14, 10, 12, 2], [16, 18, 20, 4, 12, 12, 10, 8, 8], [0, 2, 8, 2, 2, 2, 8, 2, 2], [12, 12, 6, 20, 2, 0, 4, 20, 12], [18, 8, 8, 0, 14, 8, 4, 16, 8], [14, 6, 12, 8, 8, 18, 14, 8, 14], [12, 12, 4, 4, 12, 2, 2, 12, 8], [12, 20, 6, 6, 2, 2, 14, 2, 14], [16, 6, 12, 0, 2, 6, 12, 0, 18], [6, 10, 12, 16, 0, 0, 4, 10, 14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #993 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[10, 4], [8, 6], [6, 8], [5, 7], [3, 8], [5, 8], [6, 10], [2, 8], [1, 7], [4, 9]]
scalar = 4
expected = [[40, 16], [32, 24], [24, 32], [20, 28], [12, 32], [20, 32], [24, 40], [8, 32], [4, 28], [16, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #994 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[5, 10, 1, 9, 7, 1, 6, 1, 6], [2, 8, 9, 3, 6, 2, 1, 8, 1], [10, 0, 6, 3, 7, 5, 10, 4, 5], [5, 1, 0, 9, 10, 4, 7, 6, 5]]
scalar = 3
expected = [[15, 30, 3, 27, 21, 3, 18, 3, 18], [6, 24, 27, 9, 18, 6, 3, 24, 3], [30, 0, 18, 9, 21, 15, 30, 12, 15], [15, 3, 0, 27, 30, 12, 21, 18, 15]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #995 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[6, 1], [0, 10], [10, 8], [10, 6], [2, 2], [1, 2], [9, 0], [2, 3]]
scalar = 1
expected = [[6, 1], [0, 10], [10, 8], [10, 6], [2, 2], [1, 2], [9, 0], [2, 3]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #996 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[9], [8], [9], [10], [7]]
scalar = 2
expected = [[18], [16], [18], [20], [14]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #997 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[0, 2, 3, 0, 9, 1, 0, 5, 4], [5, 1, 0, 5, 4, 4, 10, 8, 3], [9, 6, 7, 3, 3, 4, 6, 2, 3], [10, 9, 0, 2, 8, 2, 1, 7, 9], [9, 9, 10, 5, 3, 4, 4, 3, 8], [4, 9, 6, 10, 7, 10, 2, 9, 9]]
scalar = 4
expected = [[0, 8, 12, 0, 36, 4, 0, 20, 16], [20, 4, 0, 20, 16, 16, 40, 32, 12], [36, 24, 28, 12, 12, 16, 24, 8, 12], [40, 36, 0, 8, 32, 8, 4, 28, 36], [36, 36, 40, 20, 12, 16, 16, 12, 32], [16, 36, 24, 40, 28, 40, 8, 36, 36]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #998 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



a = [[2, 5, 7, 8], [6, 8, 0, 1], [0, 10, 1, 7], [0, 9, 7, 1], [6, 6, 9, 9]]
scalar = 0
expected = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
result = matmult.mult_scalar(a,scalar)
if not check_equality(expected,result):
  raise Exception('Scalar Case #999 Failed:\n a = ' + str(a) + '\nscalar = ' + str(scalar) + '\n result = ' + str(result))



print('Scalar multiplication tests completed successfully')



a = [[10, 9, 7, 0, 8], [5, 6, 6, 10, 3]]
b = [[10, 3, 2, 4, 5, 1, 4, 7, 8, 2], [0, 6, 7, 9, 0, 5, 8, 6, 4, 10], [7, 0, 8, 7, 9, 9, 9, 5, 8, 9], [1, 4, 1, 10, 6, 5, 2, 5, 6, 6], [8, 1, 3, 10, 4, 2, 4, 1, 9, 9]]
expected = [[213, 92, 163, 250, 145, 134, 207, 167, 244, 245], [126, 94, 119, 246, 151, 145, 154, 154, 199, 211]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #0 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 5, 7, 5, 6, 2], [0, 6, 4, 8, 10, 1, 0], [7, 7, 4, 6, 6, 5, 4], [8, 6, 2, 5, 10, 2, 6]]
b = [[7, 3, 4, 2, 10, 7, 1, 5, 4], [4, 6, 5, 7, 6, 4, 5, 7, 4], [8, 8, 10, 9, 1, 7, 10, 3, 8], [7, 8, 8, 7, 7, 9, 10, 7, 5], [5, 5, 0, 5, 8, 6, 0, 3, 6], [8, 10, 9, 3, 1, 2, 3, 2, 0], [2, 6, 10, 4, 10, 7, 7, 3, 10]]
expected = [[166, 193, 180, 145, 120, 154, 152, 97, 125], [170, 192, 143, 187, 177, 186, 153, 142, 156], [229, 247, 236, 202, 251, 233, 185, 178, 194], [209, 222, 200, 191, 295, 245, 156, 175, 217]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #1 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 0, 0, 2, 10], [1, 6, 1, 6, 9, 1], [0, 6, 5, 5, 8, 4], [5, 9, 6, 6, 5, 8], [2, 0, 7, 3, 3, 10], [3, 3, 7, 9, 1, 6], [2, 0, 1, 10, 8, 7], [4, 10, 1, 5, 1, 0], [4, 7, 9, 7, 7, 1], [5, 6, 3, 9, 10, 10]]
b = [[7, 1], [8, 2], [9, 3], [3, 3], [4, 4], [8, 6]]
expected = [[159, 79], [126, 76], [172, 98], [263, 127], [178, 104], [187, 97], [141, 109], [136, 46], [222, 100], [257, 153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #2 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 5, 4, 1, 0, 9, 0], [8, 10, 8, 5, 9, 6, 8, 8], [0, 0, 1, 4, 0, 6, 3, 1], [5, 6, 7, 9, 1, 10, 3, 4], [10, 3, 0, 6, 9, 6, 9, 8], [0, 1, 0, 2, 8, 0, 1, 7], [2, 8, 10, 5, 4, 1, 4, 9]]
b = [[10, 6, 7], [7, 8, 6], [5, 4, 3], [8, 1, 6], [1, 8, 2], [0, 6, 9], [2, 3, 8], [7, 1, 2]]
expected = [[146, 139, 173], [311, 305, 322], [50, 54, 107], [234, 196, 270], [252, 233, 284], [82, 84, 56], [241, 180, 189]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #3 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 7, 2, 4, 9, 4, 8], [8, 1, 3, 7, 10, 8, 2, 0], [1, 7, 9, 1, 2, 6, 0, 6], [6, 7, 5, 5, 2, 2, 4, 4], [5, 8, 7, 2, 8, 7, 9, 5], [4, 6, 0, 6, 6, 8, 5, 10], [10, 10, 0, 0, 0, 3, 6, 2], [5, 6, 3, 10, 4, 0, 10, 4], [5, 1, 2, 5, 6, 1, 6, 8]]
b = [[1], [7], [3], [8], [2], [1], [0], [9]]
expected = [[161], [108], [149], [152], [166], [204], [101], [180], [143]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #4 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1]]
b = [[1, 1, 1, 4], [2, 6, 1, 1]]
expected = [[5, 9, 4, 13]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #5 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 7, 7, 8, 4, 7, 8], [3, 2, 8, 1, 10, 8, 8, 8], [0, 0, 8, 4, 2, 0, 0, 5], [5, 8, 7, 6, 5, 5, 9, 1], [10, 1, 2, 8, 7, 10, 4, 6], [6, 8, 5, 7, 0, 9, 7, 1], [0, 3, 4, 2, 10, 7, 8, 5], [5, 10, 4, 0, 1, 2, 1, 1], [6, 10, 6, 5, 0, 4, 9, 0]]
b = [[4], [5], [7], [5], [7], [0], [1], [7]]
expected = [[269], [217], [125], [190], [194], [148], [166], [113], [150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #6 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 4], [1, 4, 3], [1, 10, 0], [7, 10, 1], [7, 10, 8], [9, 10, 0], [8, 0, 6]]
b = [[0, 0, 1, 7, 3], [4, 0, 6, 4, 1], [1, 5, 1, 7, 0]]
expected = [[4, 20, 11, 77, 21], [19, 15, 28, 44, 7], [40, 0, 61, 47, 13], [41, 5, 68, 96, 31], [48, 40, 75, 145, 31], [40, 0, 69, 103, 37], [6, 30, 14, 98, 24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #7 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 3, 8], [10, 10, 5, 6], [8, 4, 8, 8], [8, 5, 4, 7], [10, 1, 2, 4], [0, 7, 9, 6], [1, 3, 7, 10], [9, 10, 2, 6]]
b = [[9], [1], [8], [0]]
expected = [[112], [140], [140], [109], [107], [79], [68], [107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #8 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 9, 8, 8], [8, 3, 10, 2, 10], [7, 1, 7, 10, 6]]
b = [[6, 1, 6, 1, 3, 9, 7], [9, 0, 5, 6, 9, 1, 4], [1, 7, 5, 6, 3, 5, 1], [9, 2, 0, 0, 10, 8, 7], [0, 8, 2, 6, 8, 8, 4]]
expected = [[87, 144, 67, 103, 174, 182, 104], [103, 162, 133, 146, 181, 221, 132], [148, 124, 94, 91, 199, 227, 154]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #9 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [10], [8], [7], [3]]
b = [[0, 3, 3]]
expected = [[0, 27, 27], [0, 30, 30], [0, 24, 24], [0, 21, 21], [0, 9, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #10 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9]]
b = [[3, 10], [1, 6]]
expected = [[21, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #11 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 10, 2, 4, 1, 7, 1, 0], [3, 10, 4, 8, 6, 8, 7, 10, 4], [7, 2, 8, 10, 6, 7, 7, 10, 3]]
b = [[1, 0, 0, 5], [3, 7, 10, 9], [4, 8, 5, 5], [4, 4, 5, 6], [8, 1, 9, 2], [5, 8, 4, 1], [2, 9, 3, 7], [3, 7, 10, 1], [6, 0, 0, 1]]
expected = [[117, 184, 151, 184], [237, 337, 367, 256], [230, 313, 313, 234]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #12 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 9, 9, 3, 3, 2], [0, 2, 1, 6, 9, 1, 1], [6, 2, 5, 0, 5, 2, 7], [4, 3, 9, 7, 10, 0, 7], [0, 0, 0, 4, 9, 8, 5], [3, 7, 5, 1, 0, 9, 3], [7, 9, 3, 1, 9, 8, 10]]
b = [[5, 4, 6, 4, 7, 3, 10], [3, 2, 7, 2, 0, 7, 7], [7, 2, 10, 5, 3, 2, 4], [8, 6, 8, 10, 4, 4, 4], [8, 0, 0, 3, 6, 0, 2], [8, 0, 2, 3, 0, 5, 0], [4, 10, 5, 10, 1, 8, 6]]
expected = [[203, 100, 206, 181, 83, 113, 118], [145, 52, 79, 109, 82, 53, 66], [155, 108, 139, 144, 94, 108, 146], [256, 152, 226, 237, 150, 135, 187], [188, 74, 73, 141, 75, 96, 64], [163, 72, 158, 118, 43, 141, 121], [267, 158, 209, 222, 126, 214, 227]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #13 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 4, 2, 9, 10, 2, 7, 8, 1], [8, 3, 1, 10, 3, 8, 1, 0, 4, 8], [0, 1, 8, 3, 1, 7, 8, 3, 3, 10], [7, 10, 0, 2, 5, 2, 4, 5, 5, 6], [7, 4, 3, 0, 3, 2, 0, 4, 2, 1], [4, 4, 9, 5, 0, 6, 10, 0, 6, 8]]
b = [[3, 8, 5, 8, 4], [5, 5, 9, 7, 4], [5, 8, 5, 7, 7], [9, 0, 4, 8, 8], [10, 1, 10, 6, 0], [0, 10, 0, 7, 0], [9, 7, 1, 4, 5], [6, 1, 2, 8, 5], [3, 7, 3, 1, 6], [1, 0, 2, 4, 1]]
expected = [[235, 260, 198, 290, 162], [193, 205, 171, 286, 168], [191, 220, 114, 241, 167], [226, 199, 224, 271, 165], [117, 141, 132, 175, 98], [238, 296, 165, 283, 229]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #14 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3], [8, 0], [1, 7], [9, 10], [4, 10]]
b = [[4, 3, 5, 4], [0, 7, 1, 4]]
expected = [[12, 30, 18, 24], [32, 24, 40, 32], [4, 52, 12, 32], [36, 97, 55, 76], [16, 82, 30, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #15 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6], [10, 6], [4, 6]]
b = [[7, 2, 2, 3, 2, 6, 10], [5, 4, 1, 1, 8, 7, 8]]
expected = [[100, 44, 26, 36, 68, 102, 148], [100, 44, 26, 36, 68, 102, 148], [58, 32, 14, 18, 56, 66, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #16 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 9, 6, 6, 8, 9]]
b = [[0, 4, 3, 5, 6, 4, 2, 9, 6, 2], [7, 5, 10, 8, 9, 8, 6, 7, 7, 7], [6, 10, 3, 9, 9, 0, 3, 9, 0, 5], [0, 2, 8, 6, 3, 5, 8, 3, 2, 0], [6, 2, 3, 4, 8, 3, 3, 4, 2, 10], [4, 7, 8, 7, 7, 2, 10, 0, 6, 7], [5, 4, 2, 2, 1, 1, 5, 9, 1, 10]]
expected = [[174, 227, 197, 243, 245, 97, 232, 247, 112, 266]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #17 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 5], [0, 8, 4], [9, 5, 1], [5, 8, 5], [6, 7, 7], [9, 10, 7], [10, 5, 6], [9, 9, 5]]
b = [[1, 2, 6], [6, 3, 10], [3, 6, 2]]
expected = [[44, 52, 80], [60, 48, 88], [42, 39, 106], [68, 64, 120], [69, 75, 120], [90, 90, 168], [58, 71, 122], [78, 75, 154]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #18 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 8, 8, 2, 4], [2, 10, 2, 4, 5, 1], [9, 0, 2, 4, 5, 7], [6, 4, 2, 8, 0, 9], [6, 0, 0, 7, 8, 9], [8, 9, 5, 3, 10, 1], [7, 6, 4, 7, 7, 1], [2, 4, 5, 8, 5, 6], [0, 1, 0, 0, 4, 4], [5, 3, 6, 10, 8, 0]]
b = [[2, 2, 4, 3], [3, 9, 9, 4], [7, 9, 9, 8], [5, 9, 4, 7], [7, 4, 8, 8], [9, 1, 3, 10]]
expected = [[176, 222, 210, 218], [112, 169, 175, 140], [150, 99, 131, 181], [159, 147, 137, 196], [184, 116, 143, 221], [172, 210, 253, 211], [153, 196, 205, 192], [180, 183, 179, 218], [67, 29, 53, 76], [167, 213, 205, 209]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #19 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 8, 3, 4, 8, 1, 4, 6, 8], [5, 8, 7, 0, 2, 10, 8, 9, 4, 8], [4, 3, 2, 3, 7, 7, 6, 9, 2, 10], [2, 8, 6, 8, 5, 10, 1, 1, 9, 0], [0, 3, 10, 4, 6, 0, 8, 5, 4, 4], [1, 5, 3, 3, 10, 1, 9, 2, 2, 6], [9, 4, 3, 5, 9, 4, 0, 4, 2, 3], [3, 10, 0, 3, 5, 9, 8, 6, 9, 2], [9, 1, 5, 4, 6, 7, 0, 9, 6, 4], [10, 0, 1, 0, 1, 7, 2, 10, 6, 6]]
b = [[3, 8, 1, 3, 7, 2], [2, 1, 4, 7, 3, 8], [3, 1, 5, 4, 9, 7], [7, 3, 3, 5, 4, 0], [2, 8, 10, 3, 0, 2], [3, 7, 0, 0, 6, 0], [4, 1, 10, 9, 3, 2], [2, 4, 1, 6, 8, 2], [2, 1, 0, 1, 9, 7], [0, 6, 1, 6, 4, 1]]
expected = [[119, 224, 117, 164, 295, 136], [144, 237, 189, 283, 346, 197], [126, 255, 184, 247, 257, 114], [160, 178, 149, 165, 276, 187], [126, 129, 223, 229, 231, 164], [110, 167, 243, 226, 152, 125], [121, 230, 152, 163, 208, 114], [149, 199, 190, 238, 278, 189], [135, 253, 123, 176, 311, 137], [96, 222, 61, 157, 285, 101]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #20 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 1, 1, 9]]
b = [[3, 0, 1, 4, 6, 5], [0, 0, 8, 0, 1, 8], [8, 10, 1, 0, 10, 4], [1, 1, 5, 6, 7, 8], [8, 9, 2, 10, 7, 6]]
expected = [[81, 92, 24, 96, 80, 66]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #21 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 10, 10, 6], [10, 0, 10, 9, 7]]
b = [[6, 0], [5, 4], [9, 3], [8, 5], [1, 3]]
expected = [[244, 114], [229, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #22 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 3, 0, 4, 4, 2, 4, 9, 4], [10, 0, 9, 9, 8, 2, 8, 8, 0, 2], [2, 8, 6, 10, 4, 5, 3, 0, 2, 5], [8, 4, 5, 7, 3, 10, 9, 10, 1, 2], [0, 2, 1, 5, 9, 8, 10, 5, 10, 9], [5, 2, 9, 10, 2, 1, 8, 8, 1, 4], [8, 2, 1, 9, 2, 0, 5, 0, 1, 9], [2, 0, 10, 0, 10, 4, 1, 6, 10, 6], [4, 4, 9, 10, 8, 10, 0, 5, 7, 10], [8, 2, 7, 7, 4, 5, 10, 5, 4, 7]]
b = [[2, 8, 5, 9, 4, 7, 4, 9], [5, 4, 0, 5, 10, 8, 0, 8], [3, 2, 0, 6, 6, 9, 7, 4], [8, 0, 8, 4, 4, 1, 3, 7], [3, 2, 1, 7, 7, 7, 6, 1], [9, 4, 1, 8, 10, 2, 2, 8], [4, 6, 3, 2, 5, 1, 8, 9], [10, 6, 0, 8, 1, 3, 8, 1], [4, 10, 2, 6, 8, 3, 9, 3], [7, 8, 9, 2, 8, 7, 1, 4]]
expected = [[202, 240, 88, 237, 270, 200, 202, 189], [287, 234, 174, 336, 270, 266, 312, 301], [254, 166, 157, 230, 313, 224, 161, 273], [360, 276, 156, 359, 330, 237, 289, 358], [345, 322, 188, 301, 396, 227, 311, 289], [286, 212, 170, 265, 246, 221, 268, 276], [194, 190, 212, 172, 213, 175, 136, 241], [246, 262, 101, 302, 317, 273, 298, 169], [397, 302, 222, 388, 447, 333, 290, 328], [315, 300, 206, 318, 343, 266, 299, 344]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #23 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 5], [1, 0, 5], [6, 10, 8], [8, 9, 6], [7, 2, 0], [9, 7, 7], [4, 1, 4]]
b = [[2, 10, 9, 10, 3, 10, 10, 6, 7, 8], [6, 5, 4, 0, 2, 3, 6, 10, 6, 10], [9, 7, 3, 8, 3, 5, 9, 7, 6, 4]]
expected = [[71, 140, 109, 140, 47, 128, 151, 105, 106, 110], [47, 45, 24, 50, 18, 35, 55, 41, 37, 28], [144, 166, 118, 124, 62, 130, 192, 192, 150, 180], [124, 167, 126, 128, 60, 137, 188, 180, 146, 178], [26, 80, 71, 70, 25, 76, 82, 62, 61, 76], [123, 174, 130, 146, 62, 146, 195, 173, 147, 170], [50, 73, 52, 72, 26, 63, 82, 62, 58, 58]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #24 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 6, 5, 3, 4, 4], [1, 9, 10, 7, 0, 6, 1], [3, 10, 3, 5, 1, 6, 1]]
b = [[0, 10, 6], [10, 9, 8], [1, 0, 6], [10, 7, 6], [9, 6, 3], [10, 7, 10], [1, 9, 2]]
expected = [[207, 219, 205], [231, 191, 242], [223, 212, 211]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #25 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3], [5, 5], [3, 4]]
b = [[3, 6, 9, 8, 2, 9, 10, 4, 5], [6, 9, 7, 7, 3, 1, 10, 9, 2]]
expected = [[39, 69, 84, 77, 23, 66, 100, 55, 41], [45, 75, 80, 75, 25, 50, 100, 65, 35], [33, 54, 55, 52, 18, 31, 70, 48, 23]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #26 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [4], [4], [2], [7], [2], [6], [8], [3]]
b = [[0, 1, 7, 8, 4, 1, 2]]
expected = [[0, 3, 21, 24, 12, 3, 6], [0, 4, 28, 32, 16, 4, 8], [0, 4, 28, 32, 16, 4, 8], [0, 2, 14, 16, 8, 2, 4], [0, 7, 49, 56, 28, 7, 14], [0, 2, 14, 16, 8, 2, 4], [0, 6, 42, 48, 24, 6, 12], [0, 8, 56, 64, 32, 8, 16], [0, 3, 21, 24, 12, 3, 6]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #27 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 1, 1, 4, 2, 3, 8], [8, 7, 1, 6, 6, 1, 5, 3], [4, 7, 3, 0, 0, 7, 0, 9], [8, 6, 4, 0, 5, 4, 9, 4], [4, 9, 3, 3, 6, 7, 6, 4], [5, 9, 1, 4, 2, 8, 6, 3], [5, 4, 2, 9, 3, 4, 0, 2], [8, 1, 6, 1, 8, 0, 9, 6], [7, 3, 4, 3, 7, 3, 9, 2], [1, 4, 7, 6, 6, 10, 3, 8]]
b = [[10, 2], [4, 3], [9, 10], [3, 6], [4, 6], [10, 2], [0, 10], [3, 1]]
expected = [[86, 87], [178, 174], [192, 82], [212, 206], [218, 197], [204, 162], [169, 124], [191, 229], [191, 221], [255, 214]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #28 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 5, 9, 0, 7], [3, 5, 7, 9, 8, 7]]
b = [[4], [4], [2], [0], [1], [10]]
expected = [[136], [124]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #29 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 2, 10], [2, 1, 7, 5], [10, 0, 1, 8], [10, 0, 6, 2], [4, 2, 5, 0], [1, 3, 1, 5]]
b = [[3, 0, 1, 6, 5], [2, 7, 0, 3, 0], [3, 4, 2, 7, 10], [7, 2, 5, 2, 7]]
expected = [[109, 70, 61, 94, 125], [64, 45, 41, 74, 115], [89, 20, 52, 83, 116], [62, 28, 32, 106, 124], [31, 34, 14, 65, 70], [47, 35, 28, 32, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #30 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 10, 4, 1, 5, 3, 7, 3], [2, 5, 0, 10, 7, 5, 1, 10, 2]]
b = [[2], [9], [5], [10], [4], [0], [8], [8], [3]]
expected = [[257], [271]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #31 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 6, 1], [3, 9, 5, 0], [0, 4, 10, 5], [3, 3, 8, 4], [3, 5, 8, 8], [10, 10, 5, 0], [4, 10, 0, 3], [1, 4, 0, 4]]
b = [[3], [6], [7], [8]]
expected = [[92], [98], [134], [115], [159], [125], [96], [59]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #32 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 7, 3, 3, 4, 4, 6]]
b = [[1, 3, 3, 7, 10, 9, 4, 7, 5], [8, 10, 9, 3, 7, 9, 6, 4, 8], [6, 5, 7, 5, 3, 9, 1, 10, 2], [7, 2, 6, 2, 1, 6, 10, 1, 0], [10, 5, 0, 7, 2, 5, 8, 3, 0], [3, 3, 6, 6, 4, 5, 8, 8, 8], [6, 9, 9, 2, 3, 7, 5, 0, 9], [9, 10, 4, 7, 7, 0, 10, 3, 7]]
expected = [[256, 271, 250, 223, 246, 297, 257, 227, 233]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #33 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 0, 9, 4, 10, 8], [0, 0, 0, 8, 8, 10, 1], [10, 2, 7, 0, 9, 8, 2], [2, 3, 8, 0, 5, 6, 10], [4, 5, 1, 5, 10, 1, 10], [10, 4, 8, 0, 1, 6, 1], [1, 2, 5, 9, 10, 10, 6], [3, 8, 5, 5, 0, 1, 9], [2, 9, 8, 0, 6, 0, 7]]
b = [[3, 1, 10, 7, 9, 2, 8], [3, 6, 10, 8, 6, 2, 5], [7, 6, 8, 1, 7, 2, 8], [5, 6, 5, 8, 0, 2, 4], [9, 4, 2, 10, 4, 6, 7], [3, 10, 1, 2, 0, 9, 10], [8, 2, 5, 9, 0, 10, 9]]
expected = [[220, 251, 253, 319, 121, 242, 326], [150, 182, 71, 173, 32, 164, 197], [206, 184, 212, 217, 187, 184, 307], [214, 168, 180, 198, 112, 210, 280], [232, 140, 194, 301, 113, 199, 255], [133, 148, 217, 141, 174, 114, 240], [257, 249, 175, 274, 96, 244, 318], [168, 139, 221, 213, 110, 141, 215], [199, 142, 221, 217, 152, 144, 230]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #34 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 5, 2, 4, 9, 0]]
b = [[4, 6, 6, 4, 0, 6], [0, 5, 3, 4, 8, 7], [2, 1, 9, 9, 1, 3], [1, 6, 3, 3, 10, 5], [5, 7, 7, 3, 2, 0], [3, 3, 3, 2, 8, 1], [9, 9, 0, 2, 6, 3]]
expected = [[95, 126, 160, 117, 105, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #35 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [5], [9], [6], [0], [6], [5], [5], [10], [10]]
b = [[4, 6, 7, 0, 5, 2, 7, 7, 0]]
expected = [[8, 12, 14, 0, 10, 4, 14, 14, 0], [20, 30, 35, 0, 25, 10, 35, 35, 0], [36, 54, 63, 0, 45, 18, 63, 63, 0], [24, 36, 42, 0, 30, 12, 42, 42, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [24, 36, 42, 0, 30, 12, 42, 42, 0], [20, 30, 35, 0, 25, 10, 35, 35, 0], [20, 30, 35, 0, 25, 10, 35, 35, 0], [40, 60, 70, 0, 50, 20, 70, 70, 0], [40, 60, 70, 0, 50, 20, 70, 70, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #36 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 3, 5], [0, 9, 5, 8], [1, 7, 0, 10], [2, 7, 1, 5], [7, 5, 10, 8], [1, 6, 8, 6], [8, 1, 10, 7]]
b = [[5, 6], [9, 8], [8, 6], [1, 9]]
expected = [[119, 143], [129, 174], [78, 152], [86, 119], [168, 214], [129, 156], [136, 179]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #37 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 7, 4, 7]]
b = [[0, 8, 9, 2, 0, 4, 10], [3, 8, 6, 5, 6, 0, 9], [4, 8, 3, 0, 4, 4, 4], [3, 7, 5, 1, 9, 3, 6], [7, 3, 1, 5, 4, 8, 1]]
expected = [[110, 217, 153, 88, 134, 124, 192]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #38 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 1, 10, 0, 4, 4], [3, 1, 6, 3, 10, 4, 0], [6, 7, 1, 2, 5, 6, 6], [10, 10, 9, 2, 4, 10, 0], [0, 7, 6, 6, 8, 9, 9], [7, 9, 7, 9, 6, 3, 3]]
b = [[4, 8, 3, 5, 9], [0, 5, 8, 8, 10], [2, 4, 10, 5, 1], [5, 3, 8, 5, 8], [6, 0, 8, 5, 0], [4, 0, 5, 6, 7], [0, 2, 7, 2, 7]]
expected = [[108, 142, 200, 169, 267], [115, 62, 201, 142, 95], [90, 105, 212, 174, 225], [132, 172, 298, 265, 285], [126, 95, 336, 228, 250], [135, 162, 319, 241, 274]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #39 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 3, 9, 10, 4, 8, 2, 1, 3], [7, 2, 8, 3, 1, 10, 4, 2, 8, 6], [7, 2, 10, 7, 2, 4, 3, 9, 7, 2]]
b = [[0, 3, 0, 1, 1, 2, 9], [7, 3, 5, 0, 2, 4, 9], [9, 1, 1, 4, 0, 5, 6], [3, 7, 7, 9, 5, 7, 9], [0, 6, 9, 6, 7, 9, 9], [10, 0, 0, 3, 8, 0, 5], [6, 9, 10, 8, 9, 2, 1], [2, 3, 9, 1, 3, 6, 1], [0, 3, 8, 9, 6, 8, 10], [5, 1, 7, 6, 5, 9, 5]]
expected = [[217, 240, 323, 260, 264, 267, 334], [253, 134, 212, 244, 233, 230, 331], [211, 175, 268, 242, 198, 273, 334]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #40 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 4, 1], [8, 4, 8, 5], [10, 10, 1, 0]]
b = [[4, 8, 5, 9, 6, 3, 4, 5, 0, 2], [1, 5, 7, 1, 0, 8, 10, 10, 6, 5], [7, 0, 4, 5, 8, 10, 0, 10, 10, 5], [8, 1, 8, 7, 3, 8, 4, 8, 0, 3]]
expected = [[57, 58, 79, 68, 59, 100, 70, 118, 70, 56], [132, 89, 140, 151, 127, 176, 92, 200, 104, 91], [57, 130, 124, 105, 68, 120, 140, 160, 70, 75]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #41 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 4, 5, 3, 4]]
b = [[10, 7, 1, 4], [6, 5, 1, 1], [0, 8, 5, 6], [8, 8, 10, 7], [10, 9, 10, 8], [5, 0, 10, 4]]
expected = [[206, 185, 154, 137]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #42 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[3, 5, 3, 0, 4, 7, 7, 8, 6, 6]]
expected = [[9, 15, 9, 0, 12, 21, 21, 24, 18, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #43 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [10], [8], [7], [9], [9], [7], [4]]
b = [[10, 6, 2, 8, 5]]
expected = [[80, 48, 16, 64, 40], [100, 60, 20, 80, 50], [80, 48, 16, 64, 40], [70, 42, 14, 56, 35], [90, 54, 18, 72, 45], [90, 54, 18, 72, 45], [70, 42, 14, 56, 35], [40, 24, 8, 32, 20]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #44 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 6, 1, 2, 6, 8, 10, 8], [5, 4, 0, 1, 10, 2, 4, 7, 9], [2, 5, 5, 1, 5, 1, 10, 5, 9], [3, 3, 0, 3, 6, 9, 0, 4, 6], [2, 10, 2, 2, 5, 0, 6, 3, 5], [4, 4, 9, 7, 5, 1, 5, 3, 1], [4, 7, 8, 4, 3, 1, 10, 4, 10]]
b = [[8, 5, 3, 1, 5, 7, 4], [10, 0, 5, 6, 6, 3, 8], [7, 8, 10, 1, 2, 7, 1], [4, 3, 1, 3, 2, 2, 8], [6, 2, 9, 9, 0, 7, 0], [9, 8, 9, 5, 8, 7, 10], [7, 0, 7, 4, 2, 4, 0], [0, 5, 10, 6, 1, 3, 8], [10, 8, 5, 5, 8, 3, 3]]
expected = [[320, 237, 361, 217, 196, 226, 226], [280, 171, 287, 235, 154, 197, 163], [304, 168, 301, 205, 157, 190, 138], [243, 176, 232, 183, 163, 171, 200], [260, 97, 220, 182, 133, 145, 145], [247, 154, 253, 151, 105, 191, 150], [371, 210, 327, 212, 198, 223, 184]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #45 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 5], [5, 3, 3, 8], [8, 5, 2, 9], [6, 6, 9, 0], [6, 10, 1, 2], [4, 2, 5, 2], [7, 1, 1, 8], [6, 10, 9, 9]]
b = [[6], [5], [2], [1]]
expected = [[68], [59], [86], [84], [90], [46], [57], [113]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #46 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 4, 1, 4, 0, 2, 1, 9, 4], [5, 2, 7, 10, 8, 10, 3, 4, 0, 8]]
b = [[1, 4, 6, 4, 3, 9, 7], [1, 5, 5, 2, 3, 7, 5], [3, 5, 5, 3, 10, 7, 2], [0, 0, 3, 7, 2, 10, 8], [3, 6, 6, 0, 2, 4, 7], [0, 8, 8, 8, 4, 1, 1], [4, 10, 3, 0, 7, 5, 0], [8, 9, 1, 4, 6, 9, 9], [5, 8, 7, 10, 0, 8, 9], [3, 7, 9, 0, 10, 7, 10]]
expected = [[111, 235, 231, 157, 152, 287, 260], [120, 315, 318, 211, 292, 357, 321]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #47 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 4, 5, 5], [5, 5, 9, 0, 4], [10, 7, 4, 7, 10], [7, 5, 10, 3, 7], [2, 1, 7, 9, 8], [8, 6, 8, 4, 7], [10, 10, 2, 3, 10], [4, 7, 6, 3, 5], [1, 10, 8, 10, 8], [2, 3, 5, 7, 0]]
b = [[7, 2, 6, 0, 1, 0], [9, 1, 1, 5, 6, 2], [5, 8, 1, 3, 0, 6], [1, 5, 8, 9, 0, 6], [5, 1, 5, 3, 8, 6]]
expected = [[169, 85, 124, 107, 90, 98], [145, 91, 64, 64, 67, 88], [210, 104, 177, 140, 132, 140], [182, 121, 116, 103, 93, 130], [107, 114, 132, 131, 72, 146], [189, 113, 129, 111, 100, 126], [223, 71, 146, 113, 150, 110], [149, 83, 86, 95, 86, 98], [187, 134, 144, 188, 125, 176], [73, 82, 76, 93, 20, 78]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #48 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 5, 7, 4, 9, 6], [8, 3, 4, 5, 4, 2, 2], [1, 10, 6, 2, 6, 8, 6], [0, 6, 7, 0, 4, 6, 5], [3, 7, 1, 4, 3, 4, 9], [8, 10, 3, 3, 7, 6, 0], [0, 8, 0, 6, 4, 6, 8]]
b = [[8, 3, 4, 5], [7, 5, 8, 6], [8, 5, 2, 10], [9, 1, 3, 3], [3, 3, 3, 7], [8, 7, 6, 6], [1, 5, 7, 3]]
expected = [[200, 142, 147, 177], [192, 100, 117, 159], [232, 189, 210, 239], [163, 144, 145, 185], [167, 135, 178, 151], [254, 155, 184, 224], [178, 140, 186, 154]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #49 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 4, 3, 9, 1, 1, 9], [8, 4, 1, 9, 2, 1, 1, 1], [4, 7, 5, 1, 1, 6, 1, 7], [2, 6, 6, 7, 2, 1, 4, 4], [8, 3, 2, 3, 0, 1, 7, 10], [0, 4, 6, 3, 1, 3, 1, 1], [1, 8, 10, 7, 0, 3, 6, 5], [3, 6, 5, 7, 8, 3, 0, 6], [9, 10, 5, 7, 0, 0, 10, 4]]
b = [[2, 4, 9, 8], [4, 8, 8, 9], [4, 4, 7, 1], [9, 4, 5, 3], [10, 1, 4, 8], [7, 4, 4, 7], [2, 5, 5, 5], [5, 1, 6, 1]]
expected = [[229, 139, 241, 211], [151, 116, 179, 157], [154, 133, 207, 165], [170, 138, 199, 144], [134, 125, 224, 154], [105, 87, 116, 86], [195, 183, 250, 167], [244, 134, 225, 195], [181, 218, 305, 242]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #50 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 2, 9, 0], [7, 7, 7, 4, 6], [7, 5, 4, 0, 9], [8, 6, 8, 3, 9], [0, 4, 4, 8, 1], [7, 2, 3, 6, 1]]
b = [[7, 10], [4, 3], [3, 5], [0, 5], [3, 8]]
expected = [[88, 164], [116, 194], [108, 177], [131, 225], [31, 80], [69, 129]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #51 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 4, 7, 5, 8, 10, 4, 2, 3], [1, 4, 8, 0, 2, 5, 8, 8, 9, 9], [9, 5, 7, 0, 9, 5, 0, 4, 9, 2], [10, 4, 4, 3, 4, 7, 3, 9, 1, 2], [0, 0, 6, 4, 0, 2, 8, 9, 4, 7], [3, 1, 8, 3, 1, 3, 1, 9, 6, 6], [2, 5, 9, 3, 5, 2, 3, 5, 9, 6], [9, 9, 5, 2, 7, 2, 6, 6, 3, 0], [0, 4, 5, 6, 10, 2, 8, 9, 5, 9], [3, 9, 4, 2, 2, 10, 1, 0, 0, 1]]
b = [[9, 6, 7, 8, 1, 6, 6, 7, 5], [9, 3, 0, 4, 1, 6, 3, 9, 1], [3, 3, 2, 2, 6, 6, 0, 4, 7], [2, 9, 8, 4, 7, 2, 3, 7, 9], [8, 6, 2, 7, 6, 5, 10, 6, 4], [6, 8, 8, 2, 4, 7, 9, 6, 8], [5, 9, 8, 8, 0, 7, 1, 8, 4], [1, 7, 5, 3, 0, 6, 0, 0, 10], [1, 1, 1, 9, 1, 7, 4, 9, 6], [1, 5, 10, 1, 1, 8, 6, 3, 6]]
expected = [[272, 343, 284, 252, 151, 317, 218, 345, 304], [181, 276, 270, 242, 103, 362, 181, 289, 333], [264, 231, 184, 274, 141, 309, 252, 307, 281], [245, 292, 256, 220, 114, 281, 203, 248, 301], [98, 244, 243, 166, 83, 252, 96, 185, 282], [118, 210, 206, 164, 103, 255, 128, 187, 293], [183, 228, 200, 231, 135, 303, 179, 281, 293], [288, 271, 200, 272, 115, 290, 193, 307, 253], [218, 342, 298, 269, 158, 347, 230, 306, 355], [206, 181, 147, 119, 103, 195, 168, 215, 168]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #52 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6], [8, 3], [2, 0]]
b = [[8, 9, 8], [1, 2, 6]]
expected = [[6, 12, 36], [67, 78, 82], [16, 18, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #53 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [0], [1]]
b = [[7, 10, 4, 9, 4, 10]]
expected = [[42, 60, 24, 54, 24, 60], [0, 0, 0, 0, 0, 0], [7, 10, 4, 9, 4, 10]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #54 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 0, 5, 7, 10, 0, 3, 0, 0], [0, 7, 2, 9, 3, 3, 0, 7, 7, 10], [4, 3, 10, 0, 8, 7, 8, 7, 4, 10], [1, 8, 0, 7, 3, 4, 10, 4, 5, 10], [1, 1, 4, 10, 6, 6, 10, 8, 4, 4], [8, 3, 3, 4, 3, 8, 1, 9, 8, 5], [0, 8, 10, 9, 2, 3, 9, 10, 2, 2]]
b = [[1], [10], [1], [8], [9], [5], [1], [6], [5], [1]]
expected = [[218], [273], [231], [253], [261], [240], [276]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #55 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [0], [4]]
b = [[1, 4, 8]]
expected = [[1, 4, 8], [0, 0, 0], [4, 16, 32]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #56 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [4], [10], [8], [1]]
b = [[1, 10, 10]]
expected = [[4, 40, 40], [4, 40, 40], [10, 100, 100], [8, 80, 80], [1, 10, 10]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #57 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 3, 4, 1, 9], [9, 7, 3, 7, 8, 4], [8, 4, 2, 7, 8, 0], [6, 10, 6, 0, 10, 10], [1, 2, 10, 10, 7, 6]]
b = [[7, 0, 6], [7, 6, 10], [9, 7, 10], [3, 8, 2], [10, 8, 10], [10, 3, 6]]
expected = [[209, 118, 182], [280, 195, 272], [203, 158, 202], [366, 212, 356], [271, 236, 252]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #58 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [6]]
b = [[4, 2, 5]]
expected = [[16, 8, 20], [24, 12, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #59 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 7], [1, 4, 7], [4, 4, 4], [9, 5, 6], [4, 1, 7], [6, 8, 10], [6, 4, 0], [9, 1, 9], [2, 0, 8]]
b = [[3, 5, 6, 4, 6, 6, 6, 6], [0, 2, 5, 0, 1, 8, 8, 4], [9, 9, 10, 1, 6, 6, 1, 1]]
expected = [[93, 119, 145, 47, 105, 126, 91, 79], [66, 76, 96, 11, 52, 80, 45, 29], [48, 64, 84, 20, 52, 80, 60, 44], [81, 109, 139, 42, 95, 130, 100, 80], [75, 85, 99, 23, 67, 74, 39, 35], [108, 136, 176, 34, 104, 160, 110, 78], [18, 38, 56, 24, 40, 68, 68, 52], [108, 128, 149, 45, 109, 116, 71, 67], [78, 82, 92, 16, 60, 60, 20, 20]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #60 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [3], [0], [3], [3], [2]]
b = [[6, 1, 7, 7, 9]]
expected = [[12, 2, 14, 14, 18], [18, 3, 21, 21, 27], [0, 0, 0, 0, 0], [18, 3, 21, 21, 27], [18, 3, 21, 21, 27], [12, 2, 14, 14, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #61 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 5, 4, 6, 7, 7, 9, 6], [8, 0, 0, 0, 2, 0, 0, 7, 0], [9, 4, 2, 4, 1, 10, 2, 8, 7], [3, 7, 5, 10, 1, 2, 4, 9, 7], [2, 0, 5, 9, 9, 5, 3, 9, 10], [5, 7, 2, 4, 8, 8, 2, 8, 6], [2, 9, 6, 7, 4, 5, 10, 1, 7], [4, 1, 2, 0, 1, 6, 7, 9, 0]]
b = [[2], [0], [8], [9], [5], [8], [8], [3], [8]]
expected = [[305], [47], [251], [272], [341], [254], [314], [160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #62 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 7]]
b = [[8, 9, 8, 6, 8, 9, 6, 10], [10, 4, 9, 9, 10, 1, 6, 1], [6, 3, 1, 8, 0, 8, 3, 9]]
expected = [[140, 95, 100, 137, 98, 115, 87, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #63 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 9, 9, 4]]
b = [[1, 2, 9, 9], [9, 1, 9, 8], [6, 2, 2, 0], [3, 9, 9, 3], [0, 5, 7, 10]]
expected = [[161, 143, 271, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #64 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [2], [5], [3], [1], [7], [0], [5], [7]]
b = [[5, 3, 1, 1]]
expected = [[5, 3, 1, 1], [10, 6, 2, 2], [25, 15, 5, 5], [15, 9, 3, 3], [5, 3, 1, 1], [35, 21, 7, 7], [0, 0, 0, 0], [25, 15, 5, 5], [35, 21, 7, 7]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #65 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 0, 2, 6, 8, 8, 10]]
b = [[8, 0], [1, 5], [3, 1], [1, 10], [0, 8], [7, 4], [7, 3], [4, 2]]
expected = [[237, 159]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #66 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 9, 8, 9, 9], [5, 2, 1, 4, 3, 4]]
b = [[7, 3, 6, 0, 7, 9, 8, 1], [0, 4, 3, 7, 9, 0, 1, 8], [3, 3, 9, 10, 9, 4, 1, 0], [10, 4, 5, 5, 8, 3, 10, 5], [5, 4, 5, 0, 10, 3, 0, 0], [2, 5, 8, 1, 2, 6, 5, 3]]
expected = [[198, 156, 265, 146, 290, 177, 167, 79], [101, 74, 112, 48, 132, 94, 103, 53]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #67 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [5], [7], [9], [7], [5], [8], [3]]
b = [[10, 5, 7, 2, 1, 3, 1, 7]]
expected = [[60, 30, 42, 12, 6, 18, 6, 42], [50, 25, 35, 10, 5, 15, 5, 35], [70, 35, 49, 14, 7, 21, 7, 49], [90, 45, 63, 18, 9, 27, 9, 63], [70, 35, 49, 14, 7, 21, 7, 49], [50, 25, 35, 10, 5, 15, 5, 35], [80, 40, 56, 16, 8, 24, 8, 56], [30, 15, 21, 6, 3, 9, 3, 21]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #68 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 0, 10, 0, 10, 1, 5, 3], [8, 1, 2, 10, 0, 4, 0, 1, 3], [1, 6, 4, 2, 9, 5, 7, 4, 4], [6, 6, 1, 4, 4, 1, 1, 6, 5], [5, 6, 10, 8, 7, 0, 9, 9, 6], [7, 8, 6, 4, 2, 5, 10, 7, 8], [1, 3, 6, 5, 10, 9, 10, 4, 0]]
b = [[2, 0, 8, 10, 5, 5, 10, 2, 3], [9, 6, 7, 5, 2, 4, 7, 4, 4], [1, 4, 0, 10, 5, 3, 5, 5, 1], [10, 9, 1, 7, 4, 9, 3, 7, 9], [4, 8, 10, 8, 0, 10, 4, 10, 2], [10, 5, 6, 9, 0, 0, 9, 1, 9], [1, 7, 4, 0, 10, 7, 8, 5, 3], [5, 6, 5, 9, 5, 5, 6, 0, 8], [6, 2, 6, 8, 8, 0, 3, 2, 6]]
expected = [[264, 183, 197, 329, 149, 172, 267, 111, 271], [190, 136, 128, 244, 121, 145, 178, 110, 182], [217, 248, 244, 279, 167, 218, 251, 198, 189], [194, 166, 204, 263, 143, 170, 203, 125, 177], [272, 333, 277, 421, 302, 329, 338, 267, 270], [283, 277, 289, 386, 296, 246, 367, 195, 278], [245, 306, 248, 317, 181, 270, 301, 238, 229]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #69 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 2], [6, 8, 0], [0, 9, 5], [2, 7, 4]]
b = [[8, 7], [8, 3], [8, 3]]
expected = [[104, 47], [112, 66], [112, 42], [104, 47]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #70 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 4, 10], [0, 0, 7, 7], [1, 8, 10, 6], [4, 7, 6, 5], [8, 1, 8, 3], [0, 3, 9, 4], [1, 10, 3, 2], [6, 1, 2, 6]]
b = [[3, 8, 7, 2, 7, 1], [1, 8, 2, 4, 7, 6], [8, 6, 2, 9, 3, 1], [6, 9, 0, 5, 0, 1]]
expected = [[117, 218, 64, 126, 103, 62], [98, 105, 14, 98, 21, 14], [127, 186, 43, 154, 93, 65], [97, 169, 54, 115, 95, 57], [107, 147, 74, 107, 87, 25], [99, 114, 24, 113, 48, 31], [49, 124, 33, 79, 86, 66], [71, 122, 48, 64, 55, 20]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #71 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 3, 7], [9, 2, 9, 0], [7, 0, 8, 10], [4, 8, 6, 0], [0, 5, 0, 9], [8, 6, 5, 8], [7, 5, 1, 3], [10, 10, 5, 5]]
b = [[9, 6, 8, 2, 8, 2, 7, 6, 7, 8], [8, 0, 5, 8, 10, 2, 0, 5, 0, 4], [0, 5, 1, 8, 10, 8, 3, 1, 7, 5], [9, 9, 7, 4, 3, 2, 9, 3, 9, 6]]
expected = [[164, 108, 127, 118, 161, 62, 107, 89, 119, 125], [97, 99, 91, 106, 182, 94, 90, 73, 126, 125], [153, 172, 134, 118, 166, 98, 163, 80, 195, 156], [100, 54, 78, 120, 172, 72, 46, 70, 70, 94], [121, 81, 88, 76, 77, 28, 81, 52, 81, 74], [192, 145, 155, 136, 198, 84, 143, 107, 163, 161], [130, 74, 103, 74, 125, 38, 79, 77, 83, 99], [215, 130, 170, 160, 245, 90, 130, 130, 150, 175]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #72 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 0, 8, 10], [7, 3, 5, 1, 9], [7, 9, 8, 1, 9], [4, 2, 8, 10, 4]]
b = [[3, 3], [3, 4], [1, 7], [4, 8], [5, 9]]
expected = [[109, 186], [84, 157], [105, 202], [86, 192]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #73 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0], [0, 9], [2, 3], [0, 3], [10, 10]]
b = [[9, 5, 10, 7], [4, 3, 9, 0]]
expected = [[72, 40, 80, 56], [36, 27, 81, 0], [30, 19, 47, 14], [12, 9, 27, 0], [130, 80, 190, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #74 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 10, 9, 10, 10], [1, 2, 8, 7, 3, 2], [5, 4, 1, 0, 1, 8], [0, 4, 2, 8, 3, 7], [1, 6, 7, 7, 0, 6], [7, 3, 7, 4, 4, 10], [6, 6, 2, 4, 2, 3], [1, 6, 3, 2, 2, 4], [6, 5, 0, 0, 5, 1]]
b = [[9], [7], [2], [10], [1], [10]]
expected = [[220], [132], [156], [185], [195], [242], [172], [119], [104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #75 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [6], [10]]
b = [[0, 10]]
expected = [[0, 70], [0, 60], [0, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #76 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 2, 6, 7, 6, 1], [8, 1, 6, 9, 6, 8, 5], [4, 4, 7, 5, 0, 4, 10], [4, 10, 8, 7, 8, 1, 0], [1, 8, 7, 5, 10, 4, 5], [10, 6, 7, 1, 2, 7, 8], [2, 2, 8, 4, 2, 0, 9], [9, 4, 6, 5, 9, 0, 9], [3, 8, 1, 10, 0, 6, 6], [8, 1, 7, 8, 2, 2, 0]]
b = [[3, 5], [1, 5], [9, 5], [7, 9], [7, 8], [3, 3], [4, 3]]
expected = [[143, 191], [228, 243], [166, 162], [202, 240], [211, 232], [173, 185], [158, 139], [219, 239], [138, 186], [164, 174]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #77 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 0], [8, 1, 3], [8, 3, 10]]
b = [[7, 1, 10, 9, 0, 3, 0, 2, 9, 0], [1, 9, 9, 9, 9, 2, 6, 9, 5, 5], [10, 8, 0, 2, 7, 5, 7, 3, 3, 3]]
expected = [[10, 28, 37, 36, 27, 9, 18, 29, 24, 15], [87, 41, 89, 87, 30, 41, 27, 34, 86, 14], [159, 115, 107, 119, 97, 80, 88, 73, 117, 45]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #78 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 8, 7, 4, 10, 6, 10], [7, 7, 2, 5, 8, 2, 5, 10], [9, 8, 0, 10, 4, 4, 2, 6], [3, 9, 10, 10, 10, 6, 8, 2], [2, 0, 4, 1, 6, 5, 6, 4], [0, 10, 5, 5, 5, 6, 8, 6], [0, 6, 0, 10, 1, 6, 0, 4], [5, 9, 2, 4, 5, 2, 1, 10]]
b = [[5, 8, 6, 0], [7, 5, 4, 6], [3, 8, 5, 0], [5, 9, 7, 9], [7, 9, 8, 3], [5, 8, 10, 5], [9, 6, 8, 5], [2, 6, 8, 2]]
expected = [[280, 406, 401, 217], [246, 330, 319, 166], [229, 318, 292, 192], [334, 437, 394, 248], [156, 211, 217, 90], [259, 312, 312, 202], [137, 201, 194, 167], [188, 264, 252, 140]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #79 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 3, 3, 10, 8, 9, 0, 4], [8, 1, 5, 8, 5, 9, 5, 10, 5], [6, 9, 1, 9, 10, 0, 4, 6, 6], [0, 3, 6, 2, 6, 2, 5, 0, 2], [7, 9, 6, 3, 0, 1, 1, 6, 1], [4, 2, 6, 3, 4, 0, 1, 6, 7], [5, 2, 5, 8, 7, 7, 3, 6, 8], [1, 8, 9, 7, 4, 9, 1, 2, 6], [10, 2, 7, 8, 6, 4, 9, 8, 2]]
b = [[0, 4, 3, 3, 3, 5, 1, 2, 7, 9], [6, 9, 7, 10, 1, 7, 2, 5, 5, 10], [10, 10, 3, 8, 1, 2, 2, 2, 1, 0], [5, 6, 6, 1, 0, 7, 5, 6, 3, 3], [9, 7, 9, 4, 2, 1, 5, 7, 0, 1], [9, 5, 5, 7, 2, 5, 8, 0, 4, 3], [0, 9, 10, 3, 9, 5, 5, 4, 7, 6], [7, 0, 4, 5, 9, 1, 0, 2, 2, 3], [6, 0, 9, 6, 5, 6, 10, 5, 4, 2]]
expected = [[285, 360, 376, 294, 179, 259, 248, 215, 238, 285], [322, 264, 319, 260, 218, 228, 232, 179, 201, 208], [277, 275, 346, 243, 168, 230, 201, 241, 179, 235], [172, 196, 183, 145, 80, 100, 119, 111, 78, 82], [186, 201, 168, 208, 106, 153, 75, 110, 136, 191], [207, 149, 195, 174, 126, 124, 130, 127, 100, 107], [318, 247, 316, 247, 171, 216, 245, 191, 167, 169], [340, 290, 281, 290, 103, 220, 227, 168, 148, 165], [280, 319, 327, 245, 222, 225, 195, 196, 214, 234]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #80 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 2], [2, 9, 9], [4, 7, 5], [2, 7, 6], [3, 6, 4], [7, 10, 8]]
b = [[1, 4, 7], [7, 4, 5], [0, 4, 6]]
expected = [[73, 60, 83], [65, 80, 113], [53, 64, 93], [51, 60, 85], [45, 52, 75], [77, 100, 147]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #81 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 2, 10, 1, 2, 4, 10, 4, 2], [10, 10, 3, 9, 8, 9, 9, 6, 9, 9]]
b = [[3, 10], [8, 0], [0, 3], [5, 9], [3, 9], [4, 1], [4, 3], [7, 4], [1, 6], [3, 1]]
expected = [[229, 265], [329, 385]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #82 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 5, 3, 7, 9, 1, 2, 0]]
b = [[5, 10, 5, 4, 6], [8, 4, 0, 0, 8], [10, 10, 6, 6, 5], [6, 4, 9, 4, 9], [1, 8, 6, 3, 6], [8, 2, 6, 9, 0], [6, 6, 7, 7, 2], [5, 5, 7, 0, 3], [0, 0, 1, 9, 8]]
expected = [[258, 222, 189, 163, 200]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #83 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 6, 6], [10, 4, 9, 10], [9, 0, 0, 4], [0, 0, 9, 2], [6, 4, 3, 0], [5, 6, 3, 9]]
b = [[8], [8], [1], [2]]
expected = [[26], [141], [80], [13], [83], [109]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #84 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 6, 5, 4, 6, 0, 8], [10, 0, 0, 0, 10, 5, 4, 6], [4, 3, 4, 9, 1, 10, 1, 0], [10, 4, 1, 2, 8, 7, 2, 0], [5, 4, 1, 9, 7, 7, 1, 0], [4, 9, 8, 3, 7, 0, 6, 3], [5, 4, 0, 10, 0, 2, 2, 2]]
b = [[8, 3, 1, 10, 5], [2, 10, 3, 1, 0], [0, 2, 5, 3, 9], [10, 4, 7, 10, 1], [0, 8, 7, 8, 0], [10, 4, 6, 3, 2], [3, 2, 9, 6, 9], [3, 7, 4, 7, 6]]
expected = [[184, 209, 181, 229, 144], [160, 180, 170, 261, 132], [231, 136, 172, 189, 94], [184, 176, 157, 224, 93], [211, 179, 185, 230, 66], [107, 219, 207, 216, 167], [180, 121, 125, 186, 69]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #85 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 4, 1, 5, 3], [4, 3, 4, 8, 7, 0], [4, 2, 7, 7, 0, 1], [9, 2, 3, 2, 9, 0]]
b = [[3, 2, 8, 0, 10, 2, 4], [8, 8, 4, 10, 6, 4, 2], [7, 4, 10, 9, 5, 9, 10], [10, 5, 4, 7, 9, 10, 1], [5, 8, 7, 4, 7, 3, 5], [0, 6, 8, 2, 0, 10, 1]]
expected = [[89, 99, 155, 79, 130, 107, 95], [179, 144, 165, 150, 199, 157, 105], [147, 93, 146, 134, 150, 159, 98], [129, 128, 181, 97, 198, 100, 117]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #86 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 10, 0, 6, 9, 7, 1], [6, 1, 3, 0, 7, 6, 1, 3], [3, 7, 2, 9, 10, 1, 7, 6], [8, 6, 4, 7, 7, 6, 2, 1], [0, 8, 7, 7, 0, 7, 7, 0]]
b = [[6, 10, 6, 3, 2, 10, 10, 5, 5, 2], [9, 9, 8, 7, 6, 2, 6, 6, 1, 0], [6, 6, 10, 10, 7, 6, 1, 9, 0, 5], [9, 9, 6, 4, 7, 3, 10, 6, 3, 3], [10, 6, 7, 0, 4, 1, 9, 2, 10, 5], [3, 9, 6, 9, 3, 10, 2, 8, 10, 9], [2, 1, 7, 7, 10, 5, 8, 3, 1, 9], [6, 1, 2, 9, 3, 7, 8, 0, 6, 6]]
expected = [[185, 215, 265, 248, 200, 228, 176, 210, 178, 236], [171, 187, 172, 143, 104, 173, 176, 128, 180, 143], [327, 268, 285, 226, 256, 180, 360, 178, 202, 201], [287, 320, 279, 211, 198, 221, 289, 222, 205, 170], [212, 247, 267, 266, 237, 184, 195, 230, 106, 182]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #87 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 1, 3, 6, 0], [10, 7, 10, 2, 5, 5], [1, 8, 4, 5, 9, 3], [7, 8, 3, 8, 2, 4], [0, 6, 5, 10, 10, 10], [8, 6, 10, 9, 2, 5], [3, 10, 2, 3, 6, 8], [8, 7, 10, 2, 2, 5]]
b = [[9, 7, 6, 10, 10, 9], [9, 7, 9, 4, 2, 0], [5, 6, 4, 2, 10, 2], [0, 4, 6, 1, 9, 4], [9, 5, 3, 5, 1, 8], [2, 1, 10, 7, 4, 10]]
expected = [[194, 153, 151, 143, 137, 134], [258, 217, 240, 210, 257, 208], [188, 155, 181, 121, 132, 139], [176, 169, 220, 154, 206, 157], [189, 172, 264, 164, 202, 230], [204, 209, 252, 178, 295, 194], [197, 153, 232, 163, 135, 171], [213, 188, 219, 175, 234, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #88 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 5, 9, 7, 10, 2, 8, 4], [4, 0, 0, 8, 9, 4, 0, 0, 2], [5, 10, 0, 6, 2, 4, 4, 10, 8], [10, 3, 0, 10, 0, 0, 3, 0, 7], [1, 3, 7, 3, 2, 8, 3, 6, 2], [9, 5, 6, 3, 0, 5, 7, 7, 2], [6, 0, 9, 4, 4, 3, 10, 6, 1], [8, 10, 0, 3, 2, 3, 6, 10, 0]]
b = [[1, 3, 1], [9, 9, 0], [10, 9, 3], [6, 0, 3], [3, 8, 1], [8, 4, 5], [3, 10, 8], [10, 1, 6], [7, 0, 1]]
expected = [[337, 187, 167], [125, 100, 59], [337, 187, 145], [155, 87, 71], [269, 177, 135], [277, 223, 161], [253, 249, 181], [264, 212, 142]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #89 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 7, 10, 9, 4, 4], [5, 2, 0, 3, 9, 1, 7], [5, 6, 3, 5, 8, 8, 9], [2, 7, 10, 5, 10, 0, 10], [6, 0, 6, 4, 3, 2, 7], [5, 0, 4, 7, 2, 0, 8], [4, 2, 1, 10, 0, 8, 6], [2, 0, 1, 3, 10, 9, 0], [7, 4, 2, 1, 4, 9, 8]]
b = [[6, 6, 6, 2, 7, 5], [2, 7, 6, 0, 0, 9], [9, 9, 2, 3, 9, 6], [10, 5, 10, 8, 9, 7], [8, 6, 4, 9, 10, 9], [3, 3, 4, 4, 2, 9], [10, 0, 10, 6, 8, 0]]
expected = [[333, 250, 272, 234, 325, 304], [209, 116, 182, 161, 210, 154], [297, 196, 276, 217, 275, 276], [346, 236, 264, 224, 329, 258], [230, 134, 178, 139, 222, 139], [232, 113, 196, 144, 218, 116], [221, 121, 230, 159, 191, 186], [158, 123, 120, 157, 168, 208], [217, 144, 212, 148, 198, 207]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #90 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 7, 8, 4, 4, 8, 7], [5, 6, 2, 1, 1, 1, 1, 9], [4, 10, 3, 1, 8, 9, 3, 8], [9, 9, 5, 1, 4, 3, 8, 0], [10, 6, 7, 1, 1, 7, 6, 6], [7, 1, 0, 6, 7, 10, 2, 3], [4, 7, 5, 3, 0, 0, 10, 6], [8, 0, 7, 1, 6, 4, 10, 8]]
b = [[5, 10, 7, 6], [5, 10, 6, 6], [7, 10, 2, 9], [6, 2, 9, 9], [4, 1, 1, 8], [7, 2, 3, 1], [6, 1, 8, 7], [2, 6, 0, 3]]
expected = [[248, 238, 226, 302], [110, 190, 96, 136], [226, 249, 162, 238], [216, 250, 213, 253], [236, 289, 199, 243], [192, 139, 162, 191], [180, 212, 187, 226], [223, 224, 177, 266]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #91 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 8, 1, 2, 0, 0, 2, 9], [3, 8, 9, 2, 10, 10, 7, 2, 4], [0, 9, 10, 10, 4, 9, 8, 8, 7], [6, 2, 3, 2, 10, 0, 5, 3, 2], [2, 2, 8, 2, 0, 2, 5, 8, 0], [7, 1, 7, 1, 1, 5, 8, 9, 1], [3, 7, 8, 10, 10, 4, 5, 8, 2]]
b = [[3, 10, 4, 10, 3, 5, 2, 1, 10], [5, 2, 8, 8, 2, 3, 7, 10, 0], [2, 1, 0, 0, 0, 8, 0, 3, 2], [4, 1, 4, 7, 8, 9, 2, 6, 4], [9, 3, 5, 1, 10, 7, 8, 7, 0], [2, 2, 3, 4, 7, 7, 0, 7, 0], [0, 4, 1, 4, 4, 0, 6, 10, 2], [4, 7, 6, 6, 3, 5, 5, 0, 0], [3, 9, 0, 10, 10, 6, 3, 8, 1]]
expected = [[130, 168, 114, 223, 154, 198, 126, 210, 69], [205, 185, 183, 238, 285, 303, 210, 364, 74], [212, 219, 215, 332, 327, 370, 224, 407, 83], [150, 158, 121, 158, 187, 175, 161, 183, 86], [76, 114, 91, 126, 84, 152, 92, 122, 54], [102, 197, 122, 202, 145, 196, 127, 174, 105], [236, 194, 223, 270, 295, 340, 231, 321, 98]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #92 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 5, 1, 3, 1]]
b = [[6, 7, 6, 3], [3, 8, 4, 9], [4, 3, 7, 2], [0, 3, 6, 1], [6, 5, 5, 8], [1, 1, 2, 1]]
expected = [[93, 142, 122, 138]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #93 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 9, 4, 2, 3, 8], [7, 7, 5, 9, 2, 8, 7], [4, 8, 2, 0, 8, 2, 4], [2, 3, 5, 1, 2, 9, 10], [10, 3, 9, 5, 9, 2, 0], [2, 6, 3, 7, 10, 10, 2], [9, 1, 1, 5, 8, 6, 9]]
b = [[6, 8, 2, 8, 5, 2], [3, 10, 6, 3, 9, 8], [8, 3, 5, 4, 7, 4], [1, 7, 3, 8, 6, 2], [1, 9, 1, 6, 6, 7], [8, 7, 2, 7, 3, 9], [2, 2, 9, 3, 9, 1]]
expected = [[175, 216, 181, 196, 260, 147], [192, 292, 189, 258, 286, 201], [96, 212, 114, 138, 196, 158], [156, 169, 160, 158, 207, 155], [171, 267, 111, 233, 230, 171], [155, 298, 124, 238, 235, 240], [144, 252, 145, 236, 238, 159]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #94 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6], [2, 0], [0, 6], [1, 8], [5, 10]]
b = [[2, 5, 1, 10, 4, 8, 2, 8, 0, 7], [1, 9, 7, 1, 6, 3, 10, 7, 3, 0]]
expected = [[22, 94, 50, 86, 68, 82, 76, 106, 18, 56], [4, 10, 2, 20, 8, 16, 4, 16, 0, 14], [6, 54, 42, 6, 36, 18, 60, 42, 18, 0], [10, 77, 57, 18, 52, 32, 82, 64, 24, 7], [20, 115, 75, 60, 80, 70, 110, 110, 30, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #95 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1], [5, 1], [6, 4], [6, 9], [9, 0]]
b = [[6, 2, 2, 0, 7, 8, 0], [8, 5, 10, 5, 6, 3, 0]]
expected = [[50, 19, 24, 5, 55, 59, 0], [38, 15, 20, 5, 41, 43, 0], [68, 32, 52, 20, 66, 60, 0], [108, 57, 102, 45, 96, 75, 0], [54, 18, 18, 0, 63, 72, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #96 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 9, 10], [3, 3, 1, 3], [7, 9, 9, 8]]
b = [[2, 10, 3, 9, 10, 2, 9, 7, 9, 4], [5, 2, 9, 3, 4, 9, 10, 2, 10, 9], [4, 1, 7, 6, 6, 1, 6, 10, 5, 7], [3, 9, 2, 2, 8, 2, 7, 7, 8, 4]]
expected = [[132, 199, 197, 176, 254, 135, 296, 236, 297, 225], [34, 64, 49, 48, 72, 40, 84, 58, 86, 58], [119, 169, 181, 160, 224, 120, 263, 213, 262, 204]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #97 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 1, 5, 5, 0, 5], [8, 8, 0, 3, 5, 10, 1], [10, 9, 10, 10, 4, 2, 10], [4, 2, 10, 9, 1, 3, 7], [9, 1, 3, 7, 3, 4, 4], [4, 3, 9, 5, 7, 8, 6], [0, 8, 4, 0, 8, 4, 7]]
b = [[7], [0], [3], [7], [9], [5], [2]]
expected = [[93], [174], [236], [159], [176], [205], [118]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #98 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 6, 10, 4, 5], [6, 10, 3, 7, 8, 7], [9, 0, 4, 7, 6, 2], [1, 0, 1, 0, 10, 2], [5, 7, 1, 9, 5, 8], [7, 2, 8, 7, 1, 0]]
b = [[0, 0, 5, 2, 1, 6, 2, 8, 9, 1], [5, 7, 2, 2, 4, 1, 9, 7, 6, 8], [1, 1, 5, 0, 9, 6, 2, 7, 5, 7], [3, 4, 10, 10, 6, 9, 6, 2, 3, 3], [8, 1, 10, 3, 0, 10, 2, 10, 7, 10], [9, 8, 9, 5, 0, 4, 4, 8, 0, 9]]
expected = [[148, 139, 239, 155, 144, 205, 167, 207, 148, 215], [201, 165, 278, 161, 115, 235, 194, 289, 206, 271], [91, 54, 213, 116, 87, 209, 88, 190, 164, 136], [99, 27, 128, 42, 10, 120, 32, 131, 84, 126], [175, 155, 256, 169, 96, 206, 171, 228, 154, 217], [47, 51, 159, 91, 129, 165, 92, 150, 143, 110]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #99 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 8], [0, 4, 5], [5, 10, 9], [8, 3, 5], [2, 6, 2], [2, 10, 8], [3, 7, 7], [4, 2, 7], [6, 2, 9], [10, 10, 9]]
b = [[7, 6, 4, 2, 9, 2, 1, 6], [4, 1, 6, 1, 2, 8, 6, 9], [3, 4, 4, 4, 0, 3, 3, 4]]
expected = [[59, 62, 52, 42, 45, 34, 29, 62], [31, 24, 44, 24, 8, 47, 39, 56], [102, 76, 116, 56, 65, 117, 92, 156], [83, 71, 70, 39, 78, 55, 41, 95], [44, 26, 52, 18, 30, 58, 44, 74], [78, 54, 100, 46, 38, 108, 86, 134], [70, 53, 82, 41, 41, 83, 66, 109], [57, 54, 56, 38, 40, 45, 37, 70], [77, 74, 72, 50, 58, 55, 45, 90], [137, 106, 136, 66, 110, 127, 97, 186]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #100 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 5], [7, 0, 3], [5, 3, 1], [5, 3, 2]]
b = [[2, 5], [9, 9], [8, 2]]
expected = [[104, 89], [38, 41], [45, 54], [53, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #101 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 1, 0, 9, 6, 5], [6, 7, 9, 1, 9, 2, 3], [3, 0, 0, 6, 7, 4, 10], [4, 3, 0, 9, 1, 10, 5], [7, 4, 0, 3, 6, 3, 6], [6, 10, 2, 9, 1, 2, 0], [2, 7, 5, 4, 2, 3, 7]]
b = [[2, 1, 8, 3, 4, 4, 6, 8], [5, 3, 1, 1, 0, 10, 4, 8], [7, 0, 2, 3, 2, 8, 2, 8], [3, 3, 8, 5, 4, 2, 10, 8], [4, 2, 10, 8, 1, 6, 2, 2], [8, 8, 2, 5, 4, 5, 8, 9], [0, 10, 10, 9, 7, 6, 1, 0]]
expected = [[120, 132, 213, 174, 98, 180, 127, 160], [165, 94, 205, 166, 84, 250, 129, 220], [84, 167, 250, 205, 129, 146, 134, 122], [134, 172, 187, 163, 128, 150, 213, 220], [91, 124, 210, 157, 100, 161, 130, 151], [123, 81, 148, 97, 73, 174, 188, 236], [118, 133, 161, 142, 97, 195, 125, 175]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #102 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 9, 5], [6, 8, 8, 7], [1, 6, 2, 2], [10, 7, 6, 7], [5, 4, 3, 7], [10, 8, 7, 4], [6, 6, 10, 10], [6, 4, 8, 6], [3, 4, 2, 2]]
b = [[0, 8, 8, 5, 10, 0], [2, 1, 9, 3, 5, 2], [0, 8, 7, 7, 7, 0], [6, 9, 5, 9, 4, 8]]
expected = [[48, 142, 185, 145, 148, 58], [58, 183, 211, 173, 184, 72], [24, 48, 86, 55, 62, 28], [56, 198, 220, 176, 205, 70], [50, 131, 132, 121, 119, 64], [40, 180, 221, 159, 205, 48], [72, 224, 222, 208, 200, 92], [44, 170, 170, 152, 160, 56], [20, 62, 84, 59, 72, 24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #103 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 6, 1, 1, 4, 2, 9]]
b = [[1, 4, 10, 3, 10, 6, 1, 0, 8, 5], [0, 7, 8, 3, 8, 0, 0, 1, 7, 7], [2, 2, 4, 6, 8, 10, 0, 7, 4, 10], [5, 9, 0, 4, 1, 3, 0, 3, 1, 9], [4, 0, 6, 6, 2, 5, 4, 9, 6, 8], [5, 3, 6, 5, 0, 6, 7, 3, 9, 1], [3, 0, 7, 10, 10, 1, 0, 10, 6, 7], [2, 2, 2, 3, 3, 5, 7, 6, 3, 2]]
expected = [[74, 115, 208, 152, 220, 193, 104, 144, 206, 186]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #104 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7], [10, 1]]
b = [[8, 3, 5, 8, 2, 6], [2, 7, 2, 7, 0, 0]]
expected = [[22, 52, 19, 57, 2, 6], [82, 37, 52, 87, 20, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #105 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [5], [4], [3], [5], [10]]
b = [[3, 4, 10, 0]]
expected = [[12, 16, 40, 0], [15, 20, 50, 0], [12, 16, 40, 0], [9, 12, 30, 0], [15, 20, 50, 0], [30, 40, 100, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #106 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 5, 7], [0, 6, 10, 5], [0, 2, 6, 7], [9, 6, 9, 5]]
b = [[6], [10], [10], [8]]
expected = [[248], [200], [136], [244]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #107 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5], [3, 8], [10, 10]]
b = [[5], [3]]
expected = [[15], [39], [80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #108 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [5], [1]]
b = [[3, 1, 7, 6, 10, 7, 10, 6]]
expected = [[15, 5, 35, 30, 50, 35, 50, 30], [15, 5, 35, 30, 50, 35, 50, 30], [3, 1, 7, 6, 10, 7, 10, 6]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #109 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 0], [9, 0, 1], [6, 1, 9], [0, 8, 5], [10, 0, 5], [2, 0, 6], [0, 1, 7]]
b = [[8, 10], [1, 7], [2, 7]]
expected = [[75, 111], [74, 97], [67, 130], [18, 91], [90, 135], [28, 62], [15, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #110 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 7, 6]]
b = [[8], [2], [9], [2]]
expected = [[113]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #111 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 7, 7, 2, 4, 6], [9, 5, 6, 6, 1, 9, 4], [6, 4, 5, 7, 9, 8, 7], [1, 5, 6, 9, 5, 4, 1], [2, 1, 1, 5, 3, 5, 1], [8, 6, 7, 5, 3, 2, 9], [7, 10, 1, 4, 6, 5, 1]]
b = [[5, 0, 4], [0, 6, 10], [6, 1, 8], [3, 5, 1], [9, 6, 4], [3, 8, 7], [3, 3, 7]]
expected = [[131, 134, 207], [147, 156, 235], [207, 203, 252], [128, 146, 166], [76, 93, 85], [157, 129, 242], [125, 160, 206]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #112 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 4], [4, 8, 10], [9, 1, 9], [5, 7, 1]]
b = [[4, 5, 0, 4, 3, 10, 3], [8, 0, 3, 0, 7, 7, 6], [8, 0, 4, 5, 8, 2, 3]]
expected = [[152, 50, 46, 60, 132, 178, 102], [160, 20, 64, 66, 148, 116, 90], [116, 45, 39, 81, 106, 115, 60], [84, 25, 25, 25, 72, 101, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #113 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 6, 7], [5, 7, 10, 5], [3, 10, 4, 3]]
b = [[7, 6, 2, 1, 4, 10, 4], [4, 2, 4, 7, 1, 2, 10], [0, 1, 4, 7, 10, 8, 0], [9, 4, 0, 6, 7, 10, 8]]
expected = [[112, 66, 58, 136, 128, 162, 138], [108, 74, 78, 154, 162, 194, 130], [88, 54, 62, 119, 83, 112, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #114 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [5], [3], [4], [8], [1], [3], [0], [8], [4]]
b = [[7, 5, 5, 6, 1, 2, 4, 8]]
expected = [[14, 10, 10, 12, 2, 4, 8, 16], [35, 25, 25, 30, 5, 10, 20, 40], [21, 15, 15, 18, 3, 6, 12, 24], [28, 20, 20, 24, 4, 8, 16, 32], [56, 40, 40, 48, 8, 16, 32, 64], [7, 5, 5, 6, 1, 2, 4, 8], [21, 15, 15, 18, 3, 6, 12, 24], [0, 0, 0, 0, 0, 0, 0, 0], [56, 40, 40, 48, 8, 16, 32, 64], [28, 20, 20, 24, 4, 8, 16, 32]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #115 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 0]]
b = [[7, 9, 5, 10, 10, 2, 4, 2, 8], [4, 4, 7, 3, 2, 4, 1, 9, 7], [4, 7, 4, 2, 10, 9, 0, 10, 0]]
expected = [[55, 65, 60, 65, 60, 30, 25, 55, 75]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #116 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2], [4, 7], [7, 9]]
b = [[8, 4, 2, 5, 3], [4, 3, 1, 10, 1]]
expected = [[48, 26, 12, 45, 17], [60, 37, 15, 90, 19], [92, 55, 23, 125, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #117 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 7], [9, 7, 6], [1, 6, 4], [5, 3, 9], [6, 0, 3], [6, 1, 3], [4, 8, 5], [5, 5, 10], [3, 4, 8]]
b = [[7, 1, 4, 7, 6, 8], [4, 7, 3, 8, 3, 2], [7, 1, 8, 2, 9, 3]]
expected = [[110, 80, 98, 115, 111, 65], [133, 64, 105, 131, 129, 104], [59, 47, 54, 63, 60, 32], [110, 35, 101, 77, 120, 73], [63, 9, 48, 48, 63, 57], [67, 16, 51, 56, 66, 59], [95, 65, 80, 102, 93, 63], [125, 50, 115, 95, 135, 80], [93, 39, 88, 69, 102, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #118 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 0, 5]]
b = [[4, 5], [9, 4], [7, 7], [1, 0]]
expected = [[72, 33]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #119 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 3, 4, 5, 7, 10, 0, 5, 10], [7, 0, 0, 8, 5, 6, 9, 6, 0, 6], [1, 8, 10, 0, 0, 0, 10, 9, 5, 4], [7, 8, 2, 0, 10, 3, 5, 8, 9, 5], [10, 0, 9, 4, 10, 10, 2, 5, 6, 10], [2, 6, 6, 10, 8, 5, 3, 7, 7, 0], [8, 4, 8, 8, 1, 5, 4, 10, 9, 1]]
b = [[3, 6, 9], [4, 0, 7], [7, 0, 5], [3, 7, 0], [0, 0, 9], [1, 8, 8], [6, 7, 3], [0, 6, 10], [7, 10, 3], [10, 10, 3]]
expected = [[301, 364, 344], [165, 305, 261], [240, 220, 262], [213, 289, 380], [269, 372, 409], [174, 255, 302], [222, 332, 331]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #120 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [6], [3], [9], [10], [9]]
b = [[8, 9, 8, 4, 6, 7]]
expected = [[40, 45, 40, 20, 30, 35], [48, 54, 48, 24, 36, 42], [24, 27, 24, 12, 18, 21], [72, 81, 72, 36, 54, 63], [80, 90, 80, 40, 60, 70], [72, 81, 72, 36, 54, 63]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #121 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 2], [6, 8, 6], [0, 5, 5], [4, 0, 0], [8, 0, 6], [4, 10, 1], [10, 4, 1], [9, 4, 10], [10, 2, 2]]
b = [[3, 9, 4, 5, 1, 10, 8, 2], [8, 7, 2, 10, 8, 1, 3, 4], [10, 4, 9, 5, 1, 2, 4, 1]]
expected = [[124, 150, 70, 150, 90, 94, 102, 58], [142, 134, 94, 140, 76, 80, 96, 50], [90, 55, 55, 75, 45, 15, 35, 25], [12, 36, 16, 20, 4, 40, 32, 8], [84, 96, 86, 70, 14, 92, 88, 22], [102, 110, 45, 125, 85, 52, 66, 49], [72, 122, 57, 95, 43, 106, 96, 37], [159, 149, 134, 135, 51, 114, 124, 44], [66, 112, 62, 80, 28, 106, 94, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #122 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 6, 5, 8, 9, 10], [10, 6, 1, 0, 0, 9, 4], [9, 3, 2, 9, 6, 8, 1]]
b = [[1, 3, 1], [5, 7, 1], [6, 2, 5], [4, 6, 6], [1, 3, 5], [9, 4, 5], [9, 5, 10]]
expected = [[280, 223, 258], [163, 130, 106], [159, 161, 156]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #123 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 8], [0, 6, 2], [2, 1, 7], [6, 6, 2], [3, 8, 0], [6, 4, 7]]
b = [[2, 8, 3], [9, 7, 3], [0, 10, 4]]
expected = [[91, 183, 74], [54, 62, 26], [13, 93, 37], [66, 110, 44], [78, 80, 33], [48, 146, 58]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #124 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5]]
b = [[7, 3, 7, 1, 6, 7, 4], [2, 6, 5, 4, 7, 9, 9]]
expected = [[31, 39, 46, 23, 53, 66, 57]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #125 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 6, 10], [9, 8, 4, 10], [0, 1, 5, 8], [3, 4, 0, 4]]
b = [[6, 2], [3, 7], [1, 1], [7, 7]]
expected = [[166, 166], [152, 148], [64, 68], [58, 62]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #126 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 7, 5, 1, 8, 8], [3, 6, 3, 6, 9, 5, 9], [6, 2, 4, 4, 6, 3, 0]]
b = [[2, 3, 5, 4, 7, 5, 4, 2, 0], [2, 4, 6, 0, 6, 5, 6, 1, 2], [1, 3, 8, 0, 2, 1, 3, 10, 8], [6, 0, 7, 3, 0, 3, 6, 10, 2], [8, 9, 5, 3, 0, 4, 6, 3, 8], [4, 5, 2, 2, 0, 3, 7, 1, 4], [7, 8, 6, 3, 9, 0, 5, 0, 3]]
expected = [[151, 164, 208, 82, 146, 95, 195, 146, 136], [212, 220, 226, 94, 144, 117, 227, 134, 167], [104, 107, 138, 60, 62, 89, 129, 115, 104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #127 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 4, 1, 5, 6, 4, 2, 5, 3], [5, 9, 2, 8, 4, 9, 8, 6, 9, 9], [1, 0, 8, 9, 7, 1, 0, 7, 8, 0], [2, 0, 10, 2, 1, 3, 9, 1, 0, 5], [4, 7, 6, 2, 0, 9, 10, 0, 8, 1], [7, 7, 1, 9, 9, 8, 2, 6, 2, 1], [2, 10, 1, 2, 7, 2, 8, 1, 3, 8]]
b = [[6, 5, 9], [8, 2, 8], [3, 5, 1], [9, 0, 5], [4, 10, 7], [8, 6, 10], [2, 2, 1], [1, 6, 2], [6, 6, 2], [6, 1, 1]]
expected = [[201, 176, 182], [398, 262, 324], [202, 211, 151], [137, 117, 91], [262, 187, 225], [310, 245, 327], [240, 165, 202]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #128 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 5, 1, 3, 8, 4, 7, 6, 9], [4, 6, 7, 4, 9, 9, 8, 5, 9, 5], [6, 1, 4, 2, 8, 8, 1, 4, 9, 5], [0, 5, 6, 8, 6, 1, 9, 6, 9, 2], [0, 1, 8, 7, 1, 10, 6, 2, 9, 1], [4, 10, 5, 5, 2, 6, 0, 1, 2, 5], [5, 9, 3, 0, 2, 3, 4, 9, 8, 7]]
b = [[9, 4, 2, 7, 0, 7, 0, 4, 7], [6, 9, 9, 6, 10, 1, 4, 6, 6], [3, 7, 0, 1, 5, 10, 10, 4, 2], [0, 8, 7, 8, 1, 0, 8, 4, 2], [6, 9, 1, 0, 8, 3, 2, 2, 6], [6, 7, 6, 5, 8, 6, 6, 3, 5], [3, 5, 4, 3, 8, 8, 10, 0, 3], [8, 7, 6, 6, 4, 4, 2, 9, 9], [1, 9, 3, 8, 6, 4, 2, 8, 8], [4, 4, 1, 1, 9, 9, 8, 4, 10]]
expected = [[314, 384, 224, 269, 361, 342, 278, 279, 388], [294, 471, 247, 279, 426, 350, 346, 278, 376], [232, 339, 151, 212, 283, 260, 200, 222, 309], [182, 388, 214, 242, 312, 239, 298, 235, 272], [143, 329, 183, 223, 264, 245, 292, 192, 210], [189, 286, 188, 190, 255, 187, 216, 183, 225], [258, 344, 212, 244, 324, 261, 218, 272, 349]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #129 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 7, 2], [1, 3, 2, 10], [7, 9, 0, 5], [10, 2, 4, 2], [9, 2, 10, 9], [0, 4, 6, 1], [4, 10, 5, 3], [9, 0, 3, 6], [2, 2, 3, 1], [8, 9, 4, 10]]
b = [[3, 8, 6], [6, 0, 3], [3, 3, 4], [1, 9, 5]]
expected = [[62, 95, 89], [37, 104, 73], [80, 101, 94], [56, 110, 92], [78, 183, 145], [43, 27, 41], [90, 74, 89], [42, 135, 96], [28, 34, 35], [100, 166, 141]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #130 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8], [2, 10], [10, 10]]
b = [[1, 4, 8], [8, 5, 2]]
expected = [[68, 56, 48], [82, 58, 36], [90, 90, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #131 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 2, 4, 5, 8, 1, 4], [7, 5, 6, 2, 7, 1, 4, 4], [9, 8, 8, 9, 6, 4, 4, 9], [4, 4, 4, 5, 6, 7, 8, 9], [6, 6, 6, 8, 5, 6, 8, 5], [0, 1, 6, 1, 2, 4, 7, 9], [7, 8, 8, 5, 4, 9, 6, 10], [3, 1, 3, 8, 8, 10, 1, 3], [9, 1, 7, 5, 6, 4, 2, 0], [10, 4, 6, 9, 0, 9, 5, 1]]
b = [[8, 0, 6, 7, 4, 0, 6, 3, 4], [6, 0, 9, 9, 6, 0, 8, 8, 2], [1, 10, 10, 10, 2, 2, 9, 7, 5], [2, 6, 5, 9, 6, 1, 4, 4, 1], [4, 2, 5, 1, 10, 10, 2, 2, 1], [5, 9, 6, 10, 1, 9, 3, 5, 6], [1, 5, 3, 4, 10, 9, 8, 10, 2], [0, 7, 0, 8, 2, 10, 2, 8, 1]]
expected = [[107, 159, 152, 216, 128, 179, 118, 147, 89], [133, 143, 210, 237, 201, 169, 201, 202, 95], [194, 265, 317, 430, 276, 247, 300, 327, 148], [137, 248, 221, 329, 243, 298, 227, 291, 122], [164, 247, 275, 365, 266, 246, 272, 300, 136], [49, 204, 129, 220, 136, 222, 156, 220, 82], [189, 299, 311, 444, 251, 296, 301, 354, 169], [132, 210, 200, 268, 178, 223, 145, 170, 110], [141, 158, 218, 241, 170, 133, 185, 156, 112], [178, 227, 270, 365, 191, 157, 251, 243, 152]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #132 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 0, 9, 3, 9, 10], [7, 1, 1, 10, 8, 6, 2], [1, 6, 9, 7, 0, 1, 7], [0, 7, 1, 0, 6, 8, 3], [5, 3, 6, 3, 1, 9, 4]]
b = [[3, 9, 10, 9], [10, 2, 3, 1], [2, 4, 5, 7], [7, 1, 4, 8], [2, 4, 5, 4], [6, 2, 10, 6], [3, 8, 4, 6]]
expected = [[223, 217, 293, 292], [161, 139, 226, 231], [157, 122, 139, 182], [141, 82, 148, 104], [146, 132, 212, 196]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #133 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 5, 1, 4, 3, 4, 7, 0, 2], [10, 8, 7, 9, 3, 9, 2, 10, 3, 3], [8, 0, 10, 0, 7, 4, 5, 4, 8, 1], [5, 8, 4, 6, 0, 10, 8, 1, 4, 9]]
b = [[0, 5], [3, 9], [4, 5], [4, 0], [4, 9], [8, 8], [1, 9], [0, 5], [9, 3], [2, 1]]
expected = [[96, 245], [207, 336], [179, 275], [206, 295]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #134 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 3, 5, 1, 7, 6, 4, 6, 5], [5, 7, 2, 10, 1, 1, 0, 0, 6, 1], [1, 9, 10, 0, 9, 1, 5, 9, 3, 6], [5, 9, 1, 4, 6, 9, 1, 2, 10, 1]]
b = [[8, 5, 1, 10, 7, 1, 5, 6, 4], [5, 10, 10, 8, 1, 0, 0, 5, 1], [2, 10, 3, 10, 8, 9, 10, 4, 4], [4, 0, 4, 5, 10, 0, 2, 6, 3], [1, 10, 5, 2, 5, 9, 4, 10, 3], [9, 6, 2, 6, 5, 1, 10, 6, 2], [5, 2, 5, 4, 9, 0, 3, 7, 6], [7, 6, 1, 9, 10, 1, 2, 3, 4], [1, 7, 4, 1, 7, 6, 6, 8, 8], [10, 10, 8, 6, 0, 6, 6, 9, 2]]
expected = [[246, 250, 170, 251, 280, 117, 226, 275, 172], [145, 183, 160, 196, 210, 75, 121, 206, 120], [242, 436, 262, 346, 302, 236, 238, 327, 184], [229, 333, 217, 256, 266, 145, 230, 319, 177]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #135 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 0, 4, 2, 2, 8, 7], [9, 6, 5, 5, 0, 1, 1, 0], [3, 6, 3, 3, 7, 8, 6, 4], [3, 5, 3, 7, 6, 2, 0, 9], [3, 9, 10, 3, 4, 3, 0, 2], [10, 2, 2, 8, 2, 3, 4, 8], [0, 8, 3, 8, 1, 8, 9, 3], [0, 1, 10, 3, 9, 7, 3, 3], [8, 9, 4, 0, 0, 3, 9, 9], [8, 8, 10, 7, 5, 10, 0, 1]]
b = [[5, 8, 3], [1, 9, 2], [8, 1, 1], [4, 10, 10], [8, 10, 5], [3, 8, 3], [1, 3, 0], [7, 1, 4]]
expected = [[131, 172, 107], [115, 192, 97], [171, 267, 129], [189, 227, 164], [171, 211, 104], [185, 244, 167], [126, 259, 140], [210, 207, 120], [162, 209, 91], [233, 347, 179]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #136 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6], [0, 8], [3, 7], [10, 1], [8, 1], [4, 10], [6, 6], [0, 0], [0, 4], [0, 3]]
b = [[10, 8, 3, 5, 5, 1], [7, 9, 9, 2, 0, 10]]
expected = [[62, 70, 60, 22, 10, 62], [56, 72, 72, 16, 0, 80], [79, 87, 72, 29, 15, 73], [107, 89, 39, 52, 50, 20], [87, 73, 33, 42, 40, 18], [110, 122, 102, 40, 20, 104], [102, 102, 72, 42, 30, 66], [0, 0, 0, 0, 0, 0], [28, 36, 36, 8, 0, 40], [21, 27, 27, 6, 0, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #137 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 3, 10, 0, 6], [5, 4, 3, 1, 4, 5], [3, 4, 7, 7, 8, 0], [10, 1, 2, 9, 8, 1], [6, 1, 5, 0, 3, 6], [6, 1, 10, 3, 7, 2], [2, 10, 9, 10, 8, 7], [0, 2, 6, 9, 4, 7], [2, 4, 0, 4, 10, 1], [6, 9, 2, 7, 4, 0]]
b = [[3, 7, 9], [4, 0, 6], [7, 3, 2], [0, 7, 7], [8, 9, 9], [5, 3, 1]]
expected = [[76, 146, 151], [109, 102, 123], [138, 163, 186], [117, 214, 236], [111, 102, 103], [158, 162, 166], [208, 204, 245], [117, 138, 130], [107, 135, 161], [100, 133, 197]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #138 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 2, 0], [4, 0, 5, 6], [4, 0, 0, 6], [0, 6, 6, 10], [3, 8, 5, 9], [4, 7, 5, 9]]
b = [[9, 4, 3, 3, 6, 8, 7, 1], [6, 3, 4, 6, 4, 3, 3, 1], [6, 5, 3, 2, 5, 9, 1, 0], [8, 10, 5, 3, 0, 7, 8, 8]]
expected = [[18, 13, 10, 10, 14, 21, 5, 1], [114, 101, 57, 40, 49, 119, 81, 52], [84, 76, 42, 30, 24, 74, 76, 52], [152, 148, 92, 78, 54, 142, 104, 86], [177, 151, 101, 94, 75, 156, 122, 83], [180, 152, 100, 91, 77, 161, 126, 83]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #139 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 10, 9, 0, 9, 4, 0], [2, 9, 9, 1, 4, 2, 4, 0], [9, 2, 4, 10, 5, 0, 4, 5], [0, 1, 5, 3, 8, 6, 1, 8], [5, 6, 8, 8, 2, 3, 2, 4]]
b = [[0, 6, 5, 3], [10, 1, 0, 3], [4, 7, 9, 10], [4, 6, 0, 1], [9, 4, 4, 7], [3, 4, 8, 7], [6, 9, 10, 0], [0, 2, 6, 9]]
expected = [[187, 202, 202, 190], [196, 150, 163, 166], [145, 210, 171, 163], [138, 135, 183, 226], [163, 186, 173, 192]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #140 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [3], [2], [0], [8], [4], [6]]
b = [[5, 10, 1, 9]]
expected = [[30, 60, 6, 54], [15, 30, 3, 27], [10, 20, 2, 18], [0, 0, 0, 0], [40, 80, 8, 72], [20, 40, 4, 36], [30, 60, 6, 54]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #141 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 4, 6, 0, 2, 10, 7], [6, 7, 3, 2, 1, 8, 4, 1], [9, 3, 8, 4, 2, 6, 1, 1], [2, 6, 7, 9, 5, 9, 9, 5], [9, 7, 0, 5, 10, 9, 7, 7]]
b = [[7, 9, 7, 10], [2, 4, 8, 6], [3, 7, 3, 10], [9, 10, 8, 4], [5, 6, 7, 2], [4, 0, 8, 3], [6, 8, 1, 3], [5, 6, 5, 5]]
expected = [[182, 231, 152, 163], [149, 167, 203, 183], [174, 215, 211, 234], [268, 313, 296, 251], [285, 317, 343, 255]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #142 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 2, 4, 5, 3, 4, 9], [10, 4, 2, 2, 5, 1, 6, 10], [2, 1, 6, 2, 8, 4, 5, 3], [8, 7, 0, 10, 8, 5, 5, 5], [10, 1, 5, 2, 4, 9, 1, 8], [1, 0, 2, 3, 5, 9, 2, 10], [6, 4, 4, 10, 3, 4, 10, 9], [9, 0, 8, 8, 6, 8, 1, 10], [8, 2, 2, 8, 6, 5, 8, 2], [7, 4, 5, 0, 0, 3, 7, 0]]
b = [[3, 2, 0, 1, 3, 1, 10, 5, 5, 6], [0, 0, 10, 1, 3, 4, 0, 1, 6, 9], [9, 9, 5, 3, 10, 9, 5, 0, 9, 6], [3, 9, 5, 0, 0, 10, 3, 6, 3, 1], [3, 3, 0, 4, 0, 7, 2, 8, 9, 1], [4, 3, 1, 8, 7, 9, 3, 5, 5, 4], [3, 8, 4, 10, 7, 5, 7, 0, 6, 5], [9, 0, 10, 8, 5, 6, 8, 4, 2, 0]]
expected = [[180, 130, 219, 180, 168, 236, 241, 173, 230, 185], [181, 122, 185, 188, 161, 198, 251, 151, 204, 149], [148, 152, 104, 159, 147, 215, 143, 119, 204, 108], [158, 185, 195, 177, 140, 292, 216, 216, 249, 174], [204, 130, 138, 188, 193, 241, 237, 172, 210, 146], [177, 105, 142, 199, 150, 235, 160, 148, 154, 72], [220, 239, 244, 238, 213, 319, 270, 174, 245, 175], [266, 212, 192, 211, 220, 340, 277, 221, 261, 153], [146, 203, 127, 176, 151, 253, 213, 171, 225, 152], [99, 124, 96, 120, 153, 130, 153, 54, 161, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #143 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 10, 6, 1], [1, 9, 0, 2, 6], [7, 6, 1, 2, 3], [3, 10, 3, 3, 6], [4, 1, 1, 7, 3], [3, 0, 8, 9, 1], [3, 3, 1, 3, 4], [10, 1, 0, 3, 2], [3, 9, 8, 5, 2], [7, 3, 7, 0, 1]]
b = [[9, 1, 9, 0, 3, 10, 6], [6, 3, 6, 1, 0, 4, 6], [3, 1, 8, 5, 6, 5, 3], [6, 5, 6, 9, 8, 10, 10], [6, 9, 4, 7, 4, 7, 3]]
expected = [[129, 60, 177, 113, 127, 175, 135], [111, 92, 99, 69, 43, 108, 98], [132, 63, 131, 50, 55, 140, 110], [150, 105, 153, 94, 75, 157, 135], [105, 70, 104, 90, 86, 140, 112], [111, 65, 149, 128, 133, 167, 135], [90, 64, 87, 63, 55, 105, 81], [126, 46, 122, 42, 62, 148, 102], [147, 81, 183, 108, 105, 170, 152], [108, 32, 141, 45, 67, 124, 84]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #144 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 7, 10, 10, 5, 0, 9, 4], [5, 10, 5, 8, 8, 4, 2, 0, 8], [5, 7, 1, 10, 7, 6, 7, 6, 4], [9, 5, 9, 7, 9, 10, 8, 9, 2]]
b = [[0, 5, 5, 5], [0, 0, 3, 8], [0, 10, 4, 1], [1, 10, 4, 5], [3, 6, 5, 4], [8, 0, 9, 10], [4, 5, 7, 1], [0, 6, 3, 7], [0, 7, 7, 5]]
expected = [[80, 352, 264, 286], [72, 269, 253, 264], [107, 276, 274, 289], [146, 367, 356, 346]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #145 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 9, 9, 9, 1, 8, 5, 9], [5, 1, 0, 5, 4, 10, 0, 0, 2], [3, 4, 6, 1, 7, 3, 1, 9, 3]]
b = [[2, 1, 3, 9, 0, 3], [4, 1, 9, 3, 5, 5], [9, 2, 4, 8, 1, 2], [6, 9, 0, 10, 3, 4], [4, 2, 9, 4, 10, 4], [0, 4, 2, 5, 0, 9], [6, 6, 9, 2, 2, 2], [3, 3, 3, 0, 5, 0], [9, 1, 10, 8, 9, 10]]
expected = [[341, 204, 341, 378, 258, 242], [78, 101, 100, 180, 78, 166], [170, 90, 204, 166, 173, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #146 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [0], [0], [1], [8], [4], [7]]
b = [[4, 1, 0]]
expected = [[28, 7, 0], [0, 0, 0], [0, 0, 0], [4, 1, 0], [32, 8, 0], [16, 4, 0], [28, 7, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #147 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 3, 5, 3, 4, 1, 10], [2, 9, 0, 6, 7, 8, 1, 5], [3, 2, 5, 5, 1, 4, 5, 10], [7, 5, 10, 6, 2, 4, 8, 1], [9, 2, 10, 10, 10, 1, 5, 3], [6, 9, 0, 2, 5, 4, 8, 6], [9, 8, 9, 2, 4, 9, 9, 9], [10, 10, 4, 0, 3, 6, 9, 5]]
b = [[7, 5, 0, 1, 2, 6, 8, 10, 10, 10], [1, 2, 6, 5, 2, 2, 5, 9, 7, 10], [0, 6, 9, 3, 0, 4, 4, 6, 9, 1], [1, 0, 3, 5, 5, 2, 1, 9, 1, 0], [0, 0, 6, 6, 8, 1, 0, 1, 2, 7], [9, 10, 10, 2, 4, 7, 8, 5, 2, 0], [3, 2, 9, 9, 6, 5, 7, 10, 3, 0], [5, 4, 10, 8, 2, 10, 9, 3, 4, 6]]
expected = [[115, 115, 209, 152, 97, 176, 170, 156, 119, 114], [129, 130, 253, 184, 156, 160, 183, 227, 142, 189], [129, 139, 263, 192, 109, 206, 216, 224, 159, 122], [125, 165, 272, 192, 136, 184, 224, 334, 241, 150], [114, 141, 277, 230, 192, 190, 202, 332, 253, 208], [143, 128, 262, 219, 156, 191, 237, 282, 191, 221], [226, 259, 420, 281, 184, 312, 366, 400, 318, 261], [186, 192, 305, 223, 152, 236, 302, 352, 271, 255]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #148 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [6], [4], [0], [7], [9]]
b = [[4]]
expected = [[0], [24], [16], [0], [28], [36]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #149 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 7, 7, 0, 2, 10], [6, 4, 4, 5, 6, 6, 8]]
b = [[1], [1], [3], [1], [7], [4], [0]]
expected = [[45], [93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #150 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0]]
b = [[5, 7], [10, 5]]
expected = [[5, 7]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #151 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 1, 9, 3, 4, 0, 10, 4, 6], [9, 10, 8, 9, 10, 7, 5, 7, 2, 5], [0, 8, 8, 8, 5, 0, 9, 6, 1, 7]]
b = [[6], [4], [7], [9], [2], [7], [7], [5], [7], [7]]
expected = [[270], [419], [319]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #152 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [0], [4], [4], [4], [8], [6], [9], [9]]
b = [[0]]
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #153 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 4, 0, 7], [0, 10, 8, 2, 3], [3, 1, 1, 10, 3]]
b = [[6], [1], [7], [1], [2]]
expected = [[68], [74], [42]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #154 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 8, 6, 8, 2, 6], [3, 6, 1, 0, 4, 0, 5], [0, 7, 2, 5, 9, 1, 1], [7, 8, 4, 9, 3, 10, 1], [5, 3, 6, 3, 4, 9, 4], [2, 2, 10, 7, 0, 5, 0], [2, 1, 7, 6, 6, 6, 9], [2, 9, 2, 3, 9, 9, 5]]
b = [[3, 7, 0, 7, 9, 9], [4, 4, 2, 4, 5, 0], [7, 6, 3, 6, 3, 4], [6, 2, 10, 8, 8, 4], [6, 10, 9, 3, 10, 3], [8, 3, 9, 2, 10, 2], [0, 10, 4, 3, 8, 3]]
expected = [[211, 297, 212, 233, 336, 183], [64, 141, 71, 78, 140, 58], [134, 153, 164, 112, 189, 60], [233, 193, 239, 209, 325, 147], [183, 196, 187, 149, 264, 123], [166, 111, 149, 148, 164, 96], [179, 240, 227, 165, 284, 127], [200, 235, 236, 146, 313, 98]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #155 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8], [10, 3]]
b = [[6, 2, 8, 8, 9, 7, 7, 2], [8, 7, 5, 1, 10, 2, 4, 2]]
expected = [[100, 68, 88, 56, 134, 58, 74, 28], [84, 41, 95, 83, 120, 76, 82, 26]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #156 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 9, 7, 6, 6], [0, 3, 5, 1, 4, 0], [5, 6, 10, 3, 10, 0]]
b = [[0, 10], [0, 4], [0, 4], [9, 3], [10, 7], [1, 3]]
expected = [[129, 117], [49, 63], [127, 193]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #157 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 2, 6], [9, 9, 10, 8], [2, 9, 3, 10], [4, 1, 7, 10], [1, 5, 4, 10], [8, 9, 1, 10], [2, 5, 9, 10], [10, 7, 7, 5], [8, 9, 9, 10]]
b = [[7, 3, 10, 7, 10, 5, 7, 7, 8, 5], [5, 7, 8, 2, 10, 3, 7, 7, 3, 7], [4, 6, 3, 3, 8, 9, 2, 0, 2, 2], [5, 3, 9, 8, 4, 3, 0, 0, 8, 0]]
expected = [[113, 101, 174, 105, 170, 85, 95, 91, 116, 85], [188, 174, 264, 175, 292, 186, 146, 126, 183, 128], [121, 117, 191, 121, 174, 94, 83, 77, 129, 79], [111, 91, 159, 131, 146, 116, 49, 35, 129, 41], [98, 92, 152, 109, 132, 86, 50, 42, 111, 48], [155, 123, 245, 157, 218, 106, 121, 119, 173, 105], [125, 125, 177, 131, 182, 136, 67, 49, 129, 63], [158, 136, 222, 145, 246, 149, 133, 119, 155, 113], [187, 171, 269, 181, 282, 178, 137, 119, 189, 121]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #158 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 1, 5], [6, 4, 5, 5]]
b = [[0, 1], [4, 5], [8, 6], [8, 1]]
expected = [[88, 67], [96, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #159 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 9, 2, 9, 5, 9], [0, 8, 6, 6, 2, 8, 5], [6, 3, 2, 10, 5, 3, 4]]
b = [[2, 4, 0, 1, 7, 5, 8, 1], [8, 6, 10, 2, 9, 7, 4, 4], [2, 3, 3, 6, 4, 1, 10, 1], [5, 0, 10, 5, 0, 3, 10, 10], [4, 7, 7, 7, 7, 5, 3, 5], [3, 2, 2, 3, 2, 9, 3, 1], [4, 10, 1, 8, 1, 8, 2, 3]]
expected = [[129, 218, 129, 221, 167, 212, 226, 113], [158, 146, 193, 160, 131, 202, 192, 131], [135, 129, 181, 150, 122, 167, 212, 160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #160 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 9, 3, 6, 5, 1], [1, 6, 7, 7, 3, 3, 1], [5, 1, 3, 10, 4, 9, 1], [5, 9, 7, 0, 1, 7, 8], [1, 1, 4, 6, 4, 9, 5], [2, 3, 8, 1, 8, 4, 10], [6, 7, 6, 2, 2, 6, 10]]
b = [[3, 9], [8, 9], [3, 6], [5, 10], [9, 8], [9, 6], [7, 2]]
expected = [[214, 272], [168, 219], [206, 260], [236, 234], [205, 198], [237, 211], [244, 245]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #161 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1]]
b = [[7, 3, 4, 2, 5, 9, 2], [10, 0, 9, 4, 0, 6, 3]]
expected = [[10, 0, 9, 4, 0, 6, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #162 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 0, 7, 2, 6], [0, 10, 5, 8, 2, 10], [5, 5, 1, 5, 3, 0], [6, 8, 9, 5, 10, 5], [2, 2, 4, 3, 1, 3]]
b = [[9, 2, 9, 5, 2, 9], [7, 0, 4, 9, 5, 2], [6, 9, 0, 2, 8, 8], [9, 0, 10, 5, 8, 4], [4, 3, 3, 2, 1, 8], [9, 6, 5, 0, 4, 9]]
expected = [[192, 46, 152, 112, 121, 130], [270, 111, 176, 144, 196, 198], [143, 28, 124, 103, 86, 107], [294, 153, 191, 165, 194, 287], [114, 61, 74, 53, 83, 101]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #163 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6], [6, 7], [10, 0], [7, 8], [0, 9], [8, 2]]
b = [[3], [5]]
expected = [[39], [53], [30], [61], [45], [34]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #164 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 10, 8], [4, 0, 6, 0], [10, 6, 3, 3]]
b = [[1, 6], [2, 10], [8, 1], [2, 3]]
expected = [[112, 124], [52, 30], [52, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #165 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 8, 3, 0, 3, 2, 4], [9, 2, 9, 1, 7, 0, 2, 5], [3, 5, 5, 6, 2, 6, 5, 4], [4, 4, 8, 1, 6, 9, 1, 9], [8, 10, 7, 0, 7, 7, 8, 3], [4, 9, 5, 3, 1, 3, 7, 0], [7, 2, 10, 6, 1, 0, 3, 6], [7, 5, 8, 4, 3, 7, 8, 3]]
b = [[2, 9, 10, 6, 8, 5, 5, 0, 1, 6], [9, 5, 2, 9, 10, 3, 2, 0, 3, 0], [10, 7, 0, 8, 1, 10, 9, 6, 2, 8], [5, 4, 5, 9, 8, 1, 6, 1, 9, 9], [8, 9, 10, 9, 8, 10, 2, 6, 4, 2], [8, 3, 10, 0, 9, 4, 7, 4, 4, 3], [10, 8, 7, 3, 5, 10, 8, 2, 7, 3], [9, 0, 3, 6, 10, 6, 6, 7, 0, 2]]
expected = [[183, 129, 111, 145, 141, 159, 171, 95, 73, 138], [252, 237, 198, 252, 225, 262, 196, 136, 84, 165], [281, 187, 197, 214, 262, 204, 216, 110, 149, 157], [340, 205, 237, 244, 312, 273, 243, 186, 108, 157], [395, 319, 305, 299, 360, 336, 268, 149, 164, 169], [256, 202, 162, 202, 221, 192, 180, 65, 133, 123], [254, 200, 153, 248, 217, 223, 227, 120, 112, 199], [346, 272, 265, 256, 303, 290, 278, 135, 170, 199]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #166 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 2, 8, 3, 0, 10], [2, 10, 6, 2, 1, 7, 3], [7, 10, 8, 10, 7, 1, 9], [4, 0, 5, 10, 1, 5, 3], [6, 4, 1, 8, 5, 7, 5], [1, 8, 10, 0, 4, 10, 7], [0, 1, 5, 10, 5, 1, 5], [4, 7, 4, 7, 4, 2, 7]]
b = [[6, 7, 10, 10, 0], [1, 2, 7, 0, 1], [0, 4, 8, 4, 10], [7, 10, 8, 8, 6], [9, 8, 0, 8, 7], [7, 3, 6, 8, 8], [6, 8, 6, 1, 8]]
expected = [[158, 217, 213, 116, 178], [112, 131, 214, 127, 169], [246, 332, 344, 255, 279], [156, 195, 208, 191, 181], [220, 235, 232, 229, 193], [162, 181, 248, 169, 272], [153, 205, 163, 153, 194], [172, 222, 231, 167, 189]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #167 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 4, 7, 6, 0, 7, 2], [2, 6, 10, 0, 0, 9, 10, 10], [3, 2, 1, 10, 2, 5, 0, 6], [3, 1, 4, 4, 0, 0, 7, 4]]
b = [[1, 9, 3, 8, 2, 2, 0, 1, 10, 4], [8, 8, 6, 6, 1, 3, 9, 0, 5, 1], [0, 3, 0, 9, 1, 9, 6, 4, 4, 4], [6, 2, 5, 8, 10, 9, 8, 0, 4, 9], [9, 6, 8, 0, 5, 9, 3, 3, 3, 0], [4, 9, 0, 0, 1, 7, 5, 6, 1, 1], [9, 9, 9, 2, 1, 10, 10, 10, 4, 6], [10, 8, 7, 4, 7, 3, 3, 2, 9, 0]]
expected = [[183, 177, 172, 146, 133, 237, 174, 112, 148, 137], [276, 347, 202, 202, 109, 305, 289, 216, 229, 123], [177, 171, 129, 149, 166, 182, 153, 55, 149, 113], [138, 150, 126, 128, 86, 163, 147, 97, 131, 107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #168 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0], [9, 3], [6, 9]]
b = [[6, 1, 1, 3, 0, 6, 6, 2, 4], [7, 1, 8, 9, 4, 9, 4, 5, 0]]
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [75, 12, 33, 54, 12, 81, 66, 33, 36], [99, 15, 78, 99, 36, 117, 72, 57, 24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #169 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 9, 9, 2, 6, 2, 4], [10, 4, 0, 5, 6, 6, 6, 5], [3, 4, 5, 3, 4, 8, 3, 6], [7, 1, 7, 1, 0, 7, 2, 8], [10, 2, 9, 9, 8, 9, 9, 2]]
b = [[0, 6, 3, 0, 5, 2, 7, 8, 5], [0, 8, 4, 3, 5, 3, 9, 4, 8], [9, 6, 7, 6, 8, 6, 6, 9, 3], [6, 3, 6, 9, 3, 4, 7, 6, 8], [6, 10, 8, 8, 10, 2, 0, 7, 2], [5, 8, 7, 8, 2, 9, 4, 9, 10], [2, 5, 9, 5, 2, 8, 0, 0, 8], [7, 8, 9, 8, 5, 0, 10, 9, 9]]
expected = [[209, 197, 232, 241, 160, 166, 188, 247, 220], [143, 285, 265, 223, 194, 166, 215, 267, 287], [175, 256, 247, 228, 176, 164, 200, 257, 252], [164, 225, 219, 184, 157, 142, 215, 264, 230], [260, 370, 381, 338, 285, 285, 261, 378, 361]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #170 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 6, 0, 9, 4], [0, 0, 10, 6, 4, 5], [2, 7, 7, 7, 1, 10], [0, 10, 7, 5, 6, 7], [7, 6, 7, 0, 2, 7], [9, 9, 5, 8, 5, 2], [0, 4, 7, 1, 0, 9], [8, 0, 5, 5, 3, 0]]
b = [[2, 8, 6, 1, 10, 0, 10, 7, 2], [10, 5, 3, 0, 0, 8, 6, 3, 3], [4, 8, 2, 5, 6, 3, 10, 4, 5], [0, 2, 5, 2, 9, 5, 2, 4, 9], [6, 7, 0, 6, 8, 8, 2, 3, 0], [6, 1, 0, 0, 9, 8, 3, 3, 6]]
expected = [[170, 212, 81, 93, 234, 162, 210, 141, 87], [94, 125, 50, 86, 191, 132, 135, 91, 134], [168, 138, 82, 57, 223, 200, 178, 124, 183], [206, 165, 69, 81, 198, 230, 173, 117, 152], [156, 163, 74, 54, 191, 141, 201, 122, 109], [170, 210, 131, 80, 250, 183, 226, 163, 154], [122, 87, 31, 37, 132, 130, 123, 71, 110], [54, 135, 83, 61, 179, 64, 146, 105, 86]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #171 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 4, 1, 4, 5, 4], [2, 10, 10, 1, 2, 6, 4], [5, 0, 7, 0, 9, 4, 6]]
b = [[4, 1], [9, 1], [7, 9], [2, 2], [0, 7], [10, 2], [2, 1]]
expected = [[182, 96], [238, 134], [121, 145]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #172 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0], [9, 7], [0, 10], [6, 3], [10, 9], [0, 8], [7, 6], [9, 7], [5, 8], [10, 1]]
b = [[0, 1, 0], [9, 5, 6]]
expected = [[0, 6, 0], [63, 44, 42], [90, 50, 60], [27, 21, 18], [81, 55, 54], [72, 40, 48], [54, 37, 36], [63, 44, 42], [72, 45, 48], [9, 15, 6]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #173 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[3, 2]]
expected = [[12, 8]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #174 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5], [10, 7], [3, 3], [7, 5], [3, 1], [1, 9], [4, 3]]
b = [[4, 2, 9, 3, 7, 5, 7, 4, 8, 5], [6, 4, 2, 7, 4, 4, 7, 5, 7, 9]]
expected = [[50, 30, 55, 50, 55, 45, 70, 45, 75, 70], [82, 48, 104, 79, 98, 78, 119, 75, 129, 113], [30, 18, 33, 30, 33, 27, 42, 27, 45, 42], [58, 34, 73, 56, 69, 55, 84, 53, 91, 80], [18, 10, 29, 16, 25, 19, 28, 17, 31, 24], [58, 38, 27, 66, 43, 41, 70, 49, 71, 86], [34, 20, 42, 33, 40, 32, 49, 31, 53, 47]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #175 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 3, 1, 5, 7]]
b = [[9], [8], [0], [7], [3], [7]]
expected = [[171]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #176 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 3], [10, 3, 3], [0, 4, 6], [4, 7, 8]]
b = [[10, 2, 4, 3, 9, 8, 5, 3, 9], [10, 0, 4, 1, 4, 7, 4, 2, 0], [7, 0, 3, 5, 3, 3, 9, 3, 3]]
expected = [[211, 20, 85, 54, 135, 152, 113, 57, 99], [151, 20, 61, 48, 111, 110, 89, 45, 99], [82, 0, 34, 34, 34, 46, 70, 26, 18], [166, 8, 68, 59, 88, 105, 120, 50, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #177 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 10, 0, 3, 0, 2, 7, 6, 0], [6, 1, 0, 6, 9, 7, 5, 5, 7, 6], [4, 3, 2, 10, 3, 8, 9, 7, 1, 2], [1, 8, 5, 1, 7, 3, 6, 7, 0, 4], [5, 10, 5, 9, 9, 1, 1, 1, 1, 1], [5, 7, 2, 1, 2, 3, 0, 1, 8, 8], [1, 3, 4, 4, 8, 0, 7, 5, 9, 1], [8, 10, 0, 9, 10, 9, 7, 3, 2, 4]]
b = [[7, 3, 5], [2, 5, 2], [9, 1, 9], [2, 4, 7], [0, 3, 10], [5, 3, 9], [2, 1, 9], [1, 3, 7], [0, 6, 7], [2, 0, 9]]
expected = [[142, 137, 264], [118, 157, 410], [141, 138, 371], [112, 109, 309], [128, 146, 284], [101, 122, 246], [78, 138, 325], [164, 195, 438]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #178 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 2, 9], [8, 1, 1, 1], [10, 1, 2, 10], [7, 8, 0, 10], [6, 2, 9, 2], [5, 10, 6, 10], [6, 1, 0, 7], [1, 7, 9, 0], [1, 4, 5, 3]]
b = [[6, 1, 4, 2, 2, 2], [8, 6, 0, 6, 7, 5], [9, 7, 10, 2, 0, 4], [2, 3, 4, 10, 0, 2]]
expected = [[112, 63, 96, 126, 34, 56], [67, 24, 46, 34, 23, 27], [106, 60, 100, 130, 27, 53], [126, 85, 68, 162, 70, 74], [137, 87, 122, 62, 26, 62], [184, 137, 120, 182, 80, 104], [58, 33, 52, 88, 19, 31], [143, 106, 94, 62, 51, 73], [89, 69, 66, 66, 30, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #179 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 4, 1], [9, 3, 10, 2], [9, 5, 7, 9], [6, 8, 8, 7], [2, 7, 0, 5], [6, 0, 2, 2], [2, 2, 8, 4]]
b = [[2, 2, 8, 8, 6, 1, 8, 5], [10, 4, 4, 0, 0, 7, 4, 0], [6, 0, 4, 3, 3, 3, 1, 8], [8, 5, 1, 1, 10, 10, 1, 4]]
expected = [[136, 49, 73, 29, 34, 94, 61, 46], [124, 40, 126, 104, 104, 80, 96, 133], [182, 83, 129, 102, 165, 155, 108, 137], [196, 79, 119, 79, 130, 156, 95, 122], [114, 57, 49, 21, 62, 101, 49, 30], [40, 22, 58, 56, 62, 32, 52, 54], [104, 32, 60, 44, 76, 80, 36, 90]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #180 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 4, 9, 7, 5, 5, 4], [8, 8, 4, 3, 3, 5, 8, 7], [1, 0, 6, 7, 7, 2, 4, 7], [6, 5, 2, 3, 0, 2, 10, 5]]
b = [[4, 5, 0], [7, 4, 4], [4, 10, 1], [8, 6, 10], [6, 7, 8], [0, 1, 5], [6, 6, 9], [1, 7, 9]]
expected = [[259, 282, 292], [201, 253, 250], [157, 231, 241], [156, 185, 197]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #181 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 5, 10, 10, 0], [5, 8, 7, 5, 8, 3], [1, 4, 5, 3, 10, 10], [7, 5, 5, 0, 8, 8], [4, 1, 9, 2, 3, 4]]
b = [[10, 4, 10, 3], [5, 9, 1, 3], [3, 6, 3, 1], [3, 4, 3, 5], [9, 2, 5, 5], [5, 5, 1, 6]]
expected = [[190, 175, 114, 135], [213, 185, 137, 129], [194, 152, 98, 145], [222, 159, 138, 129], [125, 113, 93, 73]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #182 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 5, 3, 3, 10, 2]]
b = [[1, 2, 9, 10, 2, 6, 3, 1, 5, 7], [10, 3, 3, 10, 1, 1, 1, 2, 7, 9], [7, 6, 0, 7, 3, 3, 6, 1, 6, 10], [1, 0, 6, 5, 5, 6, 7, 5, 3, 7], [10, 6, 8, 10, 8, 8, 10, 7, 4, 3], [4, 2, 6, 3, 1, 10, 10, 6, 5, 3], [7, 3, 5, 10, 5, 4, 5, 6, 3, 3]]
expected = [[166, 94, 160, 210, 86, 193, 207, 125, 155, 180]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #183 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 5, 2], [4, 5, 1, 2], [2, 9, 4, 0], [8, 2, 1, 7], [7, 1, 10, 0], [7, 6, 3, 7], [3, 1, 3, 7], [3, 8, 3, 9]]
b = [[4, 0, 2, 5, 6, 5], [9, 1, 1, 0, 5, 8], [4, 7, 0, 10, 9, 1], [2, 4, 1, 8, 8, 0]]
expected = [[28, 43, 4, 71, 67, 10], [69, 20, 15, 46, 74, 61], [105, 37, 13, 50, 93, 86], [68, 37, 25, 106, 123, 57], [77, 71, 15, 135, 137, 53], [108, 55, 27, 121, 155, 86], [47, 50, 14, 101, 106, 26], [114, 65, 23, 117, 157, 82]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #184 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 1, 0, 3, 0, 8, 2], [9, 7, 6, 3, 4, 6, 0, 8]]
b = [[0, 1, 1], [9, 8, 9], [1, 0, 0], [6, 2, 5], [3, 10, 10], [9, 9, 10], [7, 4, 6], [7, 6, 4]]
expected = [[89, 84, 97], [209, 213, 219]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #185 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 3, 3, 6, 4], [6, 7, 1, 8, 1, 8]]
b = [[6], [5], [6], [5], [4], [4]]
expected = [[125], [153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #186 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 3, 6, 2, 10], [0, 5, 3, 8, 5, 0], [3, 6, 3, 8, 2, 10], [1, 7, 4, 1, 5, 10], [9, 2, 9, 7, 7, 9], [8, 8, 1, 3, 9, 1], [8, 1, 4, 3, 4, 10], [9, 8, 2, 2, 2, 8], [8, 5, 6, 5, 6, 6], [1, 4, 9, 10, 3, 3]]
b = [[3, 9, 6, 2, 9, 10, 6], [0, 10, 8, 9, 0, 10, 0], [7, 4, 8, 7, 8, 5, 7], [1, 7, 7, 0, 8, 5, 3], [0, 3, 4, 2, 4, 0, 9], [3, 6, 3, 1, 5, 10, 5]]
expected = [[57, 120, 104, 35, 130, 145, 107], [29, 133, 140, 76, 108, 105, 90], [68, 221, 184, 95, 173, 245, 131], [62, 177, 151, 113, 119, 205, 132], [124, 261, 246, 122, 282, 280, 246], [37, 210, 180, 114, 145, 190, 150], [85, 191, 155, 71, 194, 225, 171], [67, 237, 180, 116, 161, 270, 132], [89, 235, 213, 121, 214, 245, 189], [85, 182, 201, 110, 188, 175, 141]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #187 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 2, 0], [4, 4, 3, 1], [1, 6, 8, 2], [1, 4, 5, 3], [5, 4, 8, 4]]
b = [[7, 8, 3, 8, 7, 1], [3, 10, 1, 5, 10, 7], [3, 8, 6, 8, 6, 4], [4, 4, 9, 5, 6, 2]]
expected = [[43, 78, 27, 63, 70, 33], [53, 100, 43, 81, 92, 46], [57, 140, 75, 112, 127, 79], [46, 100, 64, 83, 95, 55], [87, 160, 103, 144, 147, 73]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #188 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 2, 5, 10, 5, 5, 5, 9, 8], [1, 3, 1, 4, 8, 8, 3, 0, 5, 8]]
b = [[6, 4, 0, 3, 5, 2], [2, 0, 7, 7, 7, 10], [3, 9, 0, 7, 1, 9], [8, 3, 3, 5, 2, 0], [0, 1, 5, 10, 6, 10], [2, 7, 4, 2, 4, 0], [6, 9, 8, 0, 7, 10], [1, 6, 1, 10, 0, 7], [10, 10, 4, 5, 8, 3], [4, 5, 3, 5, 0, 0]]
expected = [[267, 311, 232, 347, 276, 304], [163, 206, 173, 212, 176, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #189 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 1, 1, 7], [10, 10, 0, 0, 9], [6, 6, 9, 2, 6], [8, 7, 10, 2, 4], [10, 6, 8, 9, 4], [4, 8, 5, 10, 9], [8, 3, 7, 10, 8], [1, 5, 2, 9, 3], [2, 9, 1, 9, 1], [8, 0, 2, 10, 8]]
b = [[4, 5, 5, 5, 0, 3, 9], [4, 7, 8, 8, 6, 5, 8], [6, 6, 3, 10, 8, 6, 8], [0, 4, 4, 1, 4, 1, 0], [0, 4, 10, 2, 4, 0, 1]]
expected = [[50, 113, 162, 110, 100, 60, 104], [80, 156, 220, 148, 96, 80, 179], [102, 158, 173, 182, 140, 104, 180], [120, 173, 174, 206, 146, 121, 212], [112, 192, 198, 195, 152, 117, 206], [78, 182, 229, 162, 164, 92, 149], [86, 175, 205, 160, 146, 91, 160], [36, 100, 117, 80, 94, 49, 68], [50, 119, 131, 103, 102, 66, 99], [44, 124, 166, 86, 88, 46, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #190 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 7, 5, 7, 5, 9], [2, 7, 9, 7, 8, 5, 8], [9, 4, 10, 8, 5, 3, 6], [7, 0, 0, 0, 7, 5, 8], [6, 0, 4, 7, 5, 1, 4], [10, 4, 2, 3, 5, 5, 4], [8, 9, 2, 8, 9, 9, 0], [8, 5, 3, 9, 9, 7, 9]]
b = [[1, 6, 10, 5, 3, 3, 10, 6, 6], [5, 4, 0, 5, 7, 2, 10, 9, 6], [5, 1, 9, 7, 9, 6, 1, 2, 8], [9, 8, 8, 1, 0, 0, 10, 10, 4], [4, 0, 6, 5, 7, 6, 9, 9, 6], [1, 3, 0, 6, 5, 9, 5, 0, 10], [8, 0, 4, 4, 9, 10, 10, 2, 8]]
expected = [[222, 128, 251, 220, 281, 252, 365, 241, 318], [246, 120, 237, 217, 289, 247, 346, 251, 316], [222, 153, 298, 210, 249, 212, 340, 247, 298], [104, 57, 144, 132, 167, 188, 238, 121, 198], [142, 99, 198, 112, 130, 121, 224, 167, 168], [124, 117, 188, 158, 172, 165, 282, 183, 224], [180, 177, 216, 206, 213, 189, 378, 294, 294], [244, 164, 269, 218, 265, 259, 429, 288, 334]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #191 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 9, 10, 10], [2, 9, 10, 4, 2], [5, 8, 7, 9, 1], [6, 3, 4, 2, 7], [1, 8, 1, 8, 1], [7, 8, 0, 4, 0]]
b = [[1], [7], [9], [1], [9]]
expected = [[235], [177], [142], [128], [83], [67]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #192 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 0, 1], [8, 4, 6, 1], [3, 4, 10, 9], [7, 2, 3, 8], [1, 6, 2, 3], [10, 1, 9, 5], [2, 1, 4, 10], [0, 4, 4, 1], [3, 8, 7, 5]]
b = [[7], [5], [0], [1]]
expected = [[81], [77], [50], [67], [40], [80], [29], [21], [66]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #193 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 4, 4, 2], [3, 3, 2, 9, 0], [0, 4, 2, 3, 7], [10, 2, 3, 7, 8], [2, 6, 0, 5, 10], [10, 7, 8, 4, 3], [10, 9, 0, 8, 5], [6, 6, 6, 1, 6], [9, 4, 4, 6, 10]]
b = [[0, 5], [7, 9], [2, 6], [9, 4], [0, 9]]
expected = [[51, 67], [106, 90], [59, 123], [83, 186], [87, 174], [101, 204], [135, 208], [63, 178], [90, 219]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #194 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 7, 7, 6, 0], [4, 1, 0, 5, 0, 4], [10, 0, 7, 8, 5, 3], [5, 1, 8, 0, 2, 7], [9, 10, 2, 5, 4, 2], [3, 0, 5, 8, 8, 7], [1, 0, 9, 10, 6, 8], [10, 7, 6, 10, 0, 2], [4, 10, 5, 2, 2, 9], [8, 9, 9, 7, 9, 8]]
b = [[8, 3, 6, 10, 2], [7, 6, 7, 9, 10], [6, 5, 5, 2, 8], [9, 10, 3, 6, 6], [2, 3, 2, 3, 10], [2, 5, 9, 8, 8]]
expected = [[209, 171, 144, 190, 214], [92, 88, 82, 111, 80], [210, 175, 156, 201, 198], [113, 102, 144, 137, 160], [211, 169, 175, 242, 220], [156, 173, 146, 168, 230], [180, 206, 165, 170, 258], [259, 212, 187, 251, 214], [172, 168, 210, 230, 252], [278, 260, 267, 312, 374]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #195 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10], [1, 5], [1, 3], [2, 4], [9, 1]]
b = [[9, 0, 2], [6, 4, 4]]
expected = [[96, 40, 48], [39, 20, 22], [27, 12, 14], [42, 16, 20], [87, 4, 22]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #196 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [2], [7], [8], [0], [7]]
b = [[1, 10, 4, 2, 7, 4]]
expected = [[3, 30, 12, 6, 21, 12], [2, 20, 8, 4, 14, 8], [7, 70, 28, 14, 49, 28], [8, 80, 32, 16, 56, 32], [0, 0, 0, 0, 0, 0], [7, 70, 28, 14, 49, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #197 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 7, 8, 7, 10, 4, 7, 2, 1], [9, 6, 0, 1, 9, 1, 2, 8, 6, 8], [2, 4, 3, 5, 5, 8, 1, 6, 0, 2], [0, 1, 9, 0, 10, 10, 4, 1, 7, 3], [2, 5, 2, 2, 4, 6, 3, 8, 10, 9]]
b = [[7, 6, 3, 7, 6, 5], [4, 2, 5, 5, 2, 6], [9, 5, 4, 3, 5, 0], [9, 5, 5, 2, 10, 6], [6, 6, 2, 9, 10, 6], [8, 2, 7, 9, 3, 5], [6, 6, 3, 1, 3, 6], [2, 1, 8, 9, 6, 1], [6, 0, 10, 2, 8, 0], [3, 6, 1, 9, 9, 2]]
expected = [[389, 236, 288, 353, 356, 242], [246, 195, 225, 343, 343, 182], [220, 130, 182, 243, 216, 150], [302, 170, 224, 266, 278, 147], [263, 158, 281, 315, 328, 150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #198 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 6, 6, 7, 10, 7, 0], [3, 6, 8, 7, 10, 4, 5, 5], [6, 10, 6, 10, 3, 10, 0, 3], [7, 6, 8, 6, 2, 5, 5, 5], [8, 0, 4, 4, 1, 8, 9, 2], [0, 1, 8, 8, 4, 6, 6, 10]]
b = [[9, 10, 0, 10, 5, 8, 10, 9, 8], [7, 6, 10, 10, 1, 9, 5, 8, 4], [6, 10, 8, 5, 8, 3, 5, 0, 9], [5, 0, 1, 8, 9, 7, 10, 1, 1], [2, 3, 3, 9, 3, 7, 3, 2, 7], [0, 5, 2, 1, 4, 2, 7, 2, 1], [5, 6, 6, 3, 10, 1, 0, 3, 9], [4, 9, 1, 10, 9, 1, 2, 4, 10]]
expected = [[185, 233, 237, 272, 243, 226, 231, 141, 222], [217, 271, 204, 345, 289, 239, 238, 145, 296], [228, 266, 190, 337, 254, 270, 325, 182, 213], [232, 292, 181, 306, 280, 210, 251, 166, 272], [171, 235, 111, 196, 251, 138, 203, 129, 220], [173, 254, 152, 274, 323, 145, 199, 94, 272]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #199 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 8], [6, 9, 7], [7, 5, 9], [2, 7, 0]]
b = [[10, 7, 2, 2, 6, 4, 4, 10, 7, 0], [0, 2, 0, 3, 8, 3, 9, 4, 0, 5], [7, 9, 1, 1, 4, 1, 6, 10, 0, 3]]
expected = [[106, 121, 18, 39, 118, 49, 131, 158, 35, 59], [109, 123, 19, 46, 136, 58, 147, 166, 42, 66], [133, 140, 23, 38, 118, 52, 127, 180, 49, 52], [20, 28, 4, 25, 68, 29, 71, 48, 14, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #200 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1]]
b = [[2, 1, 5, 4, 5, 6, 7, 1, 0, 1], [5, 1, 10, 8, 4, 7, 10, 8, 2, 3]]
expected = [[5, 1, 10, 8, 4, 7, 10, 8, 2, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #201 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2], [10, 0], [5, 9], [6, 7], [6, 8], [5, 0]]
b = [[2, 0, 0, 0, 1, 1, 5], [7, 8, 10, 0, 1, 5, 9]]
expected = [[16, 16, 20, 0, 3, 11, 23], [20, 0, 0, 0, 10, 10, 50], [73, 72, 90, 0, 14, 50, 106], [61, 56, 70, 0, 13, 41, 93], [68, 64, 80, 0, 14, 46, 102], [10, 0, 0, 0, 5, 5, 25]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #202 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5], [0, 0], [9, 4], [10, 1], [10, 9], [4, 5], [2, 6], [0, 5]]
b = [[8, 2], [9, 10]]
expected = [[125, 70], [0, 0], [108, 58], [89, 30], [161, 110], [77, 58], [70, 64], [45, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #203 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 9], [1, 1, 2], [6, 0, 5]]
b = [[5, 9, 8, 6, 10, 9, 3, 1], [4, 7, 8, 6, 7, 5, 0, 8], [2, 7, 0, 4, 8, 8, 9, 5]]
expected = [[108, 223, 160, 156, 242, 212, 111, 135], [13, 30, 16, 20, 33, 30, 21, 19], [40, 89, 48, 56, 100, 94, 63, 31]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #204 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 1, 1, 2, 7, 9, 0, 10, 7], [0, 10, 10, 7, 7, 10, 6, 7, 4, 8], [8, 0, 7, 3, 6, 3, 3, 3, 7, 8], [10, 9, 1, 6, 9, 6, 4, 0, 0, 7], [8, 6, 6, 9, 9, 0, 5, 7, 6, 3], [1, 0, 6, 6, 10, 3, 0, 7, 9, 0], [3, 9, 1, 8, 6, 5, 3, 8, 1, 1], [6, 3, 1, 10, 0, 4, 5, 6, 8, 8], [5, 4, 5, 3, 8, 3, 4, 7, 0, 4], [1, 2, 7, 2, 1, 10, 5, 2, 5, 5]]
b = [[2, 1, 6, 2], [10, 9, 8, 6], [1, 9, 4, 3], [7, 5, 6, 0], [0, 1, 7, 2], [8, 7, 3, 10], [1, 7, 1, 6], [3, 1, 7, 4], [1, 1, 10, 10], [0, 10, 6, 9]]
expected = [[115, 236, 226, 314], [270, 425, 384, 380], [87, 224, 287, 251], [205, 279, 299, 242], [177, 248, 369, 233], [104, 132, 284, 188], [221, 214, 274, 194], [176, 249, 311, 279], [125, 205, 242, 183], [139, 255, 198, 270]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #205 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 5, 1, 9, 2, 4], [7, 9, 1, 6, 7, 8, 7], [9, 6, 7, 6, 9, 1, 0]]
b = [[9, 9, 0, 6], [0, 2, 3, 9], [8, 2, 8, 7], [3, 6, 9, 9], [9, 9, 3, 1], [2, 7, 10, 8], [6, 7, 10, 3]]
expected = [[206, 197, 142, 135], [210, 287, 260, 276], [238, 231, 165, 228]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #206 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 9, 0, 1], [9, 3, 7, 8, 8], [7, 0, 2, 0, 3], [2, 3, 10, 8, 1], [7, 10, 10, 0, 2], [7, 2, 10, 10, 8], [7, 4, 0, 7, 5], [1, 3, 8, 4, 9], [4, 4, 6, 8, 3], [1, 7, 10, 9, 9]]
b = [[10, 0, 7, 4, 6, 8], [2, 6, 10, 9, 9, 6], [6, 3, 10, 10, 5, 3], [0, 4, 2, 1, 6, 9], [9, 2, 10, 6, 2, 10]]
expected = [[75, 65, 160, 150, 101, 73], [210, 87, 259, 189, 180, 263], [109, 12, 99, 66, 58, 92], [95, 82, 170, 149, 139, 146], [168, 94, 269, 230, 186, 166], [206, 98, 269, 204, 186, 268], [123, 62, 153, 101, 130, 193], [145, 76, 215, 169, 115, 176], [111, 80, 174, 138, 144, 176], [165, 126, 285, 230, 191, 251]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #207 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 3, 8, 7, 9, 6, 4, 9], [10, 7, 6, 4, 6, 3, 3, 8, 1], [7, 0, 2, 5, 4, 7, 5, 8, 3], [8, 3, 1, 3, 6, 2, 7, 7, 3], [1, 5, 0, 0, 7, 2, 9, 10, 0]]
b = [[8, 5, 9, 2], [0, 0, 1, 2], [9, 2, 2, 7], [6, 8, 0, 7], [8, 4, 3, 6], [4, 9, 0, 5], [5, 10, 10, 5], [9, 8, 10, 1], [9, 1, 4, 0]]
expected = [[378, 320, 239, 222], [314, 240, 241, 178], [288, 275, 221, 155], [272, 237, 247, 138], [207, 221, 225, 119]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #208 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 3, 7, 5, 5], [6, 7, 6, 2, 4, 7], [1, 5, 10, 3, 7, 4], [9, 7, 2, 3, 10, 7], [2, 0, 7, 1, 2, 4], [4, 0, 5, 10, 2, 3]]
b = [[0, 4, 8, 3, 10, 2], [6, 10, 6, 9, 1, 8], [0, 0, 5, 3, 10, 3], [6, 1, 0, 0, 10, 2], [7, 10, 6, 3, 6, 7], [8, 0, 4, 8, 4, 9]]
expected = [[135, 127, 163, 121, 253, 147], [138, 136, 172, 167, 199, 181], [129, 127, 146, 131, 203, 163], [186, 209, 212, 182, 235, 219], [52, 29, 79, 65, 128, 77], [98, 46, 81, 57, 214, 84]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #209 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5], [9, 7], [9, 4], [10, 2], [9, 8], [10, 10], [9, 5]]
b = [[8, 7, 7], [1, 0, 0]]
expected = [[13, 7, 7], [79, 63, 63], [76, 63, 63], [82, 70, 70], [80, 63, 63], [90, 70, 70], [77, 63, 63]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #210 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 5]]
b = [[9, 4, 6, 3, 8, 2, 1, 8], [8, 0, 6, 6, 2, 2, 5, 10], [6, 4, 5, 3, 8, 2, 4, 0]]
expected = [[156, 44, 115, 87, 106, 40, 71, 138]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #211 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 3], [4, 3, 9], [10, 10, 5], [2, 3, 2], [10, 8, 9], [5, 7, 4], [10, 7, 8], [5, 9, 0], [1, 6, 4], [10, 5, 4]]
b = [[0, 0, 5, 2, 5, 8, 1, 6], [2, 10, 6, 8, 10, 5, 3, 1], [3, 5, 3, 5, 7, 2, 8, 6]]
expected = [[29, 115, 109, 111, 161, 120, 62, 76], [33, 75, 65, 77, 113, 65, 85, 81], [35, 125, 125, 125, 185, 140, 80, 100], [12, 40, 34, 38, 54, 35, 27, 27], [43, 125, 125, 129, 193, 138, 106, 122], [26, 90, 79, 86, 123, 83, 58, 61], [38, 110, 116, 116, 176, 131, 95, 115], [18, 90, 79, 82, 115, 85, 32, 39], [24, 80, 53, 70, 93, 46, 51, 36], [22, 70, 92, 80, 128, 113, 57, 89]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #212 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 8, 0, 7], [3, 2, 9, 9, 6], [6, 2, 4, 7, 0], [1, 2, 10, 9, 5], [4, 3, 4, 7, 7], [9, 10, 8, 6, 9], [1, 1, 9, 1, 0], [8, 4, 0, 3, 8], [3, 7, 10, 10, 10]]
b = [[5, 3, 7, 9, 9, 0, 6], [5, 6, 7, 10, 10, 5, 3], [3, 9, 6, 3, 9, 10, 7], [9, 4, 9, 10, 2, 4, 1], [8, 6, 5, 9, 4, 10, 4]]
expected = [[105, 141, 118, 136, 149, 170, 102], [181, 174, 200, 218, 170, 196, 120], [115, 94, 143, 156, 124, 78, 77], [166, 171, 187, 194, 157, 196, 111], [166, 136, 171, 211, 144, 153, 96], [245, 237, 280, 346, 301, 244, 182], [46, 94, 77, 56, 102, 99, 73], [151, 108, 151, 214, 150, 112, 95], [250, 241, 270, 317, 247, 275, 159]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #213 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4], [9, 6], [0, 7], [5, 2]]
b = [[1, 6, 1, 1, 5, 4, 5], [8, 7, 0, 1, 0, 1, 10]]
expected = [[42, 88, 10, 14, 50, 44, 90], [57, 96, 9, 15, 45, 42, 105], [56, 49, 0, 7, 0, 7, 70], [21, 44, 5, 7, 25, 22, 45]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #214 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2], [6, 7], [8, 5], [10, 8], [2, 7], [7, 6], [2, 3], [3, 2], [7, 8]]
b = [[7, 2, 9, 5, 3, 3, 10, 4, 5], [8, 2, 1, 10, 10, 4, 8, 6, 0]]
expected = [[58, 16, 56, 50, 38, 26, 76, 36, 30], [98, 26, 61, 100, 88, 46, 116, 66, 30], [96, 26, 77, 90, 74, 44, 120, 62, 40], [134, 36, 98, 130, 110, 62, 164, 88, 50], [70, 18, 25, 80, 76, 34, 76, 50, 10], [97, 26, 69, 95, 81, 45, 118, 64, 35], [38, 10, 21, 40, 36, 18, 44, 26, 10], [37, 10, 29, 35, 29, 17, 46, 24, 15], [113, 30, 71, 115, 101, 53, 134, 76, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #215 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 4, 2], [0, 9, 3, 4], [0, 6, 9, 6], [3, 3, 3, 6]]
b = [[4, 2], [0, 7], [6, 1], [2, 3]]
expected = [[48, 62], [26, 78], [66, 69], [42, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #216 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 7, 0, 3, 7, 3, 2], [6, 6, 4, 1, 7, 1, 2, 1], [8, 7, 8, 8, 10, 3, 1, 5], [2, 6, 10, 3, 8, 1, 8, 10], [7, 5, 0, 0, 4, 3, 0, 9], [2, 6, 0, 10, 8, 2, 2, 5], [10, 6, 4, 8, 2, 3, 9, 9]]
b = [[2, 6, 3, 9, 8, 4], [10, 1, 2, 6, 3, 10], [6, 3, 10, 1, 5, 9], [1, 7, 7, 8, 9, 3], [5, 7, 7, 7, 1, 2], [3, 4, 10, 7, 4, 4], [9, 9, 8, 3, 0, 3], [10, 5, 10, 10, 2, 2]]
expected = [[147, 144, 225, 166, 121, 144], [163, 137, 162, 174, 108, 149], [260, 251, 332, 330, 229, 243], [342, 251, 369, 275, 143, 231], [183, 132, 179, 232, 105, 116], [188, 195, 230, 260, 150, 138], [302, 286, 344, 346, 222, 221]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #217 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 4, 2, 8, 6, 6, 7]]
b = [[9, 5, 3, 10, 4], [3, 4, 6, 4, 4], [5, 10, 8, 8, 3], [4, 7, 4, 10, 5], [5, 2, 9, 1, 7], [4, 2, 2, 9, 8], [2, 4, 8, 5, 1], [8, 4, 4, 6, 7]]
expected = [[190, 160, 230, 222, 205]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #218 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[10, 0, 3]]
expected = [[100, 0, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #219 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2], [1, 2], [4, 8], [7, 4], [4, 7]]
b = [[7, 3, 5, 9, 8, 9, 9, 10], [6, 6, 0, 8, 5, 10, 1, 3]]
expected = [[33, 21, 15, 43, 34, 47, 29, 36], [19, 15, 5, 25, 18, 29, 11, 16], [76, 60, 20, 100, 72, 116, 44, 64], [73, 45, 35, 95, 76, 103, 67, 82], [70, 54, 20, 92, 67, 106, 43, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #220 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 5, 5, 6, 5, 2, 1, 9, 4], [5, 1, 6, 5, 0, 9, 9, 8, 1, 7], [2, 7, 9, 0, 10, 1, 10, 5, 10, 8], [2, 6, 6, 2, 7, 10, 6, 1, 3, 5], [1, 8, 10, 7, 10, 7, 5, 1, 10, 9], [6, 7, 9, 6, 8, 8, 3, 4, 10, 4], [10, 4, 9, 8, 8, 9, 5, 0, 7, 3]]
b = [[8, 9, 2, 4], [5, 7, 5, 1], [3, 5, 5, 9], [0, 3, 9, 5], [0, 1, 2, 7], [8, 5, 0, 5], [7, 3, 7, 2], [4, 9, 1, 5], [7, 6, 8, 3], [7, 4, 0, 2]]
expected = [[237, 245, 206, 210], [286, 275, 169, 220], [302, 294, 259, 262], [246, 218, 163, 213], [306, 301, 291, 305], [309, 335, 267, 302], [304, 309, 264, 303]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #221 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 2], [8, 0, 0], [0, 0, 1], [6, 5, 9], [9, 2, 0], [7, 2, 1], [2, 2, 5], [3, 0, 8], [6, 0, 7], [2, 0, 9]]
b = [[9, 0, 1], [6, 10, 2], [2, 6, 1]]
expected = [[28, 22, 6], [72, 0, 8], [2, 6, 1], [102, 104, 25], [93, 20, 13], [77, 26, 12], [40, 50, 11], [43, 48, 11], [68, 42, 13], [36, 54, 11]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #222 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 7, 2, 1], [4, 4, 4, 1, 4], [3, 3, 9, 0, 1], [2, 9, 10, 5, 2], [0, 3, 10, 4, 2], [10, 1, 8, 1, 6], [3, 7, 8, 4, 5], [3, 9, 1, 1, 4]]
b = [[2, 6, 6, 10, 2, 0, 4, 10, 1], [7, 0, 8, 8, 6, 7, 7, 9, 6], [6, 6, 7, 0, 8, 1, 10, 0, 4], [4, 3, 0, 6, 10, 7, 9, 9, 3], [10, 2, 6, 4, 7, 8, 0, 3, 9]]
expected = [[134, 104, 173, 170, 149, 85, 180, 183, 100], [104, 59, 108, 94, 102, 71, 93, 97, 83], [91, 74, 111, 58, 103, 38, 123, 60, 66], [167, 91, 166, 130, 202, 124, 216, 152, 129], [117, 76, 106, 56, 152, 75, 157, 69, 88], [139, 123, 160, 138, 142, 70, 136, 136, 105], [169, 88, 160, 130, 187, 125, 177, 144, 134], [119, 35, 121, 124, 106, 103, 94, 132, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #223 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 1, 2, 2, 8, 7, 6], [10, 2, 3, 2, 1, 5, 4, 2], [4, 5, 0, 8, 8, 9, 1, 3], [2, 6, 6, 7, 6, 6, 1, 9], [0, 9, 8, 10, 2, 10, 2, 2], [0, 3, 7, 5, 8, 3, 3, 7], [10, 10, 10, 10, 6, 3, 8, 6], [9, 2, 0, 6, 8, 2, 0, 3], [5, 0, 6, 4, 7, 4, 0, 3], [2, 9, 10, 10, 5, 4, 9, 0]]
b = [[6, 8, 6, 2, 9, 10], [5, 4, 7, 7, 7, 2], [1, 9, 5, 0, 6, 9], [3, 2, 5, 9, 7, 5], [1, 3, 0, 9, 5, 3], [5, 10, 8, 6, 1, 0], [10, 0, 1, 5, 10, 2], [4, 4, 7, 4, 7, 9]]
expected = [[191, 171, 188, 191, 219, 135], [153, 180, 157, 119, 200, 170], [148, 194, 193, 258, 207, 143], [151, 222, 231, 240, 254, 222], [163, 242, 249, 249, 235, 168], [118, 167, 157, 199, 220, 187], [275, 302, 304, 316, 445, 348], [112, 148, 135, 182, 200, 175], [87, 175, 133, 145, 169, 172], [212, 217, 216, 271, 330, 211]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #224 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 9, 8], [4, 6, 3, 4], [7, 9, 6, 3]]
b = [[8, 5, 0, 8, 6, 10, 9, 7, 9], [6, 3, 3, 9, 8, 9, 1, 0, 5], [8, 6, 5, 7, 10, 10, 0, 7, 6], [9, 7, 1, 6, 8, 1, 6, 6, 6]]
expected = [[190, 138, 56, 160, 192, 157, 94, 146, 152], [128, 84, 37, 131, 134, 128, 66, 73, 108], [185, 119, 60, 197, 198, 214, 90, 109, 162]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #225 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 0, 10, 5, 2, 9, 10, 4], [3, 8, 10, 8, 1, 5, 5, 5, 8], [2, 5, 3, 4, 10, 6, 1, 0, 0], [6, 9, 3, 3, 7, 4, 3, 10, 3], [2, 1, 2, 0, 2, 6, 6, 2, 8], [10, 8, 3, 6, 5, 3, 4, 5, 10], [4, 7, 2, 4, 2, 1, 5, 8, 5], [6, 0, 6, 6, 3, 1, 3, 4, 6], [0, 4, 9, 0, 0, 7, 10, 2, 3]]
b = [[1, 4, 0, 9, 10, 8, 9, 6, 4, 4], [8, 7, 7, 3, 7, 0, 5, 10, 1, 1], [9, 4, 3, 9, 6, 8, 9, 3, 1, 0], [9, 8, 6, 9, 9, 6, 2, 2, 1, 9], [6, 0, 8, 10, 5, 1, 7, 2, 3, 10], [1, 4, 1, 6, 7, 4, 4, 8, 1, 1], [10, 0, 8, 0, 8, 8, 6, 9, 4, 9], [7, 5, 9, 0, 5, 10, 10, 0, 10, 2], [9, 5, 8, 5, 6, 6, 1, 7, 0, 2]]
expected = [[392, 229, 359, 217, 358, 285, 284, 257, 180, 268], [397, 257, 296, 293, 371, 311, 288, 287, 116, 178], [181, 111, 162, 232, 209, 106, 178, 156, 60, 164], [305, 204, 288, 244, 323, 255, 318, 235, 176, 187], [192, 97, 165, 135, 197, 174, 143, 190, 67, 109], [353, 243, 301, 313, 391, 299, 300, 301, 141, 221], [278, 174, 248, 162, 264, 228, 230, 200, 136, 151], [245, 150, 187, 228, 252, 239, 209, 149, 98, 156], [261, 117, 184, 150, 239, 218, 212, 234, 80, 111]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #226 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 5, 0, 3, 4, 8, 5, 3]]
b = [[4, 10], [7, 5], [8, 6], [2, 8], [10, 3], [10, 10], [3, 7], [8, 3], [8, 5]]
expected = [[206, 185]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #227 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 4, 4, 4, 3], [10, 7, 0, 9, 10, 8]]
b = [[0, 0, 0, 10, 1, 9, 0], [6, 6, 5, 8, 0, 8, 1], [7, 6, 1, 8, 3, 4, 4], [3, 5, 4, 3, 10, 1, 2], [5, 10, 10, 7, 4, 1, 5], [2, 8, 9, 6, 7, 10, 5]]
expected = [[90, 132, 107, 202, 97, 158, 63], [135, 251, 243, 301, 196, 245, 115]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #228 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 7, 0, 0, 2], [8, 3, 9, 4, 6, 5], [6, 5, 5, 9, 3, 0], [3, 7, 1, 0, 3, 5], [5, 0, 8, 2, 1, 2]]
b = [[10, 0, 10, 0, 5, 3, 2], [7, 7, 2, 2, 3, 2, 0], [3, 1, 4, 3, 5, 10, 2], [4, 7, 9, 1, 6, 8, 0], [3, 4, 6, 7, 2, 9, 5], [2, 0, 7, 2, 6, 4, 4]]
expected = [[133, 35, 130, 33, 99, 110, 38], [172, 82, 229, 89, 160, 226, 84], [155, 115, 189, 55, 130, 177, 37], [101, 62, 101, 48, 77, 80, 43], [89, 26, 120, 37, 91, 128, 39]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #229 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 6, 8, 10]]
b = [[9], [10], [3], [7], [1]]
expected = [[122]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #230 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 6, 7, 10, 9], [10, 0, 3, 8, 5, 3]]
b = [[0, 1, 10, 6, 7, 6, 0, 7], [5, 9, 1, 5, 5, 0, 6, 0], [6, 5, 0, 0, 2, 4, 4, 5], [10, 8, 1, 9, 1, 4, 5, 6], [7, 1, 9, 0, 7, 8, 10, 6], [1, 7, 1, 2, 10, 3, 7, 4]]
expected = [[195, 186, 198, 145, 252, 213, 234, 231], [136, 115, 156, 138, 149, 153, 123, 175]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #231 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 0], [10, 3, 9], [9, 3, 1], [4, 3, 7]]
b = [[5, 10, 1, 8, 2, 9, 0, 6], [0, 9, 3, 3, 4, 3, 9, 5], [8, 10, 8, 6, 1, 6, 10, 8]]
expected = [[35, 115, 22, 71, 34, 78, 45, 67], [122, 217, 91, 143, 41, 153, 117, 147], [53, 127, 26, 87, 31, 96, 37, 77], [76, 137, 69, 83, 27, 87, 97, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #232 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 5, 7, 2, 1, 9, 8, 0], [0, 1, 8, 7, 8, 3, 6, 6, 1], [1, 8, 2, 10, 3, 4, 1, 3, 0], [8, 6, 5, 8, 0, 5, 3, 3, 2], [10, 8, 10, 0, 3, 3, 1, 9, 4], [7, 0, 8, 2, 4, 10, 0, 3, 0], [5, 0, 1, 2, 2, 2, 2, 5, 9], [1, 6, 6, 1, 4, 3, 9, 7, 3]]
b = [[1, 7, 7, 2, 3, 0, 7, 10, 3], [3, 3, 6, 0, 8, 4, 4, 2, 3], [6, 4, 3, 1, 4, 2, 6, 10, 8], [9, 7, 3, 10, 7, 9, 1, 4, 9], [4, 4, 6, 10, 3, 2, 4, 10, 2], [8, 3, 4, 0, 8, 8, 3, 1, 3], [5, 3, 10, 6, 10, 3, 6, 1, 8], [0, 7, 5, 10, 10, 3, 8, 9, 6], [5, 4, 5, 4, 8, 8, 5, 9, 7]]
expected = [[190, 235, 284, 241, 351, 176, 248, 260, 278], [205, 189, 206, 258, 265, 167, 189, 262, 246], [176, 157, 150, 170, 226, 176, 115, 148, 177], [193, 203, 206, 157, 264, 180, 185, 227, 225], [155, 237, 253, 172, 299, 144, 281, 367, 239], [169, 162, 158, 112, 189, 131, 169, 235, 159], [108, 144, 154, 149, 197, 133, 154, 218, 160], [164, 169, 240, 194, 302, 149, 218, 228, 230]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #233 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 0, 1], [2, 9, 9, 0], [3, 4, 5, 1]]
b = [[8, 10, 8, 1, 8], [3, 0, 6, 2, 0], [0, 6, 7, 3, 4], [2, 3, 8, 10, 6]]
expected = [[85, 103, 94, 22, 86], [43, 74, 133, 47, 52], [38, 63, 91, 36, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #234 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 8, 8, 1, 9, 5, 10, 6], [0, 6, 9, 1, 8, 1, 9, 6, 5], [5, 4, 0, 6, 2, 10, 7, 0, 1], [0, 2, 3, 10, 6, 8, 5, 0, 4], [8, 7, 1, 7, 7, 9, 3, 1, 6], [2, 6, 1, 6, 0, 2, 6, 0, 10]]
b = [[10, 7], [6, 6], [9, 10], [2, 2], [10, 2], [8, 0], [10, 3], [7, 10], [8, 3]]
expected = [[438, 319], [379, 246], [264, 99], [265, 101], [372, 173], [233, 120]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #235 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8], [4, 3]]
b = [[8, 7, 2, 10], [6, 5, 6, 3]]
expected = [[120, 103, 66, 114], [50, 43, 26, 49]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #236 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 7, 2, 10], [0, 9, 6, 6, 7], [5, 0, 6, 2, 9], [2, 0, 8, 1, 6], [8, 6, 6, 7, 0], [10, 5, 1, 6, 2], [3, 1, 1, 10, 9], [5, 1, 8, 10, 9]]
b = [[3, 7, 4, 0, 8, 0, 6], [1, 4, 7, 3, 8, 2, 3], [5, 7, 0, 10, 9, 7, 0], [1, 5, 4, 9, 3, 8, 0], [6, 6, 6, 5, 5, 7, 3]]
expected = [[127, 199, 142, 156, 231, 147, 96], [87, 150, 129, 176, 179, 157, 48], [101, 141, 82, 123, 145, 121, 57], [83, 111, 48, 119, 121, 106, 30], [67, 157, 102, 141, 187, 110, 66], [58, 139, 111, 89, 157, 79, 81], [79, 136, 113, 148, 116, 152, 48], [120, 199, 121, 218, 195, 201, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #237 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 3, 5, 8, 10, 7, 1], [9, 9, 3, 1, 0, 0, 3, 7], [1, 7, 7, 3, 1, 8, 4, 6], [1, 9, 1, 2, 6, 7, 6, 6], [7, 2, 3, 5, 0, 5, 2, 4], [5, 6, 1, 9, 6, 2, 1, 6], [0, 8, 2, 10, 0, 6, 4, 2], [2, 4, 2, 8, 9, 1, 10, 7]]
b = [[7, 3, 2, 6], [9, 6, 1, 10], [2, 4, 5, 10], [8, 1, 10, 5], [8, 5, 1, 0], [10, 4, 4, 1], [5, 7, 10, 4], [8, 3, 4, 3]]
expected = [[379, 218, 212, 220], [229, 136, 110, 212], [264, 159, 171, 203], [302, 181, 154, 165], [205, 96, 137, 142], [284, 127, 159, 169], [252, 124, 190, 178], [306, 186, 239, 174]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #238 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 4], [2, 5, 8]]
b = [[7, 3, 2, 7], [1, 10, 0, 7], [0, 6, 4, 3]]
expected = [[19, 80, 20, 61], [19, 104, 36, 73]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #239 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [6], [6], [0], [10], [2], [3], [7], [1], [2]]
b = [[0, 4, 0, 5, 9, 4]]
expected = [[0, 4, 0, 5, 9, 4], [0, 24, 0, 30, 54, 24], [0, 24, 0, 30, 54, 24], [0, 0, 0, 0, 0, 0], [0, 40, 0, 50, 90, 40], [0, 8, 0, 10, 18, 8], [0, 12, 0, 15, 27, 12], [0, 28, 0, 35, 63, 28], [0, 4, 0, 5, 9, 4], [0, 8, 0, 10, 18, 8]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #240 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 8, 5, 4, 7, 9], [6, 9, 8, 9, 6, 4, 5], [0, 4, 4, 0, 0, 4, 2], [2, 2, 2, 10, 10, 3, 4], [1, 6, 6, 8, 5, 5, 9], [1, 5, 4, 6, 6, 5, 10], [0, 6, 2, 5, 5, 10, 9], [0, 9, 4, 4, 7, 2, 2], [1, 10, 0, 10, 10, 6, 5], [9, 6, 2, 4, 7, 6, 9]]
b = [[2, 7, 6, 3, 0, 5, 10], [0, 3, 1, 2, 3, 0, 5], [0, 10, 10, 9, 4, 2, 5], [0, 2, 2, 5, 10, 4, 0], [3, 1, 4, 0, 2, 0, 2], [2, 4, 7, 0, 5, 8, 9], [4, 8, 3, 4, 6, 10, 4]]
expected = [[72, 232, 213, 150, 182, 207, 202], [58, 229, 210, 173, 211, 164, 213], [16, 84, 78, 52, 60, 60, 84], [56, 114, 127, 94, 173, 118, 103], [63, 198, 170, 145, 211, 179, 161], [70, 180, 152, 119, 188, 177, 152], [71, 165, 153, 91, 190, 194, 176], [33, 106, 105, 82, 119, 60, 105], [64, 131, 133, 93, 210, 143, 154], [87, 212, 185, 113, 164, 203, 234]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #241 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 7, 7, 6], [2, 7, 7, 2, 2], [10, 9, 10, 6, 8]]
b = [[7, 7, 8], [7, 8, 2], [6, 2, 8], [0, 4, 4], [4, 3, 6]]
expected = [[157, 155, 200], [113, 98, 106], [225, 210, 250]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #242 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [10], [10]]
b = [[4, 0, 2, 4, 5, 3, 1, 7]]
expected = [[12, 0, 6, 12, 15, 9, 3, 21], [40, 0, 20, 40, 50, 30, 10, 70], [40, 0, 20, 40, 50, 30, 10, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #243 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 3, 1, 10, 4, 1], [6, 3, 9, 3, 4, 3, 3], [2, 4, 1, 9, 1, 6, 7], [1, 1, 5, 8, 8, 4, 2], [10, 9, 5, 3, 8, 6, 9]]
b = [[9, 5, 0, 8, 3, 5, 8, 5, 7, 4], [3, 3, 0, 1, 10, 10, 5, 3, 0, 6], [6, 9, 5, 2, 2, 7, 8, 2, 8, 5], [5, 10, 7, 7, 7, 3, 0, 3, 4, 8], [5, 5, 4, 4, 7, 2, 9, 5, 7, 4], [7, 6, 1, 8, 7, 10, 9, 10, 3, 6], [9, 7, 10, 6, 2, 7, 7, 8, 7, 3]]
expected = [[194, 166, 76, 164, 150, 146, 234, 155, 180, 132], [200, 209, 115, 148, 142, 191, 219, 140, 184, 154], [191, 211, 148, 179, 174, 195, 156, 172, 132, 170], [168, 211, 137, 151, 167, 144, 175, 138, 161, 161], [325, 291, 174, 254, 267, 323, 354, 268, 259, 238]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #244 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8], [0, 9], [10, 10]]
b = [[4, 5, 5, 1, 4, 7, 8], [2, 0, 10, 10, 2, 2, 7]]
expected = [[52, 45, 125, 89, 52, 79, 128], [18, 0, 90, 90, 18, 18, 63], [60, 50, 150, 110, 60, 90, 150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #245 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 1, 7], [10, 2, 0, 8], [6, 4, 2, 5]]
b = [[10, 4, 8, 10], [1, 7, 4, 7], [3, 3, 7, 6], [3, 3, 1, 1]]
expected = [[130, 106, 118, 155], [126, 78, 96, 122], [85, 73, 83, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #246 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 1, 9], [5, 5, 0, 8]]
b = [[5, 4], [1, 4], [5, 5], [8, 8]]
expected = [[107, 133], [94, 104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #247 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 4, 10, 6, 8, 1, 0, 2], [10, 0, 9, 2, 3, 3, 5, 9, 8], [6, 6, 5, 7, 4, 3, 1, 10, 5], [3, 10, 6, 2, 3, 4, 7, 9, 4], [9, 5, 8, 4, 1, 3, 8, 2, 10], [2, 4, 10, 2, 4, 6, 6, 0, 9]]
b = [[6, 3, 1, 3, 9, 6], [5, 8, 3, 5, 2, 9], [1, 6, 3, 2, 9, 7], [1, 10, 9, 1, 7, 6], [3, 0, 9, 1, 6, 4], [10, 0, 3, 10, 8, 8], [4, 10, 9, 9, 2, 0], [3, 3, 8, 2, 5, 1], [7, 2, 3, 7, 1, 10]]
expected = [[164, 166, 205, 149, 250, 238], [213, 197, 232, 202, 290, 260], [189, 216, 251, 163, 265, 267], [208, 250, 255, 225, 228, 255], [232, 261, 220, 249, 257, 309], [203, 196, 197, 229, 223, 284]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #248 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8], [7, 5], [10, 4], [2, 6], [9, 6], [10, 0]]
b = [[2, 2], [9, 6]]
expected = [[92, 68], [59, 44], [56, 44], [58, 40], [72, 54], [20, 20]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #249 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 6, 8], [2, 8, 3, 1], [7, 8, 10, 0], [6, 5, 8, 1], [6, 8, 7, 4], [8, 3, 4, 10], [3, 6, 10, 1], [1, 10, 5, 1]]
b = [[9, 7, 5], [6, 10, 0], [0, 2, 3], [2, 9, 8]]
expected = [[130, 226, 112], [68, 109, 27], [111, 149, 65], [86, 117, 62], [110, 172, 83], [110, 184, 132], [65, 110, 53], [71, 126, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #250 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 4, 0, 5, 2, 5], [5, 6, 1, 8, 6, 9, 9], [5, 3, 0, 2, 4, 5, 8], [7, 6, 5, 8, 8, 3, 1], [5, 9, 10, 9, 6, 8, 0], [1, 8, 5, 2, 7, 3, 0], [3, 9, 5, 3, 8, 0, 3], [10, 9, 8, 10, 9, 10, 7], [5, 6, 6, 8, 5, 6, 3], [3, 7, 4, 5, 0, 3, 0]]
b = [[9, 9, 9, 6, 0], [10, 3, 0, 9, 1], [6, 0, 6, 9, 4], [2, 3, 0, 5, 10], [4, 6, 2, 6, 3], [5, 0, 6, 2, 8], [0, 3, 5, 0, 3]]
expected = [[144, 135, 161, 130, 62], [196, 150, 162, 187, 207], [120, 108, 123, 101, 99], [216, 156, 132, 235, 157], [277, 135, 165, 298, 221], [166, 81, 71, 181, 93], [185, 120, 88, 207, 92], [334, 222, 251, 337, 269], [207, 126, 142, 220, 182], [146, 63, 69, 148, 97]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #251 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 7, 2, 4, 3, 1, 8, 9, 0], [9, 8, 9, 3, 8, 7, 5, 4, 10, 9], [7, 1, 6, 6, 1, 5, 9, 1, 0, 1], [10, 8, 1, 7, 9, 3, 8, 10, 3, 5], [7, 4, 7, 1, 0, 5, 9, 4, 6, 2], [7, 8, 3, 4, 2, 8, 3, 4, 3, 5], [5, 6, 1, 0, 5, 3, 9, 2, 0, 4]]
b = [[2, 7, 0, 5, 2, 5], [9, 10, 1, 9, 3, 0], [4, 0, 4, 0, 7, 4], [5, 6, 0, 0, 0, 4], [0, 7, 8, 4, 5, 6], [0, 3, 0, 4, 1, 3], [9, 8, 8, 3, 1, 6], [7, 1, 1, 9, 4, 0], [1, 5, 7, 0, 4, 2], [0, 9, 3, 9, 6, 2]]
expected = [[157, 203, 142, 175, 168, 138], [224, 413, 249, 309, 267, 230], [165, 199, 109, 113, 88, 160], [276, 398, 194, 329, 189, 209], [198, 234, 156, 172, 141, 152], [176, 279, 100, 237, 138, 133], [163, 249, 136, 192, 104, 130]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #252 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 1, 1, 8, 2, 9, 10, 7, 10], [1, 4, 4, 5, 0, 8, 7, 4, 9, 3], [1, 3, 3, 6, 3, 2, 5, 3, 3, 7], [9, 6, 2, 10, 3, 9, 1, 4, 1, 1], [10, 2, 9, 7, 0, 10, 1, 9, 6, 3], [4, 0, 6, 6, 2, 4, 1, 4, 4, 5], [7, 1, 7, 10, 0, 5, 8, 0, 4, 5], [8, 10, 2, 5, 9, 7, 6, 9, 8, 2]]
b = [[3, 6, 7, 3, 0, 0], [6, 6, 2, 1, 3, 0], [0, 3, 1, 7, 8, 7], [6, 4, 5, 1, 0, 5], [8, 4, 7, 7, 6, 7], [6, 1, 2, 9, 0, 10], [0, 0, 1, 7, 10, 7], [1, 6, 1, 7, 6, 8], [8, 4, 4, 4, 0, 4], [5, 8, 9, 3, 5, 10]]
expected = [[240, 251, 217, 280, 277, 359], [196, 154, 134, 234, 153, 280], [155, 157, 154, 161, 154, 233], [218, 193, 184, 201, 91, 228], [216, 239, 199, 295, 157, 331], [149, 158, 152, 176, 119, 231], [174, 170, 187, 213, 164, 271], [311, 279, 245, 322, 224, 338]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #253 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 6, 5, 4, 5], [5, 0, 9, 1, 10, 6], [0, 5, 8, 5, 1, 5], [4, 10, 0, 5, 9, 5], [10, 4, 1, 2, 7, 3]]
b = [[6, 3, 5, 7, 8, 9, 8, 5], [4, 10, 9, 7, 3, 4, 2, 10], [0, 0, 0, 1, 9, 7, 6, 9], [1, 7, 8, 6, 4, 1, 6, 4], [3, 8, 9, 2, 10, 6, 10, 9], [4, 10, 9, 5, 0, 5, 8, 9]]
expected = [[103, 198, 210, 160, 188, 183, 214, 250], [85, 162, 177, 100, 225, 199, 248, 254], [48, 143, 139, 100, 117, 112, 138, 196], [116, 269, 276, 171, 172, 160, 212, 266], [111, 170, 192, 140, 179, 172, 200, 197]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #254 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 7, 6, 5, 1, 3, 5, 5], [5, 8, 8, 3, 1, 5, 4, 2, 6], [6, 0, 6, 0, 8, 5, 10, 0, 9], [4, 5, 1, 7, 6, 2, 5, 3, 4], [3, 7, 9, 7, 7, 1, 7, 3, 8], [8, 2, 9, 9, 8, 6, 6, 10, 0], [0, 8, 4, 1, 6, 6, 3, 3, 10]]
b = [[8], [5], [9], [3], [6], [5], [9], [0], [8]]
expected = [[244], [276], [337], [210], [335], [314], [252]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #255 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 2, 3, 1, 8, 7, 10, 2], [6, 1, 4, 10, 7, 6, 3, 10, 10], [0, 10, 5, 5, 8, 3, 4, 7, 8], [5, 5, 7, 3, 1, 6, 6, 4, 3]]
b = [[0, 8], [7, 7], [6, 1], [3, 7], [9, 1], [2, 4], [1, 10], [9, 10], [4, 1]]
expected = [[221, 322], [269, 300], [292, 248], [161, 231]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #256 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [3], [8], [4]]
b = [[3, 0, 3, 2, 7]]
expected = [[6, 0, 6, 4, 14], [9, 0, 9, 6, 21], [24, 0, 24, 16, 56], [12, 0, 12, 8, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #257 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 10, 4, 8, 6, 7, 8, 1, 2]]
b = [[0, 2], [3, 0], [7, 9], [1, 5], [1, 1], [6, 9], [9, 2], [2, 10], [10, 8], [7, 5]]
expected = [[233, 292]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #258 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 9, 0, 1, 7, 4, 1, 6], [6, 4, 5, 8, 6, 3, 4, 10, 6], [5, 10, 8, 5, 1, 8, 5, 2, 10], [10, 10, 7, 7, 0, 9, 7, 1, 2], [1, 0, 8, 8, 6, 5, 6, 9, 8], [0, 1, 7, 2, 2, 3, 10, 5, 8], [9, 1, 2, 5, 2, 1, 1, 5, 5]]
b = [[1, 0, 7, 4, 5, 4], [0, 7, 8, 0, 10, 9], [3, 5, 8, 1, 3, 7], [7, 9, 10, 4, 8, 5], [7, 7, 7, 3, 7, 3], [1, 3, 2, 0, 10, 4], [10, 0, 8, 2, 5, 10], [7, 0, 3, 6, 7, 10], [5, 6, 6, 6, 7, 4]]
expected = [[128, 165, 298, 102, 303, 280], [262, 212, 340, 183, 353, 329], [193, 246, 358, 133, 385, 336], [176, 207, 365, 107, 373, 338], [291, 217, 326, 176, 334, 320], [227, 131, 247, 119, 232, 268], [135, 109, 206, 126, 200, 174]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #259 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 2], [9, 3, 9], [1, 6, 2], [10, 6, 8], [2, 8, 4], [3, 7, 3], [9, 10, 5], [6, 5, 7]]
b = [[0, 2, 5, 1, 6, 2], [4, 0, 5, 7, 8, 7], [6, 1, 8, 8, 2, 10]]
expected = [[44, 6, 66, 74, 80, 80], [66, 27, 132, 102, 96, 129], [36, 4, 51, 59, 58, 64], [72, 28, 144, 116, 124, 142], [56, 8, 82, 90, 84, 100], [46, 9, 74, 76, 80, 85], [70, 23, 135, 119, 144, 138], [62, 19, 111, 97, 90, 117]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #260 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 5, 7, 9, 6, 0], [1, 2, 1, 3, 9, 6, 8]]
b = [[4, 0, 10, 3, 9, 8, 0], [6, 8, 7, 4, 1, 1, 1], [4, 1, 8, 4, 0, 5, 5], [0, 4, 1, 7, 9, 2, 1], [6, 2, 8, 5, 4, 1, 2], [1, 10, 8, 6, 6, 6, 3], [6, 10, 8, 3, 10, 9, 7]]
expected = [[122, 167, 216, 178, 142, 91, 75], [128, 187, 219, 141, 190, 138, 102]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #261 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 7, 0], [3, 2, 4, 8], [0, 7, 7, 0], [4, 0, 1, 5], [8, 6, 4, 3], [6, 9, 2, 9], [4, 6, 8, 10], [6, 0, 10, 8], [3, 2, 2, 4]]
b = [[0], [2], [0], [9]]
expected = [[10], [76], [14], [45], [39], [99], [102], [72], [40]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #262 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 7, 1, 0, 5, 2], [7, 0, 4, 1, 3, 1, 2], [0, 10, 7, 10, 9, 10, 6], [7, 1, 10, 8, 3, 5, 6]]
b = [[5, 6, 9, 10, 2, 1, 2, 2, 6, 4], [9, 9, 7, 9, 8, 1, 8, 5, 7, 6], [2, 1, 10, 5, 3, 9, 0, 2, 2, 8], [4, 2, 7, 1, 0, 3, 7, 0, 8, 9], [3, 6, 7, 8, 2, 7, 7, 6, 0, 3], [10, 10, 6, 1, 8, 7, 1, 4, 5, 6], [9, 9, 5, 6, 4, 4, 2, 8, 3, 7]]
expected = [[163, 155, 182, 135, 135, 118, 82, 92, 115, 161], [84, 94, 147, 128, 48, 82, 47, 60, 69, 98], [325, 325, 363, 253, 223, 260, 235, 206, 232, 335], [209, 199, 307, 202, 122, 202, 116, 125, 176, 267]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #263 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 6, 0], [5, 2, 9, 4], [5, 6, 1, 1], [9, 8, 5, 0], [1, 8, 1, 8], [3, 1, 9, 0], [3, 7, 8, 0]]
b = [[2, 8, 4], [4, 5, 8], [2, 6, 1], [0, 9, 10]]
expected = [[24, 51, 30], [36, 140, 85], [36, 85, 79], [60, 142, 105], [36, 126, 149], [28, 83, 29], [50, 107, 76]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #264 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 0, 5], [7, 5, 7, 5], [2, 7, 10, 8], [3, 2, 2, 7], [10, 9, 9, 4], [0, 2, 1, 4], [4, 5, 4, 6], [6, 5, 0, 3], [2, 2, 2, 1], [8, 9, 10, 2]]
b = [[0, 8, 1, 0, 9, 9, 8, 3, 1], [8, 4, 6, 3, 10, 5, 2, 7, 10], [0, 4, 1, 6, 1, 10, 6, 8, 3], [3, 4, 10, 8, 6, 1, 3, 0, 7]]
expected = [[71, 120, 101, 61, 181, 121, 101, 76, 114], [55, 124, 94, 97, 150, 163, 123, 112, 113], [80, 116, 134, 145, 146, 161, 114, 135, 158], [37, 68, 87, 74, 91, 64, 61, 39, 78], [84, 168, 113, 113, 213, 229, 164, 165, 155], [28, 28, 53, 44, 45, 24, 22, 22, 51], [58, 92, 98, 87, 126, 107, 84, 79, 108], [49, 80, 66, 39, 122, 82, 67, 53, 77], [19, 36, 26, 26, 46, 49, 35, 36, 35], [78, 148, 92, 103, 184, 219, 148, 167, 142]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #265 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 7, 4, 7, 8, 4, 1, 9, 5], [2, 9, 7, 8, 3, 5, 3, 9, 1, 6], [7, 2, 5, 8, 0, 9, 1, 3, 4, 6], [3, 7, 1, 5, 5, 0, 3, 10, 9, 10], [1, 10, 5, 10, 10, 5, 10, 7, 5, 3], [7, 10, 0, 2, 9, 2, 0, 9, 2, 10], [0, 5, 1, 10, 0, 9, 8, 6, 3, 9], [2, 1, 1, 5, 2, 7, 4, 2, 4, 1], [4, 4, 6, 0, 6, 1, 9, 10, 1, 10], [5, 8, 5, 8, 3, 2, 0, 2, 4, 10]]
b = [[5, 3, 3, 6, 6], [6, 10, 7, 9, 2], [10, 6, 9, 4, 9], [0, 4, 4, 7, 6], [2, 9, 7, 6, 0], [6, 9, 7, 3, 9], [6, 6, 9, 0, 6], [0, 0, 4, 3, 7], [10, 5, 8, 6, 7], [10, 1, 8, 8, 7]]
expected = [[372, 351, 402, 321, 348], [258, 271, 339, 291, 316], [257, 216, 276, 244, 317], [285, 223, 341, 314, 292], [305, 396, 445, 336, 341], [245, 248, 308, 325, 239], [262, 249, 339, 254, 334], [146, 168, 189, 131, 189], [286, 220, 352, 239, 296], [281, 232, 303, 312, 269]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #266 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 8, 0, 1, 7, 9], [5, 10, 4, 2, 7, 9, 7], [7, 5, 4, 6, 7, 0, 10], [9, 4, 1, 4, 8, 9, 5]]
b = [[7, 1, 9], [8, 1, 7], [5, 5, 5], [10, 3, 10], [1, 9, 0], [8, 0, 8], [3, 8, 6]]
expected = [[209, 132, 233], [255, 160, 269], [206, 193, 238], [235, 142, 256]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #267 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 2, 3, 10], [1, 3, 6, 1, 5], [0, 9, 6, 4, 2], [8, 1, 9, 6, 8], [4, 6, 8, 7, 7], [3, 0, 3, 1, 8], [9, 10, 4, 0, 6], [0, 8, 1, 9, 3], [3, 9, 4, 5, 3], [9, 4, 2, 3, 0]]
b = [[6], [2], [2], [3], [7]]
expected = [[121], [62], [56], [142], [122], [83], [124], [66], [80], [75]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #268 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [9], [10], [10]]
b = [[8, 10, 3, 0]]
expected = [[0, 0, 0, 0], [72, 90, 27, 0], [80, 100, 30, 0], [80, 100, 30, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #269 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 3, 2, 0, 10, 5, 1, 1], [0, 4, 9, 8, 6, 6, 3, 5, 1], [3, 10, 8, 3, 1, 10, 10, 3, 4], [3, 5, 6, 10, 3, 4, 9, 7, 1], [2, 10, 2, 0, 5, 2, 7, 2, 0], [4, 1, 4, 8, 6, 10, 4, 9, 3], [10, 3, 10, 1, 6, 2, 1, 7, 2], [10, 8, 9, 8, 9, 4, 10, 6, 10]]
b = [[5], [8], [2], [10], [1], [10], [1], [1], [9]]
expected = [[216], [213], [291], [235], [128], [262], [156], [367]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #270 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [1], [10], [5], [5], [2], [10], [2], [5]]
b = [[5, 0, 6]]
expected = [[45, 0, 54], [5, 0, 6], [50, 0, 60], [25, 0, 30], [25, 0, 30], [10, 0, 12], [50, 0, 60], [10, 0, 12], [25, 0, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #271 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 3, 9, 7, 6, 0, 6], [7, 3, 8, 4, 7, 9, 8, 3], [10, 4, 7, 5, 3, 3, 2, 10], [9, 2, 0, 2, 4, 0, 9, 5], [9, 3, 7, 10, 2, 5, 5, 1], [6, 4, 6, 0, 1, 8, 4, 0]]
b = [[8], [10], [3], [9], [1], [5], [1], [7]]
expected = [[281], [227], [276], [158], [252], [151]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #272 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [7], [8], [10], [7], [3], [5], [7], [0]]
b = [[4, 1, 5, 7]]
expected = [[8, 2, 10, 14], [28, 7, 35, 49], [32, 8, 40, 56], [40, 10, 50, 70], [28, 7, 35, 49], [12, 3, 15, 21], [20, 5, 25, 35], [28, 7, 35, 49], [0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #273 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 4, 7, 6, 2, 10, 1, 7], [1, 2, 3, 9, 9, 7, 3, 6, 4]]
b = [[8, 1, 4], [1, 10, 10], [6, 8, 9], [4, 8, 0], [8, 4, 0], [0, 2, 1], [7, 9, 4], [10, 9, 4], [8, 6, 8]]
expected = [[240, 297, 178], [249, 272, 126]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #274 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 3, 0], [7, 2, 0, 7], [10, 3, 6, 5], [1, 9, 8, 3], [1, 3, 10, 2]]
b = [[10, 1, 4], [3, 2, 2], [5, 8, 1], [2, 8, 5]]
expected = [[121, 38, 47], [90, 67, 67], [149, 104, 77], [83, 107, 45], [73, 103, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #275 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 2, 6], [4, 5, 8, 4], [10, 2, 2, 2], [4, 9, 5, 3], [7, 4, 4, 5], [6, 6, 1, 0], [9, 9, 3, 6], [5, 5, 8, 7]]
b = [[9], [1], [2], [4]]
expected = [[45], [73], [104], [67], [95], [62], [120], [94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #276 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8], [2, 5], [6, 5], [7, 5], [10, 4], [10, 9], [2, 8]]
b = [[6, 1, 1, 9, 1, 4], [2, 7, 4, 5, 9, 4]]
expected = [[58, 63, 39, 103, 79, 60], [22, 37, 22, 43, 47, 28], [46, 41, 26, 79, 51, 44], [52, 42, 27, 88, 52, 48], [68, 38, 26, 110, 46, 56], [78, 73, 46, 135, 91, 76], [28, 58, 34, 58, 74, 40]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #277 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 1, 7], [10, 7, 5, 2], [2, 8, 6, 0], [0, 10, 1, 2], [8, 7, 3, 4], [9, 0, 6, 5], [2, 1, 10, 9]]
b = [[9, 2, 2, 3, 9, 9, 0], [5, 5, 6, 9, 10, 5, 0], [10, 1, 5, 5, 1, 3, 2], [7, 0, 6, 9, 6, 9, 4]]
expected = [[104, 11, 57, 83, 88, 111, 30], [189, 60, 99, 136, 177, 158, 18], [118, 50, 82, 108, 104, 76, 12], [74, 51, 77, 113, 113, 71, 10], [165, 54, 97, 138, 169, 152, 22], [176, 24, 78, 102, 117, 144, 32], [186, 19, 114, 146, 92, 134, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #278 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 8, 7, 7, 1], [2, 2, 4, 10, 10, 10], [9, 7, 10, 0, 5, 4], [4, 5, 5, 0, 6, 3], [5, 3, 4, 8, 3, 10], [2, 6, 3, 9, 1, 10]]
b = [[10, 7, 9, 4, 0, 3, 1, 9, 7], [7, 8, 4, 10, 1, 10, 4, 0, 1], [4, 9, 6, 2, 6, 4, 4, 10, 8], [6, 9, 2, 2, 2, 7, 7, 5, 2], [4, 10, 4, 7, 0, 6, 7, 0, 7], [6, 4, 9, 9, 4, 0, 3, 4, 7]]
expected = [[182, 267, 161, 132, 68, 161, 147, 173, 178], [210, 296, 200, 216, 86, 172, 196, 148, 208], [223, 275, 225, 197, 83, 167, 124, 197, 213], [137, 185, 137, 145, 47, 118, 95, 98, 136], [207, 237, 199, 185, 83, 135, 140, 165, 177], [192, 220, 172, 189, 82, 147, 138, 133, 139]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #279 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 4, 4]]
b = [[7, 9, 9, 9], [6, 5, 7, 7], [3, 7, 2, 1], [3, 7, 8, 1]]
expected = [[134, 173, 175, 143]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #280 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 3, 8, 1, 4, 2, 7, 1, 9], [2, 10, 4, 0, 9, 3, 9, 9, 7, 10], [5, 0, 2, 9, 2, 4, 0, 8, 7, 2], [1, 6, 4, 8, 4, 7, 4, 7, 8, 4], [3, 9, 1, 3, 5, 10, 6, 0, 6, 2], [10, 0, 2, 5, 8, 9, 0, 5, 0, 4], [2, 7, 2, 9, 4, 5, 6, 1, 2, 10], [1, 0, 7, 6, 4, 7, 10, 7, 0, 3], [7, 7, 0, 2, 7, 10, 10, 4, 4, 1]]
b = [[6], [5], [7], [9], [10], [10], [3], [7], [10], [3]]
expected = [[289], [400], [317], [399], [331], [336], [307], [307], [366]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #281 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 3], [0, 4, 9], [1, 6, 7]]
b = [[1, 7, 4, 4, 1, 9, 5], [10, 1, 9, 5, 8, 8, 1], [8, 4, 5, 6, 5, 10, 0]]
expected = [[127, 43, 117, 80, 98, 137, 25], [112, 40, 81, 74, 77, 122, 4], [117, 41, 93, 76, 84, 127, 11]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #282 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 3, 1, 2, 9, 3, 4]]
b = [[3, 0, 7, 2, 4, 2, 8, 5, 5], [10, 1, 7, 1, 3, 1, 7, 2, 8], [5, 0, 9, 9, 7, 4, 9, 5, 4], [7, 10, 3, 7, 8, 9, 3, 9, 5], [10, 9, 6, 1, 7, 6, 2, 7, 8], [0, 6, 2, 1, 9, 9, 1, 3, 6], [6, 5, 7, 9, 4, 6, 2, 3, 4], [4, 7, 8, 0, 5, 3, 0, 8, 9]]
expected = [[142, 131, 169, 82, 182, 154, 107, 128, 193]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #283 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 6], [7, 7, 2], [3, 10, 4]]
b = [[7], [1], [6]]
expected = [[46], [68], [55]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #284 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 10, 7, 2, 6, 9, 3], [1, 7, 10, 8, 1, 10, 7, 4], [7, 9, 4, 6, 2, 3, 10, 7], [0, 10, 9, 3, 4, 1, 7, 5], [1, 0, 9, 3, 5, 1, 2, 7]]
b = [[2, 9, 10, 1, 10], [9, 6, 6, 5, 5], [1, 8, 4, 4, 6], [3, 10, 8, 1, 9], [8, 4, 6, 1, 3], [3, 10, 4, 2, 6], [2, 2, 4, 10, 1], [3, 3, 1, 3, 0]]
expected = [[165, 332, 263, 200, 259], [163, 341, 234, 187, 247], [183, 288, 259, 203, 227], [172, 217, 181, 180, 156], [88, 166, 119, 88, 114]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #285 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 1, 3, 6, 9, 9, 10], [9, 3, 1, 6, 1, 6, 4, 7], [1, 8, 5, 6, 2, 10, 1, 10], [4, 2, 5, 3, 2, 3, 4, 8], [4, 3, 5, 4, 5, 5, 1, 1], [1, 0, 9, 10, 10, 10, 9, 10], [9, 6, 2, 8, 4, 8, 3, 0], [1, 3, 10, 10, 7, 4, 9, 8]]
b = [[3, 8, 4, 7, 2, 7], [5, 9, 8, 4, 0, 8], [8, 10, 9, 3, 6, 0], [8, 8, 2, 5, 1, 6], [4, 4, 8, 3, 8, 10], [3, 9, 7, 5, 5, 4], [10, 4, 9, 3, 7, 3], [6, 10, 8, 7, 9, 4]]
expected = [[246, 301, 307, 193, 257, 204], [202, 301, 223, 202, 159, 197], [239, 380, 300, 213, 201, 210], [191, 255, 220, 155, 172, 138], [150, 220, 185, 125, 123, 153], [375, 444, 416, 261, 349, 274], [207, 310, 233, 194, 131, 240], [356, 395, 367, 223, 283, 236]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #286 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 6, 4, 9, 3, 10], [3, 8, 7, 7, 3, 9, 4], [4, 0, 8, 5, 5, 2, 5], [3, 0, 4, 6, 10, 4, 0]]
b = [[10], [8], [7], [5], [6], [3], [7]]
expected = [[251], [251], [192], [160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #287 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10], [8, 1], [6, 0], [3, 3], [3, 8], [8, 3], [7, 3], [7, 9]]
b = [[6, 2, 8, 1, 7, 9, 9, 4], [2, 2, 0, 7, 8, 2, 0, 5]]
expected = [[44, 28, 32, 74, 108, 56, 36, 66], [50, 18, 64, 15, 64, 74, 72, 37], [36, 12, 48, 6, 42, 54, 54, 24], [24, 12, 24, 24, 45, 33, 27, 27], [34, 22, 24, 59, 85, 43, 27, 52], [54, 22, 64, 29, 80, 78, 72, 47], [48, 20, 56, 28, 73, 69, 63, 43], [60, 32, 56, 70, 121, 81, 63, 73]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #288 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 8], [8, 4, 4], [2, 5, 1], [4, 5, 4], [10, 3, 2], [1, 5, 0]]
b = [[6, 7, 8], [1, 0, 4], [9, 8, 9]]
expected = [[94, 78, 128], [88, 88, 116], [26, 22, 45], [65, 60, 88], [81, 86, 110], [11, 7, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #289 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 0, 9], [1, 1, 5, 10], [7, 6, 9, 7], [5, 1, 4, 0], [0, 4, 2, 0], [3, 3, 0, 0], [7, 7, 6, 6], [5, 2, 10, 6]]
b = [[5], [1], [6], [1]]
expected = [[45], [46], [102], [50], [16], [18], [84], [93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #290 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [0], [7], [5], [3], [2], [10], [1]]
b = [[5, 1, 3]]
expected = [[15, 3, 9], [0, 0, 0], [35, 7, 21], [25, 5, 15], [15, 3, 9], [10, 2, 6], [50, 10, 30], [5, 1, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #291 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 8, 10, 0], [8, 1, 9, 0, 6], [0, 10, 6, 7, 2], [4, 10, 9, 3, 4], [9, 0, 3, 4, 6]]
b = [[2, 2, 0, 4], [0, 2, 3, 0], [9, 7, 9, 1], [3, 1, 5, 2], [1, 2, 3, 6]]
expected = [[120, 90, 131, 64], [103, 93, 102, 77], [77, 73, 125, 32], [102, 102, 138, 55], [63, 55, 65, 83]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #292 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 1, 1, 0, 6, 7, 8], [3, 0, 9, 2, 1, 8, 0, 5], [5, 2, 1, 5, 2, 3, 9, 3], [6, 6, 0, 2, 2, 7, 0, 8], [0, 1, 9, 6, 10, 0, 8, 6]]
b = [[8, 2, 6, 2, 1, 10, 6, 1], [4, 8, 7, 7, 6, 7, 9, 1], [7, 1, 5, 5, 9, 6, 6, 9], [3, 4, 7, 4, 4, 7, 7, 2], [3, 7, 2, 5, 4, 8, 9, 5], [5, 3, 9, 5, 0, 5, 10, 8], [6, 9, 9, 7, 10, 2, 8, 5], [5, 6, 3, 2, 3, 3, 4, 4]]
expected = [[158, 150, 184, 119, 117, 128, 194, 131], [161, 84, 166, 114, 111, 161, 195, 177], [160, 169, 205, 143, 153, 163, 221, 117], [159, 151, 183, 123, 82, 191, 224, 114], [193, 219, 204, 194, 249, 217, 283, 208]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #293 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [4], [8]]
b = [[3, 9, 6]]
expected = [[3, 9, 6], [12, 36, 24], [24, 72, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #294 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 7, 4], [9, 8, 8, 8], [9, 8, 2, 0], [3, 10, 1, 3], [0, 0, 7, 10]]
b = [[1, 0, 5, 7, 3, 7, 0, 0, 1], [10, 5, 0, 8, 1, 6, 1, 10, 9], [6, 8, 8, 4, 10, 5, 9, 8, 4], [5, 10, 3, 3, 10, 0, 2, 7, 6]]
expected = [[163, 146, 73, 127, 123, 102, 81, 184, 143], [177, 184, 133, 183, 195, 151, 96, 200, 161], [101, 56, 61, 135, 55, 121, 26, 96, 89], [124, 88, 32, 114, 59, 86, 25, 129, 115], [92, 156, 86, 58, 170, 35, 83, 126, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #295 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 5, 1, 0, 0, 10, 9, 2, 8], [10, 6, 4, 9, 5, 0, 4, 5, 0, 1], [6, 5, 6, 8, 3, 7, 0, 9, 3, 9]]
b = [[3, 4, 0, 2, 9], [9, 9, 0, 1, 0], [6, 2, 2, 3, 10], [4, 7, 8, 1, 0], [8, 2, 6, 6, 2], [5, 3, 7, 8, 8], [1, 9, 0, 8, 5], [1, 9, 5, 2, 0], [8, 5, 10, 4, 9], [5, 0, 9, 7, 8]]
expected = [[175, 274, 155, 202, 272], [198, 256, 144, 126, 168], [268, 260, 299, 210, 275]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #296 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 8, 6], [4, 0, 8, 2], [1, 4, 8, 1], [10, 8, 9, 9]]
b = [[2, 10, 5], [5, 6, 3], [9, 9, 9], [7, 6, 0]]
expected = [[172, 208, 122], [94, 124, 92], [101, 112, 89], [204, 283, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #297 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 1, 10, 10, 10, 8], [10, 7, 8, 8, 2, 1, 6], [1, 0, 9, 5, 4, 4, 5], [8, 0, 7, 2, 2, 1, 10], [1, 8, 0, 0, 1, 7, 7], [1, 5, 4, 2, 4, 3, 6], [3, 4, 9, 6, 8, 0, 7], [10, 1, 1, 2, 9, 9, 4], [0, 10, 2, 7, 1, 9, 0]]
b = [[4, 0, 2, 3, 8], [2, 1, 4, 10, 10], [5, 2, 6, 9, 3], [4, 6, 3, 3, 5], [8, 4, 3, 9, 8], [3, 1, 3, 6, 2], [2, 2, 6, 0, 3]]
expected = [[217, 133, 182, 266, 299], [157, 92, 165, 220, 250], [123, 78, 125, 159, 115], [114, 55, 133, 117, 143], [63, 33, 100, 134, 131], [95, 56, 109, 149, 136], [167, 104, 160, 220, 206], [162, 68, 114, 190, 205], [93, 69, 103, 202, 167]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #298 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 1, 4, 10, 6, 7, 0, 4], [7, 7, 8, 2, 10, 8, 1, 9, 5], [5, 9, 4, 5, 6, 0, 7, 4, 10], [0, 5, 9, 10, 1, 4, 9, 9, 2], [10, 5, 3, 2, 0, 8, 0, 6, 4], [6, 4, 5, 7, 1, 5, 7, 1, 10], [2, 1, 4, 5, 2, 8, 3, 4, 3], [2, 7, 4, 10, 2, 1, 4, 1, 3], [2, 2, 7, 5, 1, 10, 2, 9, 7], [10, 9, 6, 8, 6, 0, 4, 9, 1]]
b = [[10, 1, 10, 10, 5, 0, 3, 2], [7, 10, 5, 4, 3, 0, 4, 2], [5, 3, 2, 3, 3, 7, 1, 4], [1, 6, 2, 3, 3, 6, 2, 0], [2, 7, 1, 7, 7, 9, 9, 5], [4, 2, 8, 1, 0, 6, 3, 4], [10, 2, 7, 1, 0, 4, 2, 4], [2, 6, 1, 0, 2, 8, 10, 5], [8, 5, 10, 1, 6, 1, 10, 5]]
expected = [[207, 204, 197, 136, 132, 189, 198, 140], [281, 280, 265, 212, 204, 287, 317, 216], [308, 267, 272, 172, 189, 182, 273, 172], [232, 234, 188, 99, 109, 266, 198, 158], [228, 153, 245, 147, 116, 133, 181, 124], [294, 190, 295, 141, 147, 162, 201, 148], [150, 129, 164, 79, 80, 171, 142, 111], [173, 189, 152, 112, 107, 139, 127, 84], [210, 193, 228, 90, 119, 235, 234, 169], [279, 275, 226, 225, 185, 233, 250, 158]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #299 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 3, 5, 5, 9, 5, 8, 0, 9], [4, 6, 9, 3, 5, 8, 2, 5, 10, 1], [6, 7, 7, 0, 3, 1, 6, 4, 8, 2], [2, 10, 1, 7, 7, 2, 7, 4, 9, 3], [7, 8, 3, 2, 5, 3, 2, 5, 4, 9]]
b = [[3, 7, 9, 9, 6], [7, 0, 4, 9, 6], [7, 10, 2, 9, 0], [1, 3, 0, 8, 2], [9, 9, 3, 2, 7], [3, 3, 9, 3, 9], [8, 5, 2, 8, 8], [8, 6, 5, 0, 10], [5, 2, 4, 10, 6], [10, 6, 10, 8, 10]]
expected = [[385, 314, 368, 387, 450], [305, 262, 244, 353, 309], [286, 224, 198, 333, 264], [322, 209, 199, 363, 333], [320, 241, 278, 325, 336]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #300 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 10, 5, 9]]
b = [[0, 0, 1], [10, 8, 9], [2, 4, 8], [7, 7, 1], [3, 10, 1]]
expected = [[172, 237, 181]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #301 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 1, 5], [8, 7, 2, 8], [8, 7, 10, 10], [7, 1, 3, 10], [8, 8, 5, 7], [3, 0, 7, 10], [4, 4, 4, 4], [2, 6, 6, 4], [9, 7, 8, 5], [5, 6, 0, 5]]
b = [[7, 8, 1, 6, 6, 0, 0, 5, 6, 5], [0, 7, 8, 2, 8, 2, 0, 10, 4, 8], [5, 7, 3, 3, 6, 2, 7, 6, 0, 4], [6, 6, 10, 0, 5, 2, 2, 1, 1, 9]]
expected = [[77, 155, 139, 59, 147, 32, 17, 141, 81, 159], [114, 175, 150, 68, 156, 34, 30, 130, 84, 176], [166, 243, 194, 92, 214, 54, 90, 180, 86, 226], [124, 144, 124, 53, 118, 28, 41, 73, 56, 145], [123, 197, 157, 79, 177, 40, 49, 157, 87, 187], [116, 133, 124, 39, 110, 34, 69, 67, 28, 133], [72, 112, 88, 44, 100, 24, 36, 88, 44, 104], [68, 124, 108, 42, 116, 32, 50, 110, 40, 118], [133, 207, 139, 92, 183, 40, 66, 168, 87, 178], [65, 112, 103, 42, 103, 22, 10, 90, 59, 118]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #302 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 5, 8, 10, 10, 1, 9], [8, 5, 0, 1, 3, 0, 8, 9], [0, 1, 1, 3, 8, 6, 8, 9], [1, 4, 0, 8, 1, 9, 5, 8]]
b = [[8, 10, 4], [8, 10, 4], [3, 9, 4], [0, 5, 10], [4, 10, 0], [6, 6, 7], [10, 4, 10], [1, 8, 9]]
expected = [[182, 381, 285], [205, 269, 223], [168, 254, 241], [156, 238, 285]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #303 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 9, 3, 3, 9], [9, 10, 2, 6, 0, 9], [0, 6, 5, 4, 9, 5], [5, 4, 3, 8, 1, 4], [2, 6, 3, 1, 8, 8], [9, 1, 8, 10, 1, 1], [1, 3, 6, 1, 2, 3], [0, 6, 7, 3, 5, 10]]
b = [[1, 7, 3, 8], [4, 4, 6, 6], [0, 4, 9, 9], [7, 10, 3, 4], [8, 8, 3, 9], [6, 10, 8, 6]]
expected = [[119, 248, 213, 256], [145, 261, 195, 228], [154, 206, 160, 208], [109, 191, 125, 156], [145, 204, 160, 203], [97, 217, 146, 205], [54, 99, 108, 120], [145, 222, 203, 216]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #304 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 7], [8, 5, 10], [0, 6, 6], [0, 3, 9], [3, 1, 6], [10, 7, 10], [6, 2, 7]]
b = [[8], [2], [2]]
expected = [[34], [94], [24], [24], [38], [114], [66]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #305 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 4, 7, 5, 5, 9], [9, 1, 7, 8, 3, 2, 9], [1, 8, 0, 6, 10, 10, 3], [7, 5, 4, 10, 8, 1, 2], [5, 9, 4, 10, 3, 1, 1], [0, 10, 8, 10, 1, 9, 1], [4, 5, 5, 8, 3, 10, 10], [2, 10, 1, 9, 6, 9, 10], [3, 1, 4, 4, 0, 6, 5]]
b = [[6, 7, 6, 4, 7], [4, 10, 3, 10, 5], [8, 2, 0, 7, 4], [7, 1, 8, 7, 2], [2, 2, 9, 0, 0], [9, 10, 7, 6, 3], [10, 2, 6, 4, 8]]
expected = [[294, 215, 250, 247, 199], [284, 139, 216, 199, 190], [220, 219, 256, 198, 113], [209, 147, 228, 190, 129], [193, 161, 177, 218, 127], [267, 220, 188, 284, 137], [336, 222, 260, 257, 199], [316, 247, 291, 272, 193], [186, 113, 125, 134, 108]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #306 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 6, 10, 3, 1, 0, 4], [10, 6, 0, 3, 6, 5, 6, 8], [7, 9, 3, 0, 8, 8, 6, 7], [4, 5, 4, 8, 6, 5, 8, 9], [4, 6, 9, 1, 7, 2, 7, 9], [4, 3, 0, 8, 4, 4, 5, 4], [8, 4, 3, 4, 6, 1, 7, 6], [2, 1, 10, 7, 9, 4, 8, 10], [10, 1, 8, 9, 2, 4, 5, 6], [5, 10, 8, 8, 1, 7, 8, 6]]
b = [[8, 4, 0, 4, 3, 0], [9, 1, 6, 10, 3, 3], [0, 8, 8, 10, 2, 0], [2, 7, 9, 8, 9, 9], [6, 8, 9, 1, 0, 7], [5, 7, 4, 10, 7, 10], [7, 9, 7, 4, 10, 9], [1, 4, 9, 2, 0, 4]]
expected = [[83, 169, 229, 201, 121, 149], [251, 236, 251, 220, 170, 223], [274, 263, 287, 274, 170, 245], [219, 300, 345, 276, 222, 287], [198, 270, 318, 247, 141, 195], [158, 196, 213, 182, 171, 210], [204, 230, 245, 190, 155, 187], [179, 350, 392, 275, 200, 281], [180, 281, 274, 276, 208, 207], [249, 303, 343, 379, 262, 275]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #307 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5]]
b = [[2, 4, 1], [10, 2, 0]]
expected = [[54, 18, 2]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #308 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 3, 8, 5, 9, 7, 0, 8]]
b = [[7, 6, 10, 8, 6, 0, 3, 5], [1, 8, 4, 4, 8, 10, 2, 0], [7, 0, 7, 7, 5, 1, 6, 8], [5, 8, 3, 3, 9, 8, 10, 6], [2, 8, 7, 9, 8, 2, 4, 6], [3, 6, 9, 4, 4, 3, 1, 3], [5, 7, 2, 3, 7, 8, 2, 4], [6, 2, 3, 6, 6, 9, 2, 0], [5, 9, 10, 3, 1, 3, 3, 8]]
expected = [[237, 391, 367, 267, 332, 264, 205, 261]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #309 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 4, 4, 0, 5, 7, 2, 7], [4, 7, 10, 4, 5, 3, 1, 2, 1]]
b = [[7, 8, 10], [7, 7, 9], [8, 9, 9], [0, 2, 10], [7, 9, 4], [3, 9, 4], [5, 3, 7], [10, 2, 2], [4, 6, 2]]
expected = [[249, 284, 325], [230, 264, 278]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #310 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 5], [1, 0, 5]]
b = [[7, 3, 10, 0, 7, 6, 3, 10, 1, 8], [6, 0, 6, 2, 5, 5, 0, 10, 6, 0], [10, 10, 1, 4, 8, 6, 10, 3, 3, 0]]
expected = [[115, 65, 85, 30, 100, 85, 65, 115, 50, 40], [57, 53, 15, 20, 47, 36, 53, 25, 16, 8]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #311 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 1, 4, 2, 9, 7, 9], [2, 7, 5, 5, 4, 6, 1, 4], [4, 7, 6, 7, 1, 10, 5, 8], [1, 3, 7, 2, 3, 5, 6, 10], [8, 9, 3, 8, 0, 4, 9, 5], [0, 1, 9, 0, 10, 3, 6, 2], [2, 3, 9, 4, 9, 4, 3, 1], [4, 0, 7, 4, 2, 1, 8, 7]]
b = [[7, 3, 6, 2, 6], [10, 0, 5, 1, 5], [10, 9, 1, 3, 5], [4, 6, 3, 1, 9], [9, 8, 6, 4, 0], [1, 1, 9, 10, 2], [6, 10, 2, 1, 10], [1, 4, 5, 8, 0]]
expected = [[213, 185, 237, 204, 201], [206, 145, 167, 140, 139], [243, 208, 232, 213, 222], [193, 207, 159, 176, 144], [271, 213, 199, 131, 278], [231, 232, 123, 120, 116], [254, 221, 149, 125, 146], [188, 224, 115, 115, 177]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #312 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [10], [4], [1], [7], [4], [3]]
b = [[6, 5, 8, 1, 2, 9, 3, 9, 9, 10]]
expected = [[12, 10, 16, 2, 4, 18, 6, 18, 18, 20], [60, 50, 80, 10, 20, 90, 30, 90, 90, 100], [24, 20, 32, 4, 8, 36, 12, 36, 36, 40], [6, 5, 8, 1, 2, 9, 3, 9, 9, 10], [42, 35, 56, 7, 14, 63, 21, 63, 63, 70], [24, 20, 32, 4, 8, 36, 12, 36, 36, 40], [18, 15, 24, 3, 6, 27, 9, 27, 27, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #313 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 4, 0, 0, 5, 10, 0, 2, 10], [8, 0, 2, 7, 9, 0, 10, 7, 10, 0]]
b = [[9, 3, 7, 7, 1, 3, 10, 8], [3, 9, 2, 2, 9, 10, 3, 4], [1, 2, 3, 4, 4, 6, 4, 10], [8, 2, 1, 6, 8, 6, 0, 2], [9, 1, 5, 8, 10, 10, 9, 10], [1, 1, 7, 2, 7, 4, 10, 10], [5, 10, 10, 0, 4, 1, 6, 3], [9, 8, 1, 6, 0, 5, 3, 4], [7, 7, 5, 2, 6, 1, 3, 6], [3, 10, 10, 5, 0, 0, 7, 8]]
expected = [[151, 275, 293, 116, 143, 108, 254, 260], [394, 277, 271, 240, 262, 223, 280, 306]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #314 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 1, 2, 10, 6, 2, 7, 7], [6, 7, 6, 2, 5, 5, 8, 7, 4], [2, 3, 2, 2, 6, 3, 4, 2, 3], [5, 9, 4, 0, 10, 0, 9, 1, 7], [9, 3, 1, 9, 7, 5, 3, 8, 8], [5, 0, 7, 8, 2, 4, 10, 0, 5], [10, 2, 6, 1, 6, 0, 0, 7, 5], [5, 6, 3, 5, 2, 7, 1, 9, 8], [7, 0, 7, 6, 2, 3, 10, 10, 9]]
b = [[9, 3, 10], [0, 9, 2], [0, 7, 7], [1, 10, 8], [6, 10, 8], [2, 9, 1], [2, 4, 0], [8, 2, 1], [0, 2, 4]]
expected = [[224, 292, 254], [168, 292, 200], [86, 180, 121], [131, 276, 205], [212, 310, 276], [93, 250, 203], [183, 184, 229], [150, 261, 187], [187, 255, 232]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #315 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5], [5, 6], [4, 2], [5, 2], [6, 10], [3, 3], [4, 0], [7, 0], [1, 5]]
b = [[9], [3]]
expected = [[60], [63], [42], [51], [84], [36], [36], [63], [24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #316 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 2, 4, 6, 7, 5], [7, 4, 3, 7, 0, 0, 1], [2, 7, 5, 8, 6, 2, 0], [8, 4, 2, 0, 4, 2, 8], [3, 6, 7, 5, 6, 6, 0]]
b = [[4, 2], [3, 1], [3, 5], [10, 1], [4, 6], [2, 4], [1, 8]]
expected = [[128, 135], [120, 48], [152, 88], [78, 126], [137, 112]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #317 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 5, 2, 0, 10, 0], [4, 3, 5, 4, 8, 6, 8], [3, 9, 0, 6, 2, 7, 3], [0, 5, 10, 7, 5, 6, 6], [5, 5, 9, 8, 4, 6, 6], [10, 5, 6, 2, 6, 5, 0], [8, 1, 7, 9, 4, 0, 4], [10, 0, 2, 2, 10, 6, 3], [9, 5, 3, 5, 9, 7, 6]]
b = [[10, 8, 6, 5], [1, 7, 8, 0], [5, 8, 9, 10], [9, 9, 3, 7], [9, 4, 1, 9], [5, 6, 3, 9], [0, 10, 6, 5]]
expected = [[179, 224, 177, 194], [206, 277, 179, 264], [146, 221, 149, 153], [193, 294, 210, 278], [238, 331, 233, 291], [232, 235, 181, 223], [233, 264, 174, 229], [248, 220, 130, 243], [271, 314, 202, 284]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #318 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 5, 1, 4, 3, 3], [4, 1, 7, 3, 1, 7, 0]]
b = [[9, 4, 0], [2, 2, 1], [0, 0, 2], [5, 1, 4], [6, 8, 3], [8, 4, 9], [5, 8, 10]]
expected = [[169, 125, 93], [115, 57, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #319 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 6, 9, 6, 2, 8, 10, 1], [7, 4, 8, 3, 0, 6, 8, 5, 2], [9, 9, 1, 1, 5, 0, 9, 6, 1], [9, 8, 9, 0, 0, 2, 10, 9, 0], [8, 3, 1, 6, 5, 10, 10, 10, 6], [0, 10, 9, 6, 3, 6, 7, 9, 8], [0, 4, 5, 8, 6, 8, 7, 6, 0], [7, 8, 9, 4, 5, 2, 2, 10, 7], [7, 1, 3, 1, 8, 8, 1, 3, 6]]
b = [[3, 7, 4, 1, 4, 1, 1, 5, 1, 0], [9, 7, 6, 7, 0, 5, 0, 7, 2, 1], [5, 10, 8, 1, 4, 5, 5, 3, 1, 2], [10, 5, 0, 0, 1, 2, 0, 5, 0, 3], [6, 7, 0, 10, 3, 6, 2, 6, 1, 2], [9, 9, 8, 4, 7, 5, 0, 8, 1, 1], [9, 10, 2, 9, 3, 8, 9, 3, 10, 10], [10, 3, 4, 0, 8, 1, 7, 1, 4, 8], [1, 0, 9, 5, 4, 9, 3, 7, 4, 10]]
expected = [[413, 345, 181, 197, 189, 211, 191, 218, 154, 229], [305, 321, 218, 149, 177, 190, 160, 193, 137, 175], [295, 284, 149, 209, 135, 178, 150, 186, 151, 172], [342, 354, 228, 172, 188, 193, 207, 183, 172, 200], [432, 372, 252, 240, 261, 264, 201, 286, 194, 283], [428, 362, 302, 236, 218, 292, 201, 279, 176, 280], [372, 320, 166, 188, 171, 199, 142, 210, 121, 176], [351, 318, 271, 183, 211, 229, 171, 249, 127, 220], [220, 238, 190, 168, 172, 182, 86, 216, 74, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #320 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 5, 2], [1, 4, 9, 0], [6, 3, 5, 5], [7, 9, 4, 4], [5, 4, 6, 9], [2, 10, 3, 0]]
b = [[10, 5, 9, 1, 5, 9], [2, 7, 4, 4, 6, 8], [5, 1, 7, 1, 8, 9], [9, 2, 8, 7, 1, 0]]
expected = [[63, 19, 69, 21, 52, 63], [63, 42, 88, 26, 101, 122], [136, 66, 141, 58, 93, 123], [144, 110, 159, 75, 125, 171], [169, 77, 175, 90, 106, 131], [55, 83, 79, 45, 94, 125]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #321 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 0], [0, 3, 3], [5, 8, 9], [10, 3, 10], [8, 5, 9], [5, 10, 4], [0, 2, 1]]
b = [[7, 7, 5, 10, 10, 7, 3, 7, 3, 2], [5, 9, 3, 7, 6, 10, 5, 2, 2, 4], [9, 6, 5, 7, 9, 4, 0, 2, 10, 8]]
expected = [[103, 135, 69, 146, 138, 143, 67, 79, 43, 50], [42, 45, 24, 42, 45, 42, 15, 12, 36, 36], [156, 161, 94, 169, 179, 151, 55, 69, 121, 114], [175, 157, 109, 191, 208, 140, 45, 96, 136, 112], [162, 155, 100, 178, 191, 142, 49, 84, 124, 108], [121, 149, 75, 148, 146, 151, 65, 63, 75, 82], [19, 24, 11, 21, 21, 24, 10, 6, 14, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #322 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 10, 4, 7, 10, 4, 4, 8], [1, 8, 7, 3, 7, 3, 3, 0, 1], [10, 6, 8, 9, 2, 1, 2, 0, 10], [6, 8, 8, 0, 6, 0, 5, 3, 8]]
b = [[3, 2, 3, 7, 7, 2, 1], [8, 1, 9, 7, 5, 7, 5], [6, 0, 3, 3, 6, 2, 5], [1, 5, 4, 3, 3, 6, 10], [7, 5, 1, 3, 1, 8, 10], [8, 0, 10, 3, 7, 1, 8], [0, 0, 6, 2, 8, 3, 8], [0, 6, 10, 5, 6, 7, 6], [5, 1, 7, 10, 3, 9, 4]]
expected = [[245, 95, 285, 229, 257, 230, 332], [190, 61, 170, 139, 153, 167, 228], [207, 91, 238, 276, 230, 245, 254], [212, 76, 236, 245, 218, 240, 236]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #323 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 1, 8, 3], [4, 0, 4, 0, 2]]
b = [[7, 10, 8, 7, 8, 6, 6, 5], [7, 10, 6, 5, 2, 10, 3, 6], [8, 7, 3, 3, 4, 7, 1, 9], [3, 8, 1, 10, 0, 7, 2, 8], [6, 1, 7, 4, 8, 4, 0, 6]]
expected = [[99, 144, 84, 140, 72, 125, 53, 128], [72, 70, 58, 48, 64, 60, 28, 68]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #324 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 2, 4, 9, 4, 9, 5, 2, 5], [8, 6, 4, 6, 8, 4, 1, 6, 1, 6], [7, 4, 4, 3, 2, 0, 5, 10, 2, 8], [5, 0, 3, 4, 3, 5, 6, 6, 10, 8], [1, 3, 7, 3, 8, 6, 3, 10, 3, 2], [6, 3, 4, 10, 6, 4, 9, 0, 7, 7], [10, 5, 5, 0, 2, 2, 10, 4, 7, 9], [0, 2, 4, 10, 8, 8, 4, 1, 4, 1]]
b = [[8, 3, 3], [2, 5, 4], [2, 3, 7], [2, 0, 3], [7, 2, 10], [8, 8, 6], [7, 9, 9], [4, 3, 1], [5, 9, 2], [9, 2, 0]]
expected = [[295, 220, 265], [274, 162, 215], [249, 166, 153], [303, 248, 188], [232, 191, 232], [317, 247, 267], [332, 273, 225], [213, 179, 239]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #325 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 2], [5, 6, 10], [8, 4, 3], [9, 9, 5], [1, 10, 7], [2, 4, 0], [7, 7, 0], [2, 0, 6]]
b = [[7, 1, 1, 10, 10], [3, 9, 2, 8, 8], [3, 6, 3, 7, 0]]
expected = [[68, 38, 18, 110, 96], [83, 119, 47, 168, 98], [77, 62, 25, 133, 112], [105, 120, 42, 197, 162], [58, 133, 42, 139, 90], [26, 38, 10, 52, 52], [70, 70, 21, 126, 126], [32, 38, 20, 62, 20]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #326 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2], [8, 0], [7, 9]]
b = [[10, 8, 3], [9, 1, 10]]
expected = [[18, 2, 20], [80, 64, 24], [151, 65, 111]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #327 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 6, 1, 4, 1, 2, 4, 0], [4, 9, 1, 4, 8, 9, 9, 10, 0], [4, 3, 10, 10, 0, 2, 0, 8, 9], [0, 10, 10, 7, 8, 7, 9, 2, 6], [2, 5, 3, 9, 3, 3, 10, 7, 1], [1, 0, 0, 1, 7, 0, 8, 6, 6], [0, 1, 4, 2, 0, 10, 7, 9, 1], [1, 3, 0, 5, 10, 10, 4, 6, 0], [2, 8, 4, 1, 8, 9, 5, 10, 2], [7, 5, 1, 1, 1, 9, 3, 10, 3]]
b = [[7, 6, 4, 10, 4], [9, 9, 1, 7, 8], [7, 3, 9, 9, 1], [8, 2, 4, 4, 0], [8, 5, 2, 5, 1], [9, 2, 10, 6, 1], [3, 0, 10, 2, 6], [4, 5, 1, 10, 5], [8, 8, 4, 8, 1]]
expected = [[214, 155, 137, 243, 115], [360, 224, 256, 340, 210], [327, 217, 213, 355, 101], [426, 246, 330, 356, 175], [269, 148, 223, 249, 153], [167, 121, 132, 173, 95], [208, 98, 228, 223, 110], [280, 143, 193, 229, 102], [338, 222, 230, 336, 175], [271, 189, 190, 307, 150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #328 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 4], [8, 10, 5], [9, 4, 1], [10, 1, 6]]
b = [[7, 7, 4, 4, 1, 5, 2, 9, 8, 10], [2, 8, 9, 3, 9, 4, 0, 2, 6, 5], [7, 2, 1, 8, 10, 9, 6, 10, 0, 9]]
expected = [[57, 61, 52, 56, 79, 67, 30, 75, 48, 86], [111, 146, 127, 102, 148, 125, 46, 142, 124, 175], [78, 97, 73, 56, 55, 70, 24, 99, 96, 119], [114, 90, 55, 91, 79, 108, 56, 152, 86, 159]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #329 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 8, 4, 4, 10, 6, 9], [8, 8, 5, 0, 9, 4, 6, 9], [9, 6, 6, 9, 7, 3, 4, 4], [0, 10, 4, 10, 8, 6, 0, 3], [6, 4, 5, 0, 8, 5, 7, 7], [5, 4, 6, 9, 6, 8, 5, 3], [10, 0, 3, 7, 7, 1, 2, 5], [7, 7, 4, 7, 7, 7, 2, 2], [8, 10, 9, 1, 2, 9, 10, 8]]
b = [[6, 6, 10, 1, 10, 2, 7, 2, 4, 4], [3, 8, 3, 7, 5, 6, 10, 0, 3, 7], [4, 9, 1, 4, 4, 9, 4, 8, 5, 3], [8, 1, 1, 4, 3, 5, 9, 5, 8, 7], [4, 1, 8, 5, 10, 5, 3, 0, 2, 6], [8, 9, 4, 4, 5, 10, 6, 9, 10, 0], [2, 2, 5, 3, 0, 5, 1, 9, 7, 0], [0, 3, 1, 8, 4, 9, 6, 7, 6, 3]]
expected = [[205, 287, 160, 262, 225, 379, 297, 293, 307, 170], [172, 241, 236, 235, 286, 305, 267, 209, 235, 184], [228, 219, 215, 202, 272, 274, 295, 202, 252, 213], [206, 197, 135, 214, 218, 273, 284, 157, 224, 209], [154, 201, 203, 191, 233, 269, 205, 209, 218, 136], [236, 222, 185, 194, 233, 295, 269, 241, 279, 174], [168, 129, 185, 135, 228, 182, 204, 141, 179, 155], [223, 221, 198, 185, 255, 260, 275, 176, 235, 186], [222, 337, 230, 258, 266, 384, 319, 320, 327, 172]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #330 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 6], [8, 1, 0]]
b = [[7, 5, 7, 7, 6, 4, 10, 2, 1], [5, 0, 3, 2, 2, 6, 10, 0, 6], [10, 3, 2, 3, 5, 2, 5, 8, 2]]
expected = [[136, 58, 80, 82, 86, 68, 150, 64, 44], [61, 40, 59, 58, 50, 38, 90, 16, 14]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #331 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 6, 10, 10, 7], [3, 8, 9, 5, 0, 2], [7, 2, 7, 5, 5, 9], [1, 0, 6, 5, 10, 4], [2, 9, 3, 7, 10, 1]]
b = [[10, 1, 0, 10], [1, 1, 8, 5], [0, 6, 2, 9], [7, 9, 3, 9], [6, 2, 0, 6], [9, 5, 5, 1]]
expected = [[273, 198, 157, 331], [91, 120, 107, 198], [218, 151, 90, 227], [141, 122, 47, 173], [147, 117, 104, 216]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #332 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 9, 2, 4, 5, 4, 9, 9, 10]]
b = [[7, 1], [3, 10], [3, 6], [4, 2], [5, 3], [6, 3], [1, 0], [1, 7], [5, 8], [0, 7]]
expected = [[160, 302]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #333 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [5], [0]]
b = [[7, 9, 10, 5, 2, 8, 1, 0, 2, 2]]
expected = [[42, 54, 60, 30, 12, 48, 6, 0, 12, 12], [35, 45, 50, 25, 10, 40, 5, 0, 10, 10], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #334 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 6, 5, 3, 8, 2, 5, 7], [6, 5, 3, 3, 7, 8, 1, 3, 5], [10, 6, 5, 4, 0, 2, 1, 8, 5], [6, 10, 6, 8, 2, 6, 10, 1, 2]]
b = [[9, 0, 3, 2], [1, 0, 2, 9], [6, 4, 8, 5], [6, 5, 10, 7], [2, 2, 8, 10], [10, 0, 8, 10], [2, 5, 2, 4], [9, 0, 8, 10], [9, 3, 10, 3]]
expected = [[315, 86, 327, 318], [263, 61, 278, 292], [289, 60, 254, 246], [259, 124, 278, 324]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #335 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 4, 4, 7, 10, 1, 1], [5, 2, 4, 6, 1, 4, 2, 0], [2, 2, 2, 6, 7, 2, 6, 7], [0, 0, 3, 7, 8, 2, 6, 9], [2, 10, 0, 1, 0, 10, 8, 1], [4, 0, 4, 1, 1, 1, 8, 10], [4, 0, 4, 6, 10, 10, 6, 2]]
b = [[9, 9, 4, 8, 1, 6, 4, 7], [7, 9, 1, 6, 5, 1, 9, 1], [10, 5, 4, 3, 1, 8, 5, 4], [4, 3, 5, 8, 5, 7, 10, 10], [9, 10, 7, 7, 6, 4, 5, 4], [0, 9, 0, 5, 1, 3, 1, 9], [2, 7, 10, 0, 4, 4, 10, 3], [0, 9, 6, 6, 10, 0, 4, 4]]
expected = [[166, 253, 121, 189, 95, 152, 139, 216], [136, 161, 95, 139, 67, 130, 147, 159], [151, 257, 199, 183, 182, 130, 221, 176], [142, 257, 217, 185, 202, 135, 223, 186], [108, 266, 109, 140, 109, 91, 202, 152], [105, 224, 184, 124, 152, 102, 172, 131], [202, 324, 204, 224, 152, 192, 224, 260]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #336 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 4, 3, 5, 5], [10, 3, 1, 6, 10, 6], [6, 4, 10, 7, 1, 6]]
b = [[0, 4], [3, 6], [2, 7], [0, 6], [4, 6], [6, 2]]
expected = [[76, 138], [87, 173], [72, 178]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #337 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 8, 10], [6, 4, 4, 10], [9, 9, 0, 10], [7, 6, 0, 4], [0, 5, 8, 3], [5, 8, 0, 2], [0, 8, 2, 2], [10, 2, 0, 3], [10, 4, 0, 10], [6, 2, 1, 10]]
b = [[4, 9, 2, 0, 2, 2], [10, 9, 9, 8, 6, 6], [5, 0, 2, 1, 1, 1], [2, 10, 8, 6, 1, 3]]
expected = [[158, 226, 173, 124, 74, 94], [104, 190, 136, 96, 50, 70], [146, 262, 179, 132, 82, 102], [96, 157, 100, 72, 54, 62], [96, 75, 85, 66, 41, 47], [104, 137, 98, 76, 60, 64], [94, 92, 92, 78, 52, 56], [66, 138, 62, 34, 35, 41], [100, 226, 136, 92, 54, 74], [69, 172, 112, 77, 35, 55]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #338 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 8, 4, 10, 7, 0, 10], [4, 7, 5, 4, 5, 9, 3, 10], [10, 0, 4, 7, 6, 6, 5, 5], [7, 3, 5, 1, 4, 8, 3, 4], [9, 7, 5, 3, 6, 2, 9, 1]]
b = [[6], [5], [1], [3], [5], [6], [1], [6]]
expected = [[260], [218], [186], [160], [160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #339 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [0], [6], [10], [6], [0], [4], [1], [3]]
b = [[6, 5, 10, 0, 6]]
expected = [[18, 15, 30, 0, 18], [0, 0, 0, 0, 0], [36, 30, 60, 0, 36], [60, 50, 100, 0, 60], [36, 30, 60, 0, 36], [0, 0, 0, 0, 0], [24, 20, 40, 0, 24], [6, 5, 10, 0, 6], [18, 15, 30, 0, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #340 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4], [10, 10], [6, 10], [0, 4], [7, 3], [4, 7], [7, 10], [2, 6], [4, 8]]
b = [[6, 2, 8, 8, 8, 2, 7, 4, 4, 1], [3, 3, 0, 10, 10, 8, 8, 1, 8, 9]]
expected = [[54, 26, 56, 96, 96, 46, 81, 32, 60, 43], [90, 50, 80, 180, 180, 100, 150, 50, 120, 100], [66, 42, 48, 148, 148, 92, 122, 34, 104, 96], [12, 12, 0, 40, 40, 32, 32, 4, 32, 36], [51, 23, 56, 86, 86, 38, 73, 31, 52, 34], [45, 29, 32, 102, 102, 64, 84, 23, 72, 67], [72, 44, 56, 156, 156, 94, 129, 38, 108, 97], [30, 22, 16, 76, 76, 52, 62, 14, 56, 56], [48, 32, 32, 112, 112, 72, 92, 24, 80, 76]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #341 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 3, 0, 4, 3, 10, 5, 0]]
b = [[9, 6, 6], [8, 2, 2], [9, 9, 10], [5, 5, 8], [4, 10, 3], [2, 1, 10], [10, 4, 7], [4, 7, 10], [5, 1, 2]]
expected = [[186, 153, 200]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #342 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 4, 8, 6], [4, 1, 1, 1, 8]]
b = [[4, 3, 5, 5, 9, 3, 7, 5], [3, 1, 2, 5, 10, 9, 10, 2], [7, 6, 5, 6, 0, 9, 3, 6], [0, 0, 7, 10, 4, 3, 3, 5], [5, 0, 7, 2, 10, 1, 2, 6]]
expected = [[80, 33, 135, 151, 161, 123, 115, 117], [66, 19, 90, 57, 130, 41, 60, 81]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #343 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 5, 8, 5, 4, 4, 3], [2, 0, 4, 5, 3, 7, 2, 10]]
b = [[3, 2, 3, 3], [7, 1, 4, 8], [5, 8, 1, 9], [8, 8, 5, 5], [5, 8, 7, 8], [7, 9, 1, 10], [1, 6, 9, 7], [7, 4, 9, 6]]
expected = [[257, 243, 210, 310], [202, 215, 171, 235]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #344 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10], [2, 6], [6, 7], [6, 4], [3, 7], [3, 4], [0, 2], [0, 3]]
b = [[7, 0, 9, 5, 2], [10, 5, 5, 0, 6]]
expected = [[142, 50, 104, 30, 72], [74, 30, 48, 10, 40], [112, 35, 89, 30, 54], [82, 20, 74, 30, 36], [91, 35, 62, 15, 48], [61, 20, 47, 15, 30], [20, 10, 10, 0, 12], [30, 15, 15, 0, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #345 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [8], [4], [9]]
b = [[2]]
expected = [[18], [16], [8], [18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #346 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4], [3, 1], [0, 2], [6, 10], [0, 2], [2, 7], [9, 3], [3, 5], [9, 3], [3, 4]]
b = [[10], [0]]
expected = [[20], [30], [0], [60], [0], [20], [90], [30], [90], [30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #347 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 1, 5, 10, 4, 5, 1], [1, 7, 0, 1, 5, 1, 2, 9], [0, 8, 2, 3, 2, 5, 3, 9], [5, 1, 4, 1, 3, 10, 2, 3], [7, 0, 5, 9, 0, 3, 7, 1], [1, 7, 1, 2, 7, 9, 7, 3]]
b = [[6, 7, 0, 3, 0, 2, 7, 6, 8, 8], [0, 1, 0, 7, 7, 4, 9, 3, 0, 9], [5, 8, 8, 10, 0, 7, 2, 10, 4, 9], [10, 2, 3, 8, 5, 1, 10, 2, 2, 4], [10, 9, 8, 5, 6, 6, 8, 5, 3, 0], [2, 6, 4, 5, 7, 0, 7, 7, 3, 10], [2, 6, 9, 7, 8, 9, 0, 4, 7, 9], [5, 0, 1, 3, 9, 1, 2, 3, 7, 7]]
expected = [[232, 233, 165, 241, 218, 168, 297, 199, 170, 265], [117, 79, 74, 131, 188, 88, 145, 96, 105, 166], [121, 96, 97, 183, 223, 97, 175, 134, 119, 242], [129, 169, 120, 158, 143, 82, 162, 177, 132, 228], [182, 167, 143, 210, 131, 122, 172, 162, 159, 237], [148, 185, 172, 216, 247, 147, 217, 176, 134, 262]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #348 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 7, 7, 8, 0, 9, 3, 0]]
b = [[9, 4, 1], [8, 2, 9], [7, 3, 5], [4, 3, 8], [0, 4, 1], [5, 6, 1], [5, 7, 4], [1, 9, 7], [10, 4, 9]]
expected = [[170, 184, 161]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #349 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 5, 7]]
b = [[0, 6, 5, 2, 6, 7, 10, 3, 2, 8], [2, 1, 3, 4, 1, 7, 2, 3, 4, 0], [9, 1, 4, 5, 7, 6, 0, 10, 8, 1], [5, 4, 2, 2, 4, 5, 7, 8, 1, 8], [1, 0, 3, 9, 10, 8, 1, 0, 2, 3]]
expected = [[131, 38, 94, 154, 162, 198, 60, 157, 127, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #350 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [9], [2], [2]]
b = [[8, 6, 0]]
expected = [[8, 6, 0], [72, 54, 0], [16, 12, 0], [16, 12, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #351 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 3, 5, 5, 2, 2, 8], [10, 9, 5, 8, 3, 5, 1, 7], [8, 2, 0, 9, 2, 7, 7, 7], [2, 7, 10, 5, 8, 10, 8, 7], [8, 0, 5, 4, 6, 6, 1, 7], [4, 8, 9, 0, 1, 9, 9, 4]]
b = [[5, 7, 2, 10, 0, 1, 9], [7, 2, 2, 6, 4, 4, 5], [10, 9, 2, 10, 7, 10, 8], [1, 4, 3, 6, 1, 0, 7], [2, 8, 4, 10, 3, 6, 1], [5, 3, 2, 5, 4, 10, 5], [7, 0, 10, 6, 4, 2, 0], [10, 3, 5, 6, 9, 8, 2]]
expected = [[220, 154, 127, 258, 161, 183, 157], [279, 225, 139, 355, 175, 222, 273], [221, 154, 174, 285, 142, 168, 196], [356, 253, 220, 412, 262, 350, 240], [213, 204, 119, 292, 148, 212, 190], [316, 172, 174, 311, 206, 272, 202]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #352 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [6], [7], [5], [8], [4], [10], [2], [9]]
b = [[5, 10, 8, 2, 0, 0, 4, 5, 4, 0]]
expected = [[20, 40, 32, 8, 0, 0, 16, 20, 16, 0], [30, 60, 48, 12, 0, 0, 24, 30, 24, 0], [35, 70, 56, 14, 0, 0, 28, 35, 28, 0], [25, 50, 40, 10, 0, 0, 20, 25, 20, 0], [40, 80, 64, 16, 0, 0, 32, 40, 32, 0], [20, 40, 32, 8, 0, 0, 16, 20, 16, 0], [50, 100, 80, 20, 0, 0, 40, 50, 40, 0], [10, 20, 16, 4, 0, 0, 8, 10, 8, 0], [45, 90, 72, 18, 0, 0, 36, 45, 36, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #353 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 3, 8, 5, 1, 8, 7], [2, 3, 8, 7, 2, 8, 9, 0], [1, 8, 5, 9, 9, 0, 8, 1], [1, 0, 9, 6, 6, 6, 9, 6], [9, 0, 7, 1, 7, 2, 1, 9], [1, 5, 9, 8, 0, 9, 10, 6]]
b = [[4, 6, 0, 2, 2, 5, 3, 3, 0, 2], [1, 10, 5, 8, 0, 5, 9, 4, 0, 2], [8, 9, 10, 9, 5, 5, 10, 7, 5, 1], [5, 0, 8, 7, 1, 0, 7, 1, 3, 5], [5, 0, 7, 9, 4, 9, 9, 7, 4, 6], [2, 9, 2, 6, 3, 5, 6, 8, 2, 1], [9, 5, 3, 3, 8, 9, 5, 7, 10, 5], [10, 5, 2, 1, 9, 1, 8, 7, 10, 9]]
expected = [[248, 193, 204, 225, 177, 189, 302, 211, 211, 195], [217, 231, 208, 242, 155, 204, 273, 222, 175, 118], [224, 176, 251, 280, 145, 224, 317, 205, 178, 171], [289, 216, 231, 248, 221, 221, 318, 267, 249, 182], [235, 185, 152, 175, 177, 171, 256, 212, 170, 160], [289, 298, 239, 269, 216, 216, 346, 278, 247, 174]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #354 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 3, 1], [5, 0, 1, 5], [0, 8, 5, 5], [0, 9, 4, 6], [2, 1, 8, 9], [8, 0, 10, 9], [3, 10, 0, 10], [9, 3, 0, 0], [2, 4, 1, 2], [9, 8, 0, 4]]
b = [[1, 0, 9, 9], [1, 8, 0, 5], [4, 4, 8, 8], [8, 9, 2, 6]]
expected = [[28, 77, 35, 74], [49, 49, 63, 83], [68, 129, 50, 110], [73, 142, 44, 113], [107, 121, 100, 141], [120, 121, 170, 206], [93, 170, 47, 137], [12, 24, 81, 96], [26, 54, 30, 58], [49, 100, 89, 145]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #355 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 1, 1, 10, 9, 1, 1]]
b = [[4], [4], [0], [4], [2], [3], [4], [8]]
expected = [[107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #356 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 7, 1, 9, 1, 6, 4, 2, 8], [6, 1, 7, 4, 1, 10, 7, 1, 2, 9], [5, 0, 3, 3, 0, 7, 6, 6, 1, 7], [1, 6, 10, 8, 6, 7, 7, 1, 7, 4], [5, 7, 0, 7, 3, 6, 8, 7, 5, 4], [6, 1, 2, 10, 4, 4, 9, 0, 0, 5], [4, 1, 0, 8, 9, 1, 10, 9, 4, 2], [2, 5, 5, 2, 0, 4, 10, 3, 2, 1], [5, 1, 0, 3, 6, 0, 2, 5, 0, 0]]
b = [[3, 5, 5, 10, 0, 10, 6, 6, 5, 4], [7, 3, 2, 10, 5, 7, 8, 10, 8, 7], [1, 0, 10, 7, 9, 8, 10, 0, 9, 10], [6, 0, 4, 9, 5, 2, 1, 0, 1, 6], [2, 6, 6, 7, 0, 1, 5, 8, 3, 4], [7, 3, 1, 3, 2, 8, 9, 1, 5, 4], [3, 9, 4, 2, 7, 5, 1, 8, 6, 6], [9, 8, 5, 4, 5, 7, 2, 4, 7, 7], [5, 1, 0, 9, 5, 5, 0, 9, 4, 8], [6, 0, 7, 9, 10, 10, 8, 9, 7, 0]]
expected = [[240, 217, 292, 422, 267, 376, 329, 371, 341, 295], [222, 142, 230, 309, 262, 354, 294, 223, 278, 234], [204, 149, 177, 227, 203, 283, 200, 181, 221, 182], [253, 158, 253, 392, 303, 327, 296, 280, 309, 351], [290, 215, 186, 347, 238, 318, 216, 303, 272, 284], [180, 150, 191, 277, 194, 234, 179, 199, 187, 197], [235, 246, 208, 298, 202, 233, 138, 277, 221, 266], [159, 153, 144, 194, 193, 222, 164, 185, 213, 218], [103, 122, 108, 153, 59, 114, 83, 124, 101, 116]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #357 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10], [10, 3], [10, 1], [9, 10]]
b = [[1, 1, 0, 10, 9, 7], [1, 1, 5, 4, 8, 10]]
expected = [[16, 16, 50, 100, 134, 142], [13, 13, 15, 112, 114, 100], [11, 11, 5, 104, 98, 80], [19, 19, 50, 130, 161, 163]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #358 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [3], [6], [7], [10], [8], [3], [9], [5], [9]]
b = [[7, 2]]
expected = [[0, 0], [21, 6], [42, 12], [49, 14], [70, 20], [56, 16], [21, 6], [63, 18], [35, 10], [63, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #359 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 0, 5, 5], [1, 9, 3, 3, 5], [6, 1, 0, 1, 7], [1, 6, 3, 7, 3], [3, 3, 5, 8, 8], [4, 10, 8, 6, 4], [7, 10, 5, 5, 8], [2, 3, 0, 9, 9]]
b = [[2, 10, 6, 6, 1, 4], [5, 6, 5, 6, 2, 9], [6, 6, 7, 3, 6, 7], [10, 10, 0, 2, 7, 2], [0, 6, 1, 4, 5, 9]]
expected = [[108, 218, 99, 132, 85, 163], [95, 142, 77, 95, 83, 157], [27, 118, 48, 72, 50, 98], [120, 152, 60, 77, 95, 120], [131, 206, 76, 99, 135, 162], [166, 232, 134, 136, 134, 210], [144, 258, 135, 159, 132, 235], [109, 182, 36, 84, 116, 134]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #360 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 2, 1, 10], [0, 1, 3, 1, 1]]
b = [[7, 2, 4, 7, 7, 7, 4, 4, 7], [0, 10, 4, 0, 5, 7, 2, 9, 6], [8, 8, 2, 10, 10, 8, 6, 0, 5], [5, 10, 9, 3, 9, 5, 3, 5, 10], [9, 4, 9, 7, 4, 5, 9, 6, 9]]
expected = [[132, 122, 135, 114, 115, 127, 127, 122, 161], [38, 48, 28, 40, 48, 41, 32, 20, 40]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #361 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 5, 9], [4, 1, 10, 4], [8, 2, 0, 7], [10, 5, 8, 0], [6, 0, 9, 1], [3, 0, 9, 2], [10, 9, 9, 6]]
b = [[2, 8, 2, 7, 6, 8, 6, 7], [2, 8, 9, 5, 9, 0, 9, 3], [10, 7, 3, 1, 7, 7, 8, 4], [8, 9, 2, 9, 7, 9, 8, 2]]
expected = [[142, 196, 116, 138, 185, 124, 199, 72], [142, 146, 55, 79, 131, 138, 145, 79], [76, 143, 48, 129, 115, 127, 122, 76], [110, 176, 89, 103, 161, 136, 169, 117], [110, 120, 41, 60, 106, 120, 116, 80], [112, 105, 37, 48, 95, 105, 106, 61], [176, 269, 140, 178, 246, 197, 261, 145]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #362 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 9], [2, 4, 1]]
b = [[8, 5], [1, 7], [3, 9]]
expected = [[104, 161], [23, 47]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #363 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 9, 5, 7, 4, 1, 1, 3], [5, 4, 6, 8, 2, 2, 4, 6, 4], [0, 9, 7, 6, 10, 7, 7, 2, 8], [8, 5, 2, 7, 10, 3, 4, 6, 7], [8, 9, 10, 4, 4, 1, 5, 4, 8], [1, 2, 7, 0, 8, 7, 10, 6, 8], [1, 7, 6, 6, 10, 10, 9, 1, 2], [8, 6, 3, 5, 4, 10, 0, 7, 7]]
b = [[3, 1], [0, 8], [1, 4], [9, 3], [6, 5], [10, 10], [0, 2], [10, 0], [8, 3]]
expected = [[185, 206], [217, 135], [275, 276], [295, 186], [208, 196], [252, 199], [249, 273], [322, 224]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #364 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 10, 0, 0, 3, 3]]
b = [[5, 6, 10, 1, 6, 2, 4, 2, 8, 3], [10, 1, 5, 3, 0, 0, 9, 1, 4, 6], [10, 2, 6, 0, 6, 10, 5, 6, 9, 0], [9, 8, 2, 4, 5, 5, 3, 7, 3, 3], [5, 1, 0, 4, 7, 1, 2, 10, 0, 1], [8, 2, 1, 7, 9, 0, 4, 10, 4, 1], [10, 9, 8, 1, 6, 10, 8, 5, 6, 6]]
expected = [[184, 89, 147, 30, 141, 142, 110, 117, 168, 39]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #365 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 2, 8, 9, 10, 10, 1, 7], [7, 0, 10, 3, 5, 2, 3, 9, 1], [9, 7, 2, 2, 2, 5, 10, 2, 7], [1, 3, 2, 6, 7, 9, 1, 6, 2], [0, 4, 10, 4, 0, 10, 10, 7, 6], [0, 0, 2, 4, 2, 3, 0, 1, 10], [10, 8, 4, 9, 4, 10, 9, 5, 4], [1, 6, 2, 5, 3, 10, 9, 9, 7], [0, 7, 4, 2, 2, 1, 3, 2, 4]]
b = [[9, 4, 6, 0, 3, 0, 6, 6, 6, 6], [8, 7, 5, 8, 1, 4, 0, 5, 2, 5], [6, 5, 3, 9, 3, 6, 2, 10, 7, 6], [8, 7, 8, 7, 1, 2, 5, 1, 9, 0], [3, 3, 8, 9, 0, 7, 8, 10, 1, 5], [2, 9, 9, 9, 3, 6, 2, 0, 8, 9], [8, 4, 3, 2, 6, 2, 0, 6, 0, 7], [0, 4, 3, 4, 0, 2, 6, 1, 0, 2], [5, 10, 9, 3, 2, 10, 9, 8, 3, 0]]
expected = [[347, 373, 398, 354, 141, 275, 235, 305, 242, 289], [195, 190, 199, 219, 80, 147, 184, 230, 163, 184], [296, 278, 271, 200, 131, 182, 169, 249, 163, 230], [150, 227, 251, 260, 55, 173, 168, 145, 165, 168], [254, 324, 277, 306, 140, 238, 156, 239, 212, 254], [106, 175, 174, 125, 39, 154, 142, 125, 106, 51], [374, 377, 384, 339, 151, 230, 231, 280, 281, 307], [245, 332, 313, 293, 118, 233, 196, 210, 181, 234], [148, 158, 139, 159, 50, 126, 84, 149, 82, 103]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #366 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 7, 1], [9, 7, 2, 8], [8, 5, 7, 8], [1, 3, 4, 2]]
b = [[3, 10, 7], [4, 1, 4], [3, 3, 7], [3, 0, 2]]
expected = [[40, 62, 83], [85, 103, 121], [89, 106, 141], [33, 25, 51]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #367 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 0, 0, 6, 6], [7, 2, 9, 8, 7, 1], [6, 8, 10, 9, 0, 1], [9, 4, 0, 2, 8, 9], [6, 10, 5, 5, 8, 2], [3, 4, 2, 9, 9, 10], [1, 5, 9, 8, 1, 7], [3, 4, 8, 6, 8, 9], [8, 9, 5, 10, 8, 3], [10, 10, 7, 1, 8, 10]]
b = [[8, 6, 4, 2, 10, 6, 2, 1, 7], [5, 5, 0, 8, 6, 7, 10, 6, 1], [3, 9, 10, 4, 9, 9, 10, 1, 5], [3, 7, 0, 7, 8, 2, 0, 5, 0], [5, 10, 0, 4, 10, 6, 9, 9, 6], [7, 3, 8, 3, 10, 4, 9, 6, 0]]
expected = [[176, 166, 80, 122, 248, 164, 204, 146, 100], [159, 262, 126, 153, 307, 199, 196, 137, 138], [152, 232, 132, 182, 280, 204, 201, 115, 100], [201, 195, 108, 123, 300, 170, 211, 169, 115], [182, 252, 90, 185, 305, 217, 252, 180, 125], [192, 239, 112, 175, 334, 176, 237, 215, 89], [138, 199, 150, 159, 265, 172, 214, 131, 63], [189, 259, 164, 171, 344, 214, 279, 191, 113], [215, 297, 106, 219, 369, 236, 255, 207, 138], [264, 290, 190, 197, 411, 283, 352, 214, 163]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #368 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 9, 5, 1], [10, 6, 9, 5, 4], [9, 3, 3, 3, 3], [3, 3, 6, 5, 8], [10, 3, 10, 9, 8], [2, 6, 4, 3, 0], [3, 7, 8, 4, 7], [6, 9, 5, 10, 4], [9, 0, 8, 6, 1]]
b = [[9, 0, 3, 10, 0, 5], [6, 8, 1, 1, 7, 7], [9, 2, 2, 5, 1, 1], [7, 9, 3, 5, 10, 8], [1, 5, 1, 7, 3, 7]]
expected = [[198, 92, 58, 150, 83, 112], [246, 131, 73, 204, 113, 169], [150, 72, 48, 144, 63, 114], [142, 121, 47, 144, 101, 138], [269, 165, 88, 254, 145, 209], [111, 83, 29, 61, 76, 80], [176, 143, 51, 146, 118, 153], [227, 192, 71, 172, 180, 206], [196, 75, 62, 167, 71, 108]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #369 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3]]
b = [[10, 0, 10, 2, 8], [2, 8, 0, 6, 8]]
expected = [[96, 24, 90, 36, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #370 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 7, 8, 3], [5, 0, 8, 1, 4], [10, 4, 9, 6, 5], [3, 0, 2, 7, 6], [8, 3, 2, 2, 0], [1, 0, 9, 10, 6], [1, 9, 4, 8, 1], [7, 0, 10, 2, 5]]
b = [[0, 1, 0, 2, 5, 0, 6, 1], [7, 9, 6, 5, 0, 9, 6, 10], [4, 2, 6, 9, 7, 10, 5, 1], [8, 3, 2, 2, 2, 6, 6, 3], [8, 4, 7, 3, 7, 8, 9, 2]]
expected = [[172, 126, 127, 136, 106, 214, 182, 121], [72, 40, 78, 96, 111, 118, 112, 24], [152, 102, 125, 148, 160, 202, 210, 87], [112, 52, 68, 56, 85, 110, 124, 38], [45, 45, 34, 53, 58, 59, 88, 46], [164, 73, 116, 121, 130, 198, 165, 52], [151, 118, 101, 102, 56, 177, 137, 121], [96, 53, 99, 123, 144, 152, 149, 33]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #371 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 10], [3, 3, 10], [7, 5, 4]]
b = [[10, 4, 9, 4, 7, 10, 5, 5, 10], [9, 10, 0, 9, 7, 4, 3, 3, 1], [3, 6, 1, 3, 10, 6, 9, 7, 7]]
expected = [[175, 150, 100, 115, 205, 180, 155, 135, 175], [87, 102, 37, 69, 142, 102, 114, 94, 103], [127, 102, 67, 85, 124, 114, 86, 78, 103]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #372 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 7, 10, 3], [6, 0, 6, 9, 9], [2, 5, 2, 2, 8], [4, 1, 2, 7, 6], [6, 6, 10, 1, 2], [5, 8, 7, 10, 4], [5, 1, 8, 6, 0], [4, 0, 0, 1, 7]]
b = [[4, 5, 3, 6, 7, 8, 4, 4], [0, 10, 2, 4, 2, 4, 1, 6], [7, 2, 0, 7, 2, 5, 9, 4], [0, 1, 10, 0, 7, 2, 2, 7], [7, 6, 1, 9, 10, 8, 9, 6]]
expected = [[102, 132, 137, 144, 180, 163, 147, 178], [129, 105, 117, 159, 207, 168, 177, 165], [78, 114, 44, 118, 122, 114, 107, 108], [72, 77, 90, 96, 143, 108, 103, 115], [108, 123, 42, 148, 101, 140, 140, 119], [97, 153, 135, 147, 175, 159, 147, 190], [76, 57, 77, 90, 95, 96, 105, 100], [65, 63, 29, 87, 105, 90, 81, 65]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #373 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 0, 2, 1, 1, 4, 9], [5, 10, 0, 8, 9, 2, 0, 7], [7, 10, 8, 6, 2, 0, 9, 8], [0, 6, 3, 0, 1, 8, 5, 8], [8, 1, 8, 5, 8, 7, 1, 3]]
b = [[7, 10, 4, 2, 4, 1], [0, 0, 3, 8, 3, 10], [9, 4, 2, 2, 10, 0], [7, 5, 5, 3, 9, 2], [6, 4, 6, 8, 0, 0], [10, 6, 1, 3, 2, 5], [5, 9, 1, 4, 2, 3], [7, 8, 8, 10, 10, 9]]
expected = [[148, 178, 137, 197, 162, 187], [214, 194, 202, 262, 196, 194], [276, 285, 189, 260, 290, 218], [194, 173, 107, 186, 154, 187], [307, 244, 156, 174, 206, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #374 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[0, 10, 9, 0, 9, 3, 5, 5]]
expected = [[0, 30, 27, 0, 27, 9, 15, 15]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #375 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 8, 1, 0, 3, 8, 7, 7], [0, 3, 0, 10, 10, 9, 5, 9, 4], [9, 1, 1, 2, 6, 5, 3, 2, 3]]
b = [[5, 8, 9, 1, 5], [8, 3, 5, 8, 3], [2, 1, 6, 8, 10], [4, 2, 7, 8, 5], [3, 9, 0, 10, 5], [8, 8, 5, 7, 8], [1, 9, 6, 0, 8], [5, 1, 1, 6, 3], [3, 10, 5, 4, 6]]
expected = [[155, 219, 207, 198, 263], [228, 285, 189, 337, 272], [143, 233, 166, 160, 186]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #376 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 3, 5, 5, 7, 3], [9, 5, 9, 1, 4, 9, 9], [1, 9, 9, 6, 6, 9, 5], [3, 5, 6, 8, 3, 6, 1], [2, 8, 9, 7, 6, 3, 1], [4, 5, 6, 8, 2, 6, 10], [2, 5, 10, 5, 4, 2, 1]]
b = [[2, 7, 6, 6, 0, 9, 1, 8], [8, 4, 3, 2, 4, 4, 4, 8], [4, 9, 8, 2, 3, 10, 9, 7], [10, 2, 10, 10, 7, 5, 7, 8], [2, 2, 3, 8, 9, 7, 6, 3], [2, 8, 9, 10, 7, 1, 2, 10], [4, 0, 6, 6, 2, 8, 5, 7]]
expected = [[118, 173, 230, 244, 144, 211, 131, 247], [166, 246, 298, 268, 171, 305, 204, 348], [220, 220, 294, 270, 232, 256, 239, 334], [172, 165, 230, 210, 165, 182, 168, 246], [196, 177, 229, 200, 185, 228, 211, 254], [208, 170, 287, 262, 174, 256, 208, 314], [150, 158, 193, 150, 137, 201, 180, 205]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #377 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 10, 5, 6, 6, 6, 0, 2], [5, 8, 4, 9, 6, 7, 2, 10, 1]]
b = [[5, 2, 2, 5, 7, 6, 0], [5, 5, 6, 0, 2, 0, 2], [8, 1, 8, 7, 7, 7, 4], [1, 0, 6, 4, 8, 3, 2], [6, 2, 3, 10, 5, 3, 8], [0, 7, 10, 1, 10, 0, 9], [10, 0, 5, 7, 5, 1, 3], [0, 2, 6, 2, 0, 6, 0], [7, 6, 10, 2, 2, 2, 7]]
expected = [[240, 94, 256, 247, 297, 167, 184], [169, 141, 312, 192, 263, 167, 174]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #378 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 9, 8, 0], [7, 7, 10, 8, 7], [5, 0, 2, 8, 10], [1, 6, 2, 10, 5], [6, 9, 5, 6, 2], [6, 7, 4, 1, 7], [2, 0, 10, 9, 0], [2, 10, 3, 6, 1], [1, 5, 2, 7, 5], [8, 0, 7, 6, 5]]
b = [[10, 2, 5, 6], [0, 5, 0, 5], [1, 9, 3, 0], [1, 8, 0, 9], [0, 8, 6, 9]]
expected = [[87, 199, 62, 154], [88, 259, 107, 212], [60, 172, 91, 192], [22, 170, 41, 171], [71, 166, 57, 153], [65, 147, 84, 143], [39, 166, 40, 93], [29, 137, 25, 125], [19, 141, 41, 139], [93, 167, 91, 147]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #379 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 9, 10, 5, 10, 2], [3, 2, 8, 9, 1, 9, 10], [1, 9, 2, 0, 4, 9, 4], [4, 0, 3, 8, 4, 5, 3], [2, 1, 5, 6, 2, 3, 1], [4, 10, 8, 8, 1, 7, 8], [2, 9, 6, 0, 4, 2, 2]]
b = [[1, 4, 0, 6, 9], [5, 5, 9, 8, 8], [0, 6, 2, 3, 4], [1, 5, 5, 2, 1], [3, 5, 0, 2, 8], [4, 7, 1, 3, 7], [7, 0, 5, 6, 10]]
expected = [[112, 241, 142, 165, 251], [131, 183, 138, 165, 255], [122, 144, 114, 143, 224], [65, 129, 66, 90, 153], [38, 104, 57, 66, 99], [149, 208, 193, 215, 293], [81, 123, 105, 128, 180]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #380 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10], [4, 4], [2, 5], [6, 10], [4, 6], [3, 8], [10, 10], [5, 9], [3, 10], [1, 5]]
b = [[1, 6, 6, 4, 1, 3, 10, 3, 7, 2], [5, 3, 8, 5, 1, 0, 5, 7, 4, 7]]
expected = [[50, 30, 80, 50, 10, 0, 50, 70, 40, 70], [24, 36, 56, 36, 8, 12, 60, 40, 44, 36], [27, 27, 52, 33, 7, 6, 45, 41, 34, 39], [56, 66, 116, 74, 16, 18, 110, 88, 82, 82], [34, 42, 72, 46, 10, 12, 70, 54, 52, 50], [43, 42, 82, 52, 11, 9, 70, 65, 53, 62], [60, 90, 140, 90, 20, 30, 150, 100, 110, 90], [50, 57, 102, 65, 14, 15, 95, 78, 71, 73], [53, 48, 98, 62, 13, 9, 80, 79, 61, 76], [26, 21, 46, 29, 6, 3, 35, 38, 27, 37]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #381 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10], [9], [3], [10]]
b = [[6, 8, 3, 3, 10, 7, 6, 4, 4, 4]]
expected = [[60, 80, 30, 30, 100, 70, 60, 40, 40, 40], [54, 72, 27, 27, 90, 63, 54, 36, 36, 36], [18, 24, 9, 9, 30, 21, 18, 12, 12, 12], [60, 80, 30, 30, 100, 70, 60, 40, 40, 40]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #382 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 2, 4, 10, 8, 6, 1], [5, 10, 0, 10, 0, 6, 5, 1], [0, 5, 0, 9, 0, 4, 5, 3], [10, 6, 7, 8, 3, 8, 6, 8], [1, 4, 3, 4, 1, 3, 3, 10]]
b = [[5, 4, 2, 6, 6, 6, 2, 9], [6, 2, 4, 3, 8, 1, 9, 3], [5, 5, 4, 9, 8, 9, 5, 3], [2, 10, 8, 3, 8, 8, 0, 10], [7, 7, 4, 9, 1, 6, 1, 6], [9, 0, 9, 10, 5, 4, 6, 3], [0, 2, 5, 9, 4, 10, 9, 2], [10, 4, 10, 4, 6, 8, 9, 7]]
expected = [[206, 162, 208, 297, 172, 247, 152, 206], [169, 154, 219, 199, 246, 202, 190, 210], [114, 122, 183, 139, 170, 167, 141, 148], [310, 232, 330, 358, 343, 367, 286, 319], [186, 120, 208, 163, 182, 197, 189, 161]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #383 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 0, 1], [5, 9, 9, 3], [3, 9, 2, 10], [2, 6, 0, 7], [0, 5, 7, 0], [4, 0, 0, 2], [10, 5, 7, 1], [5, 3, 7, 10], [9, 0, 5, 0]]
b = [[8, 8], [5, 1], [10, 10], [8, 1]]
expected = [[107, 72], [199, 142], [169, 63], [102, 29], [95, 75], [48, 34], [183, 156], [205, 123], [122, 122]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #384 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 5, 8, 2, 7, 7, 3, 6], [2, 10, 9, 5, 7, 0, 0, 2, 1], [10, 0, 4, 3, 5, 4, 8, 8, 7], [10, 4, 5, 10, 8, 1, 4, 9, 0], [1, 1, 1, 3, 6, 5, 2, 10, 10], [4, 6, 5, 1, 1, 3, 1, 5, 7], [3, 5, 1, 6, 6, 10, 7, 5, 8], [1, 5, 5, 6, 6, 5, 10, 10, 7], [8, 9, 1, 7, 6, 9, 4, 1, 9]]
b = [[4], [8], [0], [2], [9], [2], [8], [4], [1]]
expected = [[158], [170], [202], [234], [148], [116], [222], [247], [235]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #385 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 9], [4, 0, 9], [10, 5, 7], [0, 9, 6], [5, 5, 5], [3, 1, 9], [5, 5, 10]]
b = [[8, 8, 9, 10, 5, 5, 9, 0], [10, 7, 5, 7, 4, 2, 3, 10], [8, 10, 9, 1, 1, 7, 8, 3]]
expected = [[192, 186, 166, 115, 66, 104, 141, 107], [104, 122, 117, 49, 29, 83, 108, 27], [186, 185, 178, 142, 77, 109, 161, 71], [138, 123, 99, 69, 42, 60, 75, 108], [130, 125, 115, 90, 50, 70, 100, 65], [106, 121, 113, 46, 28, 80, 102, 37], [170, 175, 160, 95, 55, 105, 140, 80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #386 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 2, 6, 1, 9, 4, 8], [6, 8, 4, 6, 1, 8, 10, 9], [7, 10, 10, 5, 10, 4, 7, 6], [8, 9, 2, 5, 7, 7, 10, 6], [8, 2, 5, 4, 6, 3, 4, 7], [9, 0, 10, 8, 10, 2, 4, 4], [7, 2, 7, 7, 7, 10, 5, 5], [0, 9, 4, 6, 1, 10, 9, 2], [7, 6, 5, 1, 10, 10, 0, 8], [10, 8, 4, 8, 5, 10, 2, 10]]
b = [[10, 7, 7], [5, 2, 3], [1, 9, 4], [3, 5, 1], [7, 10, 3], [5, 0, 2], [9, 4, 0], [2, 2, 5]]
expected = [[189, 134, 120], [277, 192, 152], [310, 324, 192], [328, 239, 161], [214, 215, 145], [248, 317, 165], [262, 251, 156], [209, 134, 82], [244, 227, 178], [291, 240, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #387 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 7, 1, 2, 5, 2], [10, 8, 3, 4, 4, 1, 10], [4, 1, 5, 5, 2, 3, 5], [4, 2, 5, 2, 2, 10, 9], [6, 1, 9, 3, 10, 10, 6]]
b = [[0, 6, 8, 9, 9, 0, 2], [9, 2, 8, 9, 6, 6, 2], [4, 5, 2, 10, 8, 7, 2], [3, 2, 8, 9, 1, 4, 1], [9, 0, 8, 1, 5, 9, 4], [0, 9, 5, 3, 5, 7, 4], [5, 7, 8, 4, 5, 2, 1]]
expected = [[68, 152, 159, 194, 189, 116, 65], [182, 178, 299, 275, 241, 148, 76], [87, 123, 161, 171, 137, 110, 50], [107, 210, 212, 190, 195, 161, 81], [174, 221, 276, 244, 265, 253, 121]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #388 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 1, 8, 3, 5, 0, 6]]
b = [[1, 7, 9, 1, 4, 9, 2, 6, 6, 2], [0, 3, 7, 10, 7, 8, 1, 9, 0, 6], [6, 4, 3, 7, 7, 9, 8, 8, 8, 2], [10, 5, 6, 3, 4, 1, 2, 7, 4, 10], [2, 10, 9, 8, 6, 5, 9, 5, 5, 3], [3, 6, 10, 9, 1, 0, 7, 3, 1, 5], [4, 0, 4, 2, 6, 5, 9, 9, 0, 2], [6, 1, 3, 8, 4, 8, 2, 2, 10, 6]]
expected = [[153, 201, 285, 228, 175, 226, 125, 229, 180, 214]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #389 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [5], [7], [6], [7], [4], [5], [3], [6]]
b = [[3, 3, 2, 8]]
expected = [[6, 6, 4, 16], [15, 15, 10, 40], [21, 21, 14, 56], [18, 18, 12, 48], [21, 21, 14, 56], [12, 12, 8, 32], [15, 15, 10, 40], [9, 9, 6, 24], [18, 18, 12, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #390 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 2, 3, 5], [2, 9, 5, 6, 9], [4, 7, 0, 2, 10]]
b = [[9, 1, 0, 8, 5], [4, 10, 3, 7, 6], [3, 10, 10, 7, 0], [8, 1, 8, 2, 3], [1, 8, 10, 4, 7]]
expected = [[121, 149, 118, 144, 122], [126, 220, 215, 162, 145], [90, 156, 137, 125, 138]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #391 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0], [2, 2], [7, 3], [8, 3], [4, 3]]
b = [[4], [7]]
expected = [[28], [22], [49], [53], [37]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #392 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 6, 5, 4, 10, 7, 8, 6, 0], [3, 0, 5, 0, 9, 6, 6, 9, 3, 0], [6, 8, 5, 3, 5, 6, 9, 2, 4, 5], [4, 1, 2, 1, 0, 9, 4, 5, 1, 0], [4, 0, 7, 0, 4, 5, 1, 8, 3, 6], [8, 10, 5, 10, 1, 0, 9, 9, 0, 5]]
b = [[5, 3, 9, 4, 8, 7, 0], [5, 6, 0, 5, 7, 4, 3], [4, 6, 1, 5, 9, 3, 8], [6, 6, 7, 1, 3, 1, 8], [4, 0, 9, 6, 8, 8, 6], [8, 3, 7, 3, 1, 8, 1], [3, 1, 5, 3, 8, 4, 2], [8, 4, 1, 5, 1, 4, 10], [7, 6, 3, 10, 9, 7, 9], [0, 4, 1, 1, 9, 7, 9]]
expected = [[372, 258, 289, 296, 371, 340, 300], [230, 117, 203, 202, 231, 237, 229], [247, 193, 231, 222, 359, 287, 243], [170, 93, 136, 106, 115, 154, 103], [192, 144, 142, 169, 229, 220, 248], [273, 239, 215, 200, 343, 236, 309]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #393 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 8, 6, 6, 5, 10, 5, 2], [5, 2, 0, 8, 5, 7, 3, 10, 0], [7, 10, 9, 0, 3, 4, 5, 8, 0], [0, 1, 2, 3, 5, 6, 4, 10, 1], [1, 8, 10, 3, 3, 7, 8, 1, 6], [0, 8, 2, 5, 7, 9, 1, 10, 3], [4, 0, 7, 4, 0, 7, 3, 9, 9], [3, 4, 6, 5, 2, 3, 1, 1, 6], [3, 8, 7, 9, 6, 4, 7, 2, 9], [7, 5, 0, 7, 8, 5, 6, 9, 0]]
b = [[5, 3, 6, 3, 9, 7, 7, 8], [1, 4, 2, 1, 3, 9, 5, 9], [8, 2, 3, 7, 10, 2, 2, 5], [1, 9, 6, 6, 2, 10, 2, 6], [3, 4, 1, 7, 5, 6, 2, 6], [10, 9, 4, 10, 10, 8, 9, 2], [7, 5, 8, 6, 8, 0, 9, 3], [3, 2, 7, 9, 1, 4, 6, 2], [3, 1, 8, 3, 4, 6, 2, 9]]
expected = [[283, 264, 289, 331, 373, 328, 317, 333], [171, 213, 209, 278, 196, 259, 221, 179], [225, 168, 204, 257, 286, 239, 252, 248], [156, 150, 165, 245, 160, 167, 177, 120], [252, 205, 220, 265, 313, 243, 232, 260], [186, 218, 197, 296, 209, 298, 224, 222], [225, 167, 256, 281, 253, 228, 212, 213], [136, 130, 151, 162, 182, 195, 121, 197], [228, 244, 273, 289, 303, 327, 234, 335], [190, 229, 233, 291, 239, 288, 257, 237]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #394 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 7, 9, 3, 4, 1, 0, 7], [9, 9, 2, 0, 2, 9, 2, 0, 9], [7, 7, 5, 5, 7, 7, 7, 8, 1], [9, 6, 2, 10, 3, 5, 2, 4, 10], [6, 7, 4, 10, 2, 10, 9, 9, 10], [5, 1, 3, 10, 6, 3, 4, 7, 0], [2, 8, 8, 1, 10, 4, 5, 6, 0], [2, 5, 3, 8, 6, 8, 1, 1, 10], [6, 3, 0, 7, 3, 3, 1, 8, 9], [5, 2, 1, 5, 9, 6, 1, 8, 7]]
b = [[10, 8], [0, 9], [7, 9], [6, 7], [6, 4], [4, 6], [0, 0], [7, 8], [7, 8]]
expected = [[256, 283], [215, 305], [268, 341], [300, 368], [333, 437], [228, 244], [200, 279], [234, 304], [251, 290], [270, 294]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #395 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 9, 2, 5, 2, 2, 1, 5], [10, 10, 9, 0, 7, 9, 5, 3, 7], [7, 8, 0, 6, 9, 9, 2, 1, 8], [2, 8, 1, 10, 6, 5, 2, 3, 3], [9, 6, 2, 4, 0, 5, 9, 9, 6], [9, 5, 0, 8, 0, 9, 4, 6, 10], [8, 1, 4, 1, 0, 0, 3, 10, 3], [1, 9, 0, 4, 10, 4, 10, 8, 4], [9, 7, 3, 10, 7, 10, 5, 8, 10], [1, 3, 8, 10, 7, 2, 5, 7, 9]]
b = [[0, 9, 1], [8, 6, 8], [6, 6, 8], [6, 9, 2], [3, 8, 1], [1, 4, 6], [2, 5, 2], [9, 6, 4], [3, 0, 9]]
expected = [[143, 205, 183], [222, 339, 308], [173, 289, 226], [193, 258, 173], [206, 284, 219], [189, 275, 241], [143, 186, 123], [234, 293, 203], [277, 400, 308], [255, 296, 247]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #396 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 3, 0, 3, 10], [0, 9, 0, 3, 3, 9], [9, 3, 10, 2, 0, 0], [5, 5, 2, 5, 2, 6], [6, 7, 0, 5, 2, 8], [0, 4, 3, 5, 4, 5]]
b = [[10, 8, 6, 10, 7, 6, 8, 2, 1], [6, 9, 10, 3, 4, 6, 4, 3, 9], [7, 1, 10, 5, 4, 6, 9, 9, 1], [9, 7, 0, 4, 6, 10, 1, 0, 6], [2, 9, 9, 2, 5, 10, 9, 7, 2], [1, 6, 9, 0, 1, 2, 10, 10, 0]]
expected = [[93, 139, 187, 74, 76, 104, 198, 161, 23], [96, 183, 198, 45, 78, 132, 156, 138, 105], [196, 123, 184, 157, 127, 152, 176, 117, 58], [149, 176, 172, 99, 109, 154, 161, 117, 86], [159, 212, 196, 105, 118, 164, 179, 127, 103], [103, 140, 151, 55, 83, 142, 134, 117, 77]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #397 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9], [10, 4]]
b = [[7, 2, 0, 9, 0, 9, 3], [8, 9, 10, 7, 7, 4, 2]]
expected = [[121, 95, 90, 126, 63, 99, 39], [102, 56, 40, 118, 28, 106, 38]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #398 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 4], [0, 7, 5], [3, 4, 7]]
b = [[5, 5], [9, 1], [2, 7]]
expected = [[130, 86], [73, 42], [65, 68]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #399 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 5, 1, 2, 1, 9], [4, 8, 5, 10, 2, 2, 4], [5, 4, 1, 10, 7, 5, 4], [0, 8, 5, 9, 0, 4, 7], [7, 8, 9, 1, 9, 6, 9], [6, 5, 6, 2, 2, 8, 3], [1, 1, 4, 9, 4, 3, 0]]
b = [[2, 5, 7, 5, 6, 5], [4, 1, 2, 4, 10, 5], [1, 0, 7, 2, 8, 1], [4, 10, 3, 6, 3, 8], [1, 2, 1, 3, 4, 9], [3, 8, 6, 4, 8, 0], [9, 8, 1, 4, 7, 4]]
expected = [[127, 111, 83, 100, 204, 112], [129, 180, 127, 152, 226, 179], [125, 215, 121, 160, 204, 205], [148, 186, 109, 140, 228, 145], [167, 191, 185, 178, 344, 209], [99, 147, 153, 124, 233, 107], [59, 128, 86, 95, 115, 122]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #400 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 7, 4, 3, 8, 3, 9, 4, 0], [0, 9, 6, 2, 0, 9, 1, 6, 9, 3], [7, 4, 9, 9, 8, 1, 9, 8, 9, 7], [4, 4, 10, 3, 7, 1, 2, 8, 6, 6]]
b = [[2, 6, 10, 5, 1, 3, 8, 6], [9, 9, 2, 2, 3, 4, 8, 0], [0, 10, 3, 2, 3, 9, 5, 1], [0, 7, 6, 7, 10, 5, 10, 8], [1, 4, 3, 2, 6, 9, 0, 3], [5, 6, 9, 2, 1, 9, 8, 1], [0, 10, 2, 8, 4, 8, 0, 6], [1, 3, 3, 6, 1, 2, 9, 0], [4, 8, 6, 9, 4, 7, 3, 9], [7, 8, 1, 5, 1, 5, 5, 2]]
expected = [[131, 346, 283, 233, 148, 299, 344, 164], [189, 333, 206, 202, 123, 279, 290, 124], [156, 511, 295, 378, 272, 430, 365, 297], [130, 355, 196, 233, 165, 309, 272, 158]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #401 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 5, 5, 4, 1], [6, 7, 8, 7, 7, 7], [6, 9, 10, 4, 3, 6], [8, 7, 2, 0, 2, 9], [8, 6, 7, 1, 6, 7], [0, 2, 7, 10, 5, 6], [8, 9, 0, 4, 6, 5], [4, 7, 0, 9, 8, 1], [1, 2, 6, 10, 0, 5], [4, 8, 4, 10, 10, 1]]
b = [[4, 1, 0, 6, 9, 7, 2, 8, 2], [6, 5, 2, 7, 6, 6, 2, 10, 6], [8, 7, 1, 2, 1, 2, 9, 5, 0], [9, 0, 10, 3, 7, 8, 1, 4, 10], [10, 5, 8, 3, 5, 6, 9, 0, 0], [7, 9, 9, 8, 4, 5, 3, 8, 5]]
expected = [[194, 111, 114, 120, 136, 147, 111, 159, 113], [312, 195, 211, 199, 216, 233, 189, 242, 159], [266, 190, 146, 188, 185, 196, 169, 252, 136], [173, 148, 113, 179, 162, 159, 93, 216, 103], [242, 180, 140, 181, 180, 185, 167, 219, 97], [250, 138, 205, 121, 138, 166, 140, 143, 142], [217, 128, 151, 181, 204, 203, 107, 210, 135], [226, 88, 177, 132, 185, 195, 106, 146, 145], [189, 98, 155, 102, 117, 136, 85, 138, 139], [293, 131, 209, 156, 212, 229, 163, 180, 161]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #402 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 6, 8, 2, 3, 3, 3, 9, 2], [10, 7, 5, 6, 2, 10, 7, 0, 10, 2], [1, 2, 7, 5, 6, 9, 0, 4, 5, 7], [8, 3, 1, 1, 3, 0, 8, 10, 1, 0], [10, 10, 6, 3, 4, 7, 5, 1, 7, 1], [9, 0, 8, 2, 5, 5, 0, 4, 10, 6], [3, 1, 10, 3, 8, 2, 1, 5, 2, 2], [8, 6, 1, 5, 10, 8, 5, 3, 5, 10], [3, 6, 1, 2, 5, 6, 3, 7, 0, 9]]
b = [[1, 1, 9, 5], [7, 10, 0, 6], [4, 4, 9, 7], [3, 1, 2, 8], [9, 7, 1, 4], [9, 6, 7, 1], [5, 7, 9, 10], [6, 4, 7, 7], [9, 10, 10, 5], [5, 8, 4, 1]]
expected = [[241, 233, 329, 277], [340, 345, 390, 315], [297, 272, 257, 199], [172, 170, 238, 240], [311, 324, 329, 292], [281, 272, 349, 226], [212, 187, 217, 206], [369, 372, 313, 277], [256, 261, 199, 188]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #403 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 8, 3, 1, 0, 0, 9, 0, 8], [7, 0, 10, 10, 1, 6, 2, 6, 2, 6], [1, 9, 1, 0, 5, 2, 10, 1, 9, 3]]
b = [[2, 0, 10, 2, 7, 3, 5, 7], [5, 9, 4, 4, 10, 5, 4, 4], [2, 0, 9, 3, 4, 10, 4, 6], [3, 9, 1, 7, 3, 8, 10, 6], [1, 8, 7, 6, 6, 4, 3, 6], [8, 4, 2, 4, 9, 8, 5, 10], [3, 1, 6, 8, 4, 7, 9, 8], [3, 3, 4, 1, 2, 4, 2, 6], [0, 3, 9, 6, 8, 5, 10, 10], [9, 9, 3, 9, 4, 7, 10, 10]]
expected = [[169, 206, 194, 168, 191, 246, 205, 252], [191, 202, 261, 232, 239, 343, 318, 367], [130, 196, 248, 241, 275, 234, 282, 305]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #404 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 1, 7, 9, 0, 7], [0, 7, 9, 2, 5, 7, 5], [7, 10, 9, 8, 5, 1, 10], [5, 9, 2, 1, 0, 10, 3], [2, 1, 10, 5, 9, 1, 0]]
b = [[6, 0, 1, 6, 2, 1], [5, 4, 5, 2, 5, 5], [3, 7, 0, 6, 4, 8], [6, 8, 8, 6, 7, 3], [8, 0, 7, 6, 3, 1], [3, 2, 2, 3, 7, 8], [5, 7, 4, 5, 3, 10]]
expected = [[246, 144, 196, 207, 159, 157], [160, 156, 120, 156, 164, 224], [260, 239, 198, 247, 208, 266], [132, 99, 90, 111, 149, 179], [152, 116, 112, 161, 118, 119]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #405 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 7, 4, 6], [2, 10, 2, 8, 10], [3, 4, 4, 7, 3], [0, 8, 3, 5, 6], [10, 3, 9, 4, 9], [10, 6, 0, 3, 10], [8, 7, 7, 0, 1], [6, 8, 6, 0, 2], [9, 7, 9, 3, 4], [10, 0, 5, 7, 6]]
b = [[6, 1], [2, 1], [10, 8], [0, 10], [5, 2]]
expected = [[122, 113], [102, 128], [81, 115], [76, 94], [201, 143], [122, 66], [137, 73], [122, 66], [178, 126], [140, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #406 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [9], [8], [3], [0], [7], [10], [3], [10], [3]]
b = [[6]]
expected = [[48], [54], [48], [18], [0], [42], [60], [18], [60], [18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #407 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1], [9, 4], [6, 6], [8, 9], [7, 9], [8, 6]]
b = [[5, 5], [6, 4]]
expected = [[16, 14], [69, 61], [66, 54], [94, 76], [89, 71], [76, 64]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #408 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 10, 5, 1, 4, 8, 10, 10], [7, 10, 5, 6, 4, 10, 1, 2, 6]]
b = [[1, 3, 5, 7, 7, 5], [1, 8, 3, 7, 9, 3], [7, 0, 0, 4, 4, 9], [0, 2, 1, 7, 4, 10], [2, 2, 8, 6, 6, 4], [7, 5, 5, 2, 8, 5], [8, 1, 7, 2, 1, 2], [3, 9, 10, 9, 4, 4], [7, 4, 5, 7, 7, 5]]
expected = [[281, 271, 304, 384, 355, 335], [186, 214, 210, 287, 338, 276]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #409 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6], [7, 7], [9, 6], [2, 7], [7, 5], [3, 6], [8, 0], [5, 7]]
b = [[5, 10, 3, 8, 6], [1, 6, 2, 6, 3]]
expected = [[16, 56, 18, 52, 30], [42, 112, 35, 98, 63], [51, 126, 39, 108, 72], [17, 62, 20, 58, 33], [40, 100, 31, 86, 57], [21, 66, 21, 60, 36], [40, 80, 24, 64, 48], [32, 92, 29, 82, 51]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #410 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9], [1, 5], [6, 1], [10, 2]]
b = [[2, 6, 0, 9, 7, 1, 0, 1, 6], [6, 5, 6, 10, 3, 9, 8, 10, 4]]
expected = [[74, 105, 54, 180, 97, 91, 72, 100, 96], [32, 31, 30, 59, 22, 46, 40, 51, 26], [18, 41, 6, 64, 45, 15, 8, 16, 40], [32, 70, 12, 110, 76, 28, 16, 30, 68]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #411 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 8, 2, 3, 8], [4, 7, 7, 2, 9, 8], [0, 1, 7, 7, 6, 5], [6, 4, 9, 6, 0, 2], [2, 4, 4, 9, 2, 4], [2, 5, 0, 8, 10, 9], [6, 9, 6, 2, 2, 8], [0, 8, 1, 3, 1, 0], [8, 4, 3, 2, 8, 5]]
b = [[8, 2, 10, 0, 3, 5, 0, 7, 1, 0], [0, 10, 8, 1, 1, 3, 0, 8, 0, 0], [5, 8, 0, 9, 8, 0, 10, 2, 10, 6], [5, 5, 7, 8, 2, 8, 9, 6, 6, 10], [8, 2, 10, 6, 10, 5, 5, 3, 6, 10], [2, 10, 5, 5, 9, 2, 2, 1, 8, 2]]
expected = [[114, 206, 146, 150, 183, 74, 129, 98, 177, 114], [165, 242, 240, 180, 241, 118, 149, 145, 204, 168], [128, 163, 142, 181, 176, 99, 173, 87, 188, 182], [127, 174, 144, 143, 124, 94, 148, 130, 148, 118], [105, 165, 155, 144, 116, 112, 139, 118, 140, 142], [154, 204, 261, 174, 208, 157, 140, 141, 182, 198], [120, 244, 206, 131, 171, 99, 104, 152, 154, 92], [28, 105, 95, 47, 32, 53, 42, 87, 34, 46], [163, 156, 231, 120, 181, 118, 98, 135, 138, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #412 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 10, 7, 5, 8, 0, 1, 5]]
b = [[8, 10, 4, 4, 0, 6, 5, 4, 3, 0], [5, 7, 2, 2, 4, 2, 9, 2, 10, 5], [2, 10, 4, 8, 7, 6, 7, 2, 9, 8], [10, 4, 9, 1, 5, 2, 4, 10, 0, 8], [3, 10, 6, 9, 5, 1, 7, 5, 4, 0], [7, 8, 7, 6, 4, 0, 3, 1, 9, 6], [9, 9, 2, 0, 1, 8, 3, 0, 10, 4], [2, 10, 2, 3, 10, 7, 5, 10, 6, 5], [4, 10, 5, 0, 0, 1, 8, 10, 9, 10]]
expected = [[199, 322, 224, 191, 172, 103, 212, 191, 239, 239]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #413 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 6, 2, 8], [1, 7, 8, 2, 8]]
b = [[6, 5, 9, 10, 9, 1], [4, 7, 9, 2, 9, 0], [0, 0, 4, 5, 10, 1], [4, 0, 9, 2, 7, 7], [0, 0, 2, 3, 10, 1]]
expected = [[44, 52, 130, 90, 226, 30], [42, 54, 138, 92, 246, 31]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #414 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 1, 7, 2, 9], [5, 2, 0, 5, 4, 3], [0, 2, 7, 8, 6, 3], [8, 3, 8, 10, 5, 6], [6, 8, 2, 7, 1, 8], [7, 0, 0, 1, 9, 8], [3, 1, 0, 3, 7, 7], [9, 8, 1, 4, 4, 7], [6, 7, 10, 1, 5, 8], [0, 2, 4, 9, 8, 6]]
b = [[7, 1], [5, 1], [7, 4], [4, 3], [10, 4], [4, 0]]
expected = [[185, 49], [117, 38], [163, 78], [241, 93], [166, 47], [175, 46], [136, 41], [194, 49], [233, 76], [178, 77]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #415 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 1], [7, 2, 2], [0, 4, 7]]
b = [[6, 2, 7, 9], [4, 0, 4, 9], [4, 4, 0, 6]]
expected = [[34, 10, 33, 60], [58, 22, 57, 93], [44, 28, 16, 78]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #416 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 3, 3, 1, 0, 1, 8, 1], [1, 4, 10, 2, 0, 4, 2, 10, 0], [8, 1, 2, 10, 8, 2, 6, 10, 3], [1, 3, 4, 10, 3, 4, 9, 5, 7], [8, 2, 10, 2, 8, 7, 1, 7, 10], [5, 5, 10, 8, 10, 4, 8, 8, 10], [8, 1, 10, 0, 2, 10, 4, 5, 6], [2, 2, 6, 10, 1, 2, 0, 0, 8], [6, 7, 5, 9, 1, 3, 9, 7, 9]]
b = [[8, 3, 8, 4, 7, 10, 5, 0, 5, 9], [5, 7, 4, 3, 4, 9, 0, 10, 8, 6], [1, 1, 5, 2, 3, 0, 10, 1, 9, 4], [8, 10, 10, 9, 5, 10, 8, 9, 1, 8], [1, 6, 8, 3, 7, 2, 2, 2, 1, 9], [8, 9, 2, 3, 8, 5, 2, 3, 0, 6], [9, 2, 5, 1, 4, 10, 0, 0, 0, 9], [8, 1, 10, 5, 3, 1, 9, 9, 3, 2], [9, 0, 9, 9, 3, 7, 3, 1, 2, 1]]
expected = [[212, 118, 243, 140, 149, 201, 176, 165, 150, 188], [184, 111, 212, 118, 133, 116, 219, 170, 159, 151], [336, 221, 403, 242, 251, 306, 259, 217, 120, 327], [326, 205, 330, 229, 206, 307, 205, 194, 107, 272], [319, 188, 385, 247, 271, 256, 279, 158, 197, 287], [407, 260, 488, 307, 313, 373, 319, 246, 217, 391], [291, 156, 278, 174, 233, 230, 227, 105, 167, 248], [201, 150, 238, 197, 137, 206, 180, 132, 107, 163], [403, 220, 401, 273, 245, 390, 250, 239, 180, 319]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #417 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 10, 9, 8, 4, 2, 10], [5, 1, 0, 9, 9, 9, 8, 8]]
b = [[2, 2, 1, 9, 3, 6, 10, 10], [6, 9, 10, 2, 8, 4, 6, 5], [4, 0, 1, 4, 1, 0, 6, 0], [0, 9, 10, 6, 10, 1, 1, 8], [10, 5, 1, 8, 10, 10, 0, 3], [4, 0, 6, 0, 9, 7, 8, 1], [3, 9, 4, 1, 2, 9, 2, 2], [6, 5, 1, 8, 9, 7, 5, 6]]
expected = [[268, 285, 253, 287, 399, 263, 245, 244], [214, 257, 208, 245, 372, 324, 193, 227]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #418 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 2, 4, 6], [1, 2, 7, 10, 0]]
b = [[6, 6, 6, 6, 5, 7, 9, 0], [3, 3, 6, 0, 7, 6, 0, 8], [6, 5, 8, 3, 7, 6, 9, 1], [5, 10, 0, 0, 6, 4, 3, 9], [4, 3, 10, 0, 5, 7, 6, 0]]
expected = [[83, 95, 118, 18, 113, 114, 84, 78], [104, 147, 74, 27, 128, 101, 102, 113]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #419 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 3, 9, 4, 4, 6, 10], [3, 0, 7, 6, 4, 9, 7, 5], [6, 8, 2, 3, 10, 2, 10, 10], [2, 7, 2, 4, 10, 2, 8, 10], [7, 2, 6, 3, 10, 0, 9, 10], [10, 6, 4, 1, 10, 6, 0, 2], [3, 4, 6, 0, 7, 1, 5, 4], [5, 2, 9, 1, 8, 6, 5, 9]]
b = [[4, 9, 7, 1, 9, 4, 2, 5, 9, 9], [7, 4, 7, 7, 3, 5, 2, 4, 5, 2], [9, 3, 8, 7, 0, 8, 3, 7, 6, 7], [4, 2, 2, 2, 5, 2, 9, 1, 10, 3], [10, 0, 1, 5, 9, 2, 9, 5, 3, 9], [2, 3, 9, 5, 0, 4, 4, 8, 7, 7], [6, 3, 5, 4, 3, 7, 8, 8, 5, 8], [2, 4, 1, 1, 0, 10, 6, 10, 9, 1]]
expected = [[175, 115, 136, 115, 117, 216, 254, 240, 286, 188], [209, 128, 214, 162, 114, 223, 239, 268, 284, 254], [294, 174, 208, 192, 213, 284, 299, 325, 320, 287], [263, 130, 165, 175, 173, 251, 282, 286, 279, 236], [282, 162, 182, 165, 201, 275, 285, 310, 304, 290], [238, 154, 212, 164, 203, 168, 179, 221, 244, 267], [204, 95, 142, 137, 117, 173, 163, 196, 172, 191], [259, 151, 219, 183, 143, 269, 240, 315, 291, 278]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #420 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 5, 0, 2, 1, 3, 2], [5, 1, 3, 7, 7, 10, 3, 7], [0, 4, 6, 10, 6, 10, 4, 3], [0, 1, 1, 8, 10, 8, 7, 10], [4, 4, 9, 5, 1, 8, 10, 7], [3, 10, 5, 1, 7, 3, 0, 10], [6, 9, 10, 6, 4, 7, 9, 9], [5, 6, 2, 4, 1, 9, 0, 3], [7, 10, 0, 5, 7, 1, 2, 8]]
b = [[8, 5], [7, 5], [9, 0], [7, 7], [0, 1], [4, 1], [4, 6], [0, 2]]
expected = [[181, 105], [175, 128], [208, 136], [132, 141], [248, 158], [158, 102], [307, 200], [164, 99], [173, 156]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #421 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [8]]
b = [[6, 9, 1, 10]]
expected = [[18, 27, 3, 30], [48, 72, 8, 80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #422 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 2, 8, 9, 5], [1, 1, 0, 8, 5, 9]]
b = [[10, 4, 0, 0, 3, 3, 3, 9], [8, 2, 4, 2, 6, 7, 7, 4], [6, 10, 0, 4, 10, 0, 4, 8], [9, 5, 2, 10, 1, 5, 7, 1], [6, 9, 7, 6, 10, 7, 7, 7], [4, 0, 2, 4, 6, 7, 3, 5]]
expected = [[206, 159, 93, 164, 166, 157, 161, 152], [156, 91, 73, 148, 121, 148, 128, 101]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #423 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 7, 1, 0, 2], [10, 7, 0, 3, 9, 6], [1, 1, 2, 6, 9, 9], [8, 8, 8, 1, 3, 4], [6, 5, 9, 10, 0, 2], [1, 2, 1, 7, 9, 8]]
b = [[9], [5], [9], [4], [1], [4]]
expected = [[205], [170], [101], [207], [208], [97]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #424 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 10, 2, 0, 3, 6, 8, 3, 4]]
b = [[6], [0], [2], [9], [1], [1], [5], [7], [6], [6]]
expected = [[211]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #425 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [10], [10], [8], [1], [3], [5], [6], [10], [5]]
b = [[5, 0, 9, 7, 2, 0, 6, 3, 1]]
expected = [[20, 0, 36, 28, 8, 0, 24, 12, 4], [50, 0, 90, 70, 20, 0, 60, 30, 10], [50, 0, 90, 70, 20, 0, 60, 30, 10], [40, 0, 72, 56, 16, 0, 48, 24, 8], [5, 0, 9, 7, 2, 0, 6, 3, 1], [15, 0, 27, 21, 6, 0, 18, 9, 3], [25, 0, 45, 35, 10, 0, 30, 15, 5], [30, 0, 54, 42, 12, 0, 36, 18, 6], [50, 0, 90, 70, 20, 0, 60, 30, 10], [25, 0, 45, 35, 10, 0, 30, 15, 5]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #426 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 8, 1, 2, 4, 1, 5], [4, 1, 9, 5, 4, 4, 10, 5], [7, 8, 10, 10, 2, 5, 5, 8], [7, 7, 3, 4, 0, 2, 5, 2], [9, 1, 3, 7, 1, 7, 6, 10], [6, 0, 3, 2, 3, 10, 5, 5], [4, 7, 0, 0, 3, 9, 3, 5], [1, 4, 7, 10, 0, 4, 4, 0], [4, 0, 3, 10, 10, 3, 5, 2]]
b = [[0, 8, 5], [3, 4, 6], [8, 4, 8], [9, 7, 7], [9, 1, 0], [8, 7, 6], [2, 2, 7], [9, 4, 2]]
expected = [[182, 147, 161], [253, 179, 237], [334, 277, 314], [125, 156, 180], [257, 239, 228], [204, 177, 173], [171, 152, 147], [198, 158, 207], [256, 163, 171]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #427 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 5, 0, 0, 8, 1, 7, 0, 3], [4, 5, 0, 2, 7, 10, 6, 10, 4, 5], [6, 5, 8, 3, 10, 6, 1, 1, 5, 6], [8, 0, 10, 10, 2, 2, 7, 10, 10, 6], [1, 7, 1, 5, 3, 6, 0, 0, 3, 10]]
b = [[2, 1, 3], [4, 10, 3], [4, 8, 8], [6, 10, 9], [6, 10, 0], [2, 4, 4], [10, 7, 0], [2, 9, 5], [10, 0, 8], [5, 4, 3]]
expected = [[125, 259, 161], [247, 336, 182], [246, 314, 211], [352, 379, 350], [174, 223, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #428 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0], [0, 9], [0, 0], [6, 8], [6, 9], [0, 4], [3, 8], [2, 8], [8, 4]]
b = [[7, 1, 7], [8, 7, 6]]
expected = [[21, 3, 21], [72, 63, 54], [0, 0, 0], [106, 62, 90], [114, 69, 96], [32, 28, 24], [85, 59, 69], [78, 58, 62], [88, 36, 80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #429 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 5, 7], [2, 5, 6, 10]]
b = [[9, 0, 0, 5, 9, 3, 4, 10, 8], [4, 6, 1, 10, 2, 8, 4, 3, 7], [3, 4, 5, 1, 7, 3, 5, 8, 9], [4, 0, 6, 7, 5, 2, 6, 2, 0]]
expected = [[153, 50, 72, 154, 170, 99, 127, 169, 160], [96, 54, 95, 136, 120, 84, 118, 103, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #430 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 6, 1, 5, 5, 3], [1, 10, 2, 0, 5, 10, 7], [5, 7, 8, 5, 6, 0, 6], [9, 0, 6, 3, 10, 3, 3], [8, 3, 7, 3, 9, 4, 9], [1, 5, 2, 10, 5, 8, 9], [4, 9, 9, 1, 10, 4, 4], [6, 1, 7, 4, 8, 4, 9], [8, 3, 10, 7, 6, 3, 6]]
b = [[4, 3, 5, 8, 2, 6, 8, 9, 1], [1, 10, 2, 2, 8, 1, 9, 2, 6], [7, 8, 9, 9, 5, 0, 5, 0, 3], [8, 1, 9, 0, 9, 9, 9, 1, 2], [2, 3, 1, 5, 10, 6, 0, 8, 0], [1, 4, 7, 3, 2, 8, 2, 9, 0], [5, 0, 2, 2, 4, 8, 2, 8, 6]]
expected = [[87, 154, 123, 114, 167, 110, 118, 124, 80], [83, 174, 132, 115, 190, 182, 142, 215, 109], [165, 172, 174, 168, 235, 166, 200, 160, 117], [140, 120, 163, 191, 193, 189, 141, 215, 51], [175, 156, 191, 208, 236, 236, 179, 261, 107], [166, 126, 202, 103, 244, 267, 187, 213, 111], [140, 221, 174, 201, 258, 166, 183, 203, 111], [171, 128, 185, 183, 215, 225, 154, 232, 95], [206, 171, 238, 211, 243, 222, 222, 208, 106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #431 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 0, 4], [0, 9, 6, 8], [8, 3, 10, 3], [1, 9, 10, 0], [1, 9, 7, 6], [9, 6, 0, 2], [6, 6, 5, 7], [3, 9, 4, 7], [3, 0, 7, 2]]
b = [[7, 0, 10, 0, 9, 4, 5, 2, 10], [10, 7, 3, 10, 6, 6, 6, 1, 8], [1, 9, 1, 3, 0, 2, 0, 10, 6], [0, 7, 6, 2, 5, 10, 6, 4, 8]]
expected = [[98, 77, 85, 78, 98, 98, 86, 31, 128], [96, 173, 81, 124, 94, 146, 102, 101, 172], [96, 132, 117, 66, 105, 100, 76, 131, 188], [107, 153, 47, 120, 63, 78, 59, 111, 142], [104, 168, 80, 123, 93, 132, 95, 105, 172], [123, 56, 120, 64, 127, 92, 93, 32, 154], [107, 136, 125, 89, 125, 140, 108, 96, 194], [115, 148, 103, 116, 116, 144, 111, 83, 182], [28, 77, 49, 25, 37, 46, 27, 84, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #432 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10], [10], [3], [5], [3], [10], [1], [3]]
b = [[2, 10, 9, 1, 8, 6, 8]]
expected = [[20, 100, 90, 10, 80, 60, 80], [20, 100, 90, 10, 80, 60, 80], [6, 30, 27, 3, 24, 18, 24], [10, 50, 45, 5, 40, 30, 40], [6, 30, 27, 3, 24, 18, 24], [20, 100, 90, 10, 80, 60, 80], [2, 10, 9, 1, 8, 6, 8], [6, 30, 27, 3, 24, 18, 24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #433 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 4, 9, 7, 3, 3, 1], [0, 5, 4, 1, 2, 7, 1, 6], [6, 0, 6, 0, 3, 4, 8, 5], [2, 0, 9, 7, 10, 6, 10, 2], [1, 4, 3, 5, 6, 8, 4, 5], [4, 4, 8, 6, 1, 3, 7, 5], [0, 4, 10, 6, 3, 9, 2, 9]]
b = [[0, 5, 5, 1], [7, 3, 2, 5], [5, 9, 4, 4], [3, 7, 9, 5], [8, 3, 4, 4], [4, 4, 10, 5], [8, 9, 2, 4], [1, 2, 2, 3]]
expected = [[175, 201, 198, 149], [116, 113, 127, 111], [139, 191, 132, 109], [252, 288, 233, 189], [175, 175, 192, 153], [167, 234, 172, 148], [181, 225, 226, 182]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #434 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8], [10, 2], [1, 9], [0, 8], [1, 8], [5, 3], [8, 10], [0, 9]]
b = [[1, 1], [6, 0]]
expected = [[53, 5], [22, 10], [55, 1], [48, 0], [49, 1], [23, 5], [68, 8], [54, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #435 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 10, 4, 7, 9, 3, 5, 8, 2], [10, 7, 4, 6, 0, 6, 6, 5, 9, 2], [5, 8, 2, 5, 3, 0, 1, 6, 5, 4], [3, 10, 3, 0, 6, 8, 5, 7, 1, 4], [6, 6, 1, 8, 7, 0, 5, 5, 8, 5], [4, 1, 6, 2, 1, 10, 4, 5, 2, 3], [6, 9, 7, 2, 0, 6, 9, 10, 0, 7], [8, 0, 9, 0, 8, 6, 10, 3, 1, 9], [3, 9, 1, 2, 7, 8, 7, 10, 9, 7]]
b = [[4, 8, 9, 4, 8, 10], [2, 7, 0, 5, 2, 1], [1, 1, 8, 7, 0, 6], [3, 7, 1, 0, 3, 7], [1, 1, 3, 5, 5, 0], [9, 8, 6, 1, 8, 1], [8, 7, 2, 5, 0, 0], [0, 3, 7, 0, 7, 9], [9, 7, 2, 1, 8, 9], [1, 6, 9, 9, 4, 3]]
expected = [[250, 332, 288, 224, 292, 289], [261, 355, 247, 166, 275, 311], [113, 220, 165, 135, 184, 216], [166, 254, 214, 183, 211, 150], [185, 290, 197, 174, 238, 260], [174, 215, 223, 127, 188, 173], [188, 315, 299, 232, 218, 242], [201, 269, 328, 273, 217, 203], [260, 357, 271, 214, 317, 259]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #436 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 3, 5, 9, 9], [3, 3, 3, 6, 4, 3]]
b = [[6, 6, 5, 9], [5, 5, 5, 0], [0, 7, 10, 7], [2, 8, 5, 1], [7, 1, 3, 10], [5, 6, 5, 5]]
expected = [[175, 181, 177, 224], [88, 124, 117, 109]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #437 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10], [5]]
b = [[6, 10]]
expected = [[60, 100], [30, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #438 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 5, 7, 7], [8, 3, 8, 2, 7], [0, 9, 3, 0, 7], [7, 1, 0, 1, 3]]
b = [[5, 7, 2, 8, 2, 0, 2], [5, 4, 3, 9, 3, 1, 3], [4, 6, 5, 1, 6, 4, 5], [4, 2, 9, 9, 7, 2, 3], [9, 8, 8, 10, 0, 8, 4]]
expected = [[141, 142, 156, 186, 91, 90, 86], [158, 176, 139, 187, 87, 95, 99], [120, 110, 98, 154, 45, 77, 70], [71, 79, 50, 104, 24, 27, 32]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #439 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 10, 0], [3, 8, 2, 8], [9, 0, 4, 2], [7, 4, 10, 3], [0, 4, 2, 8], [0, 8, 2, 1], [1, 9, 4, 8]]
b = [[0, 10, 4, 1], [5, 5, 2, 4], [4, 7, 2, 7], [1, 1, 0, 10]]
expected = [[65, 195, 70, 100], [56, 92, 32, 129], [18, 120, 44, 57], [63, 163, 56, 123], [36, 42, 12, 110], [49, 55, 20, 56], [69, 91, 30, 145]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #440 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 8, 10, 1, 10, 10, 3, 5, 2], [1, 1, 4, 2, 10, 6, 1, 1, 10, 5], [7, 1, 4, 8, 4, 4, 9, 10, 1, 9]]
b = [[8, 6, 9, 8, 10], [3, 7, 1, 5, 2], [1, 5, 3, 4, 8], [0, 2, 7, 4, 10], [10, 10, 9, 10, 8], [3, 1, 3, 1, 0], [8, 5, 0, 8, 0], [3, 1, 7, 3, 2], [1, 9, 6, 2, 2], [2, 1, 5, 9, 7]]
expected = [[181, 249, 212, 262, 230], [164, 244, 236, 219, 201], [236, 202, 301, 338, 301]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #441 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 0, 5, 2], [9, 3, 9, 2, 8], [8, 10, 9, 4, 2], [5, 9, 0, 0, 3]]
b = [[7, 2, 6, 3, 2, 2, 4, 9, 9], [0, 3, 5, 9, 0, 5, 10, 5, 2], [1, 4, 6, 2, 7, 5, 9, 5, 7], [8, 3, 5, 9, 8, 9, 5, 3, 10], [1, 1, 9, 4, 8, 6, 4, 0, 4]]
expected = [[70, 31, 77, 83, 64, 75, 69, 61, 98], [96, 77, 205, 122, 161, 144, 189, 147, 202], [99, 96, 190, 176, 127, 159, 241, 179, 203], [38, 40, 102, 108, 34, 73, 122, 90, 75]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #442 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 5, 4], [2, 8, 8, 6], [9, 5, 5, 6], [4, 5, 9, 0]]
b = [[9], [7], [4], [4]]
expected = [[123], [130], [160], [107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #443 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 6, 10, 6, 0]]
b = [[4, 5], [10, 8], [4, 1], [0, 0], [9, 6], [6, 2]]
expected = [[170, 121]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #444 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5], [7, 4], [9, 7], [5, 0], [0, 9], [9, 7], [3, 0]]
b = [[9], [3]]
expected = [[96], [75], [102], [45], [27], [102], [27]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #445 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 5, 1, 1, 5, 3, 6, 9]]
b = [[9, 10, 9, 2, 2, 4, 7], [3, 6, 7, 8, 7, 0, 8], [2, 2, 7, 1, 4, 9, 7], [8, 8, 10, 4, 8, 2, 5], [2, 7, 7, 4, 5, 7, 8], [7, 8, 10, 9, 4, 6, 4], [0, 2, 3, 2, 9, 0, 9], [8, 1, 2, 6, 9, 7, 8], [9, 0, 5, 4, 5, 10, 2]]
expected = [[208, 125, 224, 200, 235, 216, 225]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #446 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 7, 6, 7, 10, 9, 3, 7, 0], [8, 8, 6, 0, 3, 4, 10, 1, 10, 7]]
b = [[7, 0, 2, 2, 5], [7, 9, 0, 3, 2], [0, 7, 7, 0, 10], [3, 0, 6, 8, 1], [9, 4, 9, 3, 5], [5, 3, 4, 10, 6], [0, 9, 1, 8, 2], [2, 6, 9, 9, 4], [3, 4, 1, 10, 0], [3, 5, 8, 3, 5]]
expected = [[256, 279, 249, 371, 256], [212, 309, 186, 299, 214]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #447 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 4], [8, 2, 7], [2, 10, 8], [0, 5, 2], [9, 8, 4], [1, 10, 10], [0, 4, 5], [4, 4, 8], [1, 5, 9], [0, 6, 4]]
b = [[2, 3, 5, 5, 8, 5, 8, 4], [3, 8, 8, 8, 6, 7, 7, 0], [7, 2, 8, 9, 1, 6, 7, 3]]
expected = [[56, 64, 104, 108, 92, 92, 120, 44], [71, 54, 112, 119, 83, 96, 127, 53], [90, 102, 154, 162, 84, 128, 142, 32], [29, 44, 56, 58, 32, 47, 49, 6], [70, 99, 141, 145, 124, 125, 156, 48], [102, 103, 165, 175, 78, 135, 148, 34], [47, 42, 72, 77, 29, 58, 63, 15], [76, 60, 116, 124, 64, 96, 116, 40], [80, 61, 117, 126, 47, 94, 106, 31], [46, 56, 80, 84, 40, 66, 70, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #448 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 3, 4, 0], [6, 0, 3, 3, 6], [0, 7, 3, 2, 9], [5, 8, 5, 3, 6], [2, 3, 3, 7, 5], [3, 7, 8, 3, 5]]
b = [[7, 0, 1, 0, 6, 0, 3, 10, 3, 0], [1, 2, 4, 9, 9, 8, 6, 10, 7, 3], [1, 9, 8, 1, 4, 4, 9, 10, 6, 4], [4, 5, 1, 7, 7, 6, 10, 6, 3, 7], [2, 6, 4, 0, 6, 9, 10, 3, 10, 1]]
expected = [[83, 63, 68, 103, 160, 100, 139, 214, 110, 64], [69, 78, 57, 24, 105, 84, 135, 126, 105, 39], [36, 105, 90, 80, 143, 161, 179, 139, 163, 56], [72, 112, 104, 98, 179, 156, 198, 216, 170, 71], [58, 98, 65, 79, 130, 123, 171, 137, 116, 75], [58, 131, 118, 92, 164, 151, 203, 213, 165, 79]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #449 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 7, 3, 9, 4, 10, 8, 2, 4], [7, 7, 2, 5, 1, 1, 6, 4, 8, 7], [9, 1, 2, 7, 1, 10, 4, 2, 9, 1], [1, 2, 7, 2, 4, 0, 8, 1, 2, 9], [9, 2, 4, 3, 4, 3, 4, 7, 5, 9], [7, 5, 10, 6, 8, 10, 5, 6, 5, 0]]
b = [[8, 6, 2, 2, 6], [8, 10, 5, 0, 2], [4, 8, 8, 9, 5], [2, 4, 7, 8, 0], [5, 4, 0, 0, 6], [5, 9, 2, 1, 1], [3, 2, 3, 1, 2], [0, 8, 5, 3, 7], [0, 8, 5, 3, 9], [9, 5, 5, 1, 1]]
expected = [[293, 388, 241, 151, 255], [221, 304, 215, 122, 192], [178, 303, 180, 140, 186], [181, 191, 166, 107, 119], [238, 310, 204, 130, 216], [253, 416, 251, 200, 257]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #450 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 5, 2, 7, 2, 5, 7, 10], [6, 7, 4, 2, 10, 9, 1, 7, 0], [9, 5, 5, 1, 5, 4, 0, 1, 8]]
b = [[0, 3, 1, 10, 9], [8, 3, 3, 9, 8], [0, 0, 7, 8, 5], [8, 2, 5, 3, 1], [10, 9, 5, 1, 10], [1, 0, 7, 6, 9], [10, 1, 4, 8, 4], [3, 6, 6, 6, 1], [5, 8, 3, 2, 7]]
expected = [[233, 203, 195, 194, 236], [212, 176, 224, 275, 324], [145, 159, 147, 229, 290]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #451 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 0, 4, 8, 3, 1, 4, 5, 1], [1, 5, 9, 8, 6, 0, 1, 2, 2, 5]]
b = [[5, 0, 10, 1, 4, 7, 1], [10, 9, 6, 3, 5, 7, 9], [9, 1, 5, 5, 4, 2, 6], [6, 9, 5, 9, 4, 4, 10], [1, 8, 5, 9, 6, 2, 7], [8, 9, 3, 10, 8, 6, 6], [7, 9, 10, 5, 8, 8, 9], [3, 0, 2, 0, 8, 9, 7], [3, 9, 6, 4, 2, 7, 1], [7, 2, 6, 2, 1, 9, 7]]
expected = [[172, 237, 189, 186, 181, 201, 220], [244, 211, 211, 210, 166, 189, 282]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #452 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 2, 4, 5, 7]]
b = [[0, 9, 1, 1], [10, 2, 0, 2], [5, 7, 1, 6], [10, 10, 3, 6], [0, 8, 2, 10], [5, 9, 9, 9]]
expected = [[155, 198, 90, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #453 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 5, 10], [4, 7, 8, 2], [3, 10, 3, 9], [6, 5, 7, 4], [5, 5, 3, 4], [3, 10, 10, 10], [0, 4, 1, 9], [0, 9, 2, 6]]
b = [[5, 2, 4, 7, 9, 2, 0], [7, 7, 6, 1, 3, 7, 6], [8, 7, 8, 3, 9, 5, 9], [6, 9, 0, 5, 4, 1, 5]]
expected = [[192, 187, 116, 141, 193, 97, 131], [145, 131, 122, 69, 137, 99, 124], [163, 178, 96, 85, 120, 100, 132], [145, 132, 110, 88, 148, 86, 113], [108, 102, 74, 69, 103, 64, 77], [225, 236, 152, 111, 187, 136, 200], [90, 116, 32, 52, 57, 42, 78], [115, 131, 70, 45, 69, 79, 102]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #454 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 0, 4, 4], [10, 8, 6, 7, 7], [5, 8, 3, 7, 5], [1, 10, 0, 2, 0], [7, 4, 9, 6, 0]]
b = [[3, 8, 6, 2, 5, 5, 6, 3, 10, 10], [1, 7, 1, 7, 0, 4, 10, 3, 5, 2], [0, 10, 3, 3, 1, 6, 5, 1, 0, 6], [6, 10, 10, 5, 7, 9, 3, 1, 4, 1], [5, 5, 4, 3, 5, 4, 3, 8, 0, 2]]
expected = [[67, 156, 94, 98, 73, 109, 134, 75, 106, 78], [115, 301, 184, 150, 140, 209, 212, 123, 168, 173], [90, 221, 137, 125, 102, 158, 161, 89, 118, 101], [25, 98, 36, 82, 19, 63, 112, 35, 68, 32], [61, 234, 133, 99, 86, 159, 145, 48, 114, 138]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #455 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 8, 3, 0, 2, 9, 9, 9, 9], [7, 10, 2, 1, 6, 2, 5, 9, 4, 6], [5, 3, 9, 8, 0, 9, 6, 2, 0, 7], [8, 0, 4, 10, 5, 5, 2, 1, 8, 4], [4, 9, 2, 10, 3, 8, 3, 6, 2, 9], [10, 2, 9, 0, 9, 2, 6, 10, 0, 4], [1, 0, 9, 6, 0, 0, 9, 1, 4, 0]]
b = [[3, 1, 2, 3, 9, 0, 6, 0], [7, 1, 1, 10, 3, 1, 9, 4], [5, 8, 7, 1, 3, 7, 2, 9], [9, 9, 9, 8, 10, 1, 5, 3], [3, 10, 10, 6, 0, 2, 8, 2], [4, 1, 8, 8, 9, 0, 10, 9], [6, 4, 7, 0, 6, 8, 5, 4], [5, 1, 3, 7, 6, 10, 6, 1], [2, 4, 0, 6, 9, 5, 3, 4], [4, 0, 7, 4, 6, 10, 5, 4]]
expected = [[238, 176, 255, 214, 327, 357, 237, 220], [243, 149, 227, 294, 283, 247, 330, 160], [263, 187, 317, 232, 332, 212, 282, 252], [218, 226, 269, 249, 343, 154, 256, 178], [304, 183, 317, 356, 367, 223, 365, 224], [226, 210, 291, 215, 261, 271, 298, 175], [169, 180, 185, 91, 192, 171, 117, 152]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #456 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 5, 1, 5, 3], [8, 9, 6, 10, 2, 6], [9, 7, 6, 2, 6, 10], [5, 0, 8, 0, 0, 4], [6, 1, 4, 10, 10, 7]]
b = [[8, 4, 2, 9, 6, 2, 1, 0], [6, 1, 7, 8, 10, 10, 2, 4], [8, 2, 8, 9, 9, 3, 5, 9], [2, 1, 5, 2, 6, 2, 0, 4], [7, 3, 2, 1, 5, 10, 5, 7], [6, 4, 2, 1, 5, 2, 4, 5]]
expected = [[215, 82, 135, 200, 225, 171, 87, 131], [236, 93, 193, 226, 292, 176, 90, 174], [268, 115, 157, 211, 270, 190, 123, 182], [128, 52, 82, 121, 122, 42, 61, 92], [218, 101, 135, 135, 227, 168, 106, 185]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #457 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4], [1, 9], [8, 4], [2, 7]]
b = [[3, 7, 2, 5, 7], [1, 3, 10, 0, 10]]
expected = [[16, 40, 48, 20, 68], [12, 34, 92, 5, 97], [28, 68, 56, 40, 96], [13, 35, 74, 10, 84]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #458 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 1, 7, 9, 9, 8, 10, 1, 4], [10, 7, 7, 3, 2, 1, 1, 1, 9, 6], [5, 1, 2, 4, 6, 0, 3, 6, 8, 1], [9, 5, 2, 6, 7, 7, 2, 7, 5, 0], [0, 9, 6, 2, 4, 7, 3, 2, 6, 8], [0, 1, 0, 1, 10, 9, 4, 10, 0, 8]]
b = [[1], [2], [3], [4], [5], [10], [8], [0], [4], [9]]
expected = [[290], [175], [124], [190], [254], [250]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #459 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 6, 9, 1, 4, 8, 2, 9, 8], [7, 0, 0, 5, 8, 5, 0, 9, 8, 0], [1, 10, 2, 5, 1, 3, 2, 9, 10, 1], [8, 8, 7, 4, 0, 5, 8, 1, 7, 5], [4, 9, 10, 4, 4, 7, 10, 0, 2, 8], [6, 0, 3, 7, 10, 5, 0, 10, 3, 3], [3, 1, 9, 5, 6, 9, 9, 2, 10, 5]]
b = [[1, 3, 6, 0, 2, 9], [1, 1, 10, 4, 8, 3], [4, 0, 7, 7, 0, 9], [0, 10, 7, 9, 10, 1], [10, 3, 7, 9, 4, 8], [6, 8, 3, 4, 8, 3], [6, 1, 9, 8, 5, 0], [7, 8, 2, 10, 9, 2], [2, 6, 4, 9, 4, 9], [7, 2, 7, 4, 9, 3]]
expected = [[207, 238, 410, 385, 378, 249], [196, 255, 198, 299, 249, 237], [149, 226, 254, 320, 300, 190], [178, 180, 357, 294, 282, 258], [255, 167, 415, 336, 322, 252], [245, 262, 244, 333, 291, 239], [277, 245, 355, 404, 308, 300]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #460 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 0, 4, 6], [7, 5, 4, 7, 7]]
b = [[5], [6], [5], [1], [4]]
expected = [[105], [120]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #461 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 3, 7, 4], [4, 1, 9, 5, 3], [1, 5, 7, 2, 5], [4, 2, 2, 1, 10], [8, 8, 3, 1, 1], [6, 10, 10, 1, 7]]
b = [[5, 8, 0], [9, 2, 7], [4, 2, 6], [4, 8, 10], [3, 7, 6]]
expected = [[126, 134, 154], [94, 113, 129], [101, 83, 127], [80, 118, 96], [131, 101, 90], [185, 145, 182]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #462 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 4, 2, 9, 2, 6]]
b = [[10, 9, 6, 6, 5], [8, 6, 2, 0, 2], [9, 10, 1, 7, 0], [5, 4, 6, 8, 2], [10, 10, 3, 5, 3], [3, 6, 4, 10, 0], [8, 1, 6, 3, 2]]
expected = [[262, 216, 119, 151, 71]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #463 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 5, 2, 3], [0, 3, 9, 7, 2], [0, 3, 10, 10, 2], [8, 4, 6, 5, 3], [5, 0, 8, 0, 6], [3, 2, 4, 10, 10], [7, 9, 4, 0, 3], [10, 9, 2, 0, 2], [0, 8, 2, 0, 2]]
b = [[4, 10, 5, 7, 10], [4, 8, 0, 4, 1], [10, 9, 6, 10, 0], [4, 3, 10, 0, 10], [10, 3, 9, 6, 2]]
expected = [[108, 104, 87, 94, 49], [150, 132, 142, 114, 77], [172, 150, 178, 124, 107], [158, 190, 153, 150, 140], [160, 140, 127, 151, 62], [200, 142, 229, 129, 152], [134, 187, 86, 143, 85], [116, 196, 80, 138, 113], [72, 88, 30, 64, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #464 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 2, 0, 10, 8], [3, 8, 2, 0, 5, 7], [10, 3, 9, 4, 0, 1]]
b = [[8, 0, 9, 4, 10, 6, 6, 1, 1, 1], [3, 5, 1, 6, 10, 2, 2, 10, 5, 5], [6, 5, 0, 10, 7, 4, 7, 5, 7, 3], [9, 2, 6, 4, 9, 4, 8, 0, 4, 9], [4, 7, 0, 5, 0, 3, 10, 6, 7, 5], [5, 8, 8, 1, 9, 3, 6, 7, 10, 6]]
expected = [[188, 184, 153, 162, 256, 132, 232, 215, 213, 153], [115, 141, 91, 112, 187, 78, 140, 172, 162, 116], [184, 76, 125, 165, 238, 121, 167, 92, 114, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #465 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 7, 3, 4], [3, 0, 4, 6, 1]]
b = [[8], [0], [0], [7], [8]]
expected = [[61], [74]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #466 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0], [6, 3], [1, 0], [1, 1], [10, 1], [6, 1], [0, 3], [1, 6], [1, 4], [6, 8]]
b = [[8, 6, 9, 3, 8, 8, 8, 5], [9, 9, 3, 9, 1, 4, 1, 8]]
expected = [[56, 42, 63, 21, 56, 56, 56, 35], [75, 63, 63, 45, 51, 60, 51, 54], [8, 6, 9, 3, 8, 8, 8, 5], [17, 15, 12, 12, 9, 12, 9, 13], [89, 69, 93, 39, 81, 84, 81, 58], [57, 45, 57, 27, 49, 52, 49, 38], [27, 27, 9, 27, 3, 12, 3, 24], [62, 60, 27, 57, 14, 32, 14, 53], [44, 42, 21, 39, 12, 24, 12, 37], [120, 108, 78, 90, 56, 80, 56, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #467 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 10, 3, 7]]
b = [[10, 8, 7], [1, 1, 5], [5, 8, 0], [9, 6, 10], [2, 7, 3]]
expected = [[125, 175, 92]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #468 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 10, 5, 9, 5, 7, 4, 0, 5], [0, 2, 3, 8, 8, 0, 6, 6, 2, 5], [2, 10, 0, 1, 10, 6, 6, 0, 1, 7], [5, 2, 3, 9, 8, 7, 6, 2, 7, 9], [10, 5, 2, 0, 9, 7, 7, 10, 6, 1]]
b = [[5], [6], [3], [6], [2], [9], [9], [7], [5], [7]]
expected = [[344], [226], [258], [345], [337]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #469 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 0, 6, 10, 5, 2, 10, 10, 2], [3, 1, 3, 2, 6, 2, 4, 5, 6, 10], [1, 0, 7, 4, 1, 7, 1, 1, 4, 5], [9, 3, 6, 4, 6, 7, 6, 1, 0, 6], [2, 4, 3, 8, 0, 0, 8, 7, 10, 0], [2, 9, 10, 6, 9, 2, 8, 2, 2, 5], [4, 9, 10, 3, 5, 10, 10, 2, 2, 8], [0, 10, 6, 6, 5, 0, 10, 6, 3, 10], [10, 9, 2, 5, 6, 8, 8, 2, 0, 2]]
b = [[7, 7, 3, 0, 3, 5, 7, 9, 2], [1, 8, 9, 1, 7, 0, 5, 1, 10], [7, 5, 6, 6, 6, 1, 0, 4, 6], [4, 4, 0, 5, 8, 9, 8, 8, 2], [10, 7, 9, 1, 2, 8, 10, 7, 4], [10, 10, 1, 1, 2, 1, 0, 7, 4], [6, 3, 6, 6, 6, 7, 10, 3, 1], [6, 10, 7, 5, 1, 3, 1, 0, 0], [5, 6, 10, 7, 9, 2, 4, 9, 2], [3, 4, 7, 4, 8, 6, 5, 1, 4]]
expected = [[305, 342, 318, 188, 227, 215, 243, 254, 132], [245, 252, 281, 168, 229, 201, 221, 188, 126], [199, 192, 149, 129, 176, 111, 101, 169, 113], [314, 297, 236, 137, 227, 223, 261, 255, 174], [211, 247, 257, 215, 261, 182, 225, 212, 106], [312, 319, 347, 202, 307, 244, 312, 239, 242], [375, 391, 358, 215, 333, 235, 297, 270, 270], [267, 317, 373, 232, 337, 254, 316, 184, 224], [319, 346, 261, 126, 239, 227, 307, 271, 204]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #470 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 8, 0, 3, 4, 2], [3, 5, 6, 1, 0, 8, 2], [2, 1, 3, 0, 0, 1, 2], [3, 8, 10, 1, 10, 8, 9], [2, 8, 10, 0, 1, 10, 1]]
b = [[2, 10], [0, 8], [1, 1], [4, 8], [8, 4], [0, 3], [6, 2]]
expected = [[60, 116], [28, 112], [19, 38], [154, 194], [28, 130]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #471 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 7, 10, 10, 10, 0, 7, 10, 9], [0, 0, 5, 6, 2, 9, 7, 1, 7, 1]]
b = [[1, 8], [4, 10], [6, 3], [5, 2], [6, 3], [4, 8], [4, 3], [5, 0], [0, 1], [4, 4]]
expected = [[276, 235], [145, 137]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #472 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 0, 6, 4], [7, 8, 3, 4, 7], [8, 2, 7, 7, 10], [5, 7, 3, 3, 1], [6, 0, 10, 3, 8], [6, 10, 9, 5, 5]]
b = [[3, 5, 8, 6, 6, 10, 5], [6, 4, 3, 5, 10, 1, 4], [1, 1, 8, 10, 4, 7, 10], [9, 6, 8, 1, 0, 7, 7], [7, 10, 3, 9, 1, 5, 4]]
expected = [[124, 104, 81, 77, 74, 69, 86], [157, 164, 157, 179, 141, 162, 153], [176, 197, 212, 225, 106, 230, 207], [94, 84, 112, 107, 113, 104, 108], [111, 138, 176, 211, 84, 191, 183], [167, 159, 205, 226, 177, 193, 215]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #473 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 2], [10, 0, 6], [0, 0, 6], [2, 6, 5], [7, 5, 0], [1, 6, 1], [2, 1, 7]]
b = [[2, 10], [2, 7], [4, 3]]
expected = [[26, 72], [44, 118], [24, 18], [36, 77], [24, 105], [18, 55], [34, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #474 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [10], [10], [0], [1], [5], [1], [2], [5]]
b = [[6, 3, 3, 5, 1, 1]]
expected = [[24, 12, 12, 20, 4, 4], [60, 30, 30, 50, 10, 10], [60, 30, 30, 50, 10, 10], [0, 0, 0, 0, 0, 0], [6, 3, 3, 5, 1, 1], [30, 15, 15, 25, 5, 5], [6, 3, 3, 5, 1, 1], [12, 6, 6, 10, 2, 2], [30, 15, 15, 25, 5, 5]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #475 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 4, 4, 5, 4], [1, 0, 3, 0, 6, 7], [5, 8, 5, 6, 9, 3]]
b = [[8, 2, 8, 0, 2, 8, 7], [3, 2, 5, 0, 3, 10, 6], [7, 7, 6, 9, 3, 6, 5], [1, 0, 1, 7, 2, 10, 0], [1, 4, 4, 0, 8, 10, 5], [0, 6, 9, 0, 2, 5, 3]]
expected = [[130, 104, 191, 64, 107, 276, 162], [35, 89, 113, 27, 73, 121, 73], [114, 115, 179, 87, 139, 315, 162]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #476 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 7, 7], [5, 7, 0, 6]]
b = [[3, 3, 5, 6, 10, 3, 0, 5, 3, 2], [6, 6, 1, 3, 5, 3, 10, 2, 5, 1], [7, 6, 2, 3, 0, 9, 6, 10, 2, 1], [5, 2, 1, 4, 8, 1, 4, 2, 5, 5]]
expected = [[126, 98, 64, 106, 151, 103, 100, 130, 88, 61], [87, 69, 38, 75, 133, 42, 94, 51, 80, 47]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #477 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 2], [7, 9, 6], [6, 2, 1], [1, 2, 7], [1, 10, 8], [3, 8, 7], [10, 2, 9], [10, 6, 10], [1, 9, 5], [6, 7, 5]]
b = [[5, 10, 6, 0, 4, 2], [7, 0, 3, 9, 6, 3], [7, 9, 8, 0, 2, 4]]
expected = [[80, 38, 52, 72, 60, 36], [140, 124, 117, 81, 94, 65], [51, 69, 50, 18, 38, 22], [68, 73, 68, 18, 30, 36], [131, 82, 100, 90, 80, 64], [120, 93, 98, 72, 74, 58], [127, 181, 138, 18, 70, 62], [162, 190, 158, 54, 96, 78], [103, 55, 73, 81, 68, 49], [114, 105, 97, 63, 76, 53]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #478 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 7, 5], [9, 3, 5, 7], [2, 0, 1, 9], [10, 2, 2, 6], [3, 2, 6, 8], [4, 1, 2, 8]]
b = [[8, 7, 1], [5, 4, 5], [9, 6, 1], [0, 0, 1]]
expected = [[152, 118, 45], [132, 105, 36], [25, 20, 12], [108, 90, 28], [88, 65, 27], [55, 44, 19]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #479 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 1, 8, 0, 5, 4, 0], [6, 1, 0, 3, 2, 5, 10, 9], [0, 6, 3, 7, 4, 10, 8, 9], [4, 1, 6, 2, 0, 9, 7, 1], [2, 7, 0, 3, 4, 3, 3, 7], [6, 8, 4, 9, 2, 9, 10, 3], [6, 4, 5, 9, 6, 2, 5, 1], [6, 4, 0, 0, 5, 9, 7, 9], [5, 4, 9, 8, 8, 7, 9, 6]]
b = [[5, 3, 0], [0, 0, 10], [4, 7, 8], [5, 5, 8], [9, 7, 8], [6, 5, 1], [4, 1, 8], [8, 5, 10]]
expected = [[95, 79, 169], [205, 127, 225], [247, 187, 336], [144, 121, 149], [147, 102, 223], [227, 175, 319], [189, 160, 252], [229, 150, 235], [299, 248, 379]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #480 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1], [9, 5], [5, 6], [5, 1], [10, 6], [4, 9], [2, 4], [1, 0], [2, 0]]
b = [[8, 5, 0, 9, 10, 8], [2, 9, 0, 7, 10, 7]]
expected = [[50, 39, 0, 61, 70, 55], [82, 90, 0, 116, 140, 107], [52, 79, 0, 87, 110, 82], [42, 34, 0, 52, 60, 47], [92, 104, 0, 132, 160, 122], [50, 101, 0, 99, 130, 95], [24, 46, 0, 46, 60, 44], [8, 5, 0, 9, 10, 8], [16, 10, 0, 18, 20, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #481 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 6, 7, 6], [7, 7, 10, 6, 4], [2, 0, 2, 5, 4], [3, 6, 0, 7, 3]]
b = [[2], [0], [6], [0], [1]]
expected = [[54], [78], [20], [9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #482 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6], [7, 8], [2, 4], [0, 7], [5, 2], [3, 10], [1, 6], [0, 9], [0, 3]]
b = [[3, 7, 10, 9, 0, 6], [8, 10, 6, 6, 9, 6]]
expected = [[63, 95, 86, 81, 54, 66], [85, 129, 118, 111, 72, 90], [38, 54, 44, 42, 36, 36], [56, 70, 42, 42, 63, 42], [31, 55, 62, 57, 18, 42], [89, 121, 90, 87, 90, 78], [51, 67, 46, 45, 54, 42], [72, 90, 54, 54, 81, 54], [24, 30, 18, 18, 27, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #483 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 5, 0, 5, 3, 3], [0, 10, 5, 8, 3, 1, 7], [6, 1, 0, 1, 3, 1, 10], [8, 0, 7, 6, 2, 1, 6]]
b = [[2, 3, 9, 7, 1], [8, 0, 0, 6, 8], [5, 4, 6, 9, 4], [9, 5, 2, 7, 8], [3, 10, 0, 3, 5], [7, 3, 6, 7, 6], [1, 8, 1, 4, 1]]
expected = [[102, 112, 78, 138, 101], [200, 149, 59, 205, 192], [55, 136, 72, 111, 53], [124, 153, 138, 198, 106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #484 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 8, 8, 3, 3], [3, 4, 0, 10, 1, 9]]
b = [[0, 7, 9, 0, 3, 10, 4, 3, 2], [1, 9, 6, 10, 10, 2, 10, 1, 2], [0, 5, 10, 10, 3, 8, 10, 5, 4], [6, 1, 5, 3, 0, 4, 8, 10, 10], [4, 9, 2, 8, 4, 7, 6, 5, 1], [9, 3, 1, 2, 9, 3, 7, 0, 7]]
expected = [[97, 174, 189, 234, 163, 146, 283, 145, 156], [149, 103, 112, 96, 134, 112, 201, 118, 178]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #485 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 3, 3, 7, 9, 3, 0, 3, 5], [9, 10, 0, 9, 8, 5, 0, 1, 8, 4], [10, 10, 7, 9, 10, 0, 8, 6, 9, 10], [6, 7, 4, 9, 4, 8, 6, 2, 5, 8]]
b = [[8, 7, 7, 6, 10, 3], [10, 5, 7, 10, 9, 6], [6, 2, 9, 6, 2, 0], [0, 9, 4, 9, 3, 6], [9, 1, 2, 10, 10, 4], [5, 1, 7, 8, 10, 2], [8, 6, 4, 0, 3, 2], [9, 4, 1, 7, 3, 4], [8, 6, 7, 7, 6, 0], [6, 6, 9, 3, 2, 9]]
expected = [[330, 199, 292, 335, 345, 178], [366, 283, 313, 430, 396, 223], [562, 411, 450, 518, 447, 314], [372, 300, 360, 388, 348, 238]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #486 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 7, 10, 1, 5, 2], [8, 10, 10, 0, 1, 4, 1]]
b = [[4, 1, 9, 2, 9, 6], [3, 6, 10, 1, 10, 7], [5, 10, 10, 10, 5, 5], [6, 3, 0, 0, 6, 8], [7, 2, 3, 2, 4, 1], [7, 7, 6, 9, 5, 2], [6, 8, 8, 4, 4, 0]]
expected = [[201, 208, 262, 147, 275, 224], [153, 206, 307, 168, 250, 177]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #487 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 4, 9, 7, 10, 5], [9, 7, 9, 1, 4, 9, 10], [1, 3, 5, 5, 4, 7, 4], [2, 10, 6, 9, 3, 4, 5], [8, 1, 0, 6, 0, 4, 10], [5, 9, 9, 7, 1, 8, 8]]
b = [[5, 2, 1, 6, 4, 10], [9, 5, 1, 7, 4, 2], [3, 3, 1, 6, 10, 9], [10, 0, 7, 6, 6, 7], [1, 2, 5, 1, 6, 5], [8, 10, 9, 7, 4, 4], [4, 10, 3, 10, 1, 1]]
expected = [[313, 226, 223, 307, 245, 291], [261, 278, 163, 330, 230, 258], [173, 150, 139, 180, 152, 148], [263, 168, 147, 253, 201, 193], [181, 161, 117, 219, 98, 150], [300, 244, 173, 326, 234, 243]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #488 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 8, 8, 5, 7, 3, 8, 2], [2, 1, 3, 6, 5, 3, 2, 4, 8], [5, 7, 9, 7, 10, 10, 6, 4, 1], [3, 2, 8, 1, 0, 4, 9, 1, 2], [3, 3, 5, 7, 0, 9, 6, 4, 0], [0, 1, 4, 9, 4, 0, 6, 0, 1], [7, 9, 6, 6, 3, 4, 0, 6, 10], [8, 0, 7, 7, 5, 8, 2, 5, 7]]
b = [[5, 3], [2, 10], [3, 6], [6, 0], [8, 9], [9, 8], [1, 2], [4, 6], [6, 9]]
expected = [[256, 303], [190, 203], [306, 354], [110, 151], [181, 177], [112, 91], [251, 332], [279, 272]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #489 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 3, 7, 2, 0], [6, 2, 1, 6, 2, 3], [9, 4, 8, 8, 5, 3]]
b = [[4, 8, 1, 5], [2, 2, 2, 1], [1, 8, 0, 5], [9, 4, 7, 10], [0, 6, 3, 4], [3, 2, 8, 7]]
expected = [[110, 144, 72, 142], [92, 102, 82, 126], [133, 212, 112, 210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #490 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [9]]
b = [[5, 10, 1, 3, 5]]
expected = [[20, 40, 4, 12, 20], [45, 90, 9, 27, 45]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #491 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 0, 5, 10, 0, 1, 9, 7], [1, 0, 8, 2, 8, 6, 9, 4, 0], [7, 6, 5, 6, 6, 9, 9, 4, 0], [10, 6, 10, 9, 10, 5, 1, 4, 2], [2, 7, 8, 0, 1, 7, 2, 4, 9], [3, 10, 6, 10, 3, 8, 5, 0, 2], [4, 0, 1, 5, 8, 1, 6, 3, 4]]
b = [[2, 3, 5, 10, 9], [8, 6, 5, 2, 4], [0, 8, 9, 6, 7], [4, 0, 6, 8, 7], [1, 5, 3, 1, 8], [1, 9, 4, 8, 7], [8, 2, 9, 5, 4], [1, 10, 5, 8, 2], [8, 8, 7, 0, 5]]
expected = [[153, 243, 213, 187, 237], [100, 219, 238, 207, 229], [177, 266, 301, 315, 319], [147, 299, 317, 331, 384], [160, 296, 249, 181, 220], [193, 230, 279, 258, 289], [120, 143, 184, 156, 199]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #492 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 0, 2, 7, 0, 4, 4, 8], [10, 3, 7, 1, 6, 3, 8, 5, 2], [3, 4, 2, 10, 3, 2, 1, 5, 1], [2, 1, 3, 0, 7, 9, 7, 2, 5]]
b = [[4, 9, 4, 4], [7, 9, 8, 0], [2, 8, 7, 5], [9, 3, 4, 6], [3, 9, 4, 8], [2, 1, 10, 4], [10, 5, 2, 2], [7, 9, 7, 1], [2, 2, 9, 10]]
expected = [[197, 240, 228, 164], [227, 322, 240, 182], [194, 190, 176, 131], [154, 186, 228, 181]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #493 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 5, 3, 3], [3, 9, 10, 10, 4], [6, 8, 8, 9, 2], [10, 0, 10, 4, 5], [6, 1, 4, 10, 4], [8, 6, 8, 1, 5], [3, 6, 7, 6, 9], [7, 5, 8, 6, 9]]
b = [[9, 0, 9], [0, 7, 10], [9, 4, 3], [9, 5, 2], [3, 3, 4]]
expected = [[126, 100, 158], [219, 165, 183], [213, 139, 184], [231, 75, 148], [192, 85, 112], [168, 94, 178], [171, 127, 156], [216, 124, 185]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #494 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 7, 2, 10, 2, 4, 5, 3], [8, 1, 10, 6, 3, 10, 6, 5, 2]]
b = [[7, 7, 7, 9, 0], [10, 9, 9, 6, 4], [10, 8, 5, 7, 3], [9, 7, 7, 6, 4], [3, 8, 0, 9, 0], [8, 10, 1, 5, 6], [2, 0, 1, 1, 3], [2, 10, 10, 0, 2], [0, 3, 6, 5, 1]]
expected = [[208, 285, 179, 252, 66], [331, 367, 235, 277, 148]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #495 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 9, 9], [3, 7, 2, 5], [5, 10, 8, 4], [5, 2, 10, 3], [2, 0, 6, 9]]
b = [[6, 7, 8, 6, 0, 3, 9, 2, 9, 4], [5, 6, 10, 1, 7, 6, 4, 5, 6, 4], [6, 7, 10, 9, 1, 10, 4, 1, 5, 7], [4, 9, 7, 1, 1, 9, 10, 10, 3, 3]]
expected = [[188, 260, 317, 148, 88, 255, 238, 165, 204, 162], [85, 122, 149, 48, 56, 116, 113, 93, 94, 69], [144, 187, 248, 116, 82, 191, 157, 108, 157, 128], [112, 144, 181, 125, 27, 154, 123, 60, 116, 107], [84, 137, 139, 75, 15, 147, 132, 100, 75, 77]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #496 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 9, 3, 4, 9, 7, 8, 10, 2], [5, 4, 10, 9, 1, 6, 5, 2, 5, 9], [10, 0, 3, 9, 3, 6, 0, 5, 5, 0], [10, 9, 6, 9, 6, 7, 8, 9, 0, 9], [0, 3, 2, 4, 1, 9, 3, 9, 5, 10], [1, 8, 8, 10, 2, 1, 3, 9, 8, 3], [7, 6, 2, 10, 9, 6, 1, 0, 6, 10], [9, 1, 6, 9, 4, 10, 7, 0, 2, 8], [7, 3, 0, 4, 4, 4, 10, 1, 8, 6]]
b = [[4, 2, 6, 3, 6, 0, 6, 2, 2], [7, 0, 1, 8, 1, 7, 0, 9, 0], [3, 1, 0, 1, 8, 1, 8, 0, 6], [10, 5, 8, 8, 3, 4, 5, 0, 9], [4, 7, 5, 9, 3, 5, 4, 8, 5], [0, 9, 9, 7, 8, 0, 9, 5, 6], [10, 6, 9, 8, 0, 1, 7, 4, 3], [2, 0, 6, 10, 9, 10, 1, 1, 10], [0, 2, 5, 7, 0, 6, 1, 6, 10], [7, 9, 3, 2, 4, 7, 6, 7, 8]]
expected = [[250, 227, 341, 419, 294, 251, 305, 264, 386], [289, 247, 274, 293, 246, 197, 309, 199, 349], [161, 153, 256, 259, 213, 134, 205, 109, 270], [396, 305, 387, 455, 335, 296, 359, 288, 395], [189, 228, 257, 299, 227, 237, 216, 201, 336], [261, 144, 243, 356, 215, 276, 193, 185, 359], [292, 291, 296, 344, 209, 236, 271, 280, 340], [293, 305, 334, 305, 254, 144, 352, 205, 320], [249, 228, 287, 299, 134, 167, 229, 224, 262]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #497 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [7], [9], [2], [1], [6], [10], [8], [4]]
b = [[6]]
expected = [[42], [42], [54], [12], [6], [36], [60], [48], [24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #498 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 4, 10, 10, 0, 6, 1, 5]]
b = [[3, 8, 2], [9, 9, 3], [10, 7, 9], [0, 0, 10], [1, 3, 3], [1, 2, 8], [2, 2, 8], [7, 9, 1], [9, 5, 9]]
expected = [[201, 231, 297]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #499 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 10], [6, 4, 1], [9, 1, 10]]
b = [[8, 6], [3, 6], [6, 10]]
expected = [[162, 214], [66, 70], [135, 160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #500 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 1], [3, 4, 10], [7, 4, 6], [6, 3, 5], [2, 2, 6], [10, 10, 5], [9, 0, 3]]
b = [[2, 3, 0, 2, 1, 5], [10, 7, 0, 3, 9, 3], [5, 2, 0, 0, 8, 1]]
expected = [[113, 92, 0, 45, 98, 73], [96, 57, 0, 18, 119, 37], [84, 61, 0, 26, 91, 53], [67, 49, 0, 21, 73, 44], [54, 32, 0, 10, 68, 22], [145, 110, 0, 50, 140, 85], [33, 33, 0, 18, 33, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #501 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 5, 2, 7], [5, 4, 7, 2, 4], [9, 7, 6, 0, 5], [6, 8, 0, 2, 8], [8, 9, 8, 1, 9], [10, 8, 6, 6, 9], [4, 3, 10, 7, 5], [2, 4, 5, 8, 7]]
b = [[8, 0, 9, 9, 3], [0, 3, 5, 2, 10], [4, 6, 0, 7, 2], [1, 2, 6, 0, 5], [7, 9, 4, 2, 10]]
expected = [[135, 115, 142, 133, 174], [98, 94, 93, 110, 119], [131, 102, 136, 147, 159], [106, 100, 138, 86, 188], [160, 158, 159, 164, 225], [173, 153, 202, 166, 242], [114, 128, 113, 122, 147], [93, 121, 114, 75, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #502 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 5, 8, 8, 3, 0], [4, 1, 9, 10, 7, 2, 6], [3, 3, 6, 5, 7, 3, 1], [10, 9, 4, 2, 2, 10, 10], [6, 7, 1, 5, 4, 10, 1], [1, 4, 10, 2, 2, 0, 1], [6, 3, 3, 4, 3, 3, 7], [4, 0, 8, 9, 5, 7, 0]]
b = [[1, 10, 6, 5, 7, 3, 2], [4, 7, 4, 4, 2, 1, 1], [10, 5, 6, 3, 1, 5, 5], [1, 5, 7, 4, 7, 10, 6], [10, 2, 8, 2, 2, 5, 6], [7, 5, 7, 4, 7, 3, 7], [5, 4, 0, 1, 4, 1, 9]]
expected = [[185, 224, 247, 141, 176, 188, 166], [222, 190, 222, 119, 161, 205, 224], [176, 139, 178, 92, 107, 137, 141], [228, 287, 220, 160, 220, 129, 233], [164, 201, 207, 130, 174, 131, 157], [144, 106, 112, 64, 47, 88, 89], [138, 165, 139, 92, 134, 107, 156], [192, 170, 224, 118, 158, 188, 181]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #503 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 5, 10, 5, 5, 7, 2, 8, 0], [9, 9, 0, 8, 9, 8, 9, 7, 3, 9], [8, 8, 0, 8, 1, 5, 7, 7, 3, 7], [3, 8, 0, 10, 3, 1, 1, 4, 2, 0], [7, 2, 10, 10, 3, 7, 5, 7, 5, 8], [10, 6, 7, 5, 7, 2, 2, 5, 4, 2], [0, 1, 0, 10, 2, 9, 8, 9, 10, 2], [9, 10, 5, 3, 9, 9, 2, 8, 1, 0], [9, 8, 0, 10, 4, 9, 3, 8, 10, 3]]
b = [[0, 2], [5, 5], [1, 3], [6, 10], [5, 10], [10, 1], [2, 4], [8, 8], [1, 1], [4, 1]]
expected = [[193, 243], [331, 345], [244, 245], [161, 215], [268, 280], [178, 247], [271, 250], [277, 285], [302, 296]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #504 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1], [5, 6]]
b = [[0, 7, 0, 1, 2, 1, 5, 1], [3, 3, 0, 0, 7, 6, 7, 1]]
expected = [[3, 52, 0, 7, 21, 13, 42, 8], [18, 53, 0, 5, 52, 41, 67, 11]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #505 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 1, 9, 9], [7, 4, 1, 6, 8], [2, 6, 7, 8, 5], [2, 5, 5, 4, 8], [0, 5, 7, 4, 4], [2, 9, 2, 3, 0], [6, 3, 1, 0, 7], [3, 7, 3, 4, 2], [0, 0, 1, 0, 8], [10, 4, 4, 9, 7]]
b = [[1, 4, 0, 1, 2, 3, 6, 4, 9], [1, 10, 4, 8, 3, 3, 4, 2, 8], [4, 7, 1, 5, 6, 10, 2, 7, 4], [4, 2, 1, 5, 9, 2, 10, 8, 0], [0, 3, 8, 10, 2, 10, 4, 7, 2]]
expected = [[45, 72, 82, 145, 115, 133, 158, 162, 67], [39, 111, 87, 154, 102, 135, 152, 147, 115], [68, 148, 79, 175, 146, 160, 150, 168, 104], [43, 125, 93, 167, 101, 159, 114, 141, 94], [49, 119, 63, 135, 101, 133, 90, 119, 76], [31, 118, 41, 99, 70, 59, 82, 64, 98], [13, 82, 69, 105, 41, 107, 78, 86, 96], [38, 117, 51, 114, 85, 88, 100, 93, 99], [4, 31, 65, 85, 22, 90, 34, 63, 20], [66, 147, 85, 177, 151, 170, 202, 197, 152]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #506 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10], [6]]
b = [[2]]
expected = [[20], [12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #507 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [3], [0], [0], [6]]
b = [[4]]
expected = [[24], [12], [0], [0], [24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #508 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3], [2, 4], [5, 2], [1, 6], [4, 4], [8, 5], [0, 9]]
b = [[4, 2, 3, 1, 0, 3, 7], [10, 0, 10, 5, 2, 5, 9]]
expected = [[42, 6, 39, 18, 6, 24, 48], [48, 4, 46, 22, 8, 26, 50], [40, 10, 35, 15, 4, 25, 53], [64, 2, 63, 31, 12, 33, 61], [56, 8, 52, 24, 8, 32, 64], [82, 16, 74, 33, 10, 49, 101], [90, 0, 90, 45, 18, 45, 81]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #509 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 4, 9, 1, 0, 5, 1, 6, 10], [4, 4, 3, 0, 6, 1, 9, 8, 2, 5], [4, 5, 3, 0, 6, 0, 8, 1, 3, 3]]
b = [[4, 9, 4, 5, 3, 2], [6, 4, 3, 10, 6, 9], [3, 5, 2, 8, 7, 0], [7, 3, 1, 6, 9, 5], [4, 9, 3, 1, 4, 0], [1, 2, 10, 0, 4, 9], [1, 0, 7, 0, 1, 8], [4, 6, 10, 9, 4, 5], [0, 10, 9, 4, 1, 1], [5, 2, 5, 7, 0, 3]]
expected = [[180, 189, 196, 255, 167, 177], [140, 201, 248, 205, 128, 182], [106, 167, 163, 142, 102, 134]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #510 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4], [9, 4], [0, 9], [3, 4], [4, 5], [2, 9], [8, 8], [6, 2]]
b = [[9, 2, 8, 2, 5, 7, 4, 3, 0], [5, 5, 5, 4, 4, 6, 2, 2, 6]]
expected = [[110, 40, 100, 36, 66, 94, 48, 38, 24], [101, 38, 92, 34, 61, 87, 44, 35, 24], [45, 45, 45, 36, 36, 54, 18, 18, 54], [47, 26, 44, 22, 31, 45, 20, 17, 24], [61, 33, 57, 28, 40, 58, 26, 22, 30], [63, 49, 61, 40, 46, 68, 26, 24, 54], [112, 56, 104, 48, 72, 104, 48, 40, 48], [64, 22, 58, 20, 38, 54, 28, 22, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #511 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [0]]
b = [[3, 9, 0, 10, 3, 9, 0, 9, 9, 3]]
expected = [[21, 63, 0, 70, 21, 63, 0, 63, 63, 21], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #512 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 0, 6, 2, 10, 7, 9, 2], [7, 10, 5, 3, 1, 0, 7, 9, 6], [0, 0, 1, 8, 4, 4, 6, 4, 3], [1, 3, 5, 3, 7, 3, 0, 0, 6], [4, 1, 5, 2, 4, 2, 1, 2, 3], [2, 7, 6, 4, 2, 6, 5, 4, 9], [7, 7, 10, 4, 10, 0, 10, 5, 0]]
b = [[0], [8], [3], [6], [7], [8], [5], [5], [9]]
expected = [[268], [254], [188], [184], [121], [286], [255]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #513 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 3, 10, 10, 3]]
b = [[1, 3, 3, 4, 2, 6, 6], [1, 10, 6, 9, 1, 8, 3], [3, 4, 2, 10, 4, 10, 5], [5, 5, 2, 0, 2, 0, 5], [3, 2, 6, 8, 9, 1, 2], [6, 8, 7, 5, 2, 9, 4]]
expected = [[112, 121, 122, 145, 138, 97, 127]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #514 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 6, 5, 0, 1, 9, 2, 9], [6, 2, 1, 3, 4, 9, 1, 2, 6], [8, 3, 6, 4, 8, 8, 2, 4, 10], [5, 4, 8, 5, 10, 9, 7, 8, 1], [1, 2, 2, 3, 8, 9, 8, 2, 7], [4, 6, 3, 1, 6, 4, 8, 1, 5], [5, 1, 7, 0, 6, 3, 5, 5, 6], [1, 5, 3, 0, 0, 6, 7, 7, 3], [2, 3, 0, 5, 9, 4, 2, 10, 10], [8, 8, 9, 7, 10, 6, 4, 8, 6]]
b = [[9], [4], [6], [8], [9], [3], [0], [5], [6]]
expected = [[238], [201], [328], [312], [204], [187], [215], [118], [273], [398]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #515 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 1, 0, 1, 3, 4], [8, 1, 2, 7, 1, 1, 2], [5, 8, 10, 8, 10, 9, 9], [9, 6, 2, 1, 2, 5, 5]]
b = [[4, 3, 6, 6, 8, 6, 0], [3, 2, 5, 3, 3, 9, 0], [8, 6, 9, 4, 8, 2, 2], [0, 6, 0, 4, 9, 5, 9], [0, 0, 10, 8, 7, 6, 8], [2, 7, 0, 1, 8, 6, 2], [10, 2, 0, 6, 6, 9, 2]]
expected = [[74, 50, 49, 69, 103, 92, 24], [73, 91, 81, 108, 173, 126, 81], [232, 220, 260, 269, 412, 357, 208], [130, 102, 122, 135, 199, 204, 49]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #516 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 8, 3, 3, 7, 10, 7, 4], [3, 4, 5, 9, 10, 8, 4, 5, 0], [4, 7, 10, 0, 9, 5, 3, 6, 5], [9, 6, 1, 2, 2, 8, 0, 1, 5], [4, 1, 5, 4, 4, 9, 10, 4, 3], [7, 1, 4, 3, 3, 10, 10, 7, 7]]
b = [[8, 3, 3, 2, 0, 3], [1, 7, 9, 10, 8, 6], [1, 2, 0, 6, 8, 3], [10, 10, 1, 1, 6, 3], [6, 6, 3, 0, 5, 1], [10, 7, 7, 10, 8, 6], [2, 2, 8, 1, 0, 7], [7, 3, 6, 9, 8, 9], [7, 0, 1, 0, 2, 9]]
expected = [[247, 216, 265, 278, 281, 301], [306, 276, 202, 214, 280, 206], [236, 194, 202, 245, 279, 243], [233, 162, 156, 175, 160, 176], [261, 188, 207, 188, 202, 236], [327, 195, 241, 224, 223, 307]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #517 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 0, 2, 7, 8, 4, 10], [6, 6, 7, 1, 6, 0, 9, 7], [8, 3, 7, 7, 0, 5, 9, 0], [4, 7, 1, 6, 1, 1, 6, 2], [4, 4, 7, 1, 1, 1, 10, 4], [7, 3, 3, 10, 0, 3, 4, 10], [6, 4, 7, 4, 5, 0, 9, 7]]
b = [[9, 2, 2, 3], [0, 5, 6, 9], [4, 10, 1, 7], [5, 3, 9, 4], [4, 10, 4, 2], [9, 4, 9, 8], [4, 0, 0, 3], [2, 3, 7, 9]]
expected = [[146, 143, 194, 197], [161, 196, 137, 227], [216, 142, 149, 195], [111, 91, 132, 152], [130, 127, 89, 177], [188, 131, 222, 235], [172, 185, 148, 219]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #518 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 5, 4, 6], [8, 0, 9, 2, 1], [7, 3, 7, 3, 6], [5, 5, 1, 2, 9], [10, 4, 2, 0, 6], [4, 1, 4, 0, 5], [0, 2, 5, 7, 3]]
b = [[1, 10, 2], [1, 3, 7], [7, 6, 4], [0, 0, 6], [5, 10, 5]]
expected = [[74, 173, 97], [76, 144, 69], [89, 181, 111], [62, 161, 106], [58, 184, 86], [58, 117, 56], [52, 66, 91]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #519 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 3, 4, 1, 9, 8, 5, 1, 4], [5, 0, 2, 9, 5, 7, 3, 7, 6, 4], [3, 5, 6, 6, 6, 6, 7, 2, 5, 4], [5, 10, 0, 6, 4, 9, 6, 10, 6, 7], [2, 5, 10, 1, 1, 7, 4, 10, 6, 3]]
b = [[4], [4], [6], [3], [2], [10], [7], [4], [8], [8]]
expected = [[298], [268], [287], [362], [303]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #520 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 2, 2, 6, 6, 2], [6, 4, 8, 5, 1, 0, 1], [5, 3, 7, 5, 0, 2, 4], [10, 2, 10, 0, 4, 5, 9], [1, 2, 7, 4, 2, 7, 6], [2, 4, 3, 4, 0, 3, 7], [5, 8, 10, 2, 2, 7, 10], [1, 2, 10, 8, 7, 4, 1]]
b = [[1, 2, 9, 6, 6, 5, 5, 9, 2], [4, 7, 9, 4, 1, 1, 6, 1, 6], [3, 6, 9, 3, 1, 2, 5, 4, 1], [10, 8, 10, 6, 5, 1, 8, 5, 9], [1, 8, 9, 5, 2, 10, 8, 9, 8], [6, 2, 8, 6, 10, 7, 8, 0, 5], [0, 2, 0, 7, 4, 4, 5, 6, 5]]
expected = [[114, 174, 284, 174, 138, 156, 222, 148, 180], [97, 138, 221, 118, 79, 69, 147, 130, 102], [100, 125, 201, 133, 101, 77, 154, 125, 110], [82, 154, 274, 211, 166, 183, 229, 222, 144], [114, 132, 204, 153, 133, 118, 186, 113, 138], [85, 102, 145, 128, 97, 73, 140, 96, 117], [131, 192, 301, 226, 172, 164, 261, 181, 187], [150, 206, 292, 158, 116, 137, 224, 160, 177]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #521 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 0, 1, 1], [2, 8, 0, 6, 5], [10, 4, 9, 8, 6], [5, 9, 10, 4, 9], [5, 6, 7, 10, 5], [2, 0, 2, 5, 2]]
b = [[9, 8, 3], [9, 4, 0], [1, 4, 5], [4, 7, 5], [3, 5, 10]]
expected = [[97, 92, 45], [129, 115, 86], [185, 218, 175], [179, 189, 175], [161, 187, 150], [46, 69, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #522 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 5], [8, 3, 9]]
b = [[0, 3, 7, 7, 2, 6, 5, 2, 10, 1], [2, 8, 6, 3, 7, 7, 0, 9, 1, 10], [4, 0, 10, 1, 7, 7, 3, 4, 5, 4]]
expected = [[36, 94, 168, 99, 111, 151, 65, 112, 133, 110], [42, 48, 164, 74, 100, 132, 67, 79, 128, 74]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #523 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 2, 4], [10, 4, 0, 5], [3, 6, 5, 7], [9, 5, 6, 8], [4, 1, 2, 7]]
b = [[1, 1, 0, 7, 5, 10, 1, 1], [6, 8, 1, 2, 0, 9, 4, 1], [8, 9, 6, 0, 7, 3, 9, 3], [3, 3, 5, 7, 7, 8, 6, 8]]
expected = [[67, 81, 38, 61, 57, 122, 69, 47], [49, 57, 29, 113, 85, 176, 56, 54], [100, 117, 71, 82, 99, 155, 114, 80], [111, 127, 81, 129, 143, 217, 131, 96], [47, 51, 48, 79, 83, 111, 68, 67]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #524 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 8, 2, 8, 0], [8, 5, 0, 0, 10, 10]]
b = [[0, 6, 8, 7], [8, 9, 0, 4], [6, 7, 3, 4], [1, 2, 0, 7], [9, 8, 3, 9], [2, 4, 1, 1]]
expected = [[202, 268, 120, 221], [150, 213, 104, 176]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #525 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 6, 8, 1, 1, 3, 4, 1, 5], [10, 1, 2, 10, 9, 3, 3, 2, 2, 0], [6, 5, 4, 5, 5, 3, 10, 10, 1, 7], [6, 6, 9, 3, 7, 0, 0, 6, 3, 4], [3, 4, 6, 0, 2, 5, 10, 7, 10, 7], [0, 0, 7, 0, 8, 6, 0, 10, 2, 4]]
b = [[8, 10, 3, 4], [10, 2, 5, 2], [10, 2, 2, 8], [6, 0, 3, 9], [1, 2, 6, 3], [1, 6, 5, 10], [6, 4, 0, 1], [2, 0, 6, 5], [4, 5, 4, 3], [6, 1, 2, 2]]
expected = [[292, 100, 142, 203], [212, 164, 158, 224], [302, 158, 189, 233], [271, 123, 173, 203], [287, 181, 174, 213], [136, 80, 168, 204]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #526 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 2, 2, 9], [3, 7, 5, 1, 1], [8, 7, 1, 2, 8], [7, 7, 6, 3, 0]]
b = [[3, 10, 3, 1, 4, 5, 9, 8], [10, 10, 0, 9, 5, 3, 6, 9], [1, 3, 4, 9, 5, 1, 1, 4], [1, 2, 10, 5, 6, 6, 9, 9], [6, 4, 10, 3, 9, 0, 3, 7]]
expected = [[91, 86, 121, 83, 122, 28, 74, 124], [91, 121, 49, 119, 87, 47, 86, 123], [145, 189, 128, 114, 156, 74, 157, 205], [100, 164, 75, 139, 111, 80, 138, 170]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #527 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 9, 10, 8, 3], [6, 3, 6, 8, 9, 1], [3, 7, 1, 9, 1, 7], [10, 10, 6, 9, 5, 2]]
b = [[4, 10, 9, 0], [5, 3, 8, 2], [4, 2, 8, 0], [5, 3, 8, 10], [10, 2, 3, 3], [3, 1, 2, 0]]
expected = [[233, 117, 280, 144], [196, 124, 219, 113], [127, 89, 180, 107], [215, 181, 309, 125]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #528 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 0, 0], [5, 0, 8, 10], [1, 8, 5, 9], [3, 5, 0, 8], [1, 3, 8, 5], [0, 10, 0, 6], [10, 2, 4, 5], [1, 9, 9, 0], [8, 0, 0, 10]]
b = [[9, 7, 10], [7, 6, 6], [10, 9, 6], [9, 3, 6]]
expected = [[69, 57, 66], [215, 137, 158], [196, 127, 142], [134, 75, 108], [155, 112, 106], [124, 78, 96], [189, 133, 166], [162, 142, 118], [162, 86, 140]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #529 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 10, 0, 8, 5, 1, 2], [9, 7, 10, 10, 8, 6, 1, 2], [10, 7, 1, 5, 8, 3, 0, 2], [1, 6, 5, 9, 3, 9, 0, 4], [0, 1, 1, 7, 1, 8, 3, 4], [1, 1, 4, 6, 0, 8, 3, 3], [9, 7, 9, 2, 9, 8, 5, 9]]
b = [[8, 5], [10, 3], [10, 2], [9, 6], [9, 4], [3, 7], [2, 7], [9, 0]]
expected = [[339, 144], [442, 227], [304, 156], [289, 162], [158, 128], [169, 129], [446, 223]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #530 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 10, 1, 0, 0], [1, 3, 1, 7, 2, 7], [3, 0, 9, 7, 3, 1], [4, 1, 2, 1, 1, 5], [0, 9, 8, 8, 0, 0], [5, 10, 3, 4, 6, 2], [3, 10, 4, 3, 1, 5], [4, 2, 4, 0, 7, 7], [10, 7, 4, 10, 7, 5]]
b = [[1, 10, 3, 9, 1, 10, 7], [5, 8, 1, 10, 9, 2, 4], [10, 4, 8, 3, 4, 4, 6], [0, 2, 0, 9, 5, 7, 3], [6, 9, 1, 3, 6, 4, 3], [2, 0, 0, 10, 1, 7, 4]]
expected = [[130, 132, 100, 134, 95, 107, 118], [52, 70, 16, 181, 86, 126, 80], [113, 107, 84, 136, 93, 134, 109], [45, 67, 30, 114, 37, 96, 70], [125, 120, 73, 186, 153, 106, 108], [125, 204, 55, 228, 165, 148, 131], [109, 141, 52, 219, 135, 126, 117], [110, 135, 53, 159, 87, 137, 109], [137, 255, 76, 333, 186, 263, 193]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #531 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 8, 6, 4, 1, 6], [3, 5, 7, 4, 1, 10, 1], [10, 8, 6, 3, 10, 3, 10], [0, 2, 7, 0, 7, 6, 6]]
b = [[1, 7, 5], [2, 6, 8], [2, 1, 3], [5, 7, 6], [0, 1, 2], [1, 1, 0], [3, 6, 7]]
expected = [[79, 157, 172], [60, 103, 109], [86, 218, 240], [42, 68, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #532 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 9, 4, 2, 4, 0], [7, 1, 5, 5, 3, 10, 5], [4, 1, 9, 8, 8, 0, 8], [4, 4, 10, 5, 5, 6, 7], [8, 1, 4, 7, 10, 6, 4], [0, 9, 5, 5, 2, 0, 1], [1, 5, 0, 9, 5, 8, 3], [8, 0, 7, 10, 9, 9, 4], [2, 3, 1, 2, 0, 8, 2], [0, 4, 6, 0, 0, 6, 6]]
b = [[5, 7, 8, 2, 7, 6, 4, 7, 2, 7], [10, 3, 1, 3, 0, 7, 5, 0, 4, 0], [7, 0, 6, 9, 7, 8, 9, 2, 4, 8], [6, 9, 2, 8, 6, 10, 6, 9, 8, 5], [0, 6, 1, 8, 6, 5, 0, 4, 7, 1], [10, 4, 10, 10, 5, 6, 3, 8, 5, 0], [10, 0, 9, 4, 6, 4, 3, 2, 7, 7]]
expected = [[217, 102, 128, 197, 133, 214, 165, 108, 138, 108], [260, 155, 245, 246, 212, 234, 153, 206, 184, 152], [221, 151, 183, 252, 235, 255, 174, 166, 224, 204], [290, 139, 234, 278, 230, 271, 195, 175, 218, 187], [220, 206, 209, 267, 240, 259, 145, 223, 220, 161], [165, 84, 60, 132, 83, 167, 123, 65, 117, 74], [219, 165, 143, 221, 149, 216, 116, 178, 190, 78], [279, 236, 261, 337, 288, 319, 194, 276, 260, 199], [159, 73, 127, 126, 85, 117, 74, 102, 90, 46], [202, 36, 154, 150, 108, 136, 110, 72, 112, 90]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #533 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5], [3, 8], [3, 7], [10, 2], [0, 4]]
b = [[4, 9, 8], [9, 4, 0]]
expected = [[85, 110, 80], [84, 59, 24], [75, 55, 24], [58, 98, 80], [36, 16, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #534 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 8, 4, 6, 4, 3, 8], [4, 2, 10, 4, 3, 1, 10, 9], [0, 7, 2, 9, 0, 4, 8, 0]]
b = [[7, 8, 5, 2, 2, 2], [8, 5, 2, 9, 8, 0], [8, 0, 3, 8, 2, 5], [10, 8, 2, 5, 9, 1], [7, 5, 3, 2, 7, 0], [2, 6, 10, 10, 9, 1], [1, 6, 8, 7, 8, 7], [0, 4, 8, 10, 1, 9]]
expected = [[223, 199, 214, 276, 198, 153], [197, 191, 233, 302, 199, 214], [178, 179, 142, 220, 241, 79]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #535 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 4, 10, 10, 3, 6, 3, 6, 2], [9, 7, 6, 0, 10, 5, 0, 1, 5, 5], [5, 6, 3, 1, 4, 6, 7, 9, 6, 3], [6, 8, 1, 10, 5, 9, 4, 10, 9, 3], [8, 1, 1, 9, 1, 6, 0, 2, 2, 8]]
b = [[9, 3, 5, 0, 7, 9, 5], [5, 5, 6, 5, 7, 3, 6], [10, 4, 9, 5, 1, 8, 1], [9, 1, 2, 5, 5, 3, 8], [7, 3, 8, 6, 8, 2, 6], [8, 5, 3, 7, 3, 7, 3], [10, 10, 7, 7, 2, 10, 5], [0, 1, 6, 1, 4, 5, 2], [5, 1, 2, 7, 1, 2, 6], [9, 2, 3, 2, 7, 9, 9]]
expected = [[420, 190, 288, 267, 271, 286, 308], [356, 157, 267, 206, 257, 265, 245], [317, 191, 264, 222, 212, 294, 230], [413, 197, 289, 295, 294, 324, 337], [305, 95, 139, 135, 201, 240, 231]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #536 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 2, 0, 9, 3], [6, 5, 4, 6, 2, 10], [1, 5, 9, 8, 1, 2], [5, 5, 6, 7, 9, 2], [6, 2, 5, 6, 5, 5], [5, 3, 6, 2, 6, 2], [0, 10, 6, 1, 3, 4], [5, 4, 3, 4, 0, 3], [2, 1, 5, 10, 8, 6], [3, 5, 0, 7, 3, 5]]
b = [[2, 0, 10, 5, 3, 8, 3, 10], [9, 2, 5, 9, 8, 6, 2, 7], [1, 8, 4, 1, 3, 2, 5, 4], [7, 2, 0, 4, 3, 0, 8, 7], [10, 6, 10, 6, 9, 6, 5, 8], [2, 1, 4, 5, 7, 10, 6, 5]]
expected = [[166, 85, 210, 160, 177, 180, 106, 207], [143, 76, 161, 165, 176, 198, 166, 219], [126, 106, 89, 107, 117, 82, 139, 155], [204, 128, 197, 168, 189, 156, 168, 240], [137, 91, 160, 132, 147, 150, 150, 201], [121, 96, 157, 112, 131, 126, 109, 167], [141, 92, 120, 138, 156, 130, 97, 145], [83, 43, 94, 95, 89, 100, 88, 133], [180, 116, 149, 142, 173, 140, 189, 211], [140, 47, 105, 131, 132, 122, 120, 163]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #537 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 10, 9, 1, 2, 7, 4, 5, 10], [6, 3, 8, 8, 9, 10, 9, 4, 3, 1], [5, 5, 1, 5, 2, 10, 9, 7, 6, 8]]
b = [[3, 8], [9, 1], [6, 8], [3, 9], [10, 0], [0, 3], [2, 3], [6, 5], [4, 1], [4, 1]]
expected = [[240, 274], [265, 268], [217, 204]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #538 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [3]]
b = [[3]]
expected = [[0], [9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #539 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 10, 5, 8, 5, 9, 7]]
b = [[10], [4], [7], [5], [6], [3], [6], [6]]
expected = [[320]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #540 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 5, 6, 7, 9, 2, 9, 0, 9], [7, 0, 2, 6, 10, 1, 6, 8, 0, 4], [3, 9, 5, 9, 2, 4, 1, 2, 3, 0], [1, 4, 9, 0, 3, 6, 8, 8, 7, 0], [10, 2, 9, 4, 10, 0, 5, 6, 10, 2]]
b = [[4, 10, 8, 7], [6, 3, 1, 5], [4, 10, 5, 3], [2, 2, 1, 5], [7, 1, 8, 6], [0, 2, 2, 3], [0, 1, 9, 1], [1, 3, 4, 0], [10, 10, 10, 8], [6, 4, 5, 4]]
expected = [[182, 235, 269, 213], [150, 160, 260, 170], [150, 172, 138, 175], [163, 229, 267, 154], [284, 345, 390, 280]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #541 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 9, 1, 1, 3, 0, 9], [5, 4, 1, 3, 7, 8, 4, 3], [5, 10, 2, 5, 10, 2, 4, 7], [2, 2, 5, 1, 5, 7, 3, 6], [7, 3, 1, 6, 5, 4, 9, 2], [7, 7, 6, 3, 3, 10, 1, 8], [10, 7, 2, 10, 8, 8, 7, 6], [6, 0, 9, 5, 3, 10, 8, 9], [4, 5, 1, 3, 7, 1, 2, 5]]
b = [[9, 4, 5, 0, 7, 7], [0, 1, 6, 7, 10, 1], [4, 10, 2, 8, 7, 5], [8, 3, 5, 5, 3, 4], [8, 6, 6, 6, 5, 4], [4, 0, 7, 4, 9, 3], [4, 1, 0, 3, 1, 7], [5, 10, 1, 2, 9, 2]]
expected = [[136, 205, 98, 141, 240, 105], [192, 119, 167, 143, 229, 142], [232, 199, 195, 205, 299, 163], [156, 156, 122, 138, 217, 119], [217, 118, 145, 136, 192, 180], [219, 203, 200, 189, 348, 163], [332, 212, 256, 228, 357, 244], [271, 245, 170, 197, 314, 223], [157, 134, 121, 120, 185, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #542 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 5, 0, 4, 9, 8, 3], [1, 0, 9, 8, 7, 6, 2, 1], [10, 1, 1, 0, 3, 1, 3, 6], [10, 4, 2, 3, 2, 9, 3, 4], [10, 6, 3, 2, 4, 7, 2, 6], [4, 10, 3, 8, 9, 4, 3, 4], [5, 0, 1, 3, 7, 3, 2, 6]]
b = [[1, 7, 0, 10, 1, 1, 7], [5, 10, 2, 1, 0, 10, 2], [0, 6, 9, 4, 1, 10, 10], [9, 2, 0, 0, 2, 3, 1], [4, 7, 10, 2, 2, 2, 9], [8, 7, 2, 10, 2, 6, 4], [2, 1, 9, 4, 2, 7, 7], [0, 10, 7, 10, 9, 6, 2]]
expected = [[155, 291, 214, 249, 80, 282, 244], [153, 180, 188, 138, 65, 185, 208], [41, 177, 112, 193, 79, 99, 146], [143, 248, 119, 258, 82, 182, 184], [134, 291, 153, 264, 97, 206, 204], [200, 296, 200, 172, 91, 245, 212], [88, 179, 145, 166, 90, 106, 149]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #543 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 6, 3, 10, 4]]
b = [[2, 8], [1, 2], [8, 3], [7, 4], [10, 6], [7, 4]]
expected = [[211, 162]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #544 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 7], [0, 7, 8], [9, 2, 5], [7, 2, 4], [9, 2, 2], [7, 4, 8], [1, 7, 1], [3, 7, 3]]
b = [[3], [8], [6]]
expected = [[101], [104], [73], [61], [55], [101], [65], [83]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #545 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 1, 2, 8, 10, 1, 10, 4], [1, 0, 3, 1, 9, 4, 5, 0, 2], [4, 2, 4, 9, 10, 5, 0, 2, 3], [9, 6, 9, 3, 1, 1, 7, 5, 1], [1, 8, 5, 6, 5, 3, 10, 1, 6]]
b = [[0, 7, 2, 5, 8, 6, 8, 1], [5, 0, 2, 8, 7, 8, 8, 6], [10, 7, 7, 10, 0, 2, 1, 5], [7, 2, 4, 2, 7, 1, 5, 4], [8, 8, 5, 7, 8, 1, 3, 2], [8, 8, 9, 2, 7, 4, 0, 2], [6, 7, 9, 4, 6, 4, 9, 2], [3, 3, 1, 4, 2, 1, 4, 4], [4, 2, 0, 2, 9, 8, 10, 1]]
expected = [[235, 228, 178, 186, 263, 146, 180, 117], [179, 173, 153, 132, 163, 74, 108, 58], [251, 206, 173, 188, 255, 113, 165, 113], [218, 214, 187, 248, 211, 169, 240, 141], [283, 203, 220, 228, 283, 192, 276, 144]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #546 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 6, 9, 3, 0, 5], [10, 5, 6, 8, 9, 6, 9], [5, 7, 2, 4, 10, 2, 3], [7, 8, 8, 6, 2, 4, 7], [4, 1, 4, 8, 8, 6, 4], [0, 5, 6, 5, 6, 4, 7], [3, 2, 9, 6, 7, 1, 3]]
b = [[4, 1, 9, 2, 4, 9, 4, 7, 3], [10, 8, 3, 4, 6, 3, 9, 0, 3], [8, 7, 10, 5, 7, 6, 2, 0, 7], [0, 0, 0, 1, 0, 4, 1, 4, 7], [9, 0, 1, 6, 2, 0, 7, 1, 1], [4, 1, 10, 0, 7, 1, 9, 4, 8], [4, 4, 6, 7, 6, 7, 4, 0, 7]]
expected = [[163, 112, 129, 120, 122, 143, 124, 53, 167], [279, 134, 288, 195, 226, 242, 258, 135, 263], [216, 89, 134, 133, 128, 117, 191, 69, 125], [234, 159, 251, 153, 206, 212, 200, 91, 226], [170, 62, 171, 116, 132, 129, 167, 92, 183], [196, 114, 163, 140, 154, 124, 168, 42, 179], [183, 95, 158, 128, 126, 133, 124, 56, 156]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #547 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4], [7, 6], [6, 9], [8, 2], [2, 5], [0, 8]]
b = [[4, 0, 4, 10, 6, 7], [8, 0, 2, 4, 7, 7]]
expected = [[72, 0, 48, 116, 88, 98], [76, 0, 40, 94, 84, 91], [96, 0, 42, 96, 99, 105], [48, 0, 36, 88, 62, 70], [48, 0, 18, 40, 47, 49], [64, 0, 16, 32, 56, 56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #548 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 1, 1, 10, 3, 8, 4, 1]]
b = [[4, 0, 6, 8, 3, 4, 8, 0, 4, 1], [3, 0, 7, 0, 2, 8, 3, 8, 3, 9], [1, 2, 6, 7, 9, 10, 0, 7, 8, 3], [1, 8, 3, 4, 10, 9, 8, 1, 0, 8], [3, 2, 9, 4, 9, 7, 1, 0, 7, 2], [9, 10, 6, 3, 2, 8, 2, 8, 9, 10], [0, 6, 8, 1, 6, 2, 3, 5, 4, 4], [9, 7, 1, 5, 9, 10, 2, 7, 6, 5], [10, 3, 8, 1, 2, 10, 4, 9, 5, 9]]
expected = [[162, 139, 296, 161, 242, 271, 153, 165, 223, 194]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #549 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 0, 7], [8, 1, 4, 5]]
b = [[7, 0, 8, 7, 4, 6, 6, 7], [5, 5, 4, 0, 9, 4, 1, 9], [2, 6, 1, 3, 7, 6, 5, 7], [9, 2, 5, 9, 9, 0, 7, 3]]
expected = [[94, 24, 67, 84, 93, 26, 69, 60], [114, 39, 97, 113, 114, 76, 104, 108]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #550 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 0, 10, 10, 2, 6, 6], [1, 8, 9, 0, 7, 6, 0, 1], [3, 6, 5, 10, 4, 5, 6, 4], [10, 6, 6, 6, 7, 8, 10, 8], [8, 2, 2, 10, 0, 8, 6, 0], [4, 6, 1, 3, 9, 10, 10, 5], [6, 4, 6, 9, 8, 0, 1, 7]]
b = [[9, 3], [4, 6], [6, 3], [5, 7], [5, 2], [4, 3], [5, 5], [3, 7]]
expected = [[223, 237], [157, 117], [213, 211], [321, 270], [204, 166], [231, 205], [217, 193]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #551 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [0], [10]]
b = [[9, 9, 2, 9, 3, 8, 5]]
expected = [[45, 45, 10, 45, 15, 40, 25], [0, 0, 0, 0, 0, 0, 0], [90, 90, 20, 90, 30, 80, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #552 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 6, 1, 1, 6, 6, 4, 5, 1], [8, 4, 3, 1, 8, 1, 6, 6, 10, 4]]
b = [[9], [1], [2], [6], [10], [2], [1], [9], [5], [9]]
expected = [[171], [316]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #553 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 4], [6, 9, 8], [4, 8, 2], [10, 6, 7], [1, 3, 1], [1, 9, 3]]
b = [[7, 7, 5], [8, 6, 7], [0, 6, 1]]
expected = [[40, 54, 39], [114, 144, 101], [92, 88, 78], [118, 148, 99], [31, 31, 27], [79, 79, 71]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #554 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 0, 1], [9, 6, 4, 5], [0, 3, 9, 8], [5, 6, 1, 6], [0, 3, 1, 3], [6, 4, 4, 9], [9, 9, 2, 0], [4, 2, 7, 8], [7, 2, 8, 6], [6, 1, 4, 1]]
b = [[5, 1, 0, 10, 2, 6, 3], [7, 0, 2, 2, 6, 2, 8], [8, 7, 4, 8, 6, 1, 9], [10, 7, 8, 7, 1, 4, 3]]
expected = [[95, 10, 28, 57, 67, 42, 92], [169, 72, 68, 169, 83, 90, 126], [173, 119, 106, 134, 80, 47, 129], [135, 54, 64, 112, 58, 67, 90], [59, 28, 34, 35, 27, 19, 42], [180, 97, 96, 163, 69, 84, 113], [124, 23, 26, 124, 84, 74, 117], [170, 109, 96, 156, 70, 67, 115], [173, 105, 84, 180, 80, 78, 127], [79, 41, 26, 101, 43, 46, 65]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #555 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 6], [5, 1, 3], [8, 1, 0], [0, 8, 7], [8, 0, 8]]
b = [[1, 4, 8, 8, 9, 4], [4, 9, 8, 7, 3, 6], [6, 7, 1, 3, 0, 4]]
expected = [[42, 59, 30, 41, 21, 38], [27, 50, 51, 56, 48, 38], [12, 41, 72, 71, 75, 38], [74, 121, 71, 77, 24, 76], [56, 88, 72, 88, 72, 64]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #556 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 8, 3], [1, 8, 10, 8], [4, 4, 7, 2], [5, 7, 2, 7]]
b = [[8, 4, 5], [2, 8, 7], [1, 10, 6], [0, 0, 9]]
expected = [[48, 156, 146], [34, 168, 193], [47, 118, 108], [56, 96, 149]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #557 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 9], [4, 9, 5], [2, 2, 3], [2, 6, 4], [7, 1, 7], [2, 7, 9]]
b = [[3, 10, 9, 7, 1, 1, 5, 2, 7], [3, 2, 10, 7, 8, 5, 3, 5, 3], [4, 3, 5, 1, 7, 1, 1, 2, 1]]
expected = [[87, 117, 208, 128, 150, 66, 74, 82, 88], [59, 73, 151, 96, 111, 54, 52, 63, 60], [24, 33, 53, 31, 39, 15, 19, 20, 23], [40, 44, 98, 60, 78, 36, 32, 42, 36], [52, 93, 108, 63, 64, 19, 45, 33, 59], [63, 61, 133, 72, 121, 46, 40, 57, 44]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #558 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 9, 0, 6, 10, 8]]
b = [[0, 6, 4], [0, 0, 8], [9, 9, 8], [5, 2, 4], [10, 2, 2], [9, 7, 2], [0, 5, 4]]
expected = [[231, 203, 152]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #559 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2], [2, 5], [3, 1], [10, 5]]
b = [[0], [6]]
expected = [[12], [30], [6], [30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #560 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 5, 8, 10, 3, 5, 5], [9, 7, 2, 9, 2, 1, 10, 3], [7, 4, 1, 5, 0, 1, 4, 0], [2, 4, 6, 10, 10, 10, 10, 4], [4, 1, 4, 1, 5, 4, 0, 3], [8, 7, 1, 3, 3, 9, 7, 8], [9, 9, 0, 4, 9, 5, 9, 4], [1, 2, 4, 7, 6, 6, 5, 4], [1, 0, 1, 0, 8, 2, 2, 6]]
b = [[5, 2], [0, 4], [9, 5], [5, 9], [4, 0], [1, 3], [3, 10], [3, 4]]
expected = [[168, 216], [156, 252], [82, 123], [206, 286], [94, 65], [130, 205], [145, 211], [133, 177], [72, 57]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #561 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 3, 7, 2], [2, 3, 7, 7, 6], [10, 2, 7, 0, 3], [6, 9, 3, 7, 6], [0, 0, 7, 4, 8], [4, 7, 3, 8, 2], [5, 4, 0, 2, 7], [1, 1, 4, 5, 9], [4, 1, 1, 6, 9], [1, 2, 0, 1, 1]]
b = [[4, 6, 3], [2, 6, 10], [10, 5, 2], [8, 8, 2], [1, 6, 2]]
expected = [[108, 113, 39], [146, 157, 76], [117, 125, 70], [134, 197, 140], [110, 115, 38], [126, 157, 108], [51, 112, 73], [95, 126, 49], [85, 137, 54], [17, 32, 27]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #562 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 9], [4, 1, 4]]
b = [[1, 10], [1, 10], [8, 1]]
expected = [[74, 29], [37, 54]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #563 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 7, 1], [8, 5, 1, 6], [10, 10, 4, 0], [6, 0, 9, 9], [4, 5, 9, 5], [3, 7, 4, 6], [5, 9, 6, 6], [6, 4, 9, 5], [4, 9, 4, 3], [4, 0, 0, 2]]
b = [[1, 7, 1, 0], [7, 4, 7, 5], [7, 9, 7, 1], [9, 9, 3, 5]]
expected = [[89, 109, 83, 32], [104, 139, 68, 56], [108, 146, 108, 54], [150, 204, 96, 54], [147, 174, 117, 59], [134, 139, 98, 69], [164, 179, 128, 81], [142, 184, 112, 54], [122, 127, 104, 64], [22, 46, 10, 10]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #564 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 9, 0, 0], [10, 3, 0, 7, 0], [5, 9, 5, 8, 8], [7, 2, 6, 5, 7], [9, 7, 4, 5, 5], [4, 7, 4, 8, 7]]
b = [[5, 4, 7, 5, 6, 8, 0, 2, 9, 0], [10, 0, 4, 3, 0, 0, 1, 1, 3, 9], [10, 0, 8, 1, 7, 5, 2, 0, 8, 1], [1, 1, 10, 0, 3, 8, 10, 5, 4, 0], [4, 3, 2, 6, 4, 8, 2, 7, 8, 6]]
expected = [[240, 40, 182, 89, 123, 125, 28, 30, 192, 99], [87, 47, 152, 59, 81, 136, 73, 58, 127, 27], [205, 52, 207, 105, 121, 193, 115, 115, 208, 134], [148, 54, 169, 89, 127, 182, 78, 90, 193, 66], [180, 56, 183, 100, 117, 172, 75, 85, 194, 97], [166, 45, 182, 87, 104, 172, 109, 104, 177, 109]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #565 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 0, 6, 0, 2, 5], [7, 5, 1, 2, 2, 4, 0], [8, 2, 0, 1, 7, 3, 4], [1, 0, 0, 8, 5, 7, 8], [3, 4, 4, 6, 8, 3, 0], [8, 1, 0, 5, 8, 4, 6], [4, 10, 7, 8, 4, 7, 6], [5, 5, 2, 2, 10, 0, 1], [2, 2, 9, 7, 10, 3, 1]]
b = [[10, 7, 1, 1, 3, 1, 8, 2, 10, 1], [1, 0, 9, 4, 0, 6, 0, 1, 9, 7], [0, 1, 4, 3, 9, 1, 5, 4, 6, 7], [2, 3, 5, 1, 5, 7, 4, 7, 9, 1], [5, 5, 7, 8, 1, 3, 6, 2, 6, 8], [8, 4, 3, 10, 4, 10, 9, 4, 8, 0], [10, 5, 3, 4, 7, 8, 8, 6, 7, 7]]
expected = [[87, 51, 132, 82, 73, 156, 82, 89, 186, 104], [121, 82, 92, 88, 58, 98, 117, 57, 183, 67], [183, 126, 101, 119, 76, 110, 169, 75, 201, 107], [187, 124, 121, 151, 132, 206, 197, 144, 224, 105], [110, 95, 150, 131, 95, 127, 143, 96, 216, 129], [223, 157, 128, 145, 115, 161, 216, 120, 256, 126], [202, 137, 229, 199, 189, 257, 234, 174, 366, 205], [119, 98, 141, 117, 60, 89, 126, 63, 192, 143], [120, 111, 173, 158, 151, 140, 184, 129, 246, 173]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #566 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 3], [1, 9, 0], [6, 10, 7], [10, 9, 3], [3, 7, 6], [10, 8, 2]]
b = [[3, 10, 8, 3, 4, 5], [10, 4, 2, 1, 7, 7], [0, 2, 4, 10, 0, 2]]
expected = [[66, 50, 40, 42, 50, 58], [93, 46, 26, 12, 67, 68], [118, 114, 96, 98, 94, 114], [120, 142, 110, 69, 103, 119], [79, 70, 62, 76, 61, 76], [110, 136, 104, 58, 96, 110]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #567 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 8], [0, 1, 2], [6, 6, 4], [5, 2, 4], [4, 8, 10], [10, 1, 9], [2, 3, 6], [2, 9, 3], [7, 0, 7]]
b = [[7, 5, 9, 4, 3, 0, 7], [7, 1, 8, 10, 2, 8, 10], [2, 6, 0, 8, 4, 7, 4]]
expected = [[142, 98, 152, 196, 76, 136, 188], [11, 13, 8, 26, 10, 22, 18], [92, 60, 102, 116, 46, 76, 118], [57, 51, 61, 72, 35, 44, 71], [104, 88, 100, 176, 68, 134, 148], [95, 105, 98, 122, 68, 71, 116], [47, 49, 42, 86, 36, 66, 68], [83, 37, 90, 122, 36, 93, 116], [63, 77, 63, 84, 49, 49, 77]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #568 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 8, 5, 0, 1, 10, 7], [3, 8, 1, 9, 10, 9, 1, 3], [7, 8, 5, 7, 9, 10, 8, 0], [3, 4, 0, 6, 5, 3, 4, 3], [8, 0, 0, 0, 4, 10, 7, 6]]
b = [[5, 8, 10], [1, 4, 0], [0, 1, 8], [8, 0, 8], [2, 9, 9], [8, 3, 8], [2, 4, 0], [10, 1, 10]]
expected = [[175, 122, 252], [219, 181, 302], [213, 236, 327], [139, 113, 177], [202, 164, 256]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #569 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7], [6, 8], [7, 4], [6, 4], [3, 6], [8, 10], [9, 6]]
b = [[6, 6, 9, 10, 5, 6], [8, 10, 9, 10, 5, 5]]
expected = [[116, 130, 153, 170, 85, 95], [100, 116, 126, 140, 70, 76], [74, 82, 99, 110, 55, 62], [68, 76, 90, 100, 50, 56], [66, 78, 81, 90, 45, 48], [128, 148, 162, 180, 90, 98], [102, 114, 135, 150, 75, 84]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #570 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [1], [7], [3], [7], [7], [1], [1]]
b = [[10, 1, 9, 9, 2, 3]]
expected = [[80, 8, 72, 72, 16, 24], [10, 1, 9, 9, 2, 3], [70, 7, 63, 63, 14, 21], [30, 3, 27, 27, 6, 9], [70, 7, 63, 63, 14, 21], [70, 7, 63, 63, 14, 21], [10, 1, 9, 9, 2, 3], [10, 1, 9, 9, 2, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #571 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [9], [10], [3], [8], [5], [9], [5]]
b = [[5, 0, 4, 6, 1]]
expected = [[5, 0, 4, 6, 1], [45, 0, 36, 54, 9], [50, 0, 40, 60, 10], [15, 0, 12, 18, 3], [40, 0, 32, 48, 8], [25, 0, 20, 30, 5], [45, 0, 36, 54, 9], [25, 0, 20, 30, 5]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #572 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 0, 5], [2, 4, 10, 6], [1, 0, 8, 1], [1, 0, 2, 4], [7, 6, 3, 4], [0, 3, 9, 10], [6, 9, 5, 7], [8, 3, 9, 5], [10, 4, 10, 4]]
b = [[6, 10, 4, 0, 7, 5, 1, 6, 7], [9, 1, 10, 4, 0, 7, 5, 9, 10], [1, 6, 7, 4, 10, 6, 8, 9, 3], [7, 6, 0, 8, 9, 1, 1, 4, 6]]
expected = [[65, 52, 28, 48, 59, 29, 17, 50, 64], [100, 120, 118, 104, 168, 104, 108, 162, 120], [21, 64, 60, 40, 96, 54, 66, 82, 37], [36, 46, 18, 40, 63, 21, 21, 40, 37], [127, 118, 109, 68, 115, 99, 65, 139, 142], [106, 117, 93, 128, 180, 85, 97, 148, 117], [171, 141, 149, 112, 155, 130, 98, 190, 189], [119, 167, 125, 88, 191, 120, 100, 176, 143], [134, 188, 150, 88, 206, 142, 114, 202, 164]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #573 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 4], [1, 10, 10], [4, 4, 4], [5, 9, 5], [4, 0, 9], [5, 5, 6], [7, 2, 0], [4, 3, 2], [6, 2, 7]]
b = [[8, 9], [3, 1], [9, 6]]
expected = [[119, 115], [128, 79], [80, 64], [112, 84], [113, 90], [109, 86], [62, 65], [59, 51], [117, 98]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #574 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 5], [10, 1, 1], [9, 3, 3], [5, 3, 7], [4, 1, 9], [6, 9, 4], [3, 8, 2]]
b = [[4, 6, 8, 2, 8, 3, 9, 3, 2], [1, 0, 5, 8, 1, 4, 2, 0, 3], [8, 3, 2, 5, 8, 4, 1, 4, 10]]
expected = [[75, 57, 101, 95, 103, 69, 82, 41, 85], [49, 63, 87, 33, 89, 38, 93, 34, 33], [63, 63, 93, 57, 99, 51, 90, 39, 57], [79, 51, 69, 69, 99, 55, 58, 43, 89], [89, 51, 55, 61, 105, 52, 47, 48, 101], [65, 48, 101, 104, 89, 70, 76, 34, 79], [36, 24, 68, 80, 48, 49, 45, 17, 50]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #575 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 5, 9, 7, 2, 1], [4, 5, 7, 3, 2, 4, 6], [2, 7, 10, 8, 2, 10, 1]]
b = [[3], [3], [8], [4], [1], [8], [10]]
expected = [[148], [189], [231]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #576 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 5, 2, 5, 3, 8, 10, 7, 9], [6, 2, 3, 4, 6, 1, 8, 9, 4, 9], [10, 6, 4, 5, 3, 5, 9, 0, 0, 8], [7, 8, 2, 1, 10, 1, 1, 3, 2, 10], [6, 4, 10, 6, 6, 1, 3, 4, 8, 10]]
b = [[5, 9, 5], [9, 1, 10], [0, 1, 0], [2, 3, 1], [2, 8, 1], [0, 3, 8], [9, 7, 10], [9, 5, 8], [2, 3, 2], [1, 9, 2]]
expected = [[219, 304, 243], [238, 316, 246], [209, 289, 264], [179, 277, 192], [179, 292, 188]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #577 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 3, 8, 1, 1]]
b = [[2, 9, 8, 2, 10, 4], [8, 10, 0, 7, 3, 3], [2, 6, 0, 6, 9, 10], [4, 5, 7, 8, 6, 6], [8, 1, 5, 9, 7, 1], [10, 3, 1, 7, 1, 5]]
expected = [[92, 146, 110, 131, 152, 117]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #578 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 9, 2, 2, 6, 0, 9, 6], [1, 8, 2, 8, 6, 5, 10, 2, 7], [5, 1, 8, 4, 2, 10, 7, 10, 1], [0, 3, 3, 1, 4, 5, 10, 10, 6], [8, 1, 9, 10, 10, 0, 3, 7, 10], [3, 10, 7, 2, 7, 8, 9, 0, 5]]
b = [[3], [8], [5], [0], [7], [5], [3], [3], [0]]
expected = [[150], [180], [178], [152], [177], [240]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #579 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0], [6, 0], [4, 3], [2, 9], [7, 7], [2, 10], [6, 2]]
b = [[6, 8, 2, 2, 9], [5, 3, 6, 2, 8]]
expected = [[42, 56, 14, 14, 63], [36, 48, 12, 12, 54], [39, 41, 26, 14, 60], [57, 43, 58, 22, 90], [77, 77, 56, 28, 119], [62, 46, 64, 24, 98], [46, 54, 24, 16, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #580 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [5], [6], [0], [2]]
b = [[1, 1, 4, 8, 1, 0, 1, 4]]
expected = [[2, 2, 8, 16, 2, 0, 2, 8], [5, 5, 20, 40, 5, 0, 5, 20], [6, 6, 24, 48, 6, 0, 6, 24], [0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 8, 16, 2, 0, 2, 8]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #581 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 0, 2, 2, 0], [2, 6, 9, 2, 4, 6], [0, 6, 7, 3, 5, 5], [7, 7, 4, 6, 5, 9]]
b = [[6, 10, 7, 9, 3, 6], [6, 0, 6, 0, 7, 6], [3, 0, 1, 7, 8, 6], [10, 8, 8, 3, 4, 0], [5, 7, 4, 4, 9, 8], [2, 7, 1, 2, 3, 2]]
expected = [[54, 30, 48, 14, 54, 40], [127, 106, 97, 115, 182, 146], [122, 94, 92, 88, 170, 128], [199, 216, 172, 147, 198, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #582 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 7, 6, 7, 4, 9, 10], [9, 9, 7, 8, 1, 9, 10, 2], [4, 8, 9, 8, 10, 7, 1, 4], [9, 10, 1, 10, 3, 10, 7, 1], [8, 7, 6, 10, 7, 8, 7, 4], [9, 2, 8, 7, 9, 1, 1, 2], [0, 8, 1, 5, 1, 10, 7, 5], [6, 0, 0, 2, 3, 1, 6, 8], [9, 0, 3, 1, 4, 5, 2, 8], [3, 2, 2, 6, 1, 3, 1, 1]]
b = [[3, 4, 9], [2, 10, 7], [10, 6, 7], [6, 8, 3], [3, 2, 6], [0, 6, 3], [8, 9, 10], [8, 9, 8]]
expected = [[288, 333, 321], [262, 396, 366], [236, 321, 302], [190, 360, 314], [267, 379, 361], [204, 211, 255], [155, 296, 224], [151, 178, 205], [155, 190, 228], [88, 130, 106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #583 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 9, 3, 8, 8, 2], [1, 0, 7, 8, 9, 4, 4], [10, 6, 3, 1, 5, 10, 4], [9, 9, 10, 8, 7, 6, 1], [10, 3, 3, 2, 9, 10, 5], [7, 6, 1, 10, 3, 3, 10], [8, 9, 4, 5, 1, 10, 0], [1, 2, 1, 10, 7, 7, 7]]
b = [[8, 6, 1, 0, 5], [5, 5, 7, 8, 2], [5, 1, 7, 6, 5], [7, 3, 7, 5, 6], [3, 8, 4, 0, 5], [5, 5, 9, 8, 8], [3, 3, 9, 1, 8]]
expected = [[226, 198, 230, 151, 237], [158, 141, 214, 118, 197], [209, 198, 226, 155, 220], [277, 222, 289, 221, 252], [216, 221, 237, 137, 248], [215, 172, 255, 138, 231], [217, 170, 228, 201, 193], [170, 159, 246, 135, 221]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #584 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 6, 8], [10, 0, 6, 8], [5, 10, 5, 3], [0, 4, 7, 8], [1, 1, 10, 5], [10, 7, 7, 0], [6, 5, 5, 0]]
b = [[10, 5, 10, 8, 0, 7, 1, 6, 10, 9], [0, 6, 5, 8, 1, 0, 9, 6, 6, 3], [0, 5, 5, 1, 6, 1, 6, 0, 5, 4], [0, 5, 8, 9, 6, 6, 3, 10, 3, 8]]
expected = [[80, 128, 189, 166, 87, 110, 95, 146, 152, 169], [100, 120, 194, 158, 84, 124, 70, 140, 154, 178], [50, 125, 149, 152, 58, 58, 134, 120, 144, 119], [0, 99, 119, 111, 94, 55, 102, 104, 83, 104], [10, 86, 105, 71, 91, 47, 85, 62, 81, 92], [100, 127, 170, 143, 49, 77, 115, 102, 177, 139], [60, 85, 110, 93, 35, 47, 81, 66, 115, 89]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #585 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [10]]
b = [[8, 10]]
expected = [[0, 0], [80, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #586 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 0, 5, 6, 10, 1, 7, 6], [1, 2, 3, 6, 6, 8, 9, 3, 2], [3, 7, 5, 7, 4, 0, 1, 1, 4], [7, 0, 6, 5, 8, 6, 2, 4, 9], [4, 9, 8, 2, 4, 5, 0, 4, 0], [7, 4, 5, 0, 2, 7, 7, 0, 6]]
b = [[2, 1, 7, 6, 4], [9, 9, 4, 1, 3], [0, 6, 4, 4, 5], [2, 7, 6, 10, 7], [1, 7, 4, 10, 4], [4, 10, 3, 3, 0], [6, 9, 1, 7, 9], [3, 4, 9, 4, 5], [2, 6, 7, 2, 4]]
expected = [[177, 327, 257, 225, 171], [137, 306, 161, 243, 195], [104, 210, 165, 174, 153], [98, 282, 254, 262, 199], [129, 241, 175, 156, 133], [134, 256, 163, 168, 160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #587 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [6], [4], [10], [6], [2], [3], [5], [8]]
b = [[10, 2, 0, 8, 2]]
expected = [[0, 0, 0, 0, 0], [60, 12, 0, 48, 12], [40, 8, 0, 32, 8], [100, 20, 0, 80, 20], [60, 12, 0, 48, 12], [20, 4, 0, 16, 4], [30, 6, 0, 24, 6], [50, 10, 0, 40, 10], [80, 16, 0, 64, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #588 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 7, 4], [5, 2, 3, 5], [2, 9, 9, 8], [1, 4, 1, 0], [0, 6, 4, 8], [4, 1, 8, 2], [4, 10, 3, 4], [6, 3, 2, 3], [3, 9, 4, 8]]
b = [[1, 0, 6, 0, 6, 10, 4, 8, 3, 0], [10, 3, 4, 10, 2, 3, 2, 5, 7, 8], [5, 1, 2, 0, 2, 3, 4, 5, 2, 2], [4, 1, 2, 1, 3, 7, 8, 0, 8, 2]]
expected = [[147, 38, 94, 94, 80, 136, 102, 128, 127, 94], [60, 14, 54, 25, 55, 100, 76, 65, 75, 32], [169, 44, 82, 98, 72, 130, 126, 106, 151, 106], [46, 13, 24, 40, 16, 25, 16, 33, 33, 34], [112, 30, 48, 68, 44, 86, 92, 50, 114, 72], [62, 13, 48, 12, 48, 81, 66, 77, 51, 28], [135, 37, 78, 104, 62, 107, 80, 97, 120, 94], [58, 14, 58, 33, 55, 96, 62, 73, 67, 34], [145, 39, 78, 98, 68, 125, 110, 89, 144, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #589 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 3, 5, 8, 8, 2, 2, 1], [10, 2, 9, 7, 8, 1, 2, 7, 2], [1, 1, 9, 2, 2, 6, 10, 8, 1], [4, 6, 2, 6, 2, 0, 10, 7, 0], [10, 10, 10, 4, 10, 2, 7, 8, 5], [10, 1, 0, 5, 7, 8, 1, 7, 4], [9, 2, 8, 2, 3, 9, 2, 5, 2], [8, 10, 4, 3, 4, 1, 10, 3, 8], [10, 2, 9, 8, 2, 2, 4, 0, 6]]
b = [[9, 4, 8, 1, 5], [5, 5, 5, 9, 6], [2, 6, 9, 9, 5], [3, 7, 9, 10, 7], [3, 9, 7, 0, 2], [8, 10, 1, 6, 0], [1, 0, 10, 6, 6], [9, 0, 5, 7, 9], [5, 4, 1, 4, 2]]
expected = [[230, 260, 254, 191, 161], [246, 243, 348, 254, 251], [179, 159, 273, 267, 208], [167, 118, 283, 245, 235], [322, 308, 443, 360, 332], [279, 239, 236, 188, 182], [251, 233, 249, 228, 178], [236, 205, 329, 283, 252], [198, 222, 305, 249, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #590 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 6, 1, 4], [3, 7, 0, 8, 8]]
b = [[2, 9, 4, 6, 4, 2], [7, 1, 4, 9, 4, 5], [10, 6, 4, 3, 6, 10], [0, 6, 1, 10, 9, 6], [6, 6, 3, 4, 2, 9]]
expected = [[149, 145, 97, 155, 113, 153], [103, 130, 72, 193, 128, 161]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #591 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 0, 5, 10, 7, 10, 7, 4, 3], [1, 7, 6, 1, 9, 4, 7, 10, 10, 5], [5, 9, 6, 0, 10, 3, 4, 1, 1, 10], [1, 10, 2, 6, 2, 9, 5, 2, 2, 4], [9, 9, 9, 3, 8, 9, 1, 7, 2, 4], [10, 10, 5, 8, 2, 9, 8, 7, 8, 10], [1, 9, 9, 7, 6, 4, 7, 8, 9, 8], [10, 4, 2, 6, 6, 2, 5, 7, 9, 0], [2, 2, 3, 2, 3, 10, 9, 7, 7, 10]]
b = [[2, 4, 8, 3, 5, 10, 0, 3], [0, 9, 0, 7, 1, 8, 7, 6], [6, 2, 7, 8, 4, 8, 0, 3], [6, 0, 7, 7, 10, 9, 6, 10], [7, 5, 0, 6, 1, 4, 7, 6], [4, 6, 0, 7, 5, 4, 2, 9], [5, 9, 0, 10, 6, 0, 0, 3], [1, 3, 1, 5, 8, 7, 8, 3], [0, 6, 5, 7, 9, 0, 6, 8], [3, 10, 10, 3, 9, 8, 1, 1]]
expected = [[198, 283, 108, 336, 286, 222, 211, 277], [183, 351, 167, 394, 332, 285, 271, 299], [179, 326, 188, 289, 214, 309, 163, 207], [139, 265, 116, 292, 230, 250, 170, 263], [206, 311, 213, 365, 289, 410, 227, 311], [225, 445, 318, 472, 473, 465, 264, 397], [223, 378, 253, 448, 405, 377, 281, 351], [150, 242, 188, 314, 305, 283, 220, 282], [177, 351, 193, 350, 360, 259, 175, 269]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #592 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7], [3, 8], [4, 0], [5, 6], [9, 4], [1, 1], [2, 10], [6, 5], [3, 8]]
b = [[5, 10, 0, 8, 3, 6, 4], [8, 10, 0, 7, 2, 5, 2]]
expected = [[106, 170, 0, 129, 44, 95, 54], [79, 110, 0, 80, 25, 58, 28], [20, 40, 0, 32, 12, 24, 16], [73, 110, 0, 82, 27, 60, 32], [77, 130, 0, 100, 35, 74, 44], [13, 20, 0, 15, 5, 11, 6], [90, 120, 0, 86, 26, 62, 28], [70, 110, 0, 83, 28, 61, 34], [79, 110, 0, 80, 25, 58, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #593 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 1, 6, 2, 7, 0, 9]]
b = [[9, 8], [0, 2], [8, 4], [8, 3], [4, 10], [1, 0], [2, 10], [5, 9]]
expected = [[152, 167]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #594 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 4, 3, 4, 7, 6, 10, 4, 5]]
b = [[5, 2, 3, 7, 1, 8, 0], [0, 6, 7, 9, 7, 7, 5], [5, 4, 10, 10, 6, 8, 10], [0, 7, 2, 9, 0, 0, 10], [6, 3, 9, 4, 8, 0, 0], [4, 5, 9, 8, 1, 0, 2], [7, 7, 2, 7, 2, 9, 10], [7, 1, 2, 5, 7, 10, 0], [9, 9, 2, 8, 4, 6, 4], [9, 2, 4, 9, 10, 0, 3]]
expected = [[265, 230, 261, 380, 267, 266, 215]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #595 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 4, 4, 7], [3, 0, 1, 7, 2]]
b = [[2, 0, 9], [0, 5, 6], [1, 1, 10], [7, 3, 10], [3, 1, 8]]
expected = [[71, 23, 217], [62, 24, 123]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #596 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 3, 10, 6, 10], [8, 0, 6, 2, 5, 2], [1, 5, 5, 6, 8, 4], [3, 3, 6, 5, 4, 6], [0, 10, 3, 4, 10, 10], [10, 8, 3, 6, 6, 7]]
b = [[7, 3, 7, 8, 1, 4], [3, 2, 9, 10, 3, 4], [2, 3, 4, 9, 5, 4], [3, 8, 1, 0, 5, 10], [7, 1, 5, 5, 3, 2], [1, 3, 1, 5, 6, 7]]
expected = [[143, 155, 171, 229, 174, 246], [111, 69, 109, 153, 75, 100], [110, 96, 122, 163, 119, 148], [91, 95, 103, 158, 115, 148], [128, 101, 166, 227, 155, 182], [167, 130, 197, 252, 139, 205]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #597 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 10, 6, 9, 6, 8, 2, 9, 5], [3, 1, 4, 7, 3, 7, 4, 2, 2, 6], [8, 7, 3, 4, 4, 10, 4, 1, 7, 8], [10, 7, 2, 7, 1, 5, 4, 9, 2, 9]]
b = [[2, 4, 8], [3, 10, 7], [6, 5, 7], [1, 10, 8], [10, 5, 10], [6, 3, 4], [10, 6, 5], [2, 2, 0], [5, 3, 1], [3, 2, 3]]
expected = [[346, 282, 336], [184, 194, 213], [260, 270, 297], [195, 276, 278]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #598 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 8, 8, 7, 3, 2], [10, 3, 2, 9, 9, 3, 7]]
b = [[9, 9], [5, 8], [3, 1], [5, 8], [10, 8], [10, 2], [8, 5]]
expected = [[276, 249], [332, 301]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #599 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[0, 2]]
expected = [[0, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #600 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 4, 3]]
b = [[4, 2, 2, 5, 10, 7, 7, 7, 4, 2], [7, 4, 5, 1, 4, 10, 0, 9, 9, 8], [10, 3, 6, 5, 1, 6, 2, 3, 10, 3], [3, 7, 6, 0, 0, 0, 9, 8, 2, 4]]
expected = [[124, 73, 87, 75, 124, 144, 105, 151, 131, 84]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #601 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 7, 0, 1, 0, 7, 8], [4, 6, 3, 5, 3, 6, 5, 4], [10, 10, 2, 2, 0, 5, 9, 8], [0, 5, 8, 9, 1, 1, 8, 7]]
b = [[2, 7, 5], [1, 4, 3], [1, 0, 6], [10, 4, 1], [10, 10, 10], [0, 7, 10], [5, 8, 2], [7, 4, 4]]
expected = [[122, 152, 138], [150, 200, 177], [153, 257, 194], [202, 165, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #602 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 8, 5, 2, 0, 3, 10, 0, 2], [1, 10, 2, 2, 8, 3, 7, 3, 10, 2], [5, 6, 9, 2, 9, 10, 4, 4, 2, 8], [5, 8, 8, 5, 4, 8, 8, 3, 6, 10], [5, 0, 4, 6, 1, 7, 2, 10, 10, 2], [8, 4, 4, 2, 8, 2, 2, 10, 1, 2]]
b = [[5, 2, 0, 7, 3, 3, 6], [5, 4, 10, 0, 5, 7, 9], [5, 7, 9, 1, 1, 7, 2], [1, 10, 10, 4, 7, 6, 4], [7, 0, 1, 9, 2, 7, 8], [6, 4, 10, 9, 5, 5, 4], [4, 10, 5, 9, 2, 6, 6], [10, 5, 2, 7, 8, 2, 9], [2, 10, 3, 5, 1, 8, 4], [4, 9, 10, 5, 9, 9, 1]]
expected = [[224, 222, 179, 216, 178, 183, 216], [227, 291, 267, 260, 166, 316, 295], [317, 309, 384, 337, 250, 365, 298], [300, 425, 450, 344, 282, 417, 311], [236, 314, 247, 283, 210, 251, 242], [268, 186, 177, 261, 191, 216, 280]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #603 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8], [9, 3]]
b = [[6, 5, 6], [5, 2, 0]]
expected = [[64, 36, 24], [69, 51, 54]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #604 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 6, 4], [4, 8, 5, 5], [0, 8, 6, 6], [1, 3, 2, 6], [1, 5, 6, 1], [3, 4, 2, 8], [2, 0, 2, 10]]
b = [[0, 9], [9, 4], [1, 10], [9, 10]]
expected = [[42, 100], [122, 168], [132, 152], [83, 101], [60, 99], [110, 143], [92, 138]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #605 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 7, 8, 5, 7, 0, 0], [9, 9, 6, 8, 10, 8, 4, 9], [5, 9, 9, 3, 5, 4, 5, 0], [0, 8, 7, 9, 1, 7, 4, 4], [2, 5, 6, 5, 7, 4, 3, 0], [7, 5, 10, 4, 3, 9, 8, 2], [8, 7, 4, 0, 1, 0, 10, 0]]
b = [[6, 8, 6, 6], [4, 4, 8, 7], [1, 3, 7, 2], [9, 5, 6, 0], [4, 9, 8, 8], [1, 0, 2, 10], [6, 9, 3, 4], [8, 0, 10, 1]]
expected = [[180, 194, 257, 222], [312, 292, 414, 314], [156, 208, 246, 211], [187, 143, 241, 168], [133, 169, 197, 167], [193, 225, 262, 245], [144, 203, 170, 153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #606 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [8], [6], [9], [3], [1], [3], [6], [1], [4]]
b = [[0, 1, 10, 2, 5, 0, 0]]
expected = [[0, 1, 10, 2, 5, 0, 0], [0, 8, 80, 16, 40, 0, 0], [0, 6, 60, 12, 30, 0, 0], [0, 9, 90, 18, 45, 0, 0], [0, 3, 30, 6, 15, 0, 0], [0, 1, 10, 2, 5, 0, 0], [0, 3, 30, 6, 15, 0, 0], [0, 6, 60, 12, 30, 0, 0], [0, 1, 10, 2, 5, 0, 0], [0, 4, 40, 8, 20, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #607 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 1], [10, 1, 3]]
b = [[4, 2, 9, 1, 7, 10, 3, 7, 1, 0], [4, 5, 10, 2, 9, 0, 4, 8, 1, 7], [2, 10, 7, 6, 1, 10, 6, 8, 3, 8]]
expected = [[22, 26, 54, 13, 40, 40, 23, 45, 8, 22], [50, 55, 121, 30, 82, 130, 52, 102, 20, 31]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #608 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3], [10, 8], [5, 3], [0, 1], [0, 9], [8, 1], [0, 5], [8, 0], [8, 2], [7, 10]]
b = [[9, 4, 7, 0, 1, 6], [6, 1, 5, 7, 2, 1]]
expected = [[27, 7, 22, 21, 7, 9], [138, 48, 110, 56, 26, 68], [63, 23, 50, 21, 11, 33], [6, 1, 5, 7, 2, 1], [54, 9, 45, 63, 18, 9], [78, 33, 61, 7, 10, 49], [30, 5, 25, 35, 10, 5], [72, 32, 56, 0, 8, 48], [84, 34, 66, 14, 12, 50], [123, 38, 99, 70, 27, 52]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #609 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [9], [6], [9], [5], [7], [3], [2], [4], [7]]
b = [[8]]
expected = [[40], [72], [48], [72], [40], [56], [24], [16], [32], [56]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #610 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 1, 6, 1, 7], [3, 5, 8, 3, 1, 0], [9, 3, 9, 7, 10, 2], [7, 0, 8, 2, 4, 3], [7, 1, 5, 6, 4, 5]]
b = [[1, 9, 4, 4, 9, 7, 10, 7, 10], [10, 1, 0, 7, 6, 0, 7, 9, 3], [3, 0, 3, 10, 4, 5, 5, 6, 10], [10, 2, 4, 8, 7, 10, 7, 5, 8], [3, 3, 10, 1, 5, 4, 9, 7, 3], [7, 2, 10, 4, 10, 9, 2, 2, 6]]
expected = [[130, 75, 127, 114, 172, 167, 127, 101, 156], [110, 41, 58, 152, 115, 95, 135, 136, 152], [180, 132, 211, 221, 254, 236, 299, 253, 287], [84, 85, 130, 140, 159, 152, 166, 141, 196], [139, 98, 157, 157, 201, 195, 190, 156, 213]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #611 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 3, 10, 0, 7, 2, 2], [8, 9, 2, 4, 4, 3, 1, 10], [0, 8, 1, 2, 0, 0, 10, 7], [0, 2, 6, 7, 10, 8, 0, 9], [0, 2, 4, 7, 6, 3, 10, 3], [0, 3, 0, 8, 8, 4, 2, 5], [7, 4, 0, 5, 8, 4, 5, 2], [3, 9, 0, 9, 3, 4, 4, 9]]
b = [[2, 4, 9, 2, 3, 6], [7, 0, 4, 8, 8, 10], [3, 8, 3, 6, 5, 5], [10, 5, 9, 7, 4, 0], [6, 9, 9, 8, 9, 7], [7, 6, 9, 3, 3, 0], [8, 2, 2, 2, 0, 4], [1, 7, 9, 1, 7, 1]]
expected = [[223, 158, 258, 167, 148, 111], [188, 194, 305, 181, 237, 190], [166, 87, 136, 111, 126, 132], [227, 284, 332, 214, 251, 129], [236, 180, 211, 169, 148, 125], [198, 175, 241, 165, 175, 99], [210, 173, 260, 169, 171, 160], [246, 179, 296, 194, 219, 154]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #612 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 3, 9], [5, 0, 0, 0], [7, 9, 6, 8], [8, 8, 4, 3], [3, 5, 4, 9], [3, 8, 8, 5]]
b = [[0, 8, 0, 5, 10, 1], [2, 2, 6, 0, 2, 6], [9, 3, 0, 3, 2, 8], [3, 4, 9, 9, 2, 8]]
expected = [[70, 133, 129, 135, 130, 153], [0, 40, 0, 25, 50, 5], [96, 124, 126, 125, 116, 173], [61, 104, 75, 79, 110, 112], [73, 82, 111, 108, 66, 137], [103, 84, 93, 84, 72, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #613 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 1, 2, 7, 1, 10, 7, 1], [10, 4, 10, 10, 7, 0, 0, 5, 10], [5, 8, 8, 3, 7, 10, 4, 0, 10], [5, 6, 5, 5, 5, 4, 6, 6, 0]]
b = [[4, 6, 2, 2, 0, 2, 6, 4, 6], [5, 2, 8, 9, 3, 4, 9, 6, 5], [0, 2, 3, 4, 10, 0, 2, 0, 9], [9, 0, 3, 10, 3, 0, 7, 1, 4], [3, 3, 3, 10, 6, 1, 3, 7, 6], [3, 6, 9, 10, 0, 6, 8, 5, 3], [8, 8, 8, 7, 4, 8, 9, 10, 2], [10, 1, 2, 0, 3, 1, 4, 7, 4], [8, 2, 2, 1, 2, 6, 8, 8, 1]]
expected = [[252, 174, 183, 227, 133, 138, 255, 269, 179], [301, 134, 163, 276, 219, 108, 307, 238, 282], [250, 195, 270, 352, 191, 201, 356, 290, 244], [230, 145, 199, 266, 155, 117, 254, 218, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #614 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10], [4, 6], [10, 10], [9, 6], [10, 3], [9, 8], [5, 4], [2, 8], [6, 7]]
b = [[4], [7]]
expected = [[94], [58], [110], [78], [61], [92], [48], [64], [73]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #615 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 10]]
b = [[3], [2], [8]]
expected = [[102]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #616 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 5, 7, 2, 8, 0, 3, 4], [5, 1, 3, 7, 8, 2, 3, 3, 10]]
b = [[10, 8, 3, 3, 5], [8, 1, 6, 6, 8], [9, 1, 7, 0, 6], [2, 3, 2, 4, 3], [6, 5, 7, 9, 4], [1, 8, 9, 5, 3], [0, 6, 1, 1, 8], [6, 3, 10, 9, 10], [2, 4, 8, 0, 8]]
expected = [[241, 196, 263, 179, 241], [187, 188, 243, 161, 244]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #617 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 8, 8, 0, 0, 9, 7, 10], [10, 0, 10, 8, 7, 8, 9, 7, 7], [9, 1, 8, 3, 5, 1, 7, 6, 4], [5, 9, 3, 3, 4, 1, 6, 4, 1], [9, 4, 4, 5, 6, 6, 7, 1, 3], [6, 10, 0, 2, 0, 9, 7, 2, 5], [8, 10, 2, 8, 2, 9, 1, 8, 0], [6, 3, 4, 1, 9, 7, 2, 9, 3], [4, 3, 3, 2, 6, 4, 2, 8, 9]]
b = [[4], [3], [3], [0], [8], [9], [1], [9], [1]]
expected = [[106], [277], [177], [140], [181], [165], [238], [266], [201]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #618 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 4, 0, 6, 7, 9, 10, 5], [0, 3, 7, 7, 4, 9, 4, 10, 4, 5], [5, 4, 0, 7, 0, 1, 7, 1, 4, 3]]
b = [[5, 4, 4, 4, 10, 8, 2, 5, 7, 3], [0, 4, 8, 1, 7, 3, 7, 0, 5, 4], [6, 4, 6, 10, 9, 5, 5, 4, 0, 0], [6, 6, 5, 6, 5, 4, 8, 2, 4, 0], [6, 10, 8, 9, 3, 1, 10, 5, 2, 2], [2, 4, 3, 8, 4, 8, 0, 9, 8, 5], [4, 6, 5, 9, 6, 0, 6, 9, 3, 8], [1, 6, 2, 1, 9, 0, 6, 2, 4, 4], [9, 3, 1, 2, 4, 2, 3, 10, 0, 4], [2, 8, 0, 4, 7, 2, 2, 1, 6, 3]]
expected = [[227, 286, 227, 283, 386, 166, 276, 284, 196, 213], [198, 294, 204, 297, 332, 166, 258, 244, 205, 168], [140, 166, 131, 158, 205, 102, 160, 156, 134, 121]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #619 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0], [9, 4], [10, 0], [8, 0], [0, 6], [1, 0], [4, 8], [2, 0], [4, 0]]
b = [[10, 10, 7, 6, 5, 5, 5, 9, 8], [7, 2, 0, 0, 10, 6, 9, 3, 1]]
expected = [[100, 100, 70, 60, 50, 50, 50, 90, 80], [118, 98, 63, 54, 85, 69, 81, 93, 76], [100, 100, 70, 60, 50, 50, 50, 90, 80], [80, 80, 56, 48, 40, 40, 40, 72, 64], [42, 12, 0, 0, 60, 36, 54, 18, 6], [10, 10, 7, 6, 5, 5, 5, 9, 8], [96, 56, 28, 24, 100, 68, 92, 60, 40], [20, 20, 14, 12, 10, 10, 10, 18, 16], [40, 40, 28, 24, 20, 20, 20, 36, 32]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #620 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 2, 10, 2], [5, 10, 8, 10, 5], [7, 1, 2, 3, 4], [6, 6, 7, 0, 2], [6, 2, 10, 7, 3], [0, 8, 10, 6, 8], [2, 5, 6, 5, 2]]
b = [[7, 8, 8, 0, 0, 0, 8], [8, 8, 3, 8, 4, 10, 9], [9, 1, 0, 3, 8, 3, 1], [6, 5, 1, 0, 1, 6, 0], [2, 4, 5, 4, 6, 6, 9]]
expected = [[161, 148, 98, 30, 46, 98, 110], [257, 198, 105, 124, 144, 214, 183], [101, 97, 82, 30, 47, 58, 103], [157, 111, 76, 77, 92, 93, 127], [196, 121, 76, 58, 113, 110, 103], [206, 136, 70, 126, 166, 194, 154], [142, 95, 46, 66, 85, 110, 85]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #621 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 8, 0, 1, 1, 2, 3, 1, 7], [2, 1, 3, 3, 8, 10, 3, 6, 1, 10], [8, 0, 1, 1, 2, 6, 1, 8, 4, 1], [4, 6, 4, 1, 8, 2, 6, 10, 0, 1], [6, 9, 2, 7, 9, 0, 1, 7, 9, 3], [0, 0, 8, 9, 4, 9, 8, 2, 2, 7], [1, 1, 10, 3, 0, 3, 4, 10, 10, 3]]
b = [[9, 2, 4, 5, 0, 0], [3, 4, 8, 0, 8, 2], [3, 2, 2, 4, 0, 9], [1, 3, 6, 2, 8, 10], [0, 10, 2, 6, 9, 10], [10, 1, 1, 0, 8, 5], [2, 0, 7, 2, 5, 2], [2, 3, 5, 8, 8, 7], [3, 7, 9, 0, 6, 6], [1, 4, 6, 4, 9, 8]]
expected = [[111, 87, 131, 124, 128, 176], [164, 178, 186, 170, 343, 323], [167, 103, 139, 128, 176, 159], [120, 159, 194, 182, 263, 238], [140, 259, 301, 176, 351, 325], [156, 140, 213, 134, 311, 345], [136, 150, 239, 151, 243, 299]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #622 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 0, 5, 10, 2], [5, 8, 5, 9, 9, 5], [5, 4, 0, 2, 1, 5], [6, 0, 0, 5, 4, 3], [6, 4, 10, 6, 4, 0]]
b = [[1, 7, 9, 6, 10, 8], [6, 9, 8, 5, 3, 0], [3, 9, 1, 0, 5, 5], [6, 1, 4, 6, 7, 2], [1, 3, 1, 10, 7, 1], [10, 10, 2, 5, 6, 7]]
expected = [[72, 73, 50, 150, 123, 34], [181, 238, 169, 239, 255, 127], [92, 126, 96, 97, 113, 80], [70, 89, 84, 121, 141, 83], [100, 186, 124, 132, 192, 114]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #623 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 9], [3, 4, 9], [8, 6, 5], [10, 3, 0], [0, 1, 5], [0, 2, 0], [10, 4, 9], [3, 3, 1], [5, 2, 6], [3, 8, 0]]
b = [[6, 9, 7, 6, 9], [7, 6, 2, 6, 8], [4, 2, 9, 6, 7]]
expected = [[99, 99, 136, 114, 150], [82, 69, 110, 96, 122], [110, 118, 113, 114, 155], [81, 108, 76, 78, 114], [27, 16, 47, 36, 43], [14, 12, 4, 12, 16], [124, 132, 159, 138, 185], [43, 47, 36, 42, 58], [68, 69, 93, 78, 103], [74, 75, 37, 66, 91]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #624 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 7, 9, 1, 3, 2, 7, 9, 1], [2, 5, 7, 7, 7, 5, 1, 2, 9, 0], [9, 0, 7, 9, 2, 9, 10, 10, 6, 3], [7, 9, 2, 10, 4, 2, 1, 2, 6, 5]]
b = [[0], [3], [4], [3], [8], [2], [9], [8], [8], [10]]
expected = [[240], [227], [337], [224]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #625 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9], [1, 9], [3, 5], [5, 0], [0, 7], [10, 10]]
b = [[1, 9, 4, 5, 1, 8], [1, 5, 3, 10, 8, 1]]
expected = [[14, 90, 47, 115, 77, 49], [10, 54, 31, 95, 73, 17], [8, 52, 27, 65, 43, 29], [5, 45, 20, 25, 5, 40], [7, 35, 21, 70, 56, 7], [20, 140, 70, 150, 90, 90]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #626 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 3, 9, 2, 6, 7, 7, 0], [2, 9, 3, 3, 3, 8, 10, 2, 9], [0, 5, 7, 9, 1, 5, 0, 8, 9], [1, 9, 9, 2, 10, 9, 10, 10, 6], [5, 6, 5, 8, 1, 9, 10, 7, 7], [10, 10, 3, 3, 5, 3, 6, 4, 2], [3, 8, 0, 7, 3, 6, 10, 5, 7], [10, 2, 4, 1, 0, 9, 9, 1, 1], [6, 6, 8, 6, 8, 6, 8, 3, 10]]
b = [[4, 9, 3, 1, 10, 2, 7, 6], [1, 10, 9, 9, 3, 3, 3, 1], [10, 3, 9, 4, 0, 0, 8, 5], [7, 6, 10, 7, 6, 2, 10, 10], [9, 6, 5, 3, 10, 0, 8, 9], [8, 0, 9, 1, 5, 2, 7, 3], [3, 10, 2, 0, 7, 7, 9, 5], [2, 0, 9, 9, 3, 6, 7, 9], [8, 2, 10, 9, 10, 1, 9, 2]]
expected = [[216, 241, 324, 208, 232, 147, 330, 269], [265, 271, 359, 232, 301, 144, 360, 203], [275, 149, 410, 297, 218, 100, 341, 244], [377, 310, 486, 315, 354, 187, 483, 349], [313, 288, 433, 273, 332, 181, 446, 304], [212, 311, 297, 205, 287, 130, 315, 239], [240, 281, 355, 247, 311, 163, 369, 250], [198, 220, 212, 78, 233, 116, 278, 175], [382, 322, 441, 281, 389, 138, 473, 319]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #627 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [4], [8], [8]]
b = [[1, 5, 3, 0, 5, 1, 6, 5, 8]]
expected = [[6, 30, 18, 0, 30, 6, 36, 30, 48], [4, 20, 12, 0, 20, 4, 24, 20, 32], [8, 40, 24, 0, 40, 8, 48, 40, 64], [8, 40, 24, 0, 40, 8, 48, 40, 64]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #628 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 1, 9, 8, 0, 1, 7, 6], [1, 0, 7, 3, 4, 5, 3, 10, 3], [1, 8, 1, 7, 3, 7, 5, 7, 3], [0, 6, 1, 2, 3, 4, 4, 10, 2], [0, 6, 6, 10, 3, 10, 7, 8, 10], [7, 10, 6, 9, 3, 9, 4, 3, 9], [4, 7, 4, 1, 2, 1, 6, 2, 9], [5, 6, 10, 5, 0, 6, 10, 5, 1]]
b = [[9], [5], [1], [8], [4], [6], [3], [2], [1]]
expected = [[158], [118], [192], [117], [235], [284], [128], [202]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #629 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 4, 0, 1, 5, 5, 1, 2], [9, 1, 9, 2, 1, 6, 8, 4, 9], [9, 2, 8, 7, 10, 4, 6, 9, 7], [9, 9, 3, 7, 8, 8, 7, 10, 10], [5, 2, 10, 2, 6, 2, 9, 2, 2], [0, 3, 3, 6, 0, 6, 8, 9, 8], [0, 1, 2, 5, 2, 6, 9, 8, 4], [2, 3, 7, 4, 0, 8, 6, 0, 5], [4, 3, 6, 7, 8, 3, 4, 5, 9], [9, 0, 3, 6, 6, 0, 1, 4, 1]]
b = [[2, 5, 6, 9, 1, 0, 10, 10, 2, 1], [9, 9, 1, 4, 4, 4, 3, 3, 7, 9], [5, 1, 8, 9, 5, 2, 4, 0, 4, 6], [5, 10, 7, 7, 7, 3, 10, 10, 5, 1], [10, 4, 7, 8, 5, 3, 7, 0, 4, 3], [1, 8, 1, 1, 3, 6, 5, 5, 4, 5], [6, 4, 3, 0, 8, 3, 3, 0, 1, 0], [1, 3, 4, 9, 8, 10, 3, 2, 1, 1], [5, 7, 2, 0, 4, 3, 6, 0, 6, 5]]
expected = [[84, 105, 91, 94, 100, 72, 118, 67, 66, 67], [195, 242, 212, 230, 227, 158, 276, 151, 165, 156], [295, 313, 311, 375, 316, 228, 375, 204, 212, 176], [339, 423, 281, 355, 349, 286, 406, 247, 269, 239], [216, 169, 209, 225, 209, 117, 213, 90, 129, 125], [175, 253, 151, 168, 255, 210, 210, 117, 152, 130], [152, 205, 139, 151, 229, 184, 180, 99, 113, 90], [155, 207, 135, 129, 169, 119, 185, 109, 141, 140], [257, 273, 233, 263, 252, 176, 295, 144, 195, 163], [138, 155, 183, 234, 140, 88, 225, 158, 95, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #630 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 0, 9, 0, 10, 0, 2, 5, 4], [0, 9, 6, 0, 10, 10, 10, 3, 9, 1]]
b = [[6, 6, 8, 10, 8, 2, 7], [8, 4, 10, 9, 3, 9, 1], [7, 3, 6, 7, 6, 7, 0], [10, 6, 2, 8, 4, 4, 0], [5, 3, 6, 7, 1, 4, 1], [10, 4, 5, 4, 3, 9, 3], [8, 8, 2, 0, 5, 7, 4], [9, 0, 7, 8, 3, 3, 6], [4, 4, 4, 7, 4, 10, 3], [9, 0, 6, 4, 0, 6, 8]]
expected = [[294, 132, 164, 216, 109, 235, 99], [416, 240, 319, 324, 198, 428, 142]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #631 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 2, 3, 9, 7]]
b = [[2, 0, 3, 8, 0, 10, 6, 2, 8], [0, 9, 2, 9, 0, 5, 3, 5, 8], [9, 5, 10, 3, 10, 8, 6, 1, 1], [10, 4, 10, 1, 7, 0, 3, 2, 7], [6, 2, 4, 4, 2, 0, 3, 8, 7], [7, 8, 3, 9, 5, 5, 2, 3, 5]]
expected = [[155, 105, 115, 133, 94, 76, 77, 110, 145]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #632 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 3, 7, 6, 5, 10], [9, 4, 2, 10, 4, 0, 5], [0, 2, 2, 2, 7, 7, 6]]
b = [[6, 2, 1, 1, 5, 8, 7, 6], [1, 1, 6, 1, 7, 1, 6, 2], [1, 0, 10, 1, 5, 7, 8, 4], [6, 5, 3, 5, 4, 10, 1, 1], [9, 4, 4, 3, 10, 6, 4, 8], [7, 2, 4, 0, 4, 0, 2, 9], [8, 7, 8, 5, 10, 9, 2, 3]]
expected = [[262, 159, 218, 119, 300, 279, 170, 196], [196, 123, 139, 102, 213, 259, 139, 127], [176, 96, 142, 65, 190, 132, 84, 151]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #633 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 7, 10, 5, 6, 8, 9, 10], [7, 7, 1, 6, 6, 1, 6, 5, 1], [0, 4, 4, 1, 5, 9, 0, 8, 6]]
b = [[9, 8, 7, 10, 10, 9, 0, 8, 4], [2, 5, 2, 7, 9, 10, 8, 7, 10], [7, 4, 6, 5, 10, 5, 4, 5, 8], [9, 8, 7, 10, 4, 1, 8, 10, 9], [8, 7, 4, 5, 10, 8, 0, 10, 6], [5, 8, 3, 2, 4, 5, 9, 8, 3], [2, 7, 9, 5, 3, 1, 8, 6, 10], [1, 4, 10, 9, 9, 8, 5, 2, 6], [6, 1, 1, 2, 0, 7, 5, 8, 0]]
expected = [[377, 370, 387, 410, 388, 356, 329, 458, 374], [214, 256, 243, 293, 294, 250, 195, 292, 289], [174, 189, 172, 185, 238, 252, 207, 244, 186]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #634 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 7, 4, 7, 8], [1, 1, 9, 8, 6, 1], [4, 10, 2, 7, 1, 8], [0, 9, 10, 6, 2, 7], [9, 1, 10, 3, 4, 5], [1, 7, 10, 2, 9, 6], [10, 3, 5, 8, 5, 2], [0, 6, 4, 8, 9, 4], [8, 0, 9, 6, 9, 9], [6, 8, 1, 6, 8, 0]]
b = [[4, 3], [8, 7], [10, 3], [9, 10], [1, 10], [0, 8]]
expected = [[201, 270], [180, 185], [180, 232], [228, 229], [175, 174], [187, 240], [191, 212], [169, 256], [185, 273], [160, 217]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #635 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 9, 5, 6, 7], [4, 3, 6, 10, 4, 7], [3, 3, 9, 10, 2, 8], [6, 2, 1, 1, 4, 9], [3, 2, 10, 1, 1, 9], [2, 4, 4, 4, 9, 0], [6, 0, 5, 8, 4, 1]]
b = [[6, 6, 10, 9, 7, 9, 9, 6], [2, 3, 9, 8, 4, 10, 4, 0], [6, 9, 2, 3, 4, 4, 5, 5], [4, 5, 10, 1, 2, 3, 1, 5], [7, 5, 6, 7, 3, 7, 10, 9], [10, 2, 3, 5, 8, 4, 10, 5]]
expected = [[238, 210, 257, 227, 194, 255, 266, 195], [204, 171, 224, 151, 152, 176, 198, 175], [212, 184, 211, 142, 159, 169, 194, 171], [168, 94, 141, 147, 140, 145, 198, 127], [183, 142, 111, 126, 146, 133, 186, 127], [123, 125, 158, 129, 81, 149, 148, 133], [136, 143, 177, 110, 98, 130, 137, 142]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #636 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 2, 2, 3, 5, 9, 7, 4], [8, 8, 0, 2, 5, 4, 10, 4, 10], [2, 2, 7, 8, 6, 6, 5, 7, 1]]
b = [[10, 10, 1, 6, 9, 6, 2, 3, 10, 2], [4, 7, 8, 0, 10, 3, 8, 2, 4, 8], [4, 3, 8, 8, 8, 8, 10, 2, 7, 3], [0, 9, 1, 3, 0, 4, 4, 8, 0, 4], [9, 0, 10, 4, 10, 1, 5, 2, 7, 6], [7, 2, 5, 3, 0, 7, 1, 0, 2, 0], [5, 7, 0, 1, 6, 6, 4, 2, 2, 8], [0, 6, 3, 7, 2, 5, 3, 4, 0, 6], [4, 1, 10, 2, 1, 6, 2, 5, 1, 3]]
expected = [[141, 153, 135, 121, 127, 181, 115, 95, 77, 160], [275, 266, 256, 144, 280, 253, 189, 152, 185, 252], [181, 217, 203, 190, 199, 225, 201, 143, 142, 194]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #637 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 1, 10, 10, 2, 10, 1, 6], [6, 10, 2, 6, 10, 1, 5, 9, 2], [0, 0, 4, 7, 1, 10, 10, 7, 3], [7, 5, 3, 0, 4, 4, 1, 0, 2], [0, 6, 3, 9, 8, 3, 10, 10, 0], [4, 10, 3, 10, 1, 3, 5, 3, 5], [7, 3, 6, 8, 10, 3, 7, 6, 6], [1, 0, 6, 7, 10, 3, 4, 0, 5], [4, 6, 3, 5, 1, 5, 8, 6, 10], [0, 5, 8, 4, 3, 2, 3, 6, 6]]
b = [[3], [4], [5], [4], [6], [1], [2], [9], [9]]
expected = [[215], [262], [174], [104], [236], [198], [280], [177], [242], [210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #638 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 3, 9, 4, 4], [3, 1, 7, 10, 5, 7]]
b = [[8, 1, 1, 3, 7], [8, 7, 9, 1, 4], [8, 8, 8, 4, 5], [2, 8, 1, 3, 10], [3, 1, 8, 0, 4], [5, 4, 2, 1, 9]]
expected = [[178, 165, 134, 70, 230], [158, 179, 132, 75, 243]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #639 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 5, 0, 3, 2, 6, 8, 3, 2], [7, 1, 4, 1, 9, 10, 3, 3, 9, 2]]
b = [[0, 1], [1, 8], [1, 4], [5, 1], [1, 8], [5, 7], [9, 6], [0, 0], [8, 9], [7, 3]]
expected = [[116, 178], [182, 279]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #640 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 8, 3, 6, 2], [0, 9, 3, 0, 2, 4], [0, 3, 0, 0, 9, 8], [10, 9, 0, 2, 2, 9]]
b = [[10, 4, 9, 9, 4], [10, 7, 3, 10, 9], [5, 1, 6, 2, 2], [6, 6, 1, 8, 7], [2, 4, 6, 8, 4], [3, 8, 0, 6, 1]]
expected = [[126, 89, 126, 146, 88], [121, 106, 57, 136, 99], [72, 121, 63, 150, 71], [233, 195, 131, 266, 152]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #641 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 5, 2, 0, 5, 0]]
b = [[1], [6], [7], [10], [6], [4], [5]]
expected = [[129]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #642 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 1, 0, 7, 7, 0, 5, 6], [2, 1, 8, 8, 6, 10, 6, 3, 7], [4, 2, 2, 3, 10, 7, 6, 3, 3], [1, 6, 1, 5, 5, 6, 2, 8, 1], [4, 4, 8, 7, 8, 0, 0, 7, 10], [2, 0, 8, 6, 9, 8, 6, 1, 4], [5, 1, 9, 2, 1, 8, 6, 7, 5], [2, 9, 10, 8, 9, 6, 2, 10, 6], [7, 8, 4, 5, 7, 7, 5, 8, 10], [9, 0, 8, 7, 1, 5, 10, 2, 8]]
b = [[5, 5, 4], [1, 6, 4], [6, 1, 7], [3, 4, 5], [7, 4, 4], [7, 1, 6], [7, 7, 6], [5, 9, 7], [3, 0, 3]]
expected = [[158, 97, 142], [273, 159, 270], [228, 162, 201], [166, 174, 187], [214, 175, 234], [254, 137, 233], [241, 165, 249], [290, 252, 326], [285, 249, 299], [260, 178, 259]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #643 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [8], [9], [7], [0], [1], [3]]
b = [[6, 7, 4, 5, 2, 10, 6, 3]]
expected = [[42, 49, 28, 35, 14, 70, 42, 21], [48, 56, 32, 40, 16, 80, 48, 24], [54, 63, 36, 45, 18, 90, 54, 27], [42, 49, 28, 35, 14, 70, 42, 21], [0, 0, 0, 0, 0, 0, 0, 0], [6, 7, 4, 5, 2, 10, 6, 3], [18, 21, 12, 15, 6, 30, 18, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #644 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 5], [3, 7, 0], [4, 2, 8], [3, 6, 8], [9, 3, 8], [0, 4, 10], [10, 5, 6], [7, 10, 6], [9, 8, 5], [0, 0, 9]]
b = [[2], [4], [3]]
expected = [[53], [34], [40], [54], [54], [46], [58], [72], [65], [27]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #645 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 6, 0, 7, 7, 1, 0], [3, 7, 5, 9, 3, 2, 10, 2], [4, 7, 4, 8, 10, 8, 1, 7], [7, 2, 5, 10, 4, 10, 7, 8], [3, 4, 10, 1, 8, 7, 4, 6], [9, 4, 9, 10, 2, 2, 2, 7], [1, 6, 8, 1, 2, 9, 0, 5], [0, 9, 6, 10, 0, 7, 6, 7]]
b = [[4, 4, 2, 3, 5], [1, 3, 1, 4, 6], [2, 10, 0, 2, 8], [8, 4, 1, 6, 8], [1, 7, 2, 3, 8], [2, 9, 3, 1, 7], [3, 4, 6, 1, 10], [6, 0, 5, 7, 7]]
expected = [[39, 185, 44, 53, 181], [150, 198, 104, 136, 321], [166, 255, 108, 184, 353], [213, 270, 146, 184, 395], [114, 263, 102, 128, 322], [192, 218, 89, 180, 320], [84, 201, 65, 99, 227], [175, 214, 111, 170, 340]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #646 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 5, 7, 4], [6, 4, 7, 7, 6], [5, 0, 3, 3, 8], [5, 10, 1, 4, 6], [8, 6, 4, 0, 10], [4, 7, 9, 7, 2], [1, 0, 8, 3, 5], [6, 7, 3, 7, 3], [1, 8, 0, 10, 6], [10, 1, 2, 1, 8]]
b = [[3, 6, 4, 10, 4, 1, 0, 10, 1], [6, 3, 7, 4, 9, 8, 2, 10, 6], [9, 1, 2, 4, 4, 8, 7, 5, 6], [9, 3, 0, 8, 10, 0, 1, 4, 9], [9, 8, 10, 6, 5, 4, 10, 1, 6]]
expected = [[198, 121, 117, 200, 187, 104, 92, 187, 155], [222, 124, 126, 196, 188, 118, 124, 169, 171], [141, 106, 106, 134, 102, 61, 104, 85, 98], [174, 121, 152, 162, 184, 117, 91, 177, 143], [186, 150, 182, 180, 152, 128, 140, 170, 128], [216, 91, 103, 172, 195, 140, 104, 185, 175], [147, 63, 70, 96, 91, 85, 109, 67, 106], [177, 105, 109, 174, 184, 98, 72, 176, 147], [195, 108, 120, 158, 206, 89, 86, 136, 175], [135, 132, 131, 168, 107, 66, 97, 132, 85]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #647 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [7], [7]]
b = [[7, 0, 10, 5, 2, 1, 0, 6]]
expected = [[21, 0, 30, 15, 6, 3, 0, 18], [49, 0, 70, 35, 14, 7, 0, 42], [49, 0, 70, 35, 14, 7, 0, 42]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #648 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 1, 6], [5, 6, 6, 5], [5, 8, 6, 7]]
b = [[3, 7, 6], [2, 7, 7], [2, 9, 5], [10, 4, 7]]
expected = [[107, 159, 164], [89, 151, 137], [113, 173, 165]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #649 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 8, 2, 1, 2, 0, 8, 8, 6], [6, 10, 9, 10, 2, 8, 8, 7, 2, 6], [8, 9, 8, 9, 8, 1, 6, 9, 3, 7], [6, 2, 3, 10, 6, 0, 7, 4, 4, 0], [0, 0, 7, 1, 0, 10, 5, 4, 0, 1], [4, 8, 10, 2, 8, 1, 4, 7, 10, 4]]
b = [[10], [7], [1], [3], [8], [7], [4], [6], [6], [3]]
expected = [[177], [345], [366], [231], [127], [313]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #650 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[6, 5, 6, 5]]
expected = [[12, 10, 12, 10]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #651 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 0, 9, 8, 10, 10, 7], [2, 2, 10, 3, 8, 2, 5, 7], [1, 3, 4, 4, 9, 5, 9, 3], [6, 4, 3, 4, 3, 8, 2, 9], [1, 7, 0, 7, 2, 3, 9, 0], [5, 1, 0, 1, 4, 6, 9, 5], [5, 10, 8, 7, 4, 4, 6, 1], [3, 3, 10, 7, 3, 2, 5, 3]]
b = [[8, 8, 1, 0, 9, 1, 10, 0], [2, 5, 9, 8, 2, 5, 10, 6], [10, 7, 1, 4, 2, 3, 2, 4], [7, 5, 3, 4, 5, 1, 6, 0], [8, 10, 7, 9, 0, 4, 1, 5], [1, 3, 10, 7, 7, 3, 5, 3], [1, 5, 10, 2, 3, 6, 9, 10], [9, 1, 4, 2, 5, 3, 9, 8]]
expected = [[236, 241, 323, 220, 209, 160, 305, 232], [275, 229, 193, 178, 121, 134, 204, 204], [195, 224, 259, 196, 120, 146, 214, 208], [229, 182, 214, 165, 195, 114, 272, 167], [99, 152, 219, 141, 106, 114, 220, 151], [141, 158, 215, 118, 146, 114, 226, 174], [240, 264, 256, 218, 167, 153, 295, 192], [237, 208, 164, 149, 132, 112, 207, 153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #652 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 7, 10, 0, 8, 5], [1, 0, 8, 2, 0, 3, 0], [0, 3, 6, 3, 0, 8, 8], [3, 0, 9, 8, 8, 5, 6], [4, 1, 1, 2, 10, 3, 9], [4, 3, 1, 4, 8, 3, 5], [1, 6, 8, 4, 7, 10, 2], [7, 0, 8, 9, 2, 3, 6], [7, 1, 7, 7, 9, 0, 7], [6, 10, 8, 10, 6, 5, 4]]
b = [[8, 10, 1, 10, 7, 5, 9, 5, 10, 2], [8, 2, 0, 0, 7, 2, 0, 10, 6, 0], [4, 7, 6, 0, 7, 9, 8, 0, 1, 3], [8, 0, 7, 3, 8, 6, 1, 2, 6, 3], [3, 5, 7, 5, 10, 4, 3, 8, 1, 2], [6, 2, 8, 8, 9, 6, 9, 4, 1, 7], [7, 5, 7, 3, 0, 5, 1, 4, 5, 5]]
expected = [[247, 152, 217, 169, 250, 228, 197, 112, 166, 144], [74, 72, 87, 40, 106, 107, 102, 21, 33, 53], [176, 104, 177, 97, 159, 166, 131, 100, 90, 123], [220, 173, 251, 152, 273, 236, 182, 139, 130, 138], [171, 150, 181, 147, 185, 146, 112, 162, 117, 103], [169, 124, 153, 131, 195, 134, 104, 154, 119, 85], [215, 143, 220, 143, 297, 211, 190, 177, 105, 132], [226, 172, 198, 149, 224, 217, 175, 105, 167, 120], [224, 201, 210, 157, 251, 213, 160, 159, 169, 109], [316, 196, 234, 172, 353, 256, 195, 234, 219, 133]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #653 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 6, 10, 9, 10, 4, 0, 9, 7], [2, 8, 4, 8, 3, 10, 10, 2, 10, 5], [0, 0, 10, 6, 6, 9, 5, 9, 5, 7], [2, 7, 0, 0, 4, 7, 8, 6, 0, 6], [9, 5, 8, 1, 5, 8, 5, 2, 8, 10], [1, 10, 0, 7, 6, 3, 3, 10, 6, 7]]
b = [[0, 5, 10, 9, 4, 8, 6, 2, 4], [1, 0, 2, 3, 7, 0, 3, 2, 6], [6, 6, 7, 8, 6, 5, 10, 9, 7], [6, 6, 9, 10, 8, 7, 8, 7, 0], [10, 7, 8, 6, 10, 10, 1, 5, 2], [6, 3, 10, 5, 0, 5, 7, 9, 0], [10, 6, 7, 2, 4, 3, 2, 0, 5], [6, 3, 1, 7, 8, 7, 9, 10, 3], [7, 9, 5, 7, 10, 5, 6, 8, 8], [10, 9, 0, 3, 7, 2, 1, 0, 3]]
expected = [[423, 392, 455, 419, 417, 367, 342, 353, 225], [402, 334, 382, 341, 373, 276, 316, 317, 241], [419, 330, 331, 350, 359, 314, 345, 373, 195], [265, 179, 198, 174, 219, 169, 162, 161, 134], [375, 356, 362, 350, 363, 298, 304, 288, 257], [332, 263, 232, 299, 391, 255, 258, 276, 190]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #654 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 1], [0, 2, 3], [3, 5, 8], [0, 0, 0], [2, 9, 4], [4, 3, 2], [4, 0, 7], [3, 5, 1]]
b = [[5, 0, 4, 9, 8, 9, 2, 3], [10, 4, 4, 2, 5, 1, 6, 6], [5, 6, 1, 2, 5, 3, 5, 3]]
expected = [[95, 38, 41, 36, 61, 29, 57, 57], [35, 26, 11, 10, 25, 11, 27, 21], [105, 68, 40, 53, 89, 56, 76, 63], [0, 0, 0, 0, 0, 0, 0, 0], [120, 60, 48, 44, 81, 39, 78, 72], [60, 24, 30, 46, 57, 45, 36, 36], [55, 42, 23, 50, 67, 57, 43, 33], [70, 26, 33, 39, 54, 35, 41, 42]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #655 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 3, 7], [2, 1, 0, 10], [8, 1, 6, 10], [6, 10, 5, 9]]
b = [[8, 6, 1, 0, 2, 2], [6, 2, 2, 1, 2, 0], [9, 3, 10, 1, 3, 0], [7, 5, 7, 5, 2, 9]]
expected = [[162, 86, 101, 47, 49, 71], [92, 64, 74, 51, 26, 94], [194, 118, 140, 57, 56, 106], [216, 116, 139, 60, 65, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #656 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 7, 1, 6, 6, 7, 7, 9], [5, 2, 8, 5, 1, 8, 4, 5, 3], [0, 7, 5, 0, 9, 10, 1, 6, 10], [0, 1, 0, 10, 0, 0, 9, 2, 2], [10, 1, 6, 3, 1, 1, 8, 2, 0], [4, 8, 7, 9, 7, 9, 10, 3, 8], [2, 2, 2, 2, 2, 4, 10, 10, 6], [2, 3, 6, 3, 1, 3, 5, 0, 7]]
b = [[7, 9, 8, 9, 0, 2, 1], [9, 7, 8, 8, 0, 10, 7], [7, 1, 4, 5, 8, 7, 9], [2, 5, 1, 5, 4, 3, 2], [6, 1, 2, 10, 0, 4, 9], [8, 8, 10, 2, 3, 9, 4], [5, 3, 3, 1, 2, 6, 3], [8, 1, 5, 5, 9, 10, 0], [2, 1, 1, 0, 3, 0, 6]]
expected = [[322, 185, 246, 240, 182, 294, 252], [255, 177, 215, 181, 170, 251, 172], [305, 162, 237, 222, 156, 297, 278], [94, 88, 57, 77, 82, 114, 66], [197, 153, 161, 173, 97, 162, 114], [371, 264, 290, 293, 190, 363, 318], [236, 124, 172, 142, 164, 248, 138], [158, 107, 121, 108, 100, 146, 161]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #657 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 5, 0, 9], [1, 3, 9, 6, 5], [7, 2, 6, 8, 2], [7, 3, 10, 1, 7], [4, 8, 6, 8, 4]]
b = [[2, 5, 7, 8, 5], [1, 10, 2, 10, 4], [6, 1, 6, 4, 7], [5, 0, 3, 1, 4], [10, 10, 5, 7, 10]]
expected = [[138, 185, 129, 191, 179], [139, 94, 110, 115, 154], [112, 81, 123, 122, 137], [152, 145, 153, 176, 191], [132, 146, 124, 172, 166]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #658 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 1], [4, 2, 8], [1, 9, 6], [4, 8, 1], [5, 1, 0], [2, 5, 4]]
b = [[3, 0, 8, 0, 4, 5], [1, 3, 6, 7, 1, 8], [3, 0, 6, 1, 3, 1]]
expected = [[24, 18, 82, 43, 29, 74], [38, 6, 92, 22, 42, 44], [30, 27, 98, 69, 31, 83], [23, 24, 86, 57, 27, 85], [16, 3, 46, 7, 21, 33], [23, 15, 70, 39, 25, 54]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #659 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 1, 1, 9, 1, 2, 8], [9, 6, 9, 0, 8, 2, 7, 10], [8, 3, 9, 8, 7, 2, 4, 2], [2, 0, 3, 2, 5, 7, 10, 6], [1, 3, 6, 7, 5, 6, 2, 2]]
b = [[1, 0, 6, 10, 2, 2, 7, 3], [7, 2, 3, 5, 8, 0, 6, 9], [2, 1, 7, 1, 10, 3, 2, 0], [0, 2, 2, 2, 2, 9, 0, 1], [10, 8, 6, 1, 4, 9, 5, 0], [8, 6, 2, 3, 3, 4, 6, 3], [4, 9, 9, 1, 2, 3, 10, 10], [0, 0, 5, 9, 1, 10, 9, 2]]
expected = [[125, 103, 147, 129, 85, 189, 178, 67], [193, 160, 300, 240, 218, 246, 329, 177], [149, 135, 228, 155, 190, 218, 197, 109], [154, 179, 201, 117, 105, 194, 241, 141], [140, 120, 141, 88, 144, 178, 136, 79]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #660 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 5, 10, 4, 3, 6, 5, 10], [10, 1, 5, 9, 1, 4, 10, 5, 9]]
b = [[2], [4], [8], [5], [3], [1], [3], [8], [8]]
expected = [[269], [258]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #661 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2], [3, 4], [3, 2], [0, 0], [8, 0], [1, 2], [5, 7], [7, 1], [9, 2], [3, 10]]
b = [[6, 6, 8, 0, 0, 3, 4, 6, 3], [9, 1, 2, 4, 5, 1, 10, 6, 5]]
expected = [[24, 8, 12, 8, 10, 5, 24, 18, 13], [54, 22, 32, 16, 20, 13, 52, 42, 29], [36, 20, 28, 8, 10, 11, 32, 30, 19], [0, 0, 0, 0, 0, 0, 0, 0, 0], [48, 48, 64, 0, 0, 24, 32, 48, 24], [24, 8, 12, 8, 10, 5, 24, 18, 13], [93, 37, 54, 28, 35, 22, 90, 72, 50], [51, 43, 58, 4, 5, 22, 38, 48, 26], [72, 56, 76, 8, 10, 29, 56, 66, 37], [108, 28, 44, 40, 50, 19, 112, 78, 59]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #662 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 2, 3], [0, 4, 3, 8], [8, 4, 4, 1], [4, 6, 4, 3]]
b = [[7, 4, 7, 9, 4, 7], [7, 5, 2, 5, 7, 0], [0, 9, 1, 1, 9, 4], [6, 8, 2, 3, 8, 9]]
expected = [[32, 52, 12, 21, 56, 35], [76, 111, 27, 47, 119, 84], [90, 96, 70, 99, 104, 81], [88, 106, 50, 79, 118, 71]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #663 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 8, 4, 1, 8, 4, 6]]
b = [[1, 3, 2, 9, 9, 5, 9, 10, 2, 1], [6, 5, 10, 4, 9, 7, 8, 0, 5, 7], [10, 9, 7, 1, 2, 4, 8, 2, 9, 9], [6, 4, 9, 6, 10, 5, 2, 9, 6, 8], [2, 3, 5, 9, 1, 1, 4, 0, 2, 10], [10, 9, 9, 6, 2, 3, 2, 0, 7, 5], [8, 5, 6, 0, 7, 3, 4, 4, 9, 4], [4, 10, 6, 9, 4, 6, 9, 2, 4, 4]]
expected = [[285, 281, 301, 180, 197, 179, 227, 90, 251, 244]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #664 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 8, 4, 3, 2, 4, 5, 5, 3], [2, 6, 10, 1, 6, 8, 4, 6, 1, 7]]
b = [[2, 2, 10], [3, 9, 6], [4, 6, 4], [9, 5, 9], [9, 5, 3], [0, 1, 1], [5, 2, 8], [7, 0, 3], [0, 10, 5], [8, 1, 8]]
expected = [[186, 170, 217], [243, 186, 242]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #665 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 8, 9, 0, 10, 8, 10, 0, 8], [2, 2, 10, 6, 9, 8, 2, 10, 9, 9], [3, 1, 6, 8, 7, 6, 10, 10, 0, 6], [6, 9, 3, 5, 3, 8, 10, 4, 10, 9], [3, 5, 7, 2, 10, 8, 9, 2, 0, 3], [2, 4, 10, 1, 7, 1, 1, 5, 3, 7]]
b = [[5, 10, 7, 6, 8, 1], [10, 5, 4, 8, 8, 5], [1, 6, 2, 9, 2, 8], [3, 3, 1, 5, 2, 7], [8, 8, 0, 9, 6, 8], [6, 3, 1, 2, 4, 3], [0, 5, 10, 7, 5, 4], [7, 4, 8, 6, 3, 5], [7, 9, 10, 8, 6, 5], [2, 10, 1, 2, 0, 2]]
expected = [[281, 360, 273, 361, 248, 296], [329, 425, 255, 409, 244, 351], [229, 319, 237, 337, 206, 288], [326, 432, 338, 395, 308, 286], [226, 290, 174, 318, 225, 254], [195, 284, 139, 279, 154, 226]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #666 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10], [0, 10], [3, 3], [1, 7], [0, 6], [1, 5], [0, 2], [7, 5], [1, 1], [1, 6]]
b = [[3], [2]]
expected = [[50], [20], [15], [17], [12], [13], [4], [31], [5], [15]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #667 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6], [1, 2], [0, 1], [2, 5], [10, 6], [5, 9], [2, 10], [1, 0]]
b = [[3, 2, 7, 8, 7, 7, 3], [5, 8, 7, 8, 0, 7, 8]]
expected = [[36, 52, 56, 64, 14, 56, 54], [13, 18, 21, 24, 7, 21, 19], [5, 8, 7, 8, 0, 7, 8], [31, 44, 49, 56, 14, 49, 46], [60, 68, 112, 128, 70, 112, 78], [60, 82, 98, 112, 35, 98, 87], [56, 84, 84, 96, 14, 84, 86], [3, 2, 7, 8, 7, 7, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #668 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 6, 0, 0, 5, 5, 5, 9], [10, 8, 6, 3, 7, 7, 8, 4, 2], [5, 6, 3, 1, 9, 7, 1, 5, 7], [9, 3, 9, 9, 6, 1, 10, 1, 4], [4, 6, 5, 2, 8, 4, 5, 10, 2], [7, 7, 10, 9, 2, 5, 1, 10, 7], [8, 0, 8, 2, 4, 8, 6, 6, 10], [10, 4, 0, 6, 3, 9, 6, 9, 10]]
b = [[8, 5, 2, 1, 4, 5], [2, 0, 2, 4, 3, 9], [6, 2, 7, 5, 9, 0], [8, 8, 0, 10, 5, 4], [9, 0, 1, 4, 9, 10], [7, 9, 5, 1, 6, 9], [9, 4, 10, 3, 0, 9], [10, 10, 2, 4, 8, 4], [8, 6, 3, 1, 10, 10]]
expected = [[266, 191, 170, 105, 240, 264], [396, 233, 214, 179, 290, 375], [323, 198, 128, 127, 303, 335], [397, 218, 212, 219, 279, 311], [351, 214, 159, 166, 285, 303], [420, 318, 176, 238, 382, 318], [414, 288, 218, 144, 346, 338], [450, 353, 184, 171, 335, 411]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #669 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 6], [9, 5, 10], [6, 10, 4], [4, 10, 8]]
b = [[2, 2, 10, 0, 5, 3, 5, 5, 5], [9, 0, 8, 8, 1, 1, 8, 4, 7], [4, 1, 0, 0, 7, 2, 9, 5, 0]]
expected = [[116, 26, 164, 64, 100, 50, 168, 112, 106], [103, 28, 130, 40, 120, 52, 175, 115, 80], [118, 16, 140, 80, 68, 36, 146, 90, 100], [130, 16, 120, 80, 86, 38, 172, 100, 90]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #670 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 9], [8, 10, 1], [7, 8, 2], [4, 1, 9], [5, 7, 10]]
b = [[3, 5, 0, 7, 1, 4, 6, 8], [1, 7, 6, 8, 1, 4, 10, 2], [3, 5, 3, 4, 6, 7, 9, 2]]
expected = [[59, 125, 57, 139, 68, 119, 185, 100], [37, 115, 63, 140, 24, 79, 157, 86], [35, 101, 54, 121, 27, 74, 140, 76], [40, 72, 33, 72, 59, 83, 115, 52], [52, 124, 72, 131, 72, 118, 190, 74]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #671 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 3, 7, 7, 10, 5, 9, 10], [2, 3, 6, 7, 7, 8, 8, 9, 2], [3, 6, 7, 4, 4, 10, 9, 2, 7], [6, 6, 6, 9, 8, 7, 6, 6, 8], [4, 1, 7, 7, 4, 6, 7, 4, 5], [6, 4, 5, 7, 3, 1, 7, 7, 6], [0, 9, 4, 0, 10, 1, 1, 6, 6], [9, 10, 3, 0, 2, 8, 8, 2, 3]]
b = [[9, 1, 0, 2, 3, 1, 0, 0], [6, 4, 3, 3, 2, 9, 6, 6], [5, 8, 3, 9, 7, 10, 1, 9], [9, 5, 10, 4, 9, 9, 9, 4], [7, 8, 9, 10, 3, 8, 7, 2], [6, 4, 5, 4, 6, 9, 9, 1], [5, 6, 4, 1, 6, 0, 10, 3], [4, 5, 9, 7, 9, 0, 8, 0], [6, 1, 7, 2, 7, 0, 3, 6]]
expected = [[332, 256, 375, 265, 354, 275, 381, 178], [314, 280, 327, 272, 329, 280, 366, 158], [317, 246, 268, 220, 299, 285, 324, 202], [401, 289, 367, 292, 365, 328, 374, 215], [285, 222, 259, 211, 287, 232, 275, 162], [292, 208, 262, 199, 286, 188, 266, 161], [215, 194, 234, 222, 184, 210, 213, 150], [284, 182, 168, 155, 209, 217, 254, 141]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #672 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 2, 9, 8, 4, 6], [1, 7, 3, 1, 4, 10, 10], [5, 1, 4, 3, 1, 6, 8], [6, 7, 1, 5, 9, 10, 3], [2, 0, 10, 6, 4, 3, 1], [0, 6, 3, 0, 10, 3, 8], [9, 8, 2, 10, 10, 6, 6]]
b = [[7, 3, 0, 8, 4, 4, 6, 5, 3], [7, 8, 7, 10, 0, 1, 8, 9, 6], [0, 1, 0, 7, 0, 3, 10, 8, 3], [0, 7, 6, 9, 5, 0, 4, 5, 0], [2, 6, 5, 7, 9, 4, 3, 9, 10], [0, 0, 6, 3, 4, 7, 1, 3, 10], [1, 3, 5, 8, 0, 4, 2, 3, 3]]
expected = [[50, 143, 148, 243, 149, 106, 120, 183, 156], [74, 123, 185, 246, 85, 146, 138, 193, 224], [52, 78, 106, 194, 68, 111, 115, 132, 127], [112, 173, 199, 287, 170, 152, 165, 246, 262], [23, 85, 79, 185, 86, 79, 153, 168, 109], [70, 135, 150, 224, 102, 108, 127, 201, 199], [145, 241, 232, 392, 200, 156, 226, 309, 259]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #673 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 6, 7, 5, 5, 4, 2, 1, 2], [6, 10, 2, 6, 6, 1, 9, 1, 7, 4], [0, 2, 5, 5, 5, 6, 4, 7, 5, 0], [8, 3, 7, 10, 7, 1, 6, 3, 1, 5], [10, 4, 3, 4, 2, 10, 9, 10, 9, 6], [3, 1, 4, 1, 4, 7, 8, 9, 7, 8]]
b = [[8, 1, 6, 9, 6, 6], [8, 0, 7, 8, 6, 10], [2, 3, 6, 5, 4, 8], [3, 9, 9, 5, 8, 6], [0, 6, 5, 7, 7, 1], [6, 1, 6, 8, 7, 7], [10, 9, 10, 9, 3, 10], [5, 4, 1, 2, 9, 2], [10, 6, 4, 6, 10, 8], [10, 2, 3, 1, 3, 1]]
expected = [[183, 174, 237, 232, 226, 218], [361, 238, 339, 353, 319, 353], [202, 190, 217, 229, 274, 231], [273, 244, 324, 309, 300, 287], [480, 264, 366, 412, 437, 408], [360, 221, 261, 284, 324, 281]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #674 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 1, 3, 9, 4, 1, 3, 4]]
b = [[5], [9], [10], [3], [4], [3], [8], [1], [9]]
expected = [[162]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #675 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 4, 1, 1], [8, 4, 5, 4, 3], [7, 5, 10, 9, 0], [6, 10, 6, 9, 9], [3, 3, 4, 8, 7], [5, 10, 0, 9, 2], [4, 10, 0, 8, 6], [0, 10, 0, 6, 5], [8, 6, 4, 2, 8]]
b = [[9, 0, 4, 7, 8, 5, 7, 2, 0, 2], [8, 8, 4, 1, 3, 6, 4, 0, 10, 0], [6, 0, 9, 9, 3, 7, 4, 1, 10, 8], [3, 2, 7, 9, 5, 2, 2, 2, 6, 6], [0, 0, 0, 4, 1, 5, 4, 1, 3, 9]]
expected = [[43, 18, 51, 51, 24, 47, 30, 7, 69, 47], [146, 40, 121, 153, 114, 122, 112, 32, 123, 107], [190, 58, 201, 225, 146, 153, 127, 42, 204, 148], [197, 98, 181, 223, 150, 195, 160, 45, 241, 195], [99, 40, 116, 160, 92, 112, 93, 33, 139, 149], [152, 98, 123, 134, 117, 113, 101, 30, 160, 82], [140, 96, 112, 134, 108, 126, 108, 30, 166, 110], [98, 92, 82, 84, 65, 97, 72, 17, 151, 81], [150, 52, 106, 148, 112, 148, 132, 32, 136, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #676 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 0, 3, 1, 9, 2, 4], [7, 10, 2, 10, 7, 0, 4, 4], [5, 7, 2, 10, 6, 8, 9, 2], [10, 7, 4, 9, 6, 1, 10, 2], [6, 4, 0, 9, 10, 3, 10, 8], [7, 4, 0, 10, 0, 10, 2, 0], [8, 2, 9, 3, 3, 1, 6, 9], [9, 9, 9, 9, 5, 6, 0, 4]]
b = [[10], [8], [0], [8], [9], [0], [0], [0]]
expected = [[109], [293], [240], [282], [254], [182], [147], [279]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #677 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [1], [5], [4], [4], [3], [7]]
b = [[3, 1, 1, 3, 3, 6, 8, 9, 0]]
expected = [[6, 2, 2, 6, 6, 12, 16, 18, 0], [3, 1, 1, 3, 3, 6, 8, 9, 0], [15, 5, 5, 15, 15, 30, 40, 45, 0], [12, 4, 4, 12, 12, 24, 32, 36, 0], [12, 4, 4, 12, 12, 24, 32, 36, 0], [9, 3, 3, 9, 9, 18, 24, 27, 0], [21, 7, 7, 21, 21, 42, 56, 63, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #678 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 3, 2, 4, 10, 10, 3, 9]]
b = [[10, 3, 1, 1, 4, 9], [8, 8, 3, 3, 0, 6], [8, 1, 6, 6, 3, 8], [2, 4, 10, 10, 9, 3], [2, 4, 6, 3, 2, 7], [6, 4, 4, 10, 8, 4], [9, 6, 3, 4, 4, 10], [9, 9, 0, 9, 7, 7], [7, 10, 5, 0, 6, 2]]
expected = [[330, 277, 189, 229, 242, 282]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #679 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 2, 8, 0], [5, 5, 5, 4, 4], [7, 5, 9, 4, 8], [6, 6, 8, 8, 8], [2, 1, 1, 1, 0]]
b = [[6, 7], [1, 8], [5, 1], [8, 3], [10, 3]]
expected = [[96, 79], [132, 104], [204, 134], [226, 146], [26, 26]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #680 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 2], [9, 3, 1], [5, 5, 0], [10, 2, 9], [0, 9, 8], [7, 7, 7], [0, 10, 7], [8, 3, 2], [7, 2, 8]]
b = [[4, 5, 8, 0, 10], [6, 5, 0, 1, 8], [2, 4, 3, 5, 1]]
expected = [[78, 78, 46, 19, 124], [56, 64, 75, 8, 115], [50, 50, 40, 5, 90], [70, 96, 107, 47, 125], [70, 77, 24, 49, 80], [84, 98, 77, 42, 133], [74, 78, 21, 45, 87], [54, 63, 70, 13, 106], [56, 77, 80, 42, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #681 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 0, 0, 2, 10], [5, 4, 5, 3, 4, 1], [0, 5, 1, 1, 5, 5], [0, 5, 3, 4, 7, 10]]
b = [[0, 8, 9], [10, 4, 0], [10, 10, 5], [0, 1, 2], [0, 3, 6], [5, 8, 3]]
expected = [[80, 130, 78], [95, 129, 103], [85, 86, 52], [130, 155, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #682 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1], [3, 10], [1, 0], [2, 3], [0, 6], [8, 6], [0, 6]]
b = [[5, 0, 1, 5, 4, 0], [0, 0, 7, 0, 10, 0]]
expected = [[35, 0, 14, 35, 38, 0], [15, 0, 73, 15, 112, 0], [5, 0, 1, 5, 4, 0], [10, 0, 23, 10, 38, 0], [0, 0, 42, 0, 60, 0], [40, 0, 50, 40, 92, 0], [0, 0, 42, 0, 60, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #683 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 9], [4, 5, 1]]
b = [[0, 10, 4, 9, 5, 4, 9], [0, 3, 10, 0, 10, 5, 4], [9, 10, 3, 2, 5, 7, 3]]
expected = [[81, 171, 121, 72, 145, 122, 109], [9, 65, 69, 38, 75, 48, 59]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #684 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [5], [8]]
b = [[6, 5, 5, 1, 7, 5, 7, 1, 8, 9]]
expected = [[36, 30, 30, 6, 42, 30, 42, 6, 48, 54], [30, 25, 25, 5, 35, 25, 35, 5, 40, 45], [48, 40, 40, 8, 56, 40, 56, 8, 64, 72]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #685 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 9, 6, 2, 4, 3], [8, 7, 8, 3, 1, 3, 4], [5, 10, 8, 8, 6, 8, 8], [3, 2, 6, 4, 2, 0, 2], [0, 2, 3, 4, 4, 1, 10], [8, 3, 0, 6, 10, 4, 4], [4, 6, 9, 9, 2, 0, 3]]
b = [[1, 10, 6, 6, 2, 4, 1, 0], [8, 3, 7, 1, 6, 6, 6, 5], [6, 6, 0, 10, 0, 6, 7, 5], [0, 10, 2, 1, 7, 0, 0, 0], [2, 6, 2, 9, 1, 2, 9, 8], [5, 5, 2, 1, 7, 2, 8, 4], [0, 2, 1, 4, 10, 7, 7, 8]]
expected = [[105, 191, 66, 151, 126, 117, 155, 116], [129, 208, 115, 166, 141, 158, 167, 127], [185, 300, 152, 222, 268, 212, 295, 234], [59, 128, 46, 110, 68, 78, 89, 72], [47, 113, 42, 113, 151, 110, 147, 141], [72, 237, 113, 167, 154, 106, 176, 143], [110, 220, 91, 159, 139, 131, 142, 115]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #686 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [3], [7], [1], [3], [9], [6], [3]]
b = [[10, 1, 4, 7, 3]]
expected = [[70, 7, 28, 49, 21], [30, 3, 12, 21, 9], [70, 7, 28, 49, 21], [10, 1, 4, 7, 3], [30, 3, 12, 21, 9], [90, 9, 36, 63, 27], [60, 6, 24, 42, 18], [30, 3, 12, 21, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #687 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 1, 5, 6], [7, 9, 8, 2, 0], [5, 0, 2, 7, 1], [10, 1, 8, 2, 6], [5, 5, 7, 8, 5], [4, 3, 8, 2, 5], [1, 8, 8, 6, 3], [4, 3, 7, 9, 1]]
b = [[8, 7, 6, 7, 1, 10, 9, 1, 3], [3, 2, 9, 3, 10, 3, 7, 4, 1], [2, 6, 5, 3, 5, 7, 5, 5, 2], [3, 3, 10, 2, 7, 3, 1, 2, 5], [0, 8, 3, 7, 6, 4, 3, 2, 3]]
expected = [[76, 115, 178, 110, 170, 113, 127, 67, 66], [105, 121, 183, 104, 151, 159, 168, 87, 56], [65, 76, 113, 62, 70, 89, 65, 31, 57], [105, 174, 147, 143, 110, 189, 157, 70, 75], [93, 151, 205, 122, 176, 158, 138, 86, 89], [63, 128, 126, 100, 118, 131, 114, 70, 56], [66, 113, 187, 88, 181, 120, 120, 91, 66], [82, 111, 179, 83, 138, 129, 104, 71, 77]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #688 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 7], [0, 1, 7], [4, 7, 3], [10, 1, 6], [2, 5, 7], [2, 6, 6], [9, 7, 3]]
b = [[5, 5, 5], [4, 2, 7], [7, 8, 0]]
expected = [[91, 82, 66], [53, 58, 7], [69, 58, 69], [96, 100, 57], [79, 76, 45], [76, 70, 52], [94, 83, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #689 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 10, 5, 6, 6, 4, 5, 0, 4], [5, 10, 6, 10, 0, 10, 3, 3, 0, 4], [5, 9, 4, 6, 3, 4, 9, 6, 6, 10], [2, 3, 5, 10, 0, 9, 1, 10, 10, 10], [4, 5, 3, 5, 4, 10, 1, 4, 6, 6], [4, 5, 5, 9, 8, 3, 3, 0, 7, 8], [10, 3, 1, 6, 10, 2, 1, 5, 1, 2], [9, 0, 3, 2, 5, 6, 2, 5, 4, 2], [5, 0, 5, 9, 10, 9, 1, 2, 7, 0], [8, 10, 6, 5, 7, 10, 1, 0, 8, 3]]
b = [[7, 8, 10, 4, 10, 7, 3, 0, 4], [5, 10, 2, 6, 6, 2, 7, 1, 10], [3, 4, 8, 7, 1, 0, 0, 6, 6], [6, 3, 5, 8, 10, 9, 1, 7, 10], [3, 10, 3, 4, 1, 1, 8, 10, 2], [8, 0, 3, 4, 4, 10, 6, 10, 5], [9, 2, 6, 1, 6, 7, 1, 6, 3], [7, 10, 3, 5, 5, 5, 1, 3, 5], [0, 0, 9, 6, 4, 2, 4, 2, 2], [2, 0, 7, 3, 6, 2, 9, 2, 9]]
expected = [[267, 261, 276, 247, 247, 222, 180, 266, 289], [299, 230, 253, 272, 313, 289, 197, 251, 366], [312, 272, 347, 283, 355, 275, 261, 249, 379], [275, 198, 339, 318, 335, 297, 232, 269, 376], [233, 191, 255, 238, 253, 238, 227, 240, 281], [213, 215, 305, 266, 279, 208, 241, 256, 312], [218, 284, 224, 199, 244, 198, 177, 198, 214], [204, 194, 234, 174, 207, 197, 146, 181, 171], [229, 209, 267, 256, 235, 247, 189, 309, 232], [270, 275, 323, 300, 299, 257, 275, 279, 328]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #690 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8], [4, 10], [8, 8], [0, 10], [7, 3], [8, 6]]
b = [[6, 5, 0], [10, 9, 5]]
expected = [[98, 87, 40], [124, 110, 50], [128, 112, 40], [100, 90, 50], [72, 62, 15], [108, 94, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #691 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 1, 8, 7, 6, 2], [8, 0, 3, 2, 6, 9, 10], [1, 5, 8, 4, 5, 4, 10], [3, 7, 1, 4, 9, 0, 6], [10, 9, 5, 3, 7, 7, 2], [0, 8, 10, 1, 7, 4, 8], [7, 7, 5, 5, 0, 4, 7], [10, 2, 2, 0, 5, 8, 10], [7, 6, 5, 0, 0, 4, 6], [1, 1, 9, 4, 0, 3, 5]]
b = [[0, 8, 3, 0, 3, 9, 9], [6, 4, 8, 1, 3, 9, 3], [5, 0, 4, 7, 4, 6, 2], [0, 2, 9, 7, 0, 2, 1], [7, 1, 4, 9, 3, 9, 3], [3, 8, 2, 4, 0, 10, 9], [9, 0, 0, 4, 10, 5, 0]]
expected = [[138, 159, 201, 166, 90, 290, 172], [174, 146, 96, 165, 154, 288, 179], [207, 73, 139, 190, 165, 245, 95], [164, 69, 141, 147, 121, 215, 81], [167, 185, 191, 164, 118, 350, 214], [231, 73, 149, 196, 165, 277, 102], [142, 126, 150, 121, 132, 241, 135], [171, 157, 90, 133, 159, 295, 187], [127, 112, 97, 81, 119, 217, 127], [105, 44, 89, 124, 92, 135, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #692 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 5, 5, 8, 7, 7, 8, 9], [1, 6, 3, 10, 3, 1, 5, 9, 3], [4, 9, 6, 4, 6, 8, 6, 0, 7], [9, 3, 8, 10, 2, 7, 6, 4, 3], [3, 2, 9, 5, 0, 6, 8, 2, 1], [10, 0, 1, 2, 9, 5, 10, 8, 7], [6, 5, 10, 0, 7, 0, 0, 6, 9]]
b = [[3, 7, 2, 8, 7], [1, 0, 9, 8, 5], [5, 4, 3, 10, 4], [10, 3, 3, 2, 3], [8, 5, 10, 2, 10], [5, 2, 2, 3, 1], [0, 1, 0, 1, 0], [2, 7, 2, 9, 9], [10, 6, 6, 5, 4]]
expected = [[295, 241, 204, 261, 265], [201, 152, 163, 216, 203], [249, 158, 237, 249, 205], [259, 201, 159, 278, 215], [150, 112, 88, 189, 110], [238, 243, 187, 244, 275], [231, 213, 223, 301, 267]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #693 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 8, 5], [8, 2, 4, 6], [5, 6, 4, 1], [6, 8, 2, 2], [4, 7, 0, 9], [8, 2, 6, 4], [9, 0, 5, 6], [9, 10, 2, 4], [7, 8, 2, 6], [9, 1, 0, 2]]
b = [[0, 7, 7, 5, 10, 4, 7, 7, 6, 1], [0, 2, 6, 9, 7, 8, 0, 5, 0, 6], [4, 0, 4, 7, 8, 6, 5, 10, 5, 10], [4, 9, 0, 3, 10, 10, 5, 10, 9, 10]]
expected = [[52, 59, 46, 81, 134, 106, 79, 144, 97, 132], [40, 114, 84, 104, 186, 132, 106, 166, 122, 120], [20, 56, 87, 110, 134, 102, 60, 115, 59, 91], [16, 76, 98, 122, 152, 120, 62, 122, 64, 94], [36, 123, 70, 110, 179, 162, 73, 153, 105, 136], [40, 96, 92, 112, 182, 124, 106, 166, 114, 120], [44, 117, 83, 98, 190, 126, 118, 173, 133, 119], [24, 119, 131, 161, 216, 168, 93, 173, 100, 129], [32, 119, 105, 139, 202, 164, 89, 169, 106, 135], [8, 83, 69, 60, 117, 64, 73, 88, 72, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #694 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 0, 7, 6], [6, 10, 10, 9, 6]]
b = [[10, 7, 0, 6, 7, 4, 2, 7, 8, 6], [7, 9, 10, 0, 5, 5, 10, 10, 3, 2], [8, 5, 4, 8, 1, 5, 5, 2, 7, 3], [1, 1, 8, 5, 2, 5, 1, 8, 8, 6], [1, 4, 10, 5, 4, 9, 4, 3, 9, 5]]
expected = [[73, 73, 116, 101, 80, 113, 43, 116, 158, 108], [225, 215, 272, 191, 144, 223, 195, 252, 274, 170]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #695 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 2, 9, 7, 6, 1, 9]]
b = [[7, 10], [0, 6], [9, 3], [7, 8], [6, 6], [6, 2], [2, 9], [2, 8]]
expected = [[214, 317]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #696 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 6, 8, 8], [10, 5, 3, 10, 9], [4, 5, 9, 9, 5], [3, 8, 9, 3, 1], [10, 1, 3, 8, 3], [5, 2, 10, 9, 5], [5, 9, 10, 1, 1], [10, 1, 4, 10, 8]]
b = [[0, 4, 3, 7, 1, 7, 9, 7], [10, 6, 6, 9, 10, 10, 0, 10], [8, 9, 4, 10, 1, 3, 5, 10], [7, 7, 0, 1, 6, 2, 9, 4], [1, 10, 10, 5, 9, 0, 8, 2]]
expected = [[122, 220, 128, 159, 142, 86, 220, 160], [153, 257, 162, 200, 204, 149, 267, 208], [190, 240, 128, 197, 162, 123, 202, 214], [174, 172, 103, 191, 119, 134, 107, 205], [93, 159, 78, 132, 98, 105, 201, 148], [168, 235, 117, 187, 134, 103, 216, 201], [178, 181, 119, 222, 120, 157, 112, 231], [120, 232, 132, 169, 156, 112, 264, 176]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #697 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 4, 6, 1], [10, 7, 4, 7, 3], [8, 4, 7, 4, 7], [1, 10, 2, 10, 8], [6, 4, 4, 7, 10]]
b = [[9], [8], [1], [0], [6]]
expected = [[96], [168], [153], [139], [150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #698 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 6, 2, 8, 10, 8, 3, 9], [10, 2, 1, 4, 8, 8, 7, 4, 8], [3, 2, 4, 5, 2, 2, 7, 9, 9], [7, 7, 2, 9, 9, 7, 10, 9, 2], [3, 7, 4, 8, 4, 4, 5, 7, 0], [2, 6, 8, 3, 10, 8, 10, 9, 3], [9, 3, 6, 7, 8, 6, 0, 0, 8]]
b = [[8, 2, 9, 6, 5, 7, 6, 9, 10], [8, 9, 6, 8, 7, 4, 9, 10, 2], [10, 6, 2, 3, 2, 4, 9, 1, 10], [2, 2, 0, 10, 7, 4, 7, 0, 0], [3, 4, 3, 3, 3, 6, 10, 10, 9], [1, 8, 9, 5, 6, 7, 9, 4, 4], [7, 9, 4, 9, 1, 8, 3, 7, 7], [2, 0, 7, 6, 0, 2, 3, 4, 2], [10, 8, 8, 5, 2, 6, 8, 6, 9]]
expected = [[378, 391, 368, 361, 234, 359, 466, 401, 403], [283, 275, 320, 310, 189, 314, 364, 336, 347], [255, 217, 234, 274, 115, 219, 265, 218, 248], [292, 305, 318, 410, 234, 334, 412, 371, 319], [201, 202, 194, 285, 169, 203, 285, 220, 185], [306, 330, 299, 343, 183, 314, 412, 342, 349], [280, 239, 253, 260, 203, 265, 382, 269, 324]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #699 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 1, 0], [2, 10, 9, 3], [5, 4, 8, 9], [2, 2, 3, 0], [0, 5, 6, 9], [7, 4, 10, 1], [3, 9, 2, 8]]
b = [[6, 1, 3, 10, 6, 3, 4, 5], [3, 4, 3, 9, 6, 6, 6, 6], [0, 8, 2, 7, 8, 6, 5, 6], [2, 2, 0, 9, 3, 8, 7, 0]]
expected = [[60, 46, 44, 139, 92, 72, 77, 84], [48, 120, 54, 200, 153, 144, 134, 124], [60, 103, 43, 223, 145, 159, 147, 97], [18, 34, 18, 59, 48, 36, 35, 40], [33, 86, 27, 168, 105, 138, 123, 66], [56, 105, 53, 185, 149, 113, 109, 119], [61, 71, 40, 197, 112, 139, 132, 81]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #700 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 4, 6, 1, 0, 2, 6, 1, 3], [3, 2, 8, 9, 5, 10, 9, 6, 2, 8], [8, 8, 10, 7, 3, 3, 9, 10, 1, 8], [2, 6, 8, 0, 7, 5, 8, 7, 1, 3], [10, 7, 0, 8, 5, 4, 9, 2, 9, 1], [8, 2, 3, 4, 0, 3, 2, 5, 7, 0], [10, 7, 3, 7, 9, 9, 3, 7, 9, 5], [10, 0, 10, 6, 5, 10, 3, 9, 9, 6], [2, 6, 6, 0, 7, 5, 6, 8, 2, 0], [0, 2, 2, 3, 7, 6, 9, 10, 7, 10]]
b = [[2, 3, 7, 4], [5, 6, 6, 4], [8, 6, 6, 2], [3, 3, 1, 1], [2, 2, 10, 8], [7, 7, 9, 6], [4, 5, 5, 6], [8, 0, 6, 7], [5, 6, 3, 8], [2, 8, 10, 3]]
expected = [[179, 162, 237, 165], [297, 297, 397, 281], [321, 295, 416, 289], [246, 209, 328, 248], [216, 241, 300, 283], [166, 139, 178, 171], [304, 301, 442, 361], [339, 305, 432, 337], [229, 169, 285, 238], [262, 256, 377, 317]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #701 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 8], [3, 8, 9], [2, 10, 10], [5, 8, 9]]
b = [[6, 4], [10, 8], [9, 9]]
expected = [[214, 180], [179, 157], [202, 178], [191, 165]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #702 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 5, 7, 9], [1, 6, 2, 6, 3], [6, 9, 10, 7, 7], [9, 4, 8, 7, 3], [9, 3, 0, 5, 0], [6, 10, 6, 0, 6], [6, 2, 1, 7, 6]]
b = [[0, 9, 2, 5, 0, 1, 5], [5, 3, 1, 3, 10, 6, 7], [4, 1, 3, 9, 7, 5, 5], [7, 8, 10, 7, 4, 10, 1], [5, 6, 8, 8, 10, 3, 1]]
expected = [[114, 142, 163, 181, 153, 125, 56], [95, 95, 98, 107, 128, 116, 66], [169, 189, 177, 252, 258, 201, 157], [116, 175, 140, 202, 154, 152, 123], [50, 130, 71, 89, 50, 77, 71], [104, 126, 88, 162, 202, 114, 136], [93, 153, 135, 142, 115, 111, 62]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #703 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 2, 4, 10, 9]]
b = [[9], [10], [7], [5], [0], [3]]
expected = [[192]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #704 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 1, 9, 8], [10, 5, 9, 8, 4], [10, 2, 9, 7, 10], [4, 0, 5, 3, 8], [1, 8, 8, 8, 8], [6, 2, 4, 4, 7], [6, 2, 5, 3, 4], [6, 3, 1, 6, 5], [0, 0, 5, 9, 5]]
b = [[8, 9, 1, 7, 8, 3, 2, 1, 2], [5, 10, 3, 0, 10, 5, 2, 8, 4], [2, 2, 2, 0, 9, 6, 9, 8, 2], [8, 9, 3, 6, 7, 9, 9, 8, 8], [5, 9, 3, 10, 10, 6, 9, 9, 4]]
expected = [[154, 200, 58, 169, 192, 150, 172, 157, 116], [207, 266, 79, 158, 307, 205, 219, 222, 138], [214, 281, 85, 212, 330, 217, 258, 244, 142], [106, 145, 47, 126, 178, 117, 152, 140, 74], [168, 249, 89, 135, 296, 211, 234, 265, 146], [133, 181, 53, 136, 202, 130, 151, 149, 88], [112, 147, 43, 100, 174, 109, 124, 122, 70], [138, 185, 50, 128, 179, 123, 126, 131, 94], [107, 136, 52, 104, 158, 141, 171, 157, 102]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #705 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 6, 10, 2, 3, 5, 0, 7, 10], [7, 4, 5, 0, 8, 10, 9, 6, 0, 1], [3, 0, 4, 7, 4, 7, 7, 5, 7, 4], [0, 4, 1, 2, 5, 10, 6, 5, 3, 2]]
b = [[2, 5, 10, 7, 9, 4, 1, 9, 10], [3, 0, 0, 5, 8, 10, 2, 1, 10], [4, 6, 10, 5, 7, 4, 0, 9, 3], [10, 10, 3, 0, 5, 9, 10, 3, 6], [5, 3, 10, 8, 6, 0, 2, 8, 1], [0, 4, 8, 10, 7, 2, 6, 2, 7], [8, 7, 9, 0, 3, 7, 2, 3, 6], [8, 9, 3, 5, 9, 3, 5, 1, 2], [2, 5, 5, 1, 7, 7, 6, 10, 6], [1, 0, 6, 6, 0, 8, 9, 2, 8]]
expected = [[218, 259, 344, 202, 268, 332, 275, 276, 343], [207, 246, 385, 294, 329, 197, 148, 231, 277], [226, 278, 324, 199, 278, 250, 240, 234, 263], [157, 183, 242, 205, 233, 176, 171, 136, 210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #706 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 10, 7], [8, 3, 1, 2], [7, 6, 4, 5], [0, 4, 10, 6], [6, 10, 7, 3], [8, 6, 6, 7]]
b = [[5, 5, 0, 6, 0, 6, 2, 0, 4], [2, 5, 9, 6, 5, 4, 0, 9, 2], [3, 8, 9, 10, 5, 9, 10, 0, 0], [7, 3, 7, 2, 10, 9, 0, 5, 6]]
expected = [[94, 131, 184, 150, 145, 179, 102, 80, 56], [63, 69, 50, 80, 40, 87, 26, 37, 50], [94, 112, 125, 128, 100, 147, 54, 79, 70], [80, 118, 168, 136, 130, 160, 100, 66, 44], [92, 145, 174, 172, 115, 166, 82, 105, 62], [119, 139, 157, 158, 130, 189, 76, 89, 86]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #707 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 6, 4], [6, 10, 10, 1], [0, 4, 9, 6], [5, 8, 9, 7], [1, 4, 1, 8], [9, 1, 2, 0], [1, 3, 0, 3], [8, 10, 7, 9]]
b = [[9, 6, 1, 10, 0, 9, 5, 3, 10], [9, 0, 8, 8, 4, 4, 8, 6, 5], [2, 1, 10, 2, 7, 8, 7, 7, 9], [9, 8, 9, 2, 2, 9, 7, 3, 3]]
expected = [[120, 44, 153, 86, 78, 121, 131, 99, 111], [173, 54, 195, 162, 112, 183, 187, 151, 203], [108, 57, 176, 62, 91, 142, 137, 105, 119], [198, 95, 222, 146, 109, 212, 201, 147, 192], [119, 71, 115, 60, 39, 105, 100, 58, 63], [94, 56, 37, 102, 18, 101, 67, 47, 113], [63, 30, 52, 40, 18, 48, 50, 30, 34], [257, 127, 239, 192, 107, 249, 232, 160, 220]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #708 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 4, 5], [3, 1, 5, 0], [1, 10, 2, 4], [7, 1, 2, 9], [5, 8, 9, 6]]
b = [[4, 7, 5, 8, 1], [9, 0, 1, 9, 8], [10, 3, 6, 6, 1], [5, 5, 9, 3, 7]]
expected = [[166, 72, 103, 160, 116], [71, 36, 46, 63, 16], [134, 33, 63, 122, 111], [102, 100, 129, 104, 80], [212, 92, 141, 184, 120]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #709 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 1, 0, 10, 3, 0, 5, 1], [0, 5, 8, 1, 3, 5, 7, 7, 2]]
b = [[2], [0], [1], [4], [8], [2], [7], [2], [5]]
expected = [[106], [119]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #710 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 6, 10, 7, 9, 5, 3], [9, 8, 7, 10, 10, 1, 5, 2], [8, 3, 10, 9, 10, 6, 7, 2], [8, 0, 4, 1, 3, 0, 9, 8], [10, 4, 4, 5, 6, 0, 1, 8], [1, 7, 2, 10, 9, 7, 6, 5], [2, 5, 8, 10, 5, 8, 2, 2]]
b = [[3, 5], [1, 2], [8, 3], [6, 8], [4, 1], [9, 9], [9, 10], [4, 10]]
expected = [[307, 323], [253, 251], [326, 302], [187, 233], [161, 206], [259, 287], [253, 241]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #711 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 8, 0, 8, 1, 5, 6, 7, 5], [4, 2, 5, 5, 10, 10, 1, 7, 9, 8], [3, 6, 9, 7, 5, 5, 0, 5, 2, 1]]
b = [[10, 8, 7, 7, 8, 0, 4, 3, 9, 7], [2, 0, 9, 9, 5, 6, 0, 6, 2, 6], [9, 10, 7, 9, 9, 6, 8, 5, 10, 2], [5, 9, 9, 3, 10, 2, 4, 3, 10, 3], [3, 1, 10, 3, 5, 6, 10, 8, 10, 7], [8, 6, 3, 4, 7, 4, 8, 0, 2, 1], [2, 1, 6, 8, 0, 0, 3, 0, 3, 6], [4, 0, 2, 5, 6, 3, 8, 9, 1, 9], [10, 10, 5, 4, 6, 5, 6, 0, 7, 4], [0, 5, 5, 6, 4, 0, 8, 4, 4, 10]]
expected = [[274, 242, 310, 297, 280, 171, 321, 214, 312, 295], [344, 328, 361, 303, 385, 218, 433, 239, 365, 330], [253, 237, 291, 251, 311, 179, 262, 200, 282, 199]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #712 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 2, 3, 9, 9, 3, 10], [0, 5, 5, 9, 5, 8, 7, 8], [6, 8, 6, 10, 6, 5, 6, 1], [6, 0, 7, 2, 7, 8, 6, 4], [7, 6, 5, 6, 2, 5, 8, 10], [10, 10, 6, 4, 0, 1, 0, 1], [3, 9, 5, 10, 0, 3, 10, 0], [3, 4, 4, 7, 7, 10, 9, 9], [6, 3, 8, 2, 4, 0, 7, 2]]
b = [[7, 9, 1, 10, 1, 2], [4, 6, 3, 10, 2, 2], [1, 7, 5, 9, 8, 4], [7, 1, 2, 2, 0, 7], [1, 7, 5, 10, 6, 5], [3, 9, 2, 4, 5, 0], [6, 0, 1, 0, 10, 7], [0, 8, 7, 3, 8, 1]]
expected = [[130, 316, 179, 290, 244, 127], [159, 245, 162, 219, 254, 175], [207, 249, 133, 297, 199, 195], [130, 258, 130, 241, 236, 135], [185, 279, 160, 257, 256, 164], [147, 213, 87, 269, 91, 93], [201, 153, 91, 197, 176, 184], [181, 297, 176, 257, 297, 186], [122, 174, 100, 212, 186, 135]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #713 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 3, 3, 10, 3, 1, 2, 0, 1], [3, 9, 8, 1, 6, 5, 8, 4, 6, 9], [10, 2, 5, 3, 4, 9, 10, 3, 10, 2], [2, 2, 9, 1, 0, 6, 5, 2, 7, 9], [8, 1, 8, 0, 3, 5, 10, 2, 10, 8]]
b = [[6, 8, 2, 7, 10, 8, 2, 0], [5, 6, 8, 6, 9, 4, 10, 7], [0, 0, 1, 6, 8, 10, 2, 10], [0, 9, 9, 8, 7, 5, 3, 0], [8, 10, 4, 1, 4, 2, 9, 3], [7, 10, 7, 10, 1, 4, 5, 2], [8, 6, 7, 0, 10, 8, 10, 10], [1, 3, 1, 4, 1, 8, 8, 10], [10, 3, 0, 6, 0, 0, 4, 8], [4, 3, 9, 1, 0, 6, 1, 0]]
expected = [[182, 258, 163, 170, 215, 183, 211, 131], [310, 302, 295, 248, 295, 327, 339, 339], [356, 354, 238, 304, 307, 313, 306, 304], [212, 181, 198, 207, 175, 253, 178, 242], [326, 270, 223, 239, 272, 318, 258, 306]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #714 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [7], [5], [1], [2], [2], [7], [0]]
b = [[2, 8, 7, 0, 1]]
expected = [[2, 8, 7, 0, 1], [14, 56, 49, 0, 7], [10, 40, 35, 0, 5], [2, 8, 7, 0, 1], [4, 16, 14, 0, 2], [4, 16, 14, 0, 2], [14, 56, 49, 0, 7], [0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #715 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2], [10, 0]]
b = [[6], [6]]
expected = [[66], [60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #716 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 3, 0, 7, 8, 8, 1, 5, 8], [10, 5, 7, 4, 4, 6, 0, 3, 0, 8], [6, 7, 7, 7, 8, 1, 1, 6, 4, 9], [0, 4, 2, 8, 1, 3, 5, 3, 8, 10]]
b = [[6], [8], [9], [8], [1], [9], [6], [5], [2], [10]]
expected = [[369], [348], [362], [303]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #717 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 5, 10, 6], [10, 1, 7, 7, 8], [8, 9, 9, 1, 10]]
b = [[6, 10, 3, 10, 9], [0, 1, 5, 2, 4], [6, 8, 2, 6, 8], [2, 4, 10, 4, 1], [10, 7, 8, 9, 1]]
expected = [[122, 142, 164, 144, 74], [196, 241, 183, 244, 165], [204, 235, 177, 246, 191]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #718 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 10, 2, 9, 9, 8, 3, 6, 9], [2, 1, 6, 7, 8, 4, 6, 4, 6, 5], [10, 6, 5, 3, 1, 5, 4, 4, 9, 5]]
b = [[2, 3, 6, 1, 6, 0], [7, 7, 7, 4, 9, 5], [0, 4, 9, 6, 9, 1], [2, 5, 7, 5, 7, 5], [3, 3, 2, 7, 0, 0], [8, 4, 7, 10, 1, 2], [10, 4, 4, 0, 8, 4], [10, 1, 0, 4, 7, 4], [9, 4, 3, 10, 8, 5], [7, 7, 3, 1, 2, 10]]
expected = [[343, 251, 287, 311, 291, 207], [270, 199, 223, 254, 262, 174], [307, 221, 263, 247, 327, 187]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #719 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7], [10, 6], [2, 4], [4, 2], [7, 1], [5, 9], [10, 5], [4, 0], [7, 9]]
b = [[8, 1, 6, 6, 5, 0], [0, 9, 4, 8, 0, 9]]
expected = [[16, 65, 40, 68, 10, 63], [80, 64, 84, 108, 50, 54], [16, 38, 28, 44, 10, 36], [32, 22, 32, 40, 20, 18], [56, 16, 46, 50, 35, 9], [40, 86, 66, 102, 25, 81], [80, 55, 80, 100, 50, 45], [32, 4, 24, 24, 20, 0], [56, 88, 78, 114, 35, 81]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #720 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 3, 9, 9], [5, 9, 9, 7, 1], [5, 5, 10, 9, 7], [6, 9, 9, 7, 2], [7, 6, 9, 6, 9], [2, 10, 9, 2, 9]]
b = [[2, 2, 9, 5, 4, 2, 2], [2, 6, 5, 3, 5, 4, 6], [8, 0, 1, 9, 7, 6, 1], [3, 3, 8, 5, 5, 4, 5], [2, 0, 4, 4, 2, 5, 5]]
expected = [[91, 89, 170, 143, 138, 141, 155], [123, 85, 159, 172, 165, 133, 113], [141, 67, 180, 203, 174, 161, 130], [127, 87, 172, 181, 171, 140, 120], [134, 68, 186, 200, 169, 161, 134], [120, 70, 129, 167, 149, 151, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #721 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 10, 6, 7, 3, 4, 4], [2, 6, 9, 8, 3, 0, 4, 5], [8, 6, 9, 1, 4, 8, 5, 10], [5, 10, 4, 6, 4, 2, 1, 7], [4, 0, 9, 4, 2, 4, 6, 7], [2, 9, 3, 10, 6, 8, 1, 8]]
b = [[0, 2, 1, 1, 7], [2, 1, 8, 9, 5], [8, 6, 5, 4, 8], [4, 10, 6, 4, 2], [6, 5, 2, 5, 2], [9, 6, 3, 3, 5], [8, 3, 2, 6, 10], [1, 0, 5, 10, 6]]
expected = [[223, 192, 193, 235, 220], [171, 171, 182, 213, 208], [234, 169, 199, 276, 318], [133, 139, 192, 237, 199], [191, 154, 136, 184, 234], [206, 212, 227, 275, 213]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #722 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 3, 7, 4, 3, 1, 8]]
b = [[5, 7], [10, 9], [4, 7], [9, 9], [8, 10], [9, 7], [5, 4], [4, 1]]
expected = [[246, 242]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #723 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 0, 3, 3, 8, 8, 10, 4, 2], [2, 8, 8, 8, 8, 3, 7, 9, 10, 0], [10, 9, 6, 10, 1, 2, 0, 10, 7, 7], [9, 3, 7, 8, 2, 8, 5, 4, 7, 3]]
b = [[9, 6, 0], [0, 9, 9], [1, 2, 9], [8, 7, 2], [6, 10, 1], [2, 0, 10], [9, 10, 8], [10, 5, 7], [8, 3, 9], [2, 3, 8]]
expected = [[356, 340, 356], [377, 381, 407], [356, 325, 365], [327, 271, 343]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #724 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 9, 2, 0]]
b = [[9, 4, 5, 4, 5, 0, 4, 0, 9, 6], [5, 6, 4, 8, 9, 0, 1, 4, 2, 8], [6, 6, 10, 6, 3, 4, 0, 0, 4, 9], [2, 10, 10, 0, 4, 8, 5, 10, 6, 8], [10, 6, 5, 7, 1, 4, 10, 3, 6, 3]]
expected = [[68, 86, 118, 70, 53, 52, 12, 28, 52, 113]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #725 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 4, 3, 3], [7, 9, 4, 4, 7], [9, 1, 8, 6, 9], [8, 3, 10, 0, 3], [3, 2, 7, 2, 4], [7, 6, 1, 0, 4]]
b = [[1, 9, 10, 8, 2, 5, 8], [5, 10, 4, 1, 10, 10, 8], [10, 0, 2, 8, 0, 1, 6], [6, 5, 6, 7, 2, 9, 5], [5, 1, 8, 9, 9, 1, 9]]
expected = [[80, 46, 74, 97, 47, 54, 90], [151, 180, 194, 188, 175, 172, 235], [175, 130, 218, 260, 121, 126, 239], [138, 105, 136, 174, 73, 83, 175], [115, 61, 96, 132, 66, 64, 128], [67, 127, 128, 106, 110, 100, 146]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #726 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 10, 9, 3, 0, 0, 0, 8], [4, 5, 1, 9, 9, 6, 7, 5, 9], [6, 2, 2, 6, 5, 9, 0, 9, 7], [4, 0, 4, 7, 0, 5, 10, 9, 3], [2, 5, 0, 9, 5, 1, 1, 7, 0], [5, 7, 9, 5, 6, 4, 8, 3, 9]]
b = [[7, 10, 6], [6, 9, 10], [2, 1, 2], [0, 4, 7], [5, 8, 6], [5, 2, 8], [2, 9, 1], [1, 5, 6], [0, 10, 0]]
expected = [[93, 235, 175], [154, 384, 278], [137, 277, 258], [90, 247, 185], [83, 187, 206], [164, 375, 247]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #727 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 1, 5, 0, 8, 7], [2, 4, 0, 0, 8, 3, 9], [8, 10, 8, 8, 6, 7, 9], [7, 0, 1, 7, 6, 4, 1], [1, 1, 7, 6, 3, 0, 1], [2, 3, 9, 2, 6, 5, 7], [7, 2, 2, 9, 7, 1, 3], [4, 5, 0, 1, 4, 7, 2], [10, 6, 2, 6, 6, 8, 3], [1, 6, 5, 6, 4, 4, 6]]
b = [[6, 2, 8, 5, 10, 1], [10, 2, 3, 4, 3, 1], [7, 2, 3, 10, 3, 2], [9, 3, 8, 1, 7, 6], [9, 7, 9, 9, 0, 5], [2, 0, 4, 1, 3, 8], [6, 1, 2, 0, 6, 6]]
expected = [[208, 50, 168, 83, 199, 151], [184, 77, 130, 101, 95, 124], [398, 127, 282, 229, 265, 222], [180, 80, 187, 110, 140, 119], [152, 58, 109, 112, 82, 73], [229, 83, 156, 173, 127, 147], [240, 101, 213, 136, 166, 128], [145, 51, 123, 84, 95, 103], [276, 99, 244, 162, 208, 168], [235, 76, 153, 125, 133, 141]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #728 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 2, 8, 10, 0, 3, 10, 9, 4], [8, 8, 0, 10, 2, 9, 1, 10, 7, 3], [4, 0, 6, 8, 1, 10, 4, 3, 10, 10], [1, 8, 7, 2, 6, 6, 6, 5, 5, 5], [4, 4, 6, 10, 5, 7, 8, 7, 2, 10], [7, 3, 1, 10, 4, 8, 10, 0, 7, 3], [4, 4, 10, 5, 10, 10, 2, 5, 8, 10]]
b = [[3, 9, 6, 1], [7, 1, 10, 0], [0, 1, 3, 8], [1, 5, 8, 9], [8, 9, 5, 9], [7, 8, 1, 10], [0, 2, 5, 8], [4, 6, 8, 1], [4, 9, 10, 4], [4, 1, 6, 8]]
expected = [[270, 373, 473, 289], [249, 348, 400, 276], [190, 297, 325, 388], [211, 228, 309, 302], [215, 283, 370, 416], [180, 303, 321, 353], [287, 361, 384, 452]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #729 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 3, 8, 7, 1, 7], [3, 3, 1, 3, 7, 5, 10], [10, 4, 10, 0, 2, 0, 3], [7, 6, 6, 6, 10, 9, 4], [8, 0, 8, 8, 2, 4, 2]]
b = [[9, 5, 0, 7], [10, 10, 6, 4], [10, 2, 7, 0], [2, 8, 3, 5], [3, 9, 2, 8], [10, 2, 2, 2], [10, 5, 4, 2]]
expected = [[231, 230, 107, 166], [244, 194, 98, 134], [266, 143, 110, 108], [355, 283, 150, 209], [234, 156, 100, 124]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #730 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 2, 5, 9, 6, 10, 5, 7, 2], [5, 9, 7, 6, 2, 9, 0, 10, 7, 9], [8, 3, 4, 9, 8, 10, 6, 10, 0, 0], [6, 0, 7, 6, 10, 5, 2, 3, 7, 1], [8, 4, 2, 10, 10, 0, 2, 2, 10, 0], [7, 1, 4, 5, 4, 1, 10, 7, 4, 3], [8, 9, 8, 10, 8, 3, 6, 2, 9, 1], [8, 1, 7, 6, 6, 7, 6, 6, 9, 5], [7, 4, 1, 10, 0, 3, 10, 0, 9, 6], [0, 0, 1, 7, 2, 7, 3, 1, 7, 10]]
b = [[0, 5, 4], [3, 6, 1], [5, 10, 9], [4, 8, 8], [4, 7, 8], [6, 7, 3], [5, 2, 9], [10, 10, 5], [3, 7, 0], [6, 10, 2]]
expected = [[253, 355, 285], [323, 513, 251], [287, 408, 341], [196, 346, 265], [162, 328, 242], [215, 304, 271], [240, 436, 332], [275, 440, 307], [188, 313, 232], [189, 294, 154]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #731 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7], [3, 0]]
b = [[3, 6, 6, 7, 4, 7], [0, 7, 4, 7, 0, 5]]
expected = [[21, 91, 70, 98, 28, 84], [9, 18, 18, 21, 12, 21]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #732 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 6, 3, 0, 7], [0, 6, 10, 6, 1, 0], [1, 3, 9, 1, 7, 0]]
b = [[4, 3, 6, 1, 0, 2], [4, 6, 1, 6, 1, 0], [0, 3, 2, 8, 0, 3], [8, 8, 4, 0, 5, 2], [3, 4, 7, 5, 5, 3], [5, 6, 7, 0, 6, 8]]
expected = [[127, 162, 130, 110, 66, 96], [75, 118, 57, 121, 41, 45], [45, 84, 80, 126, 43, 52]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #733 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 5, 4, 3, 7, 5, 10, 4], [9, 2, 2, 10, 8, 4, 5, 7, 6], [1, 8, 4, 5, 0, 6, 1, 6, 6], [9, 10, 8, 0, 6, 7, 1, 8, 1], [1, 0, 7, 3, 4, 5, 3, 8, 3]]
b = [[1, 3, 3, 4, 7, 1], [6, 1, 4, 7, 7, 8], [6, 0, 1, 4, 6, 9], [1, 10, 6, 6, 2, 7], [6, 1, 6, 2, 4, 0], [2, 3, 5, 6, 0, 5], [3, 7, 9, 5, 1, 4], [7, 0, 2, 9, 3, 3], [7, 7, 7, 1, 1, 10]]
expected = [[188, 137, 188, 230, 117, 209], [205, 226, 266, 252, 173, 234], [177, 128, 162, 207, 122, 248], [233, 78, 178, 270, 231, 234], [166, 94, 141, 178, 101, 176]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #734 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 2]]
b = [[0, 6, 0, 5, 2], [2, 2, 5, 8, 4], [2, 1, 9, 0, 4]]
expected = [[14, 42, 43, 65, 38]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #735 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 3, 6, 7, 3, 6, 7], [0, 10, 9, 4, 0, 1, 6, 4], [4, 0, 5, 4, 3, 4, 3, 4], [6, 2, 0, 0, 5, 1, 3, 10], [9, 4, 7, 2, 9, 0, 1, 3], [9, 5, 0, 6, 2, 2, 9, 0], [0, 2, 6, 8, 6, 1, 6, 10], [8, 4, 3, 9, 3, 5, 1, 9], [4, 0, 1, 0, 1, 8, 6, 5], [9, 4, 1, 2, 10, 3, 6, 5]]
b = [[0, 7, 3, 8, 10, 9, 2, 6, 5], [9, 4, 9, 8, 1, 3, 7, 9, 10], [3, 5, 4, 6, 6, 6, 2, 1, 3], [10, 1, 10, 0, 9, 0, 4, 3, 2], [2, 8, 8, 6, 5, 9, 1, 1, 7], [2, 3, 7, 6, 5, 0, 10, 4, 9], [8, 2, 9, 7, 2, 10, 8, 7, 7], [7, 10, 5, 5, 3, 2, 1, 2, 5]]
expected = [[267, 246, 337, 275, 224, 236, 197, 213, 294], [235, 144, 247, 202, 129, 152, 166, 165, 206], [121, 139, 171, 145, 159, 131, 105, 89, 141], [124, 199, 160, 171, 128, 155, 75, 104, 165], [124, 220, 207, 222, 210, 232, 88, 125, 195], [185, 129, 243, 199, 187, 204, 171, 190, 202], [248, 209, 281, 186, 187, 176, 132, 120, 197], [222, 227, 275, 214, 252, 157, 156, 162, 225], [104, 127, 159, 159, 118, 121, 144, 110, 169], [168, 237, 267, 255, 210, 259, 149, 171, 256]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #736 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 2, 9, 9, 3, 1, 6], [5, 4, 8, 5, 10, 4, 9, 5], [10, 0, 8, 1, 7, 2, 0, 6], [6, 2, 4, 9, 3, 9, 0, 10], [1, 9, 0, 1, 6, 3, 5, 2], [5, 6, 5, 8, 7, 4, 2, 5], [5, 4, 4, 6, 3, 0, 9, 3], [7, 0, 1, 2, 10, 3, 7, 5], [1, 4, 1, 6, 4, 4, 0, 9], [0, 0, 1, 9, 0, 5, 9, 1]]
b = [[4, 2, 7, 2, 3, 1, 3, 3, 3], [9, 4, 2, 10, 4, 3, 9, 2, 0], [9, 0, 5, 0, 6, 2, 2, 7, 4], [7, 7, 8, 9, 0, 3, 5, 9, 10], [0, 3, 2, 9, 9, 7, 6, 9, 6], [8, 10, 10, 4, 4, 5, 9, 6, 9], [2, 8, 9, 2, 7, 2, 0, 7, 2], [0, 2, 10, 7, 2, 5, 6, 6, 8]]
expected = [[219, 192, 285, 318, 186, 175, 268, 283, 259], [213, 213, 314, 254, 258, 181, 218, 331, 251], [135, 80, 212, 142, 161, 118, 147, 206, 180], [213, 202, 334, 246, 133, 163, 248, 272, 303], [126, 137, 140, 191, 144, 108, 164, 149, 102], [211, 177, 258, 260, 172, 155, 227, 265, 237], [152, 155, 228, 170, 151, 97, 125, 213, 151], [89, 154, 233, 183, 188, 139, 150, 233, 186], [123, 130, 206, 211, 95, 126, 185, 186, 199], [130, 187, 218, 126, 91, 77, 98, 187, 165]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #737 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 3, 3, 7, 6, 7, 5, 0], [4, 4, 7, 7, 4, 0, 10, 2, 10], [0, 3, 3, 3, 9, 3, 6, 7, 8], [7, 5, 7, 2, 3, 9, 5, 4, 9], [10, 2, 10, 3, 4, 6, 3, 6, 1], [8, 0, 9, 0, 4, 9, 4, 0, 5], [9, 6, 0, 8, 6, 5, 3, 5, 6], [1, 3, 3, 9, 2, 7, 0, 4, 10], [3, 9, 10, 6, 8, 5, 2, 6, 0]]
b = [[0, 1, 7, 8, 5, 0, 0], [3, 3, 4, 9, 7, 9, 9], [6, 7, 8, 10, 3, 8, 10], [7, 1, 10, 8, 2, 8, 10], [6, 0, 9, 0, 8, 1, 6], [2, 3, 6, 2, 2, 8, 8], [5, 0, 10, 6, 9, 3, 3], [3, 10, 7, 5, 5, 5, 3], [1, 0, 9, 2, 3, 5, 4]]
expected = [[170, 123, 322, 246, 254, 230, 267], [193, 92, 410, 284, 245, 242, 276], [167, 112, 346, 174, 227, 201, 236], [153, 140, 385, 273, 229, 272, 288], [157, 167, 341, 284, 204, 218, 251], [121, 98, 303, 206, 168, 185, 218], [156, 100, 370, 255, 231, 228, 258], [138, 101, 311, 191, 133, 251, 267], [215, 181, 361, 305, 242, 293, 353]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #738 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 8], [9, 1, 3], [7, 3, 4], [8, 4, 4], [1, 5, 7], [1, 9, 8], [2, 1, 4], [2, 3, 6], [10, 0, 4]]
b = [[1, 3, 1, 7, 5, 7], [8, 6, 5, 5, 6, 7], [3, 4, 10, 4, 2, 9]]
expected = [[65, 83, 109, 115, 85, 163], [26, 45, 44, 80, 57, 97], [43, 55, 62, 80, 61, 106], [52, 64, 68, 92, 72, 120], [62, 61, 96, 60, 49, 105], [97, 89, 126, 84, 75, 142], [22, 28, 47, 35, 24, 57], [44, 48, 77, 53, 40, 89], [22, 46, 50, 86, 58, 106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #739 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8], [10, 2], [9, 5], [8, 2], [3, 0], [0, 5], [1, 1]]
b = [[4, 2, 1], [5, 6, 10]]
expected = [[48, 52, 82], [50, 32, 30], [61, 48, 59], [42, 28, 28], [12, 6, 3], [25, 30, 50], [9, 8, 11]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #740 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 8, 8, 6, 2, 1, 9, 2, 3], [5, 1, 9, 7, 7, 8, 9, 0, 1, 10], [9, 3, 10, 9, 10, 8, 4, 2, 2, 10]]
b = [[10, 6, 0, 7, 7, 8, 3, 1], [10, 4, 9, 9, 8, 4, 6, 5], [3, 4, 3, 7, 6, 2, 2, 9], [1, 2, 8, 7, 4, 5, 10, 0], [3, 8, 8, 3, 3, 8, 6, 10], [8, 1, 6, 4, 6, 10, 5, 1], [1, 7, 8, 9, 3, 8, 10, 0], [5, 10, 10, 4, 5, 1, 8, 9], [10, 0, 9, 6, 2, 2, 10, 6], [3, 8, 2, 0, 2, 5, 8, 7]]
expected = [[321, 307, 360, 341, 304, 264, 352, 306], [228, 291, 297, 296, 243, 357, 371, 245], [317, 340, 347, 341, 307, 397, 411, 322]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #741 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 2, 10, 4, 4, 3], [9, 0, 0, 1, 9, 6, 10], [1, 3, 0, 5, 2, 5, 7]]
b = [[1, 6, 7, 7, 1, 6], [5, 4, 8, 8, 3, 4], [0, 0, 3, 7, 6, 7], [1, 9, 4, 6, 7, 3], [9, 0, 8, 10, 8, 10], [3, 8, 2, 5, 5, 7], [10, 5, 6, 7, 3, 7]]
expected = [[105, 161, 142, 193, 154, 157], [209, 161, 211, 259, 148, 259], [124, 138, 119, 155, 107, 137]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #742 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 5, 4, 4, 8, 4, 1], [8, 3, 2, 9, 0, 8, 2, 10], [3, 9, 3, 10, 8, 4, 5, 9], [10, 4, 2, 9, 4, 6, 8, 6]]
b = [[4, 3, 2, 0], [1, 4, 7, 10], [5, 8, 7, 0], [0, 6, 6, 10], [9, 4, 7, 8], [8, 4, 4, 2], [3, 3, 0, 4], [7, 9, 9, 3]]
expected = [[165, 178, 197, 197], [185, 234, 227, 174], [218, 273, 303, 309], [204, 234, 222, 224]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #743 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 2, 10, 7, 8, 4, 6], [1, 7, 4, 9, 10, 9, 9, 6]]
b = [[1], [1], [2], [5], [9], [9], [4], [7]]
expected = [[249], [310]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #744 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 9], [5, 4, 5]]
b = [[8], [0], [4]]
expected = [[92], [60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #745 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 1, 0, 3, 5, 1, 2, 2], [6, 8, 8, 9, 1, 2, 6, 6, 5], [8, 6, 1, 4, 1, 3, 6, 4, 0], [3, 5, 10, 0, 3, 4, 1, 3, 3], [9, 8, 1, 4, 1, 0, 0, 10, 5], [6, 10, 1, 7, 2, 9, 7, 10, 9], [9, 5, 3, 3, 2, 9, 5, 10, 10], [3, 9, 6, 7, 2, 1, 2, 9, 8], [6, 4, 10, 4, 0, 5, 8, 0, 9]]
b = [[4, 1, 6, 9, 5, 0], [7, 1, 1, 10, 2, 4], [5, 0, 10, 2, 8, 5], [0, 9, 0, 3, 3, 6], [6, 1, 1, 1, 9, 0], [1, 7, 2, 10, 5, 4], [6, 10, 10, 1, 3, 3], [0, 10, 10, 5, 0, 9], [4, 7, 1, 1, 7, 9]]
expected = [[118, 95, 93, 193, 118, 96], [184, 265, 254, 239, 209, 251], [124, 172, 171, 203, 114, 119], [137, 100, 177, 159, 176, 143], [123, 189, 178, 231, 125, 196], [198, 377, 255, 335, 226, 315], [177, 326, 269, 303, 236, 284], [162, 250, 209, 217, 187, 271], [191, 224, 239, 193, 242, 215]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #746 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 1, 8, 2, 1, 5]]
b = [[3, 9], [5, 0], [5, 1], [6, 5], [4, 10], [6, 7], [2, 3]]
expected = [[151, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #747 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [7]]
b = [[0, 2, 7, 5, 1, 6, 2, 4, 7, 4]]
expected = [[0, 6, 21, 15, 3, 18, 6, 12, 21, 12], [0, 14, 49, 35, 7, 42, 14, 28, 49, 28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #748 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 3, 5, 7], [9, 7, 1, 2, 3], [6, 8, 1, 9, 7], [3, 2, 9, 6, 3], [9, 9, 0, 7, 6], [5, 9, 3, 4, 2]]
b = [[4, 6, 9], [7, 9, 4], [10, 4, 2], [2, 8, 1], [4, 8, 2]]
expected = [[101, 153, 64], [111, 161, 119], [136, 240, 111], [140, 144, 65], [137, 239, 136], [129, 171, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #749 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 8, 2], [1, 0, 9, 0], [1, 6, 2, 2], [6, 7, 6, 9], [4, 8, 3, 4]]
b = [[9, 9], [7, 2], [7, 0], [9, 5]]
expected = [[198, 84], [72, 9], [83, 31], [226, 113], [149, 72]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #750 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 0, 2, 3, 0, 2]]
b = [[8, 1, 10, 1, 2, 2], [10, 4, 8, 10, 4, 3], [7, 4, 8, 6, 10, 3], [9, 3, 1, 4, 0, 9], [2, 1, 7, 4, 7, 8], [8, 10, 9, 8, 1, 3], [3, 2, 9, 10, 4, 10]]
expected = [[162, 57, 161, 144, 77, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #751 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 7, 1, 5, 5, 0, 0, 10, 8], [7, 0, 3, 5, 0, 10, 1, 2, 2, 1]]
b = [[6, 5, 9, 8, 5, 2, 1], [3, 10, 3, 1, 7, 1, 9], [10, 2, 0, 8, 8, 1, 1], [10, 6, 7, 8, 4, 5, 9], [1, 3, 1, 10, 3, 2, 10], [3, 1, 3, 7, 4, 9, 7], [6, 8, 0, 5, 8, 1, 5], [9, 8, 9, 10, 5, 7, 7], [4, 6, 8, 8, 7, 6, 9], [7, 4, 6, 0, 5, 9, 8]]
expected = [[253, 247, 227, 278, 293, 218, 341], [191, 121, 168, 231, 156, 168, 170]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #752 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2], [7, 1], [4, 9], [3, 3]]
b = [[0, 10, 2, 4], [1, 4, 8, 2]]
expected = [[2, 78, 30, 32], [1, 74, 22, 30], [9, 76, 80, 34], [3, 42, 30, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #753 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 6, 4, 2, 10, 0, 2], [5, 4, 2, 8, 7, 5, 9, 1], [6, 9, 3, 2, 4, 2, 6, 10], [1, 7, 8, 3, 8, 2, 3, 5], [1, 8, 7, 7, 4, 9, 6, 2]]
b = [[8, 1, 7, 3, 10, 4, 6, 0, 3, 9], [8, 10, 2, 2, 9, 10, 6, 6, 8, 4], [3, 9, 9, 4, 2, 0, 5, 9, 2, 8], [2, 7, 7, 9, 3, 5, 8, 6, 9, 9], [3, 4, 7, 6, 8, 0, 6, 4, 6, 3], [1, 3, 2, 10, 8, 9, 3, 3, 2, 10], [5, 2, 0, 9, 7, 9, 10, 8, 9, 4], [2, 10, 6, 3, 9, 5, 1, 7, 1, 8]]
expected = [[110, 157, 179, 201, 217, 158, 154, 136, 111, 273], [167, 190, 182, 279, 282, 231, 276, 212, 257, 264], [197, 271, 193, 194, 333, 246, 221, 233, 206, 268], [145, 258, 204, 186, 244, 159, 201, 229, 186, 224], [162, 268, 193, 284, 281, 264, 258, 258, 242, 302]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #754 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 1, 3, 9, 5, 1, 1, 7, 0], [0, 10, 1, 0, 4, 8, 8, 8, 1, 2], [9, 2, 4, 4, 3, 9, 10, 5, 8, 4]]
b = [[3, 5, 8], [8, 1, 8], [8, 6, 4], [3, 5, 5], [8, 2, 5], [2, 4, 4], [8, 7, 0], [0, 10, 9], [5, 4, 9], [5, 3, 8]]
expected = [[220, 160, 284], [215, 202, 233], [269, 297, 324]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #755 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 1, 9, 5, 6, 5, 4], [6, 9, 5, 5, 8, 0, 5, 6], [2, 5, 7, 2, 10, 7, 2, 7]]
b = [[3, 0, 5, 6, 8], [0, 1, 6, 7, 6], [2, 0, 4, 8, 6], [7, 1, 6, 3, 9], [7, 6, 3, 0, 2], [10, 3, 2, 10, 8], [2, 9, 10, 5, 10], [0, 9, 4, 1, 2]]
expected = [[200, 144, 237, 226, 319], [129, 161, 232, 185, 255], [178, 169, 172, 196, 216]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #756 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 5, 2], [1, 10, 9, 8], [4, 7, 7, 10]]
b = [[4, 8, 7, 7, 9, 3], [6, 6, 2, 10, 6, 0], [5, 1, 3, 9, 9, 6], [5, 1, 7, 5, 4, 4]]
expected = [[63, 51, 61, 103, 101, 50], [149, 85, 110, 228, 182, 89], [143, 91, 133, 211, 181, 94]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #757 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6], [0, 9], [9, 1], [3, 8], [8, 3], [5, 6], [9, 5]]
b = [[5, 3, 7, 6, 1, 5], [0, 9, 7, 4, 1, 10]]
expected = [[15, 63, 63, 42, 9, 75], [0, 81, 63, 36, 9, 90], [45, 36, 70, 58, 10, 55], [15, 81, 77, 50, 11, 95], [40, 51, 77, 60, 11, 70], [25, 69, 77, 54, 11, 85], [45, 72, 98, 74, 14, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #758 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 8, 2, 3, 1, 6], [4, 5, 2, 4, 5, 10, 0]]
b = [[8], [4], [7], [9], [6], [7], [8]]
expected = [[187], [202]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #759 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 10, 5, 3, 3, 6, 6, 7, 10], [2, 3, 6, 1, 10, 0, 0, 3, 1, 2], [10, 5, 2, 2, 9, 10, 4, 8, 9, 0], [3, 2, 6, 3, 3, 10, 4, 2, 3, 1], [4, 2, 10, 8, 8, 7, 9, 9, 10, 9], [0, 5, 1, 4, 5, 0, 7, 6, 5, 7], [2, 2, 1, 6, 4, 0, 6, 2, 9, 6], [0, 2, 9, 8, 8, 1, 5, 5, 1, 5], [0, 2, 0, 10, 8, 8, 10, 0, 7, 2], [2, 1, 1, 10, 3, 3, 1, 4, 1, 10]]
b = [[6, 8, 4, 0], [0, 9, 6, 3], [9, 6, 3, 8], [4, 3, 8, 3], [10, 7, 8, 6], [2, 9, 7, 5], [6, 1, 5, 4], [1, 3, 7, 10], [8, 3, 9, 2], [2, 7, 6, 4]]
expected = [[288, 297, 344, 275], [185, 178, 174, 160], [300, 351, 391, 255], [186, 224, 227, 177], [401, 382, 487, 375], [177, 187, 269, 191], [207, 167, 264, 142], [248, 219, 273, 247], [256, 221, 337, 186], [135, 195, 244, 160]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #760 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 4]]
b = [[5, 4, 9, 1, 6, 9], [3, 6, 10, 8, 1, 7], [2, 0, 4, 9, 5, 6]]
expected = [[64, 52, 126, 62, 82, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #761 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 2], [4, 6, 1], [10, 0, 3], [6, 3, 5], [4, 3, 10]]
b = [[0, 4], [7, 6], [2, 7]]
expected = [[4, 30], [44, 59], [6, 61], [31, 77], [41, 104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #762 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 10, 9], [9, 9, 8, 2]]
b = [[7, 0, 2, 0, 2, 10], [10, 1, 7, 0, 8, 0], [6, 10, 4, 4, 9, 5], [6, 1, 5, 8, 0, 3]]
expected = [[277, 119, 173, 112, 188, 167], [213, 91, 123, 48, 162, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #763 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 1, 5, 3, 2], [9, 4, 3, 3, 6, 10], [5, 6, 0, 3, 1, 5], [1, 2, 9, 1, 8, 2], [1, 3, 7, 0, 10, 9], [6, 10, 1, 0, 9, 3], [3, 0, 6, 0, 1, 7]]
b = [[1, 0, 8, 0, 8], [2, 7, 9, 0, 9], [3, 3, 6, 5, 4], [7, 0, 5, 8, 5], [1, 4, 9, 6, 5], [4, 5, 0, 1, 7]]
expected = [[71, 81, 178, 65, 178], [93, 111, 195, 85, 235], [59, 71, 118, 35, 149], [55, 83, 157, 103, 121], [74, 127, 167, 104, 176], [50, 124, 225, 62, 208], [50, 57, 69, 43, 102]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #764 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2], [9, 10], [6, 6], [2, 0], [5, 2]]
b = [[8, 3], [5, 10]]
expected = [[82, 47], [122, 127], [78, 78], [16, 6], [50, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #765 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 7, 8, 6, 6, 10, 7], [4, 0, 8, 10, 8, 8, 2, 0], [4, 2, 2, 0, 1, 1, 1, 6]]
b = [[1, 6, 3, 6, 8, 9, 10, 10], [3, 6, 4, 0, 0, 4, 1, 10], [5, 7, 7, 10, 2, 8, 5, 9], [7, 0, 1, 9, 4, 7, 10, 6], [4, 2, 9, 7, 4, 2, 9, 1], [8, 7, 0, 10, 4, 5, 7, 0], [3, 5, 6, 8, 2, 5, 8, 8], [2, 5, 6, 5, 2, 1, 8, 10]]
expected = [[220, 230, 237, 383, 160, 259, 390, 337], [216, 162, 162, 346, 156, 236, 324, 196], [47, 94, 85, 99, 58, 78, 124, 147]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #766 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 8, 3, 7, 0, 6, 8, 8, 0], [8, 10, 9, 2, 6, 0, 4, 6, 7, 3], [0, 3, 4, 9, 6, 5, 6, 6, 10, 1], [0, 0, 8, 6, 5, 10, 9, 3, 5, 8], [3, 6, 8, 7, 9, 5, 9, 0, 10, 7], [9, 1, 6, 2, 9, 7, 1, 9, 1, 4], [3, 5, 9, 7, 9, 7, 4, 0, 5, 1], [5, 10, 6, 7, 1, 5, 0, 7, 3, 3], [2, 0, 8, 3, 2, 6, 5, 0, 0, 7]]
b = [[2, 0, 10, 3], [0, 8, 4, 9], [8, 10, 3, 5], [2, 7, 2, 5], [10, 9, 7, 6], [10, 10, 4, 10], [7, 10, 1, 4], [8, 10, 7, 5], [9, 7, 9, 1], [10, 8, 1, 0]]
expected = [[328, 360, 263, 184], [321, 411, 305, 258], [350, 429, 243, 242], [438, 486, 194, 256], [447, 524, 281, 288], [358, 372, 284, 250], [335, 413, 232, 279], [245, 363, 228, 264], [259, 285, 100, 153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #767 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 5, 1], [1, 1, 6, 1], [9, 1, 3, 4], [6, 6, 9, 6], [7, 4, 2, 8], [4, 9, 4, 8]]
b = [[7, 8, 5, 0], [4, 8, 2, 0], [4, 1, 2, 2], [8, 2, 1, 9]]
expected = [[104, 111, 61, 19], [43, 24, 20, 21], [111, 91, 57, 42], [150, 117, 66, 72], [137, 106, 55, 76], [144, 124, 54, 80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #768 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 10, 5, 9, 10], [8, 2, 9, 10, 1, 7], [3, 1, 8, 2, 9, 8], [1, 9, 9, 9, 9, 7], [0, 1, 3, 0, 2, 1], [9, 7, 6, 5, 7, 7], [7, 5, 2, 5, 1, 1], [8, 8, 4, 0, 5, 9]]
b = [[0, 8, 5, 2, 9, 1, 3], [10, 7, 2, 7, 0, 5, 6], [0, 7, 2, 3, 4, 5, 3], [3, 9, 4, 0, 7, 6, 7], [2, 5, 10, 10, 2, 4, 1], [8, 7, 6, 1, 9, 10, 6]]
expected = [[173, 328, 237, 186, 246, 253, 191], [108, 285, 154, 74, 243, 197, 176], [98, 206, 179, 135, 163, 176, 110], [191, 309, 209, 189, 189, 251, 198], [22, 45, 34, 37, 25, 38, 23], [155, 292, 203, 162, 217, 202, 171], [75, 162, 85, 66, 117, 86, 99], [162, 236, 168, 143, 179, 178, 143]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #769 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 4], [5, 8, 3], [7, 1, 1], [0, 9, 3]]
b = [[3, 5, 6, 2, 3, 4, 5, 0], [1, 4, 7, 7, 5, 1, 9, 10], [7, 4, 7, 7, 5, 2, 10, 5]]
expected = [[43, 55, 88, 76, 59, 26, 109, 80], [44, 69, 107, 87, 70, 34, 127, 95], [29, 43, 56, 28, 31, 31, 54, 15], [30, 48, 84, 84, 60, 15, 111, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #770 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 4, 4, 0, 5, 0], [5, 4, 2, 0, 4, 6, 2], [3, 9, 6, 9, 1, 5, 8], [6, 0, 10, 10, 4, 5, 6], [8, 8, 7, 8, 10, 7, 5], [6, 10, 4, 7, 6, 9, 5], [6, 0, 6, 2, 3, 2, 2], [10, 3, 3, 4, 0, 1, 5]]
b = [[3, 3, 9, 4, 8, 7, 7, 4], [9, 6, 10, 8, 10, 4, 4, 3], [3, 5, 2, 10, 8, 2, 8, 8], [4, 7, 3, 5, 2, 2, 10, 2], [4, 10, 3, 5, 0, 9, 10, 10], [8, 10, 4, 5, 7, 9, 0, 7], [5, 1, 3, 7, 1, 7, 0, 0]]
expected = [[92, 119, 95, 113, 125, 100, 111, 98], [131, 151, 131, 136, 140, 159, 107, 130], [228, 224, 203, 275, 223, 197, 205, 150], [174, 234, 154, 261, 189, 205, 262, 199], [270, 338, 263, 326, 270, 306, 324, 277], [269, 302, 252, 289, 262, 274, 244, 223], [82, 114, 95, 133, 116, 117, 140, 120], [115, 106, 157, 154, 154, 140, 146, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #771 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 3, 2, 7, 5, 4], [9, 0, 4, 3, 3, 3, 3], [1, 3, 7, 8, 7, 6, 1], [0, 8, 4, 2, 9, 9, 1], [9, 8, 2, 8, 8, 5, 10], [9, 10, 8, 9, 1, 4, 5], [7, 7, 5, 7, 9, 8, 10]]
b = [[8, 8, 10, 1, 6, 4, 10, 10, 10], [4, 0, 3, 2, 2, 7, 8, 1, 9], [5, 7, 5, 6, 4, 7, 1, 8, 8], [1, 5, 3, 6, 10, 0, 7, 10, 8], [6, 4, 3, 9, 3, 7, 4, 4, 0], [9, 2, 0, 4, 10, 10, 5, 9, 10], [0, 2, 6, 5, 2, 2, 5, 3, 1]]
expected = [[156, 101, 117, 150, 143, 189, 176, 166, 187], [140, 139, 146, 105, 145, 121, 157, 200, 179], [159, 139, 105, 189, 203, 185, 160, 234, 218], [189, 94, 83, 174, 171, 239, 168, 180, 211], [215, 188, 232, 227, 252, 232, 319, 301, 302], [203, 195, 220, 181, 249, 219, 290, 309, 361], [242, 198, 224, 256, 273, 275, 306, 325, 319]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #772 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [2], [1], [10], [3], [2], [6]]
b = [[8, 9, 9, 8, 7, 9, 4, 7]]
expected = [[64, 72, 72, 64, 56, 72, 32, 56], [16, 18, 18, 16, 14, 18, 8, 14], [8, 9, 9, 8, 7, 9, 4, 7], [80, 90, 90, 80, 70, 90, 40, 70], [24, 27, 27, 24, 21, 27, 12, 21], [16, 18, 18, 16, 14, 18, 8, 14], [48, 54, 54, 48, 42, 54, 24, 42]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #773 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 3], [8, 4, 8], [2, 6, 8], [3, 9, 4], [8, 10, 7], [10, 3, 4], [3, 6, 3], [6, 2, 8], [5, 10, 1]]
b = [[7, 5, 6, 6, 4, 6], [9, 6, 6, 4, 3, 6], [10, 1, 5, 0, 9, 8]]
expected = [[149, 85, 105, 76, 80, 114], [172, 72, 112, 64, 116, 136], [148, 54, 88, 36, 98, 112], [142, 73, 92, 54, 75, 104], [216, 107, 143, 88, 125, 164], [137, 72, 98, 72, 85, 110], [105, 54, 69, 42, 57, 78], [140, 50, 88, 44, 102, 112], [135, 86, 95, 70, 59, 98]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #774 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [4], [2], [9], [2], [10], [5], [2]]
b = [[3, 10, 4]]
expected = [[15, 50, 20], [12, 40, 16], [6, 20, 8], [27, 90, 36], [6, 20, 8], [30, 100, 40], [15, 50, 20], [6, 20, 8]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #775 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 8, 3, 6, 8, 1], [3, 9, 2, 3, 2, 5, 7], [0, 8, 1, 1, 2, 1, 5], [5, 4, 10, 3, 8, 3, 5], [2, 1, 0, 4, 2, 7, 6], [6, 8, 7, 6, 3, 9, 9], [2, 2, 5, 8, 9, 1, 10]]
b = [[7, 6, 10, 0, 3, 4], [5, 6, 6, 3, 5, 1], [4, 9, 0, 0, 5, 2], [10, 3, 5, 9, 7, 0], [6, 7, 1, 5, 0, 3], [4, 5, 7, 3, 5, 0], [5, 1, 9, 9, 9, 0]]
expected = [[236, 266, 220, 117, 179, 75], [171, 145, 199, 142, 173, 31], [95, 84, 107, 91, 102, 16], [210, 229, 163, 133, 166, 68], [129, 85, 151, 124, 128, 15], [269, 240, 285, 201, 261, 55], [232, 171, 178, 216, 192, 47]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #776 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10], [9], [1]]
b = [[1, 2, 2, 1, 7, 8, 10, 3, 2]]
expected = [[10, 20, 20, 10, 70, 80, 100, 30, 20], [9, 18, 18, 9, 63, 72, 90, 27, 18], [1, 2, 2, 1, 7, 8, 10, 3, 2]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #777 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 1, 2, 5], [4, 0, 7, 4, 8], [8, 3, 2, 7, 6], [10, 0, 5, 2, 8], [1, 4, 0, 7, 3]]
b = [[6, 3, 4, 10, 4, 5, 3, 10], [1, 9, 1, 9, 3, 4, 8, 0], [3, 3, 6, 3, 6, 1, 9, 6], [9, 10, 1, 3, 0, 1, 5, 8], [5, 1, 3, 2, 8, 1, 7, 9]]
expected = [[55, 109, 32, 100, 73, 44, 126, 67], [121, 81, 86, 89, 122, 39, 151, 186], [150, 133, 72, 146, 101, 67, 143, 202], [133, 73, 96, 137, 134, 65, 141, 218], [88, 112, 24, 73, 40, 31, 91, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #778 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 6, 10, 2, 5], [1, 5, 8, 6, 4, 2], [9, 9, 3, 8, 3, 3], [4, 8, 9, 6, 2, 4], [6, 4, 6, 3, 2, 2], [1, 9, 8, 2, 1, 0], [5, 2, 4, 3, 8, 8]]
b = [[10, 9, 0, 1, 3], [0, 2, 8, 10, 7], [4, 5, 4, 8, 10], [10, 9, 0, 5, 6], [1, 1, 10, 10, 4], [10, 8, 8, 2, 5]]
expected = [[236, 226, 124, 184, 206], [126, 133, 128, 189, 180], [215, 213, 138, 199, 195], [178, 185, 152, 214, 222], [136, 137, 92, 133, 142], [63, 86, 114, 175, 162], [184, 168, 176, 168, 159]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #779 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 2], [5, 2, 3]]
b = [[9, 7, 0, 10, 5, 10, 9, 1], [6, 6, 0, 2, 5, 8, 3, 7], [1, 7, 4, 3, 1, 0, 1, 9]]
expected = [[38, 46, 8, 32, 27, 44, 29, 41], [60, 68, 12, 63, 38, 66, 54, 46]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #780 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 5, 1, 0, 0, 4, 0, 10], [4, 3, 8, 0, 10, 4, 1, 8, 2], [1, 4, 5, 4, 0, 3, 7, 0, 9], [7, 8, 10, 3, 6, 2, 9, 5, 7], [10, 2, 4, 6, 3, 9, 6, 0, 8], [10, 3, 9, 4, 4, 2, 7, 3, 6], [8, 10, 2, 0, 0, 1, 8, 6, 9], [3, 10, 4, 0, 5, 10, 9, 4, 3], [0, 9, 5, 4, 10, 6, 7, 1, 6]]
b = [[8, 4, 4, 1, 3, 1, 2], [1, 3, 8, 9, 3, 3, 5], [8, 9, 9, 8, 0, 2, 7], [0, 6, 5, 1, 5, 0, 9], [8, 4, 4, 8, 8, 5, 0], [7, 3, 0, 8, 9, 3, 9], [5, 7, 6, 0, 7, 5, 2], [8, 0, 3, 4, 0, 7, 3], [2, 7, 9, 5, 8, 5, 5]]
expected = [[112, 165, 180, 95, 125, 84, 110], [280, 170, 200, 249, 160, 162, 151], [126, 206, 224, 150, 183, 112, 179], [305, 302, 353, 281, 245, 202, 237], [247, 255, 242, 202, 277, 136, 245], [272, 267, 286, 203, 206, 149, 205], [203, 202, 277, 191, 191, 172, 168], [259, 212, 241, 276, 256, 184, 219], [226, 245, 276, 287, 278, 177, 217]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #781 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10], [1, 3]]
b = [[10, 6, 1, 4, 5, 8, 10, 10, 4, 3], [1, 4, 2, 2, 4, 0, 4, 8, 3, 2]]
expected = [[30, 52, 22, 28, 50, 16, 60, 100, 38, 26], [13, 18, 7, 10, 17, 8, 22, 34, 13, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #782 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 5, 6, 2, 10]]
b = [[8, 4, 2, 4, 0], [10, 2, 2, 2, 7], [10, 1, 3, 7, 2], [4, 9, 2, 3, 7], [9, 7, 2, 9, 5], [2, 7, 1, 10, 5]]
expected = [[176, 163, 55, 191, 140]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #783 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [5], [2], [0], [8], [5], [3], [1], [1], [0]]
b = [[9]]
expected = [[18], [45], [18], [0], [72], [45], [27], [9], [9], [0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #784 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 9], [6, 8, 5], [0, 10, 8], [7, 3, 0], [2, 5, 7]]
b = [[9, 7], [0, 5], [5, 6]]
expected = [[54, 86], [79, 112], [40, 98], [63, 64], [53, 81]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #785 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 1, 5, 5, 9, 6, 1, 8], [8, 2, 4, 2, 8, 9, 7, 8, 1], [1, 3, 8, 9, 2, 8, 2, 9, 10]]
b = [[5, 5, 8, 6, 0, 3, 6, 10, 7], [2, 2, 5, 6, 3, 7, 2, 3, 0], [9, 7, 4, 10, 10, 5, 9, 3, 0], [0, 9, 8, 9, 0, 4, 3, 3, 10], [6, 1, 1, 9, 8, 1, 4, 10, 4], [9, 6, 9, 2, 3, 8, 7, 8, 1], [5, 6, 4, 9, 0, 7, 4, 7, 5], [5, 2, 6, 9, 8, 0, 1, 5, 4], [0, 6, 5, 8, 8, 7, 7, 10, 1]]
expected = [[216, 258, 312, 347, 173, 283, 258, 381, 184], [284, 216, 276, 351, 209, 202, 232, 355, 185], [222, 288, 313, 398, 281, 250, 262, 313, 169]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #786 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 5, 0, 8, 1, 5, 6, 0], [1, 9, 5, 3, 8, 5, 8, 1, 9], [2, 0, 4, 4, 7, 2, 7, 6, 3], [9, 0, 8, 6, 9, 5, 0, 0, 3]]
b = [[9, 10, 1, 3], [3, 4, 6, 9], [6, 10, 9, 3], [0, 8, 7, 8], [8, 8, 4, 9], [4, 1, 2, 10], [0, 3, 3, 8], [5, 3, 9, 7], [3, 4, 4, 5]]
expected = [[140, 162, 155, 191], [182, 252, 232, 361], [145, 201, 185, 246], [230, 307, 181, 245]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #787 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 2, 5], [9, 7, 0, 9]]
b = [[7, 4, 5, 2, 5, 5, 4], [9, 3, 8, 10, 4, 0, 10], [8, 2, 3, 0, 3, 3, 10], [6, 5, 10, 8, 10, 10, 1]]
expected = [[109, 50, 112, 110, 84, 56, 95], [180, 102, 191, 160, 163, 135, 115]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #788 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [7], [7], [3], [9]]
b = [[2]]
expected = [[12], [14], [14], [6], [18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #789 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 10, 2, 1, 0, 3, 8], [2, 10, 9, 5, 4, 6, 10, 5], [9, 7, 5, 5, 2, 5, 1, 1], [0, 7, 6, 9, 5, 10, 6, 4], [5, 8, 2, 6, 4, 9, 10, 9], [9, 4, 9, 5, 2, 10, 1, 5], [1, 6, 0, 0, 7, 0, 1, 8], [3, 4, 10, 8, 8, 6, 0, 9]]
b = [[2, 10, 2, 6, 2], [0, 4, 0, 5, 8], [6, 4, 5, 0, 7], [2, 0, 0, 1, 8], [2, 6, 2, 1, 2], [5, 5, 1, 1, 9], [10, 9, 3, 2, 3], [5, 8, 6, 10, 5]]
expected = [[144, 217, 117, 163, 225], [231, 280, 123, 147, 304], [102, 192, 61, 113, 206], [194, 218, 92, 111, 308], [232, 321, 121, 199, 300], [171, 253, 110, 143, 275], [66, 149, 67, 125, 107], [173, 236, 132, 150, 287]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #790 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2], [6, 9], [9, 0], [9, 0], [0, 3]]
b = [[4, 9, 6, 9, 8, 5], [3, 0, 10, 4, 9, 6]]
expected = [[14, 18, 32, 26, 34, 22], [51, 54, 126, 90, 129, 84], [36, 81, 54, 81, 72, 45], [36, 81, 54, 81, 72, 45], [9, 0, 30, 12, 27, 18]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #791 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 0, 8, 9, 5, 9], [0, 10, 7, 3, 8, 0, 6], [0, 6, 1, 3, 1, 10, 4], [10, 7, 0, 9, 4, 8, 2], [1, 3, 2, 9, 6, 7, 1], [6, 4, 3, 4, 0, 3, 2], [10, 1, 7, 5, 4, 10, 0], [7, 3, 10, 4, 8, 5, 10], [3, 9, 9, 6, 5, 3, 10]]
b = [[0, 0, 10, 1, 9, 7, 0], [0, 3, 2, 0, 6, 0, 3], [8, 8, 3, 9, 2, 8, 3], [10, 9, 0, 7, 10, 8, 1], [3, 1, 1, 3, 1, 0, 9], [9, 5, 1, 10, 7, 9, 7], [6, 5, 9, 10, 7, 10, 3]]
expected = [[206, 172, 199, 232, 310, 262, 172], [146, 151, 103, 168, 154, 140, 144], [155, 124, 62, 173, 167, 162, 115], [186, 156, 144, 185, 296, 234, 128], [193, 152, 44, 180, 183, 168, 130], [103, 97, 98, 111, 159, 145, 52], [208, 158, 137, 220, 234, 256, 135], [249, 208, 209, 299, 254, 306, 180], [234, 223, 173, 271, 255, 268, 156]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #792 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 1, 3, 9, 1, 2], [3, 6, 4, 1, 0, 3, 7], [8, 2, 2, 4, 8, 8, 10], [2, 5, 10, 1, 5, 5, 4], [0, 6, 8, 10, 1, 4, 8], [7, 8, 9, 5, 5, 0, 5], [7, 0, 0, 0, 4, 1, 9]]
b = [[0, 7, 7, 5, 6], [0, 8, 6, 1, 0], [10, 9, 5, 5, 4], [9, 2, 8, 5, 10], [5, 8, 7, 4, 9], [4, 6, 10, 0, 0], [9, 1, 4, 6, 3]]
expected = [[104, 111, 122, 70, 121], [124, 132, 143, 88, 65], [218, 220, 286, 164, 198], [190, 220, 203, 114, 119], [263, 180, 235, 148, 165], [205, 249, 237, 163, 188], [105, 96, 123, 105, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #793 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 8, 7, 3, 2, 9]]
b = [[6, 7, 5, 3, 1, 9, 2, 10, 10, 1], [6, 3, 7, 3, 1, 5, 9, 9, 2, 3], [3, 1, 10, 10, 6, 2, 2, 9, 5, 5], [8, 7, 6, 10, 6, 1, 1, 0, 6, 5], [6, 10, 2, 4, 6, 0, 2, 8, 7, 4], [2, 4, 1, 9, 8, 8, 3, 2, 6, 7], [5, 7, 0, 9, 9, 1, 1, 5, 9, 8]]
expected = [[195, 190, 182, 285, 213, 96, 102, 219, 228, 193]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #794 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [10], [1], [10], [10], [5], [5], [10], [4]]
b = [[3, 7, 7, 1, 5, 10, 4, 2, 9]]
expected = [[3, 7, 7, 1, 5, 10, 4, 2, 9], [30, 70, 70, 10, 50, 100, 40, 20, 90], [3, 7, 7, 1, 5, 10, 4, 2, 9], [30, 70, 70, 10, 50, 100, 40, 20, 90], [30, 70, 70, 10, 50, 100, 40, 20, 90], [15, 35, 35, 5, 25, 50, 20, 10, 45], [15, 35, 35, 5, 25, 50, 20, 10, 45], [30, 70, 70, 10, 50, 100, 40, 20, 90], [12, 28, 28, 4, 20, 40, 16, 8, 36]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #795 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 7, 2, 3, 0, 7], [3, 9, 6, 5, 10, 6, 2], [10, 0, 10, 6, 8, 4, 7], [2, 5, 8, 0, 2, 3, 8], [3, 5, 10, 7, 5, 6, 2]]
b = [[3, 6], [10, 4], [7, 4], [9, 4], [2, 10], [2, 0], [6, 1]]
expected = [[245, 173], [230, 200], [220, 211], [170, 92], [226, 158]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #796 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 9, 4, 2, 6], [9, 9, 4, 2, 2, 6], [3, 3, 7, 3, 0, 6], [6, 3, 9, 5, 7, 1]]
b = [[9, 5, 6, 4, 4, 0, 7, 9, 0], [1, 10, 5, 3, 1, 2, 4, 8, 7], [5, 2, 5, 7, 1, 0, 6, 2, 2], [7, 8, 10, 1, 9, 6, 4, 3, 4], [1, 0, 5, 7, 10, 0, 3, 9, 1], [4, 4, 9, 3, 1, 9, 3, 4, 9]]
expected = [[104, 124, 174, 114, 76, 88, 114, 112, 125], [150, 183, 203, 125, 93, 84, 155, 209, 135], [110, 107, 152, 91, 55, 78, 105, 98, 101], [148, 122, 190, 153, 152, 45, 152, 178, 75]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #797 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 0, 7, 5, 5, 10, 9, 0, 0], [5, 10, 4, 8, 7, 5, 6, 7, 9, 6], [0, 4, 0, 5, 9, 3, 7, 0, 0, 9]]
b = [[0, 1, 1, 9, 3, 7], [7, 1, 6, 2, 3, 6], [3, 5, 10, 7, 9, 8], [9, 10, 9, 6, 0, 8], [5, 5, 9, 5, 6, 4], [5, 7, 0, 8, 4, 8], [10, 8, 2, 8, 6, 1], [3, 7, 4, 6, 5, 8], [7, 1, 5, 6, 10, 9], [4, 3, 6, 9, 3, 3]]
expected = [[296, 289, 220, 329, 203, 302], [382, 309, 361, 414, 322, 420], [239, 203, 218, 244, 147, 158]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #798 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 8, 10, 1, 5, 10, 8], [9, 5, 9, 5, 8, 7, 1, 2], [6, 9, 4, 5, 3, 1, 10, 7], [7, 1, 8, 5, 7, 6, 3, 4], [1, 0, 1, 1, 1, 8, 5, 0], [2, 10, 8, 1, 9, 4, 1, 6]]
b = [[6, 6], [5, 10], [10, 5], [1, 9], [5, 1], [8, 1], [3, 5], [3, 4]]
expected = [[271, 340], [279, 222], [200, 273], [236, 181], [101, 54], [241, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #799 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 0, 6], [3, 10, 2, 3], [1, 4, 1, 5], [8, 5, 3, 0]]
b = [[1], [9], [7], [2]]
expected = [[41], [113], [54], [74]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #800 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [5], [2], [6], [10], [7], [10]]
b = [[9, 4, 4, 3, 3]]
expected = [[36, 16, 16, 12, 12], [45, 20, 20, 15, 15], [18, 8, 8, 6, 6], [54, 24, 24, 18, 18], [90, 40, 40, 30, 30], [63, 28, 28, 21, 21], [90, 40, 40, 30, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #801 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [7], [10], [8], [1], [7], [7]]
b = [[4, 6, 0, 6]]
expected = [[28, 42, 0, 42], [28, 42, 0, 42], [40, 60, 0, 60], [32, 48, 0, 48], [4, 6, 0, 6], [28, 42, 0, 42], [28, 42, 0, 42]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #802 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 5, 3], [0, 10, 10, 1], [2, 3, 4, 5], [2, 2, 4, 0], [9, 10, 4, 0], [5, 8, 1, 7], [0, 10, 9, 9], [8, 10, 7, 9], [3, 5, 3, 3], [10, 8, 0, 2]]
b = [[3, 9, 6, 8, 5, 0, 4, 5, 9], [2, 7, 0, 7, 9, 2, 1, 0, 9], [5, 5, 9, 1, 7, 4, 9, 7, 10], [0, 7, 3, 2, 8, 9, 6, 9, 0]]
expected = [[52, 127, 108, 83, 104, 47, 99, 107, 131], [70, 127, 93, 82, 168, 69, 106, 79, 190], [32, 94, 63, 51, 105, 67, 77, 83, 85], [30, 52, 48, 34, 56, 20, 46, 38, 76], [67, 171, 90, 146, 163, 36, 82, 73, 211], [36, 155, 60, 111, 160, 83, 79, 95, 127], [65, 178, 108, 97, 225, 137, 145, 144, 180], [79, 240, 138, 159, 251, 129, 159, 170, 232], [34, 98, 54, 68, 105, 49, 62, 63, 102], [46, 160, 66, 140, 138, 34, 60, 68, 162]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #803 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4], [4, 8], [8, 8], [1, 7], [0, 6], [3, 4]]
b = [[2, 5, 7, 7, 5, 9, 9, 8], [4, 7, 10, 2, 9, 9, 8, 7]]
expected = [[24, 48, 68, 36, 56, 72, 68, 60], [40, 76, 108, 44, 92, 108, 100, 88], [48, 96, 136, 72, 112, 144, 136, 120], [30, 54, 77, 21, 68, 72, 65, 57], [24, 42, 60, 12, 54, 54, 48, 42], [22, 43, 61, 29, 51, 63, 59, 52]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #804 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[5, 10, 8, 6, 6, 7, 3, 1]]
expected = [[5, 10, 8, 6, 6, 7, 3, 1]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #805 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 9, 2, 8, 3, 3, 1], [9, 6, 8, 1, 3, 5, 1, 0], [10, 3, 6, 2, 1, 8, 6, 4]]
b = [[9, 9, 9, 0], [3, 7, 8, 5], [5, 4, 1, 4], [3, 8, 2, 7], [7, 7, 10, 1], [7, 9, 0, 4], [3, 3, 9, 3], [7, 9, 9, 8]]
expected = [[198, 243, 228, 132], [201, 232, 178, 95], [244, 284, 224, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #806 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 6, 7, 4, 10, 4], [2, 6, 9, 5, 5, 3, 1], [9, 5, 8, 4, 1, 10, 5], [1, 0, 3, 1, 1, 7, 9], [2, 2, 3, 5, 8, 9, 1], [0, 5, 2, 2, 0, 3, 7], [1, 3, 6, 2, 10, 5, 3], [2, 8, 10, 8, 4, 10, 7], [0, 8, 2, 0, 4, 5, 5]]
b = [[7, 10, 6, 4, 5, 7, 5, 5, 7, 6], [3, 7, 7, 10, 6, 2, 3, 2, 8, 4], [4, 0, 5, 7, 0, 4, 5, 4, 0, 2], [4, 0, 9, 4, 2, 7, 4, 8, 9, 0], [1, 0, 1, 3, 0, 2, 9, 2, 8, 4], [9, 7, 1, 1, 4, 0, 2, 0, 2, 1], [8, 5, 1, 0, 3, 1, 9, 3, 4, 7]]
expected = [[220, 150, 147, 116, 96, 127, 180, 130, 173, 102], [128, 88, 153, 169, 71, 108, 153, 111, 157, 84], [257, 220, 181, 171, 138, 140, 190, 136, 187, 139], [159, 104, 47, 39, 62, 37, 128, 54, 74, 86], [149, 102, 104, 102, 71, 82, 150, 85, 161, 74], [114, 91, 73, 75, 67, 39, 102, 55, 92, 76], [127, 81, 93, 119, 56, 74, 179, 80, 151, 96], [260, 181, 211, 212, 135, 141, 235, 159, 230, 139], [121, 116, 80, 111, 83, 37, 125, 47, 126, 92]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #807 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 0, 8, 0, 3], [5, 8, 8, 1, 1, 6], [8, 5, 5, 0, 0, 3], [2, 0, 2, 8, 9, 6], [10, 6, 2, 0, 9, 10], [8, 9, 4, 0, 5, 3], [0, 4, 10, 3, 2, 0], [8, 5, 8, 2, 7, 9], [8, 7, 2, 10, 7, 8]]
b = [[6, 0, 9, 0, 9, 0, 10, 9, 0, 3], [0, 1, 2, 4, 5, 2, 1, 5, 0, 3], [8, 5, 4, 1, 0, 1, 4, 3, 9, 9], [1, 2, 2, 4, 9, 8, 6, 3, 0, 5], [5, 4, 5, 4, 1, 6, 8, 6, 7, 2], [1, 3, 5, 2, 1, 4, 9, 2, 6, 8]]
expected = [[71, 25, 121, 38, 165, 76, 175, 120, 18, 94], [106, 72, 130, 60, 101, 62, 158, 130, 115, 166], [91, 39, 117, 31, 100, 27, 132, 118, 63, 108], [87, 80, 117, 82, 105, 144, 202, 114, 117, 130], [131, 82, 205, 82, 139, 108, 276, 200, 141, 164], [108, 58, 146, 66, 125, 64, 172, 165, 89, 121], [93, 68, 64, 46, 49, 54, 78, 71, 104, 121], [158, 104, 198, 82, 131, 112, 266, 187, 175, 207], [117, 89, 189, 114, 212, 170, 283, 201, 115, 191]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #808 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[5, 5, 6, 0, 1, 5, 1, 8]]
expected = [[25, 25, 30, 0, 5, 25, 5, 40]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #809 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 9, 0, 6, 10, 2, 10], [3, 0, 0, 7, 7, 4, 7, 7], [8, 7, 4, 9, 4, 6, 10, 7], [9, 0, 4, 6, 10, 7, 10, 8], [3, 6, 7, 0, 0, 8, 9, 7], [6, 9, 7, 7, 4, 1, 7, 5], [1, 7, 5, 10, 8, 8, 10, 0], [3, 0, 5, 2, 0, 9, 2, 2], [3, 1, 4, 9, 1, 8, 0, 0]]
b = [[6, 10, 1, 5], [7, 1, 8, 2], [1, 2, 5, 5], [1, 6, 5, 5], [4, 7, 7, 1], [8, 6, 7, 3], [1, 0, 8, 7], [1, 2, 1, 5]]
expected = [[213, 244, 225, 203], [99, 159, 178, 153], [191, 227, 286, 246], [178, 262, 266, 236], [147, 112, 221, 184], [149, 169, 244, 199], [176, 191, 324, 196], [101, 110, 119, 101], [106, 148, 139, 107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #810 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 2]]
b = [[6, 4, 9, 8, 9, 10], [2, 3, 5, 0, 1, 3], [1, 0, 6, 8, 3, 7]]
expected = [[22, 25, 56, 24, 22, 45]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #811 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 0, 5, 9, 6, 0, 6, 7], [10, 5, 10, 0, 10, 4, 4, 6, 10], [1, 7, 4, 6, 4, 4, 10, 10, 6]]
b = [[8, 0, 9, 10, 9, 3, 9], [6, 9, 2, 9, 7, 2, 9], [7, 4, 7, 2, 2, 9, 1], [3, 9, 5, 8, 2, 4, 2], [10, 6, 5, 0, 10, 3, 8], [10, 5, 4, 1, 0, 7, 6], [4, 4, 1, 1, 6, 9, 7], [10, 3, 5, 6, 2, 5, 3], [10, 10, 9, 9, 7, 1, 5]]
expected = [[369, 280, 237, 248, 246, 152, 270], [496, 299, 360, 299, 351, 264, 345], [376, 307, 231, 257, 240, 263, 274]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #812 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 3, 5, 5, 0, 3], [7, 9, 6, 0, 3, 4, 8], [5, 8, 6, 2, 3, 0, 5], [8, 2, 2, 10, 0, 0, 9], [7, 1, 3, 6, 1, 4, 10], [9, 7, 5, 2, 5, 10, 9], [8, 8, 6, 1, 9, 10, 4]]
b = [[3, 5], [3, 0], [0, 9], [7, 6], [3, 8], [3, 9], [9, 4]]
expected = [[89, 129], [141, 181], [107, 135], [181, 154], [171, 182], [188, 268], [148, 278]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #813 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 10], [2, 7, 4], [7, 10, 7], [7, 8, 10], [5, 0, 4]]
b = [[6, 6, 1, 6, 8, 5, 10, 3, 6], [10, 0, 0, 5, 3, 1, 0, 4, 5], [2, 4, 2, 10, 9, 3, 0, 3, 0]]
expected = [[64, 64, 24, 134, 128, 52, 40, 50, 34], [90, 28, 10, 87, 73, 29, 20, 46, 47], [156, 70, 21, 162, 149, 66, 70, 82, 92], [142, 82, 27, 182, 170, 73, 70, 83, 82], [38, 46, 13, 70, 76, 37, 50, 27, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #814 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 2, 5, 4, 3, 1, 7, 10], [5, 4, 0, 6, 0, 1, 7, 0, 4], [6, 0, 0, 9, 4, 8, 10, 7, 3], [4, 7, 10, 0, 4, 10, 7, 8, 6], [0, 7, 2, 7, 4, 10, 8, 0, 3], [1, 7, 10, 5, 5, 7, 8, 9, 1], [7, 0, 8, 8, 6, 8, 6, 2, 9]]
b = [[2, 9], [1, 1], [7, 0], [9, 10], [7, 8], [8, 0], [4, 8], [3, 10], [1, 0]]
expected = [[149, 163], [108, 165], [249, 326], [251, 211], [227, 173], [275, 260], [287, 259]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #815 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 8, 0, 8], [10, 10, 6, 1, 6], [3, 1, 2, 8, 1], [10, 10, 5, 6, 9], [2, 7, 9, 2, 10], [5, 9, 1, 5, 1], [4, 10, 4, 10, 2], [1, 6, 5, 8, 1], [4, 9, 0, 0, 3], [6, 3, 3, 1, 8]]
b = [[8, 9, 10, 8, 4, 0, 7, 1], [1, 10, 2, 1, 8, 0, 2, 7], [2, 2, 4, 4, 6, 6, 8, 8], [3, 6, 10, 8, 10, 6, 5, 9], [0, 3, 2, 2, 2, 4, 4, 9]]
expected = [[35, 88, 74, 67, 96, 80, 116, 159], [105, 226, 166, 134, 178, 66, 167, 191], [53, 92, 122, 99, 114, 64, 83, 107], [118, 263, 218, 176, 228, 102, 196, 255], [47, 148, 110, 95, 158, 106, 150, 231], [66, 170, 124, 95, 150, 40, 90, 130], [80, 210, 180, 142, 224, 92, 138, 214], [48, 130, 124, 100, 164, 82, 103, 164], [41, 135, 64, 47, 94, 12, 58, 94], [60, 120, 104, 87, 92, 56, 109, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #816 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 7, 4]]
b = [[0, 10], [7, 10], [4, 9], [4, 0]]
expected = [[114, 183]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #817 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 4, 8], [9, 5, 6, 10], [3, 8, 9, 4], [8, 2, 5, 2]]
b = [[7], [5], [6], [5]]
expected = [[174], [174], [135], [106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #818 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [2], [9], [6], [6], [6]]
b = [[9, 5, 0, 8, 6, 0, 4, 9, 9]]
expected = [[18, 10, 0, 16, 12, 0, 8, 18, 18], [18, 10, 0, 16, 12, 0, 8, 18, 18], [81, 45, 0, 72, 54, 0, 36, 81, 81], [54, 30, 0, 48, 36, 0, 24, 54, 54], [54, 30, 0, 48, 36, 0, 24, 54, 54], [54, 30, 0, 48, 36, 0, 24, 54, 54]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #819 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 2, 1, 9], [1, 5, 2, 6, 8], [1, 3, 1, 6, 1], [8, 3, 0, 0, 3], [4, 8, 3, 1, 1]]
b = [[1, 2, 9, 8, 9], [0, 5, 5, 5, 4], [7, 0, 0, 3, 9], [0, 8, 7, 10, 7], [5, 5, 7, 5, 9]]
expected = [[63, 66, 111, 98, 146], [55, 115, 132, 139, 161], [13, 70, 73, 91, 81], [23, 46, 108, 94, 111], [30, 61, 90, 96, 111]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #820 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [6], [6], [5], [10], [6], [6], [7]]
b = [[8, 7, 2, 0]]
expected = [[32, 28, 8, 0], [48, 42, 12, 0], [48, 42, 12, 0], [40, 35, 10, 0], [80, 70, 20, 0], [48, 42, 12, 0], [48, 42, 12, 0], [56, 49, 14, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #821 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 4, 10, 3, 2], [9, 8, 7, 1, 3, 2], [3, 2, 5, 6, 0, 7], [1, 0, 3, 8, 9, 10], [9, 3, 1, 6, 6, 9], [3, 0, 10, 7, 0, 6], [7, 0, 7, 7, 5, 10], [4, 7, 6, 7, 7, 10], [3, 8, 10, 1, 8, 9]]
b = [[1, 4], [5, 1], [8, 2], [0, 6], [10, 0], [2, 10]]
expected = [[121, 137], [139, 84], [67, 130], [135, 158], [110, 167], [95, 134], [133, 184], [177, 177], [221, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #822 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 2, 5, 4, 9, 9, 5, 0], [2, 0, 0, 4, 1, 9, 8, 4, 8], [4, 10, 9, 2, 3, 3, 1, 6, 0]]
b = [[8], [6], [5], [4], [8], [6], [5], [3], [5]]
expected = [[292], [186], [210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #823 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4], [4, 9], [7, 4], [5, 7], [4, 3], [9, 3], [8, 5]]
b = [[7], [9]]
expected = [[50], [109], [85], [98], [55], [90], [101]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #824 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 7], [4, 8, 10], [1, 8, 4], [6, 9, 9]]
b = [[6, 8, 3, 3, 3, 1, 10, 1], [10, 0, 8, 10, 5, 2, 7, 5], [1, 4, 10, 9, 9, 5, 0, 5]]
expected = [[83, 36, 129, 136, 101, 50, 59, 71], [114, 72, 176, 182, 142, 70, 96, 94], [90, 24, 107, 119, 79, 37, 66, 61], [135, 84, 180, 189, 144, 69, 123, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #825 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 0], [6, 7, 10], [1, 3, 3], [10, 4, 3], [10, 10, 9], [0, 9, 0], [9, 10, 6], [1, 0, 9]]
b = [[10, 3], [3, 0], [8, 0]]
expected = [[118, 30], [161, 18], [43, 3], [136, 30], [202, 30], [27, 0], [168, 27], [82, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #826 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 4, 7, 7, 5], [4, 5, 10, 1, 8, 2], [9, 8, 7, 2, 8, 9], [4, 0, 8, 2, 0, 2], [0, 1, 10, 2, 7, 5], [4, 3, 6, 6, 10, 7], [0, 7, 0, 3, 8, 9]]
b = [[1, 8, 7, 9, 2], [3, 8, 1, 5, 6], [6, 7, 8, 8, 10], [0, 10, 2, 8, 4], [7, 3, 4, 1, 7], [4, 0, 5, 5, 10]]
expected = [[96, 143, 120, 147, 173], [143, 176, 157, 167, 218], [167, 229, 208, 246, 290], [60, 108, 106, 126, 116], [132, 119, 138, 133, 213], [147, 188, 166, 192, 250], [113, 110, 90, 112, 200]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #827 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 3, 1, 6, 1], [4, 7, 10, 2, 6, 5], [4, 4, 7, 5, 8, 4], [4, 3, 10, 7, 2, 8], [3, 9, 3, 1, 1, 2], [10, 1, 4, 10, 2, 1]]
b = [[9, 9, 8, 1], [7, 6, 9, 7], [6, 9, 4, 4], [7, 8, 3, 2], [4, 4, 9, 4], [6, 10, 2, 2]]
expected = [[118, 132, 127, 47], [213, 258, 205, 131], [197, 235, 191, 110], [222, 288, 154, 103], [131, 140, 133, 88], [205, 230, 155, 63]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #828 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 0, 0, 2, 0], [9, 7, 1, 10, 1, 1], [6, 3, 8, 1, 8, 1], [8, 2, 4, 5, 0, 7]]
b = [[4, 6, 2, 9, 3, 0, 8], [2, 2, 8, 2, 5, 10, 10], [3, 4, 6, 10, 3, 0, 5], [10, 10, 4, 2, 3, 8, 6], [4, 10, 2, 0, 5, 3, 10], [8, 2, 4, 10, 10, 0, 3]]
expected = [[38, 62, 40, 60, 43, 36, 98], [165, 184, 126, 135, 110, 153, 220], [104, 166, 108, 152, 110, 62, 207], [154, 132, 104, 196, 131, 60, 155]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #829 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 9, 9, 3, 8, 2, 5]]
b = [[10, 2, 7, 9, 1, 4, 7, 1, 8], [10, 4, 9, 0, 2, 8, 1, 8, 6], [9, 9, 10, 3, 6, 9, 8, 0, 5], [1, 9, 10, 1, 1, 5, 10, 3, 4], [5, 3, 9, 5, 2, 2, 4, 4, 0], [5, 9, 9, 7, 7, 2, 10, 6, 8], [10, 3, 1, 4, 2, 0, 10, 8, 6], [7, 10, 2, 1, 5, 2, 10, 2, 10]]
expected = [[360, 343, 415, 210, 176, 246, 400, 171, 323]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #830 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 7, 9, 10, 9, 1, 9], [4, 5, 8, 10, 6, 10, 2, 1], [2, 1, 1, 6, 7, 5, 7, 1], [9, 0, 1, 9, 9, 9, 2, 5], [2, 5, 4, 10, 6, 4, 4, 1]]
b = [[8, 8], [8, 1], [3, 10], [10, 9], [7, 1], [8, 4], [7, 1], [7, 8]]
expected = [[427, 346], [339, 263], [232, 123], [349, 250], [277, 185]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #831 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7], [1]]
b = [[10, 6]]
expected = [[70, 42], [10, 6]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #832 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 5, 5, 0, 3, 10, 0, 9, 7]]
b = [[1, 2], [5, 8], [0, 7], [7, 6], [10, 3], [5, 1], [0, 0], [2, 8], [6, 4], [7, 7]]
expected = [[168, 181]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #833 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 5, 2, 0, 6, 6, 3], [3, 0, 4, 10, 9, 2, 6, 5], [3, 9, 0, 1, 9, 2, 5, 8]]
b = [[10], [7], [5], [7], [2], [7], [2], [2]]
expected = [[176], [174], [158]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #834 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 0], [2, 6, 2], [6, 6, 1], [7, 6, 5], [8, 7, 9], [2, 8, 0], [4, 10, 9], [3, 0, 1], [4, 1, 0]]
b = [[9, 5, 4], [10, 7, 9], [8, 3, 8]]
expected = [[82, 47, 41], [94, 58, 78], [122, 75, 86], [163, 92, 122], [214, 116, 167], [98, 66, 80], [208, 117, 178], [35, 18, 20], [46, 27, 25]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #835 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 7, 8, 5, 5, 1, 8]]
b = [[1, 7, 0, 5, 0, 6, 6, 10, 3, 0], [0, 7, 9, 8, 10, 7, 7, 0, 7, 5], [6, 3, 3, 1, 9, 10, 3, 10, 0, 0], [1, 5, 1, 4, 7, 0, 10, 8, 6, 1], [10, 10, 3, 3, 2, 1, 2, 4, 2, 10], [5, 1, 3, 9, 9, 8, 2, 1, 8, 9], [3, 9, 5, 6, 8, 1, 6, 0, 7, 9], [3, 3, 8, 9, 6, 10, 1, 0, 2, 4]]
expected = [[161, 219, 137, 230, 240, 257, 196, 249, 155, 149]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #836 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 6, 2, 2], [10, 0, 6, 5, 9], [2, 10, 3, 6, 8], [9, 7, 4, 3, 3], [3, 3, 0, 8, 5], [3, 4, 10, 1, 10], [4, 8, 3, 8, 0], [1, 5, 6, 7, 0], [5, 0, 2, 0, 4]]
b = [[6, 6, 5], [8, 1, 7], [8, 4, 10], [9, 8, 3], [4, 0, 4]]
expected = [[166, 62, 154], [189, 124, 161], [202, 82, 160], [181, 101, 155], [134, 85, 80], [179, 70, 186], [184, 108, 130], [157, 91, 121], [62, 38, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #837 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4], [4, 6], [10, 6], [8, 10], [5, 9]]
b = [[0, 0, 6], [3, 3, 1]]
expected = [[12, 12, 4], [18, 18, 30], [18, 18, 66], [30, 30, 58], [27, 27, 39]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #838 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 0, 9, 5, 10], [8, 9, 9, 5, 10, 10], [6, 5, 1, 5, 9, 2], [1, 3, 9, 5, 1, 1], [2, 7, 3, 9, 6, 10], [6, 3, 8, 2, 5, 9], [7, 0, 10, 6, 8, 1], [0, 1, 10, 0, 10, 4], [2, 10, 3, 1, 7, 6], [3, 4, 1, 0, 0, 6]]
b = [[3, 6], [1, 0], [3, 5], [3, 10], [6, 8], [7, 7]]
expected = [[144, 230], [205, 293], [109, 177], [61, 116], [155, 235], [144, 199], [124, 223], [119, 158], [112, 135], [58, 65]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #839 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 6, 4, 10, 5], [4, 2, 6, 3, 3, 6], [0, 3, 10, 6, 10, 8], [6, 7, 4, 6, 8, 5]]
b = [[5, 9, 9, 2], [1, 5, 9, 10], [10, 2, 0, 5], [8, 7, 7, 0], [5, 3, 4, 8], [8, 3, 3, 5]]
expected = [[210, 145, 155, 175], [169, 106, 105, 112], [265, 131, 133, 200], [205, 178, 206, 191]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #840 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4], [3], [10], [0], [8]]
b = [[0, 6, 8, 7, 5, 9, 2]]
expected = [[0, 24, 32, 28, 20, 36, 8], [0, 18, 24, 21, 15, 27, 6], [0, 60, 80, 70, 50, 90, 20], [0, 0, 0, 0, 0, 0, 0], [0, 48, 64, 56, 40, 72, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #841 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 9, 0], [8, 0, 9, 7], [0, 9, 8, 6], [6, 8, 3, 8], [6, 2, 3, 0], [8, 3, 6, 0]]
b = [[1, 9, 9, 7, 7, 9, 9, 3, 8, 7], [4, 4, 6, 0, 6, 4, 6, 10, 10, 7], [6, 1, 1, 10, 9, 7, 1, 5, 0, 5], [5, 3, 2, 6, 4, 0, 10, 3, 4, 0]]
expected = [[70, 57, 63, 118, 127, 111, 63, 87, 62, 94], [97, 102, 95, 188, 165, 135, 151, 90, 92, 101], [114, 62, 74, 116, 150, 92, 122, 148, 114, 103], [96, 113, 121, 120, 149, 107, 185, 137, 160, 113], [32, 65, 69, 72, 81, 83, 69, 53, 68, 71], [56, 90, 96, 116, 128, 126, 96, 84, 94, 107]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #842 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [2]]
b = [[10, 0]]
expected = [[30, 0], [20, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #843 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 9, 1, 3, 2], [6, 9, 5, 1, 8, 6], [6, 9, 3, 3, 2, 1], [5, 6, 7, 5, 2, 4], [1, 5, 4, 10, 0, 7], [1, 4, 7, 1, 4, 10]]
b = [[7, 10, 4], [10, 3, 2], [1, 10, 3], [10, 7, 0], [6, 8, 4], [1, 0, 8]]
expected = [[158, 212, 97], [201, 208, 137], [178, 154, 67], [168, 189, 93], [168, 135, 82], [98, 131, 129]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #844 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 4, 0, 9, 1, 7, 6], [2, 1, 4, 3, 6, 8, 10, 6]]
b = [[6, 8, 4], [10, 4, 1], [7, 5, 8], [1, 5, 2], [6, 2, 9], [1, 8, 3], [3, 0, 7], [7, 0, 3]]
expected = [[206, 126, 223], [169, 131, 213]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #845 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 2, 7, 2, 8, 7, 1], [2, 0, 0, 9, 10, 5, 5, 6], [7, 0, 6, 4, 1, 5, 6, 5], [0, 5, 2, 5, 1, 10, 9, 0], [6, 9, 7, 3, 0, 4, 8, 3]]
b = [[5, 2, 9, 2, 3], [5, 5, 6, 0, 7], [7, 6, 4, 9, 6], [3, 10, 9, 8, 3], [0, 0, 10, 3, 7], [4, 2, 3, 3, 8], [1, 3, 2, 10, 4], [8, 9, 3, 9, 2]]
expected = [[112, 140, 186, 195, 159], [110, 173, 242, 225, 175], [155, 163, 175, 223, 150], [103, 134, 141, 181, 185], [181, 188, 200, 218, 202]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #846 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 4, 0, 0], [8, 2, 7, 0, 5], [6, 8, 0, 10, 0], [1, 10, 6, 5, 9], [1, 7, 6, 5, 7], [2, 9, 8, 5, 0], [7, 8, 1, 6, 3], [5, 4, 4, 2, 8], [5, 0, 6, 0, 7], [5, 9, 7, 9, 0]]
b = [[1, 10, 7, 8, 4, 0, 9, 2, 5], [1, 5, 3, 9, 10, 7, 0, 0, 0], [4, 2, 6, 5, 10, 7, 0, 7, 2], [1, 2, 7, 10, 6, 0, 2, 0, 8], [5, 6, 4, 9, 5, 7, 0, 5, 4]]
expected = [[24, 63, 60, 89, 102, 63, 27, 34, 23], [63, 134, 124, 162, 147, 98, 72, 90, 74], [24, 120, 136, 220, 164, 56, 74, 12, 110], [85, 136, 144, 259, 239, 175, 19, 89, 93], [72, 109, 127, 214, 199, 140, 19, 79, 85], [48, 91, 124, 187, 208, 119, 28, 60, 66], [40, 142, 133, 220, 169, 84, 75, 36, 97], [67, 130, 117, 188, 152, 112, 49, 78, 81], [64, 104, 99, 133, 115, 91, 45, 87, 65], [51, 127, 167, 246, 234, 112, 63, 59, 111]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #847 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6], [1], [8], [1], [2]]
b = [[5, 7, 4, 2, 0]]
expected = [[30, 42, 24, 12, 0], [5, 7, 4, 2, 0], [40, 56, 32, 16, 0], [5, 7, 4, 2, 0], [10, 14, 8, 4, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #848 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 3, 6, 4, 6, 1, 9], [0, 3, 1, 3, 0, 6, 4, 0], [1, 2, 0, 7, 9, 9, 0, 10], [9, 9, 2, 9, 8, 1, 10, 9], [9, 0, 3, 0, 2, 6, 3, 7], [7, 7, 9, 6, 8, 2, 4, 6], [7, 4, 6, 10, 4, 2, 1, 10]]
b = [[9, 9], [2, 6], [9, 5], [10, 9], [6, 2], [4, 0], [7, 1], [3, 5]]
expected = [[263, 225], [97, 54], [203, 152], [356, 297], [186, 138], [320, 254], [294, 266]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #849 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2], [1, 0]]
b = [[0], [5]]
expected = [[10], [0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #850 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 2, 4, 6], [2, 8, 6, 4, 9], [5, 3, 10, 8, 4], [7, 3, 4, 8, 5]]
b = [[4, 4, 7, 9], [8, 8, 4, 3], [10, 5, 7, 5], [0, 9, 0, 4], [5, 4, 3, 0]]
expected = [[154, 174, 124, 125], [177, 174, 115, 88], [164, 182, 129, 136], [117, 164, 104, 124]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #851 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0], [2], [8], [5], [3], [2], [3], [5], [9]]
b = [[0]]
expected = [[0], [0], [0], [0], [0], [0], [0], [0], [0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #852 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 2, 1, 6], [10, 9, 2, 0, 1], [8, 7, 7, 7, 10], [7, 8, 0, 0, 4], [0, 1, 3, 0, 1], [2, 3, 3, 9, 6], [1, 8, 6, 10, 2]]
b = [[9, 7], [0, 6], [10, 10], [9, 5], [9, 9]]
expected = [[137, 151], [119, 153], [295, 293], [99, 133], [39, 45], [183, 161], [177, 183]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #853 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 6, 9, 3, 9], [7, 1, 9, 2, 4, 7], [4, 5, 4, 0, 0, 9], [8, 4, 5, 6, 2, 7], [8, 1, 2, 8, 3, 5], [0, 6, 7, 7, 2, 4], [1, 2, 1, 9, 10, 8], [4, 5, 9, 2, 10, 2], [0, 1, 2, 2, 7, 3], [5, 10, 2, 2, 4, 2]]
b = [[9], [2], [4], [4], [7], [9]]
expected = [[224], [200], [143], [201], [180], [118], [195], [178], [94], [127]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #854 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 9, 5], [5, 1, 8, 6], [4, 3, 10, 8], [5, 8, 10, 2], [6, 1, 1, 6], [4, 6, 2, 2], [2, 5, 4, 6], [6, 10, 3, 6]]
b = [[6, 4, 9, 5, 6], [0, 4, 4, 3, 9], [1, 2, 1, 1, 9], [6, 8, 2, 4, 9]]
expected = [[87, 90, 91, 69, 174], [74, 88, 69, 60, 165], [82, 112, 74, 71, 213], [52, 88, 91, 67, 210], [73, 78, 71, 58, 108], [38, 60, 66, 48, 114], [52, 84, 54, 53, 147], [75, 118, 109, 87, 207]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #855 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 6, 5, 4], [5, 7, 9, 0, 8], [10, 1, 7, 3, 2], [3, 10, 8, 1, 10], [3, 9, 6, 9, 2]]
b = [[5, 10, 8, 6, 3], [3, 8, 9, 10, 3], [1, 7, 5, 9, 4], [0, 10, 1, 7, 8], [8, 8, 8, 4, 0]]
expected = [[72, 208, 155, 197, 94], [119, 233, 212, 213, 72], [76, 203, 143, 162, 85], [133, 256, 235, 237, 79], [64, 250, 160, 233, 132]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #856 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 0, 8, 9, 2]]
b = [[0, 0, 2, 7, 7, 8, 3], [1, 0, 1, 9, 8, 0, 8], [9, 5, 5, 0, 1, 2, 3], [0, 7, 8, 8, 1, 5, 1], [7, 8, 1, 2, 0, 0, 8], [9, 8, 4, 7, 5, 8, 8]]
expected = [[82, 144, 88, 126, 47, 80, 113]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #857 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 0, 0, 1, 8]]
b = [[3, 8, 9, 9, 3, 0, 8, 7], [10, 4, 9, 7, 2, 10, 6, 0], [10, 2, 2, 1, 1, 4, 5, 2], [3, 7, 3, 2, 6, 2, 4, 9], [8, 3, 4, 10, 5, 8, 1, 5], [8, 7, 4, 7, 7, 3, 7, 2]]
expected = [[133, 131, 135, 157, 90, 72, 137, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #858 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 4], [2, 5, 3], [0, 7, 6], [8, 10, 5], [9, 4, 5], [5, 3, 3], [10, 4, 6], [7, 2, 8], [10, 0, 4], [0, 0, 6]]
b = [[9, 4, 5, 0, 6, 7], [1, 9, 1, 6, 10, 5], [7, 4, 8, 9, 5, 2]]
expected = [[114, 97, 82, 66, 124, 96], [44, 65, 39, 57, 77, 45], [49, 87, 55, 96, 100, 47], [117, 142, 90, 105, 173, 116], [120, 92, 89, 69, 119, 93], [69, 59, 52, 45, 75, 56], [136, 100, 102, 78, 130, 102], [121, 78, 101, 84, 102, 75], [118, 56, 82, 36, 80, 78], [42, 24, 48, 54, 30, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #859 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1], [5, 7], [6, 5], [1, 8], [8, 0], [7, 2], [5, 1], [3, 2], [9, 9], [9, 8]]
b = [[0, 6, 7, 7], [0, 2, 2, 4]]
expected = [[0, 20, 23, 25], [0, 44, 49, 63], [0, 46, 52, 62], [0, 22, 23, 39], [0, 48, 56, 56], [0, 46, 53, 57], [0, 32, 37, 39], [0, 22, 25, 29], [0, 72, 81, 99], [0, 70, 79, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #860 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 1, 8, 10, 9], [6, 2, 2, 1, 0, 8], [3, 0, 3, 3, 0, 10], [9, 8, 7, 4, 6, 0], [8, 10, 3, 7, 7, 9]]
b = [[10, 10, 7, 6], [7, 7, 3, 4], [9, 1, 3, 10], [3, 0, 5, 2], [8, 8, 5, 4], [5, 5, 6, 8]]
expected = [[231, 199, 181, 180], [135, 116, 107, 130], [116, 83, 105, 134], [269, 201, 158, 188], [299, 254, 219, 232]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #861 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 8, 7, 2, 5], [0, 4, 2, 5, 10, 10]]
b = [[3, 2, 5, 6, 9, 6, 7], [5, 3, 7, 9, 0, 8, 7], [1, 10, 3, 9, 7, 6, 3], [9, 9, 8, 8, 5, 8, 2], [0, 1, 8, 7, 9, 3, 5], [10, 9, 0, 10, 1, 1, 1]]
expected = [[167, 218, 162, 276, 132, 191, 123], [167, 177, 154, 264, 139, 124, 104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #862 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 1, 2, 0, 7, 6, 8, 4, 9], [7, 5, 1, 5, 1, 10, 10, 0, 10, 8], [0, 8, 1, 9, 7, 7, 3, 8, 2, 5], [6, 4, 8, 4, 7, 4, 2, 1, 4, 3], [9, 2, 8, 6, 10, 2, 9, 4, 9, 6], [4, 1, 8, 1, 4, 6, 9, 8, 9, 0], [3, 2, 4, 4, 0, 0, 7, 5, 7, 5], [0, 3, 2, 10, 6, 8, 3, 10, 5, 2]]
b = [[9, 6, 7, 0, 9, 5, 0, 5], [3, 8, 9, 9, 6, 3, 6, 9], [0, 9, 6, 8, 5, 5, 9, 10], [4, 2, 1, 0, 4, 8, 0, 3], [1, 8, 0, 10, 4, 2, 9, 5], [3, 8, 2, 3, 3, 6, 1, 5], [5, 1, 3, 9, 4, 5, 0, 2], [0, 6, 8, 3, 8, 0, 10, 5], [6, 2, 9, 0, 2, 10, 1, 5], [2, 5, 5, 2, 1, 7, 4, 3]]
expected = [[167, 280, 303, 215, 235, 246, 196, 260], [255, 259, 285, 199, 220, 363, 100, 254], [125, 283, 217, 232, 223, 227, 229, 250], [141, 267, 203, 209, 201, 223, 189, 251], [238, 331, 309, 293, 295, 348, 249, 322], [164, 261, 270, 236, 238, 250, 209, 265], [136, 154, 216, 138, 162, 213, 125, 174], [128, 257, 209, 188, 220, 238, 211, 234]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #863 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 4, 1, 0, 3], [6, 5, 4, 6, 4, 5], [6, 10, 0, 8, 9, 1], [3, 2, 8, 9, 7, 9], [8, 3, 10, 1, 0, 2]]
b = [[9, 1, 1, 3, 0, 5, 6, 8, 10], [10, 0, 3, 4, 10, 9, 0, 6, 6], [5, 5, 4, 7, 8, 7, 2, 6, 3], [4, 10, 2, 10, 7, 0, 1, 10, 0], [3, 0, 7, 10, 0, 6, 1, 4, 9], [0, 3, 9, 7, 2, 10, 2, 3, 9]]
expected = [[117, 46, 61, 92, 75, 120, 57, 117, 127], [160, 101, 122, 201, 134, 177, 64, 193, 183], [213, 89, 124, 235, 158, 184, 55, 227, 210], [144, 160, 189, 296, 165, 221, 68, 229, 210], [156, 74, 77, 130, 121, 157, 73, 158, 146]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #864 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3], [6, 7], [7, 5], [9, 3], [7, 9], [2, 0], [8, 3], [9, 9]]
b = [[5, 5, 0, 6, 2, 8, 8], [3, 3, 10, 8, 0, 5, 5]]
expected = [[39, 39, 30, 60, 12, 63, 63], [51, 51, 70, 92, 12, 83, 83], [50, 50, 50, 82, 14, 81, 81], [54, 54, 30, 78, 18, 87, 87], [62, 62, 90, 114, 14, 101, 101], [10, 10, 0, 12, 4, 16, 16], [49, 49, 30, 72, 16, 79, 79], [72, 72, 90, 126, 18, 117, 117]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #865 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 7], [9, 9, 3]]
b = [[9, 0, 9, 5], [0, 3, 8, 4], [4, 0, 2, 4]]
expected = [[37, 9, 47, 45], [93, 27, 159, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #866 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 5], [5, 1, 6], [7, 0, 7], [9, 7, 8], [5, 8, 3]]
b = [[2, 5], [6, 1], [9, 9]]
expected = [[101, 87], [70, 80], [77, 98], [132, 124], [85, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #867 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 5, 9, 0, 2, 4, 4, 10, 2], [4, 7, 1, 9, 2, 1, 8, 6, 4, 5], [3, 3, 8, 5, 3, 0, 10, 0, 9, 9]]
b = [[5, 1], [5, 9], [8, 0], [3, 0], [3, 6], [3, 2], [10, 10], [6, 3], [6, 0], [0, 7]]
expected = [[222, 91], [239, 214], [272, 211]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #868 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8], [9, 6], [2, 0], [7, 1], [7, 4], [5, 3], [4, 6], [5, 1], [8, 5]]
b = [[6, 10], [5, 3]]
expected = [[40, 24], [84, 108], [12, 20], [47, 73], [62, 82], [45, 59], [54, 58], [35, 53], [73, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #869 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [1], [4], [0], [7], [10], [0], [7]]
b = [[9, 6, 6, 10, 5]]
expected = [[45, 30, 30, 50, 25], [9, 6, 6, 10, 5], [36, 24, 24, 40, 20], [0, 0, 0, 0, 0], [63, 42, 42, 70, 35], [90, 60, 60, 100, 50], [0, 0, 0, 0, 0], [63, 42, 42, 70, 35]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #870 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 7, 2, 9, 9]]
b = [[6, 9, 2, 9, 9], [2, 9, 10, 7, 7], [2, 5, 4, 10, 4], [3, 1, 7, 0, 7], [4, 10, 8, 0, 1], [8, 5, 2, 7, 6]]
expected = [[184, 298, 216, 245, 217]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #871 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 0, 4, 7], [10, 1, 7, 0, 2], [1, 2, 6, 9, 5], [3, 2, 6, 0, 10], [7, 8, 5, 9, 10], [4, 2, 5, 3, 9], [3, 4, 2, 5, 9], [0, 4, 8, 10, 1]]
b = [[0, 3], [8, 0], [5, 8], [6, 7], [8, 9]]
expected = [[88, 121], [59, 104], [140, 159], [126, 147], [223, 214], [131, 154], [144, 141], [140, 143]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #872 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 8, 3], [7, 10, 6, 2]]
b = [[8, 9, 10, 3, 10, 4, 2, 2], [10, 2, 2, 6, 3, 5, 4, 7], [3, 10, 8, 10, 4, 9, 9, 7], [6, 9, 10, 10, 9, 1, 4, 5]]
expected = [[206, 199, 194, 194, 169, 157, 140, 157], [186, 161, 158, 161, 142, 134, 116, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #873 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 1, 10], [9, 2, 3, 9], [10, 1, 4, 9], [7, 2, 9, 8]]
b = [[5, 4, 6, 10, 0, 2, 5, 8], [9, 6, 7, 5, 3, 1, 3, 8], [7, 1, 3, 10, 10, 2, 0, 8], [5, 9, 3, 3, 0, 0, 2, 6]]
expected = [[102, 127, 87, 130, 10, 20, 65, 140], [129, 132, 104, 157, 36, 26, 69, 166], [132, 131, 106, 172, 43, 29, 71, 174], [156, 121, 107, 194, 96, 34, 57, 192]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #874 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 5, 9], [0, 6, 2, 8], [7, 0, 7, 7], [4, 7, 2, 8], [7, 3, 1, 5], [9, 6, 9, 8], [9, 2, 10, 2], [3, 7, 8, 4], [1, 10, 3, 1], [8, 1, 5, 5]]
b = [[3, 9, 8, 2], [4, 4, 5, 8], [9, 10, 9, 5], [0, 4, 4, 6]]
expected = [[55, 108, 102, 91], [42, 76, 80, 106], [84, 161, 147, 91], [58, 116, 117, 122], [42, 105, 100, 73], [132, 227, 215, 159], [125, 197, 180, 96], [109, 151, 147, 126], [70, 83, 89, 103], [73, 146, 134, 79]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #875 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 2, 6, 9, 4, 8, 0, 3, 6], [1, 10, 5, 0, 8, 4, 7, 8, 0, 3], [7, 8, 4, 4, 0, 7, 2, 9, 5, 3], [10, 6, 1, 6, 9, 10, 2, 2, 8, 7], [9, 3, 8, 6, 2, 4, 6, 6, 6, 2], [0, 2, 0, 0, 3, 2, 6, 1, 3, 1], [3, 6, 9, 3, 3, 4, 4, 10, 4, 1]]
b = [[6, 3, 8, 2, 9, 10, 4, 3, 8, 2], [6, 8, 9, 4, 2, 9, 5, 4, 2, 7], [8, 5, 7, 3, 2, 1, 2, 6, 3, 7], [9, 3, 6, 1, 8, 10, 8, 6, 3, 4], [2, 2, 8, 0, 5, 8, 0, 7, 9, 10], [1, 10, 0, 9, 5, 7, 3, 0, 4, 7], [0, 9, 4, 5, 4, 7, 7, 2, 6, 7], [6, 0, 5, 6, 6, 3, 9, 2, 10, 7], [8, 7, 2, 2, 0, 6, 3, 8, 5, 10], [9, 9, 9, 9, 3, 5, 3, 4, 4, 0]]
expected = [[242, 279, 312, 176, 261, 384, 197, 213, 292, 276], [201, 254, 292, 203, 184, 285, 206, 171, 265, 320], [286, 267, 270, 226, 225, 321, 248, 175, 263, 290], [325, 356, 346, 244, 288, 460, 227, 259, 334, 361], [300, 267, 291, 192, 247, 335, 247, 217, 288, 311], [59, 126, 86, 77, 62, 124, 79, 71, 104, 137], [264, 230, 266, 193, 195, 262, 229, 190, 263, 319]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #876 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 1, 0, 9, 2, 10], [10, 5, 0, 2, 3, 0, 8], [7, 9, 7, 4, 3, 7, 8], [7, 5, 2, 0, 5, 5, 9], [2, 7, 5, 9, 7, 3, 2], [6, 8, 1, 5, 3, 1, 5], [4, 2, 2, 5, 0, 8, 4]]
b = [[4, 6, 6, 10, 9], [10, 10, 9, 3, 8], [3, 1, 8, 3, 2], [3, 2, 8, 1, 9], [0, 5, 1, 3, 3], [4, 2, 1, 3, 7], [9, 7, 2, 6, 6]]
expected = [[141, 180, 99, 196, 193], [168, 185, 140, 174, 205], [251, 232, 237, 200, 291], [185, 192, 131, 175, 211], [150, 160, 201, 107, 219], [171, 179, 170, 134, 211], [125, 100, 114, 105, 181]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #877 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 6, 10, 4, 6, 0], [10, 5, 9, 10, 1, 7, 6], [4, 4, 7, 9, 4, 9, 4]]
b = [[8, 0, 1, 10, 0, 9], [7, 2, 5, 2, 2, 4], [1, 1, 0, 10, 0, 8], [8, 5, 4, 0, 1, 5], [7, 4, 4, 8, 9, 6], [8, 10, 4, 7, 10, 1], [7, 8, 6, 4, 5, 2]]
expected = [[234, 132, 89, 224, 106, 209], [309, 191, 143, 281, 129, 257], [267, 198, 136, 229, 163, 194]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #878 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 5, 5], [2, 7, 3, 5]]
b = [[10, 4, 4, 10, 1, 3, 6], [5, 2, 0, 0, 10, 6, 2], [7, 10, 10, 10, 7, 5, 1], [10, 3, 7, 8, 9, 10, 6]]
expected = [[155, 93, 97, 120, 163, 132, 69], [126, 67, 73, 90, 138, 113, 59]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #879 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 4, 1, 0, 1], [7, 8, 2, 5, 6, 9], [1, 3, 4, 0, 6, 0], [0, 8, 0, 1, 3, 4], [7, 8, 10, 7, 10, 2], [6, 5, 8, 10, 2, 5], [1, 9, 7, 6, 2, 2]]
b = [[1, 9, 6], [10, 5, 9], [3, 7, 6], [8, 3, 2], [9, 10, 7], [7, 10, 1]]
expected = [[91, 107, 105], [250, 282, 187], [97, 112, 99], [143, 113, 99], [277, 314, 260], [213, 235, 168], [192, 161, 157]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #880 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 3, 4, 6, 7, 3, 2, 2, 5], [3, 3, 3, 6, 3, 2, 2, 2, 5, 3], [1, 0, 10, 0, 5, 4, 5, 1, 7, 1], [0, 4, 0, 9, 6, 1, 3, 2, 0, 8]]
b = [[10], [7], [5], [1], [2], [8], [0], [7], [3], [8]]
expected = [[235], [147], [138], [135]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #881 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 0], [7, 0, 10], [8, 8, 0], [10, 8, 1], [1, 8, 0], [5, 1, 3], [6, 2, 10], [4, 2, 2]]
b = [[10, 8, 2], [7, 0, 9], [9, 7, 6]]
expected = [[77, 56, 23], [160, 126, 74], [136, 64, 88], [165, 87, 98], [66, 8, 74], [84, 61, 37], [164, 118, 90], [72, 46, 38]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #882 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 3, 5, 9, 2, 0, 10, 7, 2], [0, 0, 4, 1, 3, 3, 0, 7, 10, 1], [3, 5, 8, 9, 1, 10, 5, 8, 0, 1], [3, 1, 1, 9, 1, 10, 6, 4, 1, 4], [4, 0, 9, 4, 2, 0, 5, 9, 6, 1]]
b = [[6, 3, 9, 4, 4], [8, 3, 2, 5, 3], [1, 0, 2, 3, 1], [1, 10, 0, 0, 3], [6, 9, 10, 1, 9], [10, 7, 0, 8, 2], [10, 9, 3, 3, 6], [9, 10, 7, 7, 9], [4, 9, 4, 7, 6], [2, 10, 6, 8, 8]]
expected = [[278, 361, 277, 217, 291], [158, 228, 133, 166, 171], [305, 328, 140, 221, 201], [250, 324, 115, 186, 182], [206, 269, 182, 173, 210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #883 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [7], [3], [1]]
b = [[3, 2]]
expected = [[27, 18], [21, 14], [9, 6], [3, 2]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #884 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 0, 2], [3, 7, 3, 10], [6, 1, 2, 3], [8, 2, 2, 1]]
b = [[7, 5, 3], [7, 7, 4], [10, 8, 8], [8, 6, 10]]
expected = [[121, 103, 73], [180, 148, 161], [93, 71, 68], [98, 76, 58]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #885 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 7, 7, 8], [8, 10, 8, 5, 5], [5, 6, 0, 7, 9], [10, 9, 1, 7, 0], [0, 4, 10, 4, 8], [1, 10, 6, 3, 3], [8, 2, 3, 10, 8], [0, 4, 6, 8, 0], [7, 5, 10, 9, 1]]
b = [[5, 5, 2, 10, 4], [1, 6, 3, 9, 9], [4, 3, 9, 5, 8], [3, 6, 9, 1, 5], [9, 6, 9, 2, 10]]
expected = [[142, 162, 222, 142, 237], [142, 184, 208, 225, 261], [133, 157, 172, 129, 199], [84, 149, 119, 193, 164], [128, 126, 210, 106, 216], [75, 119, 140, 139, 187], [156, 169, 211, 139, 204], [52, 90, 138, 74, 124], [116, 155, 209, 176, 208]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #886 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 8, 4, 0, 6, 8, 7, 7, 7], [1, 0, 7, 7, 1, 4, 6, 3, 8, 2], [4, 6, 10, 5, 6, 8, 9, 10, 8, 2], [6, 0, 3, 0, 3, 2, 8, 9, 0, 5], [1, 10, 10, 4, 10, 8, 8, 5, 5, 2], [10, 1, 7, 3, 7, 5, 3, 0, 6, 9], [0, 10, 1, 3, 10, 10, 1, 9, 3, 4], [8, 10, 0, 1, 10, 9, 0, 2, 8, 9]]
b = [[3, 10], [8, 8], [1, 6], [2, 9], [6, 10], [4, 4], [1, 3], [6, 2], [7, 9], [1, 6]]
expected = [[146, 251], [128, 249], [275, 416], [114, 188], [268, 409], [167, 384], [267, 325], [279, 435]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #887 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 6, 7, 0, 6, 8, 0], [9, 6, 3, 3, 4, 9, 8, 10], [9, 4, 7, 0, 9, 1, 3, 4]]
b = [[6], [6], [3], [9], [7], [9], [9], [3]]
expected = [[261], [337], [210]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #888 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 8, 3, 8, 6], [0, 7, 5, 6, 4, 0], [4, 0, 10, 5, 6, 10], [1, 2, 6, 7, 8, 8]]
b = [[9, 1, 6, 10], [7, 7, 0, 5], [8, 2, 1, 1], [9, 4, 3, 6], [8, 3, 10, 2], [9, 6, 10, 3]]
expected = [[241, 104, 169, 90], [175, 95, 63, 84], [299, 122, 209, 122], [270, 127, 193, 108]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #889 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 0, 0, 7, 5, 8, 5], [0, 3, 10, 4, 10, 9, 7, 4], [9, 4, 4, 3, 9, 3, 0, 8], [5, 0, 1, 4, 5, 5, 8, 7], [4, 5, 10, 7, 8, 8, 0, 10], [3, 0, 6, 5, 4, 2, 7, 6]]
b = [[7], [0], [6], [5], [10], [7], [2], [5]]
expected = [[181], [277], [253], [197], [309], [180]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #890 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 4, 7, 3, 5], [4, 4, 2, 1, 6, 1], [9, 2, 9, 9, 9, 1], [2, 10, 9, 7, 1, 6], [5, 10, 4, 10, 10, 7], [0, 2, 9, 10, 6, 4], [6, 0, 4, 3, 10, 5]]
b = [[3, 10, 1, 0, 6, 8], [0, 9, 0, 8, 6, 2], [8, 6, 0, 1, 10, 0], [6, 7, 7, 9, 9, 0], [8, 7, 7, 10, 4, 1], [6, 7, 3, 9, 10, 5]]
expected = [[149, 289, 92, 222, 267, 104], [88, 144, 56, 112, 111, 51], [231, 295, 138, 205, 283, 90], [164, 262, 76, 216, 289, 67], [229, 353, 166, 337, 330, 105], [204, 212, 124, 211, 256, 30], [178, 210, 112, 176, 193, 83]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #891 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 5, 2, 6, 3, 2, 10], [5, 3, 7, 1, 6, 8, 1, 1], [0, 6, 6, 8, 8, 8, 7, 4], [5, 1, 6, 3, 5, 5, 6, 10], [10, 1, 10, 6, 9, 4, 7, 1], [8, 2, 1, 7, 3, 10, 10, 8]]
b = [[8, 0, 7, 7, 7, 7, 7, 4, 6], [0, 2, 1, 3, 0, 1, 5, 0, 8], [1, 9, 8, 3, 3, 9, 3, 4, 5], [4, 4, 2, 4, 0, 4, 4, 8, 10], [3, 3, 6, 9, 7, 5, 6, 6, 7], [6, 0, 2, 10, 9, 4, 10, 6, 2], [5, 9, 2, 8, 2, 4, 2, 5, 7], [10, 6, 0, 2, 9, 9, 3, 1, 4]]
expected = [[175, 157, 108, 169, 192, 211, 157, 118, 191], [132, 106, 150, 213, 181, 180, 196, 146, 168], [185, 209, 148, 284, 196, 228, 234, 223, 295], [233, 197, 142, 231, 235, 261, 192, 168, 225], [210, 212, 239, 306, 222, 283, 240, 242, 302], [292, 188, 138, 316, 262, 262, 259, 228, 282]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #892 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0], [10, 6], [10, 9], [7, 4], [2, 3], [2, 0], [1, 6], [3, 0], [9, 10]]
b = [[4, 9, 6, 5, 10, 2, 5, 9, 2, 6], [8, 5, 8, 1, 4, 9, 4, 10, 4, 1]]
expected = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [88, 120, 108, 56, 124, 74, 74, 150, 44, 66], [112, 135, 132, 59, 136, 101, 86, 180, 56, 69], [60, 83, 74, 39, 86, 50, 51, 103, 30, 46], [32, 33, 36, 13, 32, 31, 22, 48, 16, 15], [8, 18, 12, 10, 20, 4, 10, 18, 4, 12], [52, 39, 54, 11, 34, 56, 29, 69, 26, 12], [12, 27, 18, 15, 30, 6, 15, 27, 6, 18], [116, 131, 134, 55, 130, 108, 85, 181, 58, 64]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #893 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 9], [10, 2, 4], [5, 3, 8], [7, 6, 6], [1, 5, 6], [10, 10, 3], [0, 3, 2], [8, 5, 1]]
b = [[2, 3, 4, 1, 3], [4, 8, 0, 2, 0], [9, 6, 6, 3, 10]]
expected = [[131, 147, 82, 52, 111], [64, 70, 64, 26, 70], [94, 87, 68, 35, 95], [92, 105, 64, 37, 81], [76, 79, 40, 29, 63], [87, 128, 58, 39, 60], [30, 36, 12, 12, 20], [45, 70, 38, 21, 34]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #894 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 1, 8, 7, 6, 5, 4, 8], [6, 1, 3, 4, 9, 6, 7, 0, 1], [6, 8, 10, 0, 4, 10, 0, 8, 4], [0, 2, 3, 6, 7, 10, 2, 2, 10], [9, 6, 6, 1, 6, 8, 4, 10, 10], [3, 6, 9, 10, 6, 0, 9, 5, 8]]
b = [[9, 1, 7, 5, 3], [6, 0, 7, 9, 3], [10, 9, 2, 2, 3], [9, 9, 3, 1, 2], [4, 0, 2, 9, 4], [2, 2, 3, 0, 6], [3, 5, 8, 3, 3], [3, 7, 3, 7, 7], [9, 0, 2, 3, 8]]
expected = [[293, 148, 203, 231, 223], [204, 116, 161, 154, 139], [298, 172, 188, 226, 236], [246, 125, 124, 143, 215], [358, 178, 238, 278, 299], [381, 254, 226, 237, 224]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #895 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0], [0, 7], [3, 7], [9, 5], [1, 2], [2, 8], [6, 9], [8, 4]]
b = [[8], [4]]
expected = [[8], [28], [52], [92], [16], [48], [84], [80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #896 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 5, 0, 8, 7, 8], [5, 5, 2, 3, 9, 10, 4], [2, 10, 6, 5, 5, 1, 5], [5, 6, 5, 8, 5, 8, 2]]
b = [[10, 1, 5], [8, 4, 8], [1, 0, 4], [8, 3, 9], [3, 3, 7], [4, 2, 5], [0, 4, 8]]
expected = [[121, 102, 239], [183, 97, 245], [165, 94, 239], [214, 92, 256]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #897 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 0], [3, 10, 0], [7, 5, 3], [2, 0, 7], [1, 7, 7]]
b = [[2, 1, 3, 8, 8], [4, 8, 5, 4, 6], [0, 8, 1, 7, 7]]
expected = [[22, 41, 28, 28, 38], [46, 83, 59, 64, 84], [34, 71, 49, 97, 107], [4, 58, 13, 65, 65], [30, 113, 45, 85, 99]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #898 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 7, 3, 5, 2], [7, 3, 4, 5, 1, 0], [7, 3, 7, 8, 4, 3], [4, 2, 1, 7, 6, 8], [6, 3, 3, 5, 5, 5], [8, 10, 10, 7, 1, 2]]
b = [[0, 9, 8, 9, 1, 0, 7, 6, 4], [10, 1, 8, 4, 8, 2, 7, 10, 1], [7, 8, 9, 2, 5, 0, 1, 1, 3], [10, 4, 9, 1, 2, 9, 10, 0, 7], [7, 10, 9, 4, 9, 2, 5, 3, 2], [9, 1, 5, 5, 4, 4, 6, 6, 5]]
expected = [[132, 165, 185, 92, 99, 45, 109, 64, 82], [115, 128, 170, 92, 70, 53, 129, 79, 80], [214, 197, 266, 128, 130, 98, 195, 109, 131], [211, 142, 214, 117, 125, 111, 191, 111, 122], [181, 156, 214, 122, 120, 81, 171, 114, 106], [265, 202, 316, 153, 169, 93, 223, 173, 133]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #899 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 2, 0, 3, 7], [10, 0, 2, 2, 5, 6], [2, 0, 1, 0, 0, 4], [1, 0, 3, 7, 8, 2], [10, 8, 3, 7, 3, 6], [10, 0, 7, 8, 8, 2], [1, 8, 6, 6, 6, 2]]
b = [[5, 3, 6], [10, 8, 8], [8, 3, 6], [0, 10, 8], [3, 3, 2], [0, 0, 3]]
expected = [[65, 43, 79], [81, 71, 116], [18, 9, 30], [53, 106, 102], [163, 182, 222], [130, 155, 188], [151, 163, 172]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #900 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [8], [9], [6]]
b = [[2, 3, 10, 0, 2]]
expected = [[10, 15, 50, 0, 10], [16, 24, 80, 0, 16], [18, 27, 90, 0, 18], [12, 18, 60, 0, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #901 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 5, 0, 6], [1, 8, 0, 3, 1], [3, 4, 7, 0, 6], [0, 0, 7, 4, 7], [9, 7, 6, 7, 7]]
b = [[6, 3], [3, 3], [9, 4], [2, 4], [7, 5]]
expected = [[117, 65], [43, 44], [135, 79], [120, 79], [192, 135]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #902 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 8, 8, 0, 3], [2, 9, 9, 1, 0, 4], [8, 7, 3, 5, 5, 10], [9, 3, 7, 7, 2, 10], [4, 8, 10, 3, 6, 8], [8, 7, 8, 7, 2, 4], [1, 5, 8, 1, 3, 4], [7, 2, 0, 0, 2, 8]]
b = [[1, 3, 8, 9, 9, 8, 0, 0, 9], [4, 1, 8, 7, 2, 10, 1, 9, 8], [10, 2, 3, 6, 3, 8, 4, 3, 8], [0, 8, 0, 2, 4, 8, 3, 8, 2], [7, 10, 0, 7, 10, 0, 0, 3, 8], [3, 6, 8, 9, 3, 5, 6, 6, 0]]
expected = [[136, 129, 184, 224, 148, 299, 84, 196, 223], [140, 65, 147, 173, 79, 206, 72, 140, 164], [131, 187, 209, 274, 195, 248, 94, 187, 202], [135, 180, 197, 262, 186, 264, 112, 170, 191], [202, 172, 190, 272, 178, 256, 105, 192, 234], [142, 147, 176, 233, 170, 274, 84, 173, 222], [134, 86, 104, 151, 89, 150, 64, 110, 139], [53, 91, 136, 163, 111, 116, 50, 72, 95]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #903 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1], [2], [6]]
b = [[9, 6, 8, 4, 8, 10]]
expected = [[9, 6, 8, 4, 8, 10], [18, 12, 16, 8, 16, 20], [54, 36, 48, 24, 48, 60]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #904 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 7, 4], [5, 10, 10, 6], [9, 3, 10, 2], [1, 4, 0, 7], [4, 0, 9, 9]]
b = [[0, 2, 1, 4, 0, 7], [2, 4, 5, 10, 0, 2], [6, 3, 4, 8, 2, 4], [8, 3, 5, 2, 2, 0]]
expected = [[86, 57, 78, 124, 22, 40], [128, 98, 125, 212, 32, 95], [82, 66, 74, 150, 24, 109], [64, 39, 56, 58, 14, 15], [126, 62, 85, 106, 36, 64]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #905 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 0, 9, 7, 7], [2, 6, 7, 6, 1, 3], [3, 3, 9, 3, 10, 3]]
b = [[0, 4, 1, 5, 5, 1, 5], [6, 2, 9, 9, 5, 2, 2], [2, 8, 9, 9, 10, 3, 7], [0, 8, 7, 5, 5, 7, 7], [5, 0, 5, 3, 10, 3, 1], [8, 5, 7, 6, 0, 9, 7]]
expected = [[151, 143, 241, 218, 185, 171, 159], [79, 139, 187, 178, 150, 107, 135], [110, 129, 203, 186, 235, 114, 136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #906 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 3, 9], [5, 6, 4, 4], [1, 7, 6, 8], [7, 9, 1, 4], [10, 4, 8, 6], [3, 3, 2, 3], [9, 0, 1, 10], [4, 3, 2, 9], [0, 5, 3, 9]]
b = [[7, 1, 9, 4, 9, 8, 1, 6, 4, 6], [9, 6, 4, 4, 5, 1, 5, 2, 8, 1], [6, 1, 3, 10, 4, 3, 7, 7, 2, 0], [3, 1, 10, 3, 4, 8, 10, 10, 7, 7]]
expected = [[196, 76, 225, 133, 183, 170, 166, 189, 181, 132], [125, 49, 121, 96, 107, 90, 103, 110, 104, 64], [130, 57, 135, 116, 100, 97, 158, 142, 128, 69], [148, 66, 142, 86, 128, 100, 99, 107, 130, 79], [172, 48, 190, 154, 166, 156, 146, 184, 130, 106], [69, 26, 75, 53, 62, 57, 62, 68, 61, 42], [99, 20, 184, 76, 125, 155, 116, 161, 108, 124], [94, 33, 144, 75, 95, 113, 123, 134, 107, 90], [90, 42, 119, 77, 73, 86, 136, 121, 109, 68]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #907 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 4], [6, 3, 1], [3, 3, 3], [2, 3, 1], [10, 7, 10], [4, 4, 2], [2, 2, 0], [2, 8, 0]]
b = [[4, 1, 2, 7, 3, 4, 8], [2, 4, 3, 6, 10, 8, 10], [2, 1, 8, 0, 8, 4, 10]]
expected = [[18, 10, 39, 20, 48, 32, 66], [32, 19, 29, 60, 56, 52, 88], [24, 18, 39, 39, 63, 48, 84], [16, 15, 21, 32, 44, 36, 56], [74, 48, 121, 112, 180, 136, 250], [28, 22, 36, 52, 68, 56, 92], [12, 10, 10, 26, 26, 24, 36], [24, 34, 28, 62, 86, 72, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #908 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 7, 9, 9], [6, 3, 3, 4, 8], [6, 4, 6, 7, 10], [5, 3, 1, 0, 0], [4, 4, 9, 4, 2], [4, 7, 2, 3, 1]]
b = [[4, 3, 7, 1, 5, 5, 8, 3, 8, 10], [0, 3, 4, 0, 7, 2, 5, 5, 1, 8], [2, 3, 0, 5, 8, 6, 8, 10, 5, 4], [0, 0, 9, 8, 2, 7, 6, 0, 10, 4], [0, 6, 9, 4, 3, 10, 9, 9, 7, 5]]
expected = [[46, 123, 250, 151, 197, 251, 295, 215, 260, 253], [30, 84, 162, 85, 107, 162, 183, 135, 162, 152], [36, 108, 211, 132, 150, 223, 248, 188, 222, 194], [22, 27, 47, 10, 54, 37, 63, 40, 48, 78], [34, 63, 98, 89, 134, 130, 166, 140, 135, 134], [20, 45, 92, 42, 94, 77, 110, 76, 86, 121]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #909 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [0], [3], [6], [1], [8], [2], [5]]
b = [[5, 8, 0, 8, 1, 3, 2, 7, 4, 1]]
expected = [[25, 40, 0, 40, 5, 15, 10, 35, 20, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [15, 24, 0, 24, 3, 9, 6, 21, 12, 3], [30, 48, 0, 48, 6, 18, 12, 42, 24, 6], [5, 8, 0, 8, 1, 3, 2, 7, 4, 1], [40, 64, 0, 64, 8, 24, 16, 56, 32, 8], [10, 16, 0, 16, 2, 6, 4, 14, 8, 2], [25, 40, 0, 40, 5, 15, 10, 35, 20, 5]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #910 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 7, 4, 3, 10, 7, 8]]
b = [[8, 5, 0, 10, 8], [8, 4, 2, 9, 9], [4, 2, 0, 5, 7], [9, 8, 8, 5, 10], [1, 7, 5, 2, 4], [5, 1, 0, 2, 1], [7, 3, 9, 9, 9], [9, 6, 5, 8, 6]]
expected = [[358, 213, 166, 350, 350]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #911 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [10], [2], [5], [8], [8], [8], [3], [1], [0]]
b = [[10, 0, 9, 9, 7, 4, 9]]
expected = [[90, 0, 81, 81, 63, 36, 81], [100, 0, 90, 90, 70, 40, 90], [20, 0, 18, 18, 14, 8, 18], [50, 0, 45, 45, 35, 20, 45], [80, 0, 72, 72, 56, 32, 72], [80, 0, 72, 72, 56, 32, 72], [80, 0, 72, 72, 56, 32, 72], [30, 0, 27, 27, 21, 12, 27], [10, 0, 9, 9, 7, 4, 9], [0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #912 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 2, 4, 4, 1, 4, 10, 4, 3], [10, 5, 5, 2, 2, 1, 4, 6, 0, 10], [2, 2, 4, 2, 5, 1, 4, 5, 1, 7], [9, 10, 9, 7, 4, 6, 9, 9, 8, 5], [8, 8, 2, 7, 3, 6, 0, 6, 6, 2], [5, 4, 1, 5, 5, 10, 3, 10, 6, 4], [1, 10, 5, 9, 8, 9, 2, 3, 7, 8], [2, 5, 8, 3, 10, 6, 10, 4, 0, 3]]
b = [[2, 5, 0, 7, 2, 0, 8, 2, 10], [5, 0, 10, 5, 9, 7, 0, 3, 5], [1, 5, 6, 0, 5, 1, 5, 8, 9], [0, 4, 8, 1, 2, 5, 2, 2, 2], [6, 6, 3, 6, 1, 0, 8, 6, 2], [7, 3, 4, 4, 8, 4, 0, 9, 10], [0, 1, 2, 0, 8, 9, 0, 0, 1], [6, 2, 8, 3, 0, 2, 7, 4, 3], [8, 8, 6, 10, 6, 10, 4, 8, 0], [5, 4, 5, 5, 9, 5, 7, 5, 8]]
expected = [[188, 141, 267, 185, 193, 193, 189, 176, 182], [155, 154, 212, 181, 226, 152, 237, 174, 290], [128, 121, 168, 120, 160, 123, 168, 148, 165], [286, 271, 409, 300, 384, 342, 293, 337, 379], [212, 182, 275, 233, 217, 199, 192, 224, 252], [259, 197, 283, 240, 242, 221, 217, 268, 264], [282, 237, 372, 269, 345, 290, 220, 327, 304], [178, 170, 243, 153, 260, 195, 191, 234, 249]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #913 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 0, 2, 3, 6, 9, 4, 0], [10, 4, 2, 8, 4, 9, 3, 8, 4], [0, 3, 2, 7, 6, 2, 3, 4, 2]]
b = [[2, 5, 2, 4, 3, 9, 4, 2], [2, 0, 1, 3, 8, 8, 8, 6], [8, 5, 10, 10, 2, 9, 7, 2], [6, 4, 1, 0, 10, 2, 1, 1], [4, 1, 2, 7, 5, 8, 9, 0], [6, 9, 10, 7, 9, 4, 6, 5], [9, 2, 5, 1, 5, 0, 9, 6], [7, 8, 9, 7, 6, 0, 3, 7], [7, 7, 1, 4, 6, 7, 8, 4]]
expected = [[207, 165, 178, 167, 260, 214, 270, 188], [273, 275, 241, 238, 334, 252, 267, 191], [169, 114, 115, 124, 197, 126, 166, 93]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #914 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 6], [9, 4, 9], [3, 0, 8], [8, 5, 7], [4, 7, 1], [2, 1, 6], [2, 7, 1], [0, 0, 4]]
b = [[7, 5], [2, 6], [4, 1]]
expected = [[57, 57], [107, 78], [53, 23], [94, 77], [46, 63], [40, 22], [32, 53], [16, 4]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #915 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7]]
b = [[2, 8, 2, 6, 0, 0, 10, 6, 1, 9], [0, 2, 3, 10, 1, 9, 6, 9, 4, 5]]
expected = [[10, 54, 31, 100, 7, 63, 92, 93, 33, 80]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #916 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 3, 2], [2, 4, 2, 2], [1, 9, 5, 8], [5, 10, 2, 8], [1, 8, 4, 6], [3, 1, 2, 6], [9, 3, 0, 8], [0, 7, 1, 3], [10, 3, 7, 0]]
b = [[3, 1, 10, 4, 8, 0, 2, 1], [0, 3, 8, 0, 5, 4, 3, 10], [0, 2, 2, 5, 3, 8, 6, 3], [2, 6, 0, 1, 3, 3, 10, 9]]
expected = [[16, 43, 102, 33, 82, 58, 67, 101], [10, 30, 56, 20, 48, 38, 48, 66], [19, 86, 92, 37, 92, 100, 139, 178], [31, 87, 134, 38, 120, 80, 132, 183], [15, 69, 82, 30, 78, 82, 110, 147], [21, 46, 42, 28, 53, 38, 81, 73], [43, 66, 114, 44, 111, 36, 107, 111], [6, 41, 58, 8, 47, 45, 57, 100], [30, 33, 138, 75, 116, 68, 71, 61]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #917 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 0, 6, 4, 3, 10, 0], [0, 9, 1, 2, 8, 3, 0, 10]]
b = [[0, 0, 4, 10, 4, 10], [9, 9, 8, 5, 1, 8], [9, 10, 10, 7, 7, 10], [5, 0, 1, 8, 5, 0], [5, 6, 2, 1, 10, 0], [2, 3, 8, 4, 4, 9], [3, 8, 10, 6, 10, 2], [5, 4, 5, 8, 0, 2]]
expected = [[176, 203, 222, 184, 196, 137], [196, 188, 174, 168, 118, 129]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #918 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6], [3, 0], [8, 5], [4, 1], [8, 7], [0, 7], [7, 5], [10, 6], [4, 10]]
b = [[2, 10, 5, 0], [1, 5, 3, 7]]
expected = [[14, 70, 38, 42], [6, 30, 15, 0], [21, 105, 55, 35], [9, 45, 23, 7], [23, 115, 61, 49], [7, 35, 21, 49], [19, 95, 50, 35], [26, 130, 68, 42], [18, 90, 50, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #919 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 10, 4], [6, 8, 9, 6], [7, 7, 6, 0], [8, 6, 7, 9], [10, 9, 4, 2], [0, 0, 1, 10], [6, 8, 5, 0], [2, 9, 10, 8], [9, 6, 2, 0], [2, 1, 0, 1]]
b = [[1], [2], [10], [10]]
expected = [[146], [172], [81], [180], [88], [110], [72], [200], [41], [14]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #920 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 10, 0, 3, 5, 8, 6, 4, 10], [9, 8, 4, 4, 3, 1, 8, 3, 7, 0], [5, 5, 10, 10, 10, 2, 2, 4, 0, 8], [5, 6, 8, 7, 8, 7, 2, 7, 9, 9], [1, 4, 6, 8, 9, 4, 3, 0, 0, 1], [9, 6, 7, 2, 7, 1, 6, 2, 6, 2], [3, 8, 10, 3, 4, 10, 1, 10, 8, 6]]
b = [[1, 7, 2, 6, 3, 9], [1, 9, 9, 0, 2, 8], [3, 1, 10, 2, 7, 5], [6, 9, 8, 4, 5, 5], [9, 10, 7, 1, 5, 1], [8, 9, 0, 6, 9, 6], [9, 5, 2, 0, 5, 10], [0, 1, 7, 7, 6, 2], [9, 2, 3, 1, 10, 5], [5, 6, 9, 7, 3, 3]]
expected = [[264, 262, 299, 223, 303, 306], [223, 271, 241, 115, 243, 315], [264, 360, 409, 196, 271, 259], [349, 392, 417, 245, 390, 324], [216, 268, 240, 90, 192, 177], [237, 277, 269, 123, 250, 287], [286, 327, 380, 234, 383, 308]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #921 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 2, 6, 4, 7, 0, 6, 7], [5, 3, 6, 10, 9, 4, 4, 10, 4], [4, 2, 6, 7, 0, 1, 8, 5, 9], [3, 5, 3, 10, 10, 6, 6, 7, 4], [2, 2, 2, 6, 0, 8, 5, 8, 2], [0, 3, 3, 0, 0, 2, 1, 1, 5], [2, 4, 2, 3, 5, 3, 8, 5, 2]]
b = [[2, 5, 9, 4], [6, 8, 2, 4], [4, 5, 8, 9], [10, 8, 8, 3], [9, 3, 8, 5], [2, 0, 5, 5], [7, 7, 5, 8], [3, 2, 2, 6], [5, 6, 3, 9]]
expected = [[233, 209, 193, 234], [319, 258, 323, 309], [232, 242, 226, 279], [333, 260, 307, 295], [169, 147, 173, 198], [69, 78, 62, 108], [198, 169, 177, 203]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #922 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 2, 3, 6, 6, 1, 2, 6], [0, 4, 8, 9, 6, 5, 6, 4, 5], [6, 8, 8, 9, 7, 2, 4, 5, 4], [7, 3, 3, 2, 4, 4, 1, 6, 1], [9, 6, 6, 1, 5, 9, 5, 2, 10]]
b = [[3, 5, 1, 5], [8, 10, 8, 4], [8, 3, 1, 3], [1, 6, 5, 0], [9, 9, 1, 3], [6, 10, 4, 10], [0, 5, 9, 2], [8, 2, 2, 9], [4, 1, 5, 5]]
expected = [[219, 243, 156, 176], [241, 265, 198, 181], [286, 305, 204, 200], [183, 180, 90, 169], [279, 303, 208, 270]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #923 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 4, 5, 1, 0, 10, 3], [3, 2, 1, 7, 2, 2, 5, 8], [9, 4, 6, 6, 5, 9, 7, 9], [10, 9, 2, 3, 5, 4, 1, 5]]
b = [[10, 6, 9, 5, 7, 10, 0, 8, 2, 0], [2, 10, 1, 8, 3, 3, 9, 4, 0, 7], [4, 9, 0, 5, 7, 3, 2, 8, 7, 3], [9, 10, 1, 0, 9, 0, 2, 9, 4, 8], [3, 5, 2, 9, 7, 4, 2, 7, 0, 3], [3, 1, 6, 10, 2, 5, 1, 7, 5, 5], [10, 8, 8, 0, 3, 3, 5, 5, 6, 2], [6, 4, 7, 2, 2, 9, 8, 8, 9, 9]]
expected = [[194, 243, 114, 83, 134, 91, 148, 182, 135, 144], [211, 201, 148, 90, 146, 144, 129, 220, 153, 171], [342, 334, 274, 260, 263, 287, 186, 395, 252, 249], [220, 255, 179, 227, 194, 221, 150, 267, 117, 175]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #924 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5], [8, 7], [6, 5], [4, 3], [2, 6], [5, 3], [1, 1], [1, 3], [7, 10], [6, 7]]
b = [[7, 6, 1, 10, 2, 1, 4, 10, 4, 8], [9, 5, 7, 5, 0, 10, 2, 0, 6, 0]]
expected = [[59, 37, 37, 45, 4, 52, 18, 20, 38, 16], [119, 83, 57, 115, 16, 78, 46, 80, 74, 64], [87, 61, 41, 85, 12, 56, 34, 60, 54, 48], [55, 39, 25, 55, 8, 34, 22, 40, 34, 32], [68, 42, 44, 50, 4, 62, 20, 20, 44, 16], [62, 45, 26, 65, 10, 35, 26, 50, 38, 40], [16, 11, 8, 15, 2, 11, 6, 10, 10, 8], [34, 21, 22, 25, 2, 31, 10, 10, 22, 8], [139, 92, 77, 120, 14, 107, 48, 70, 88, 56], [105, 71, 55, 95, 12, 76, 38, 60, 66, 48]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #925 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 5, 3, 4, 7], [5, 9, 8, 7, 4, 0], [0, 6, 5, 5, 10, 10]]
b = [[6, 8, 8, 7, 6, 4, 0, 3, 2, 4], [0, 7, 7, 7, 5, 6, 9, 1, 8, 1], [6, 0, 8, 2, 10, 9, 5, 7, 8, 2], [7, 2, 3, 5, 10, 7, 1, 9, 5, 0], [3, 2, 1, 4, 3, 8, 10, 1, 10, 2], [0, 8, 5, 8, 2, 0, 1, 4, 6, 6]]
expected = [[69, 113, 131, 139, 137, 132, 120, 102, 179, 69], [139, 125, 192, 165, 237, 227, 168, 147, 221, 53], [95, 152, 157, 197, 180, 196, 194, 136, 273, 96]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #926 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 7], [9, 8, 2], [1, 6, 9], [9, 2, 4], [1, 7, 5], [9, 9, 6], [4, 3, 1]]
b = [[9, 10, 2, 6, 8, 1, 5, 4], [7, 7, 2, 4, 6, 0, 0, 5], [0, 3, 2, 10, 7, 1, 2, 0]]
expected = [[89, 116, 36, 126, 127, 13, 44, 49], [137, 152, 38, 106, 134, 11, 49, 76], [51, 79, 32, 120, 107, 10, 23, 34], [95, 116, 30, 102, 112, 13, 53, 46], [58, 74, 26, 84, 85, 6, 15, 39], [144, 171, 48, 150, 168, 15, 57, 81], [57, 64, 16, 46, 57, 5, 22, 31]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #927 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 2, 8], [7, 10, 8, 4], [1, 2, 6, 6], [5, 6, 6, 5], [7, 4, 2, 10], [4, 6, 5, 7], [7, 7, 7, 6]]
b = [[10, 1, 5, 2, 8, 1, 1, 0, 1, 2], [3, 0, 2, 7, 5, 2, 1, 10, 3, 9], [0, 6, 10, 6, 3, 0, 4, 2, 9, 0], [3, 4, 0, 8, 9, 2, 0, 7, 5, 10]]
expected = [[40, 45, 29, 92, 96, 21, 11, 80, 65, 100], [112, 71, 135, 164, 166, 35, 49, 144, 129, 144], [34, 61, 69, 100, 90, 17, 27, 74, 91, 80], [83, 61, 97, 128, 133, 27, 35, 107, 102, 114], [112, 59, 63, 134, 172, 35, 19, 114, 87, 150], [79, 62, 82, 136, 140, 30, 30, 119, 102, 132], [109, 73, 119, 153, 166, 33, 42, 126, 121, 137]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #928 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[8, 6, 2]]
expected = [[24, 18, 6]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #929 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 10, 6, 5, 2, 10, 3, 7, 4]]
b = [[9, 1, 6, 5, 9, 6, 10], [10, 7, 7, 9, 8, 4, 2], [10, 10, 6, 10, 6, 0, 4], [10, 4, 8, 10, 0, 4, 7], [5, 4, 4, 0, 3, 4, 8], [3, 2, 5, 9, 1, 9, 4], [5, 9, 7, 2, 3, 6, 6], [0, 9, 7, 3, 0, 4, 7], [5, 8, 10, 5, 7, 4, 1], [2, 4, 7, 3, 5, 4, 7]]
expected = [[445, 402, 437, 371, 321, 264, 352]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #930 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 5, 5], [8, 3, 1, 0], [6, 6, 8, 1], [2, 8, 10, 9], [8, 10, 8, 7], [4, 2, 6, 4], [1, 8, 7, 2], [5, 8, 6, 1], [1, 0, 6, 0]]
b = [[10], [2], [3], [5]]
expected = [[114], [89], [101], [111], [159], [82], [57], [89], [28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #931 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 0, 8, 3, 7, 9, 1], [7, 8, 8, 1, 4, 0, 4, 5], [7, 10, 0, 5, 3, 4, 9, 0], [8, 8, 2, 5, 9, 3, 6, 6]]
b = [[3, 5, 7, 5, 9, 6, 7], [8, 8, 0, 10, 8, 1, 9], [4, 6, 1, 4, 3, 10, 7], [0, 8, 7, 0, 8, 6, 9], [0, 7, 2, 0, 4, 6, 0], [8, 1, 10, 0, 10, 2, 4], [1, 0, 5, 0, 2, 3, 5], [3, 2, 4, 8, 3, 0, 10]]
expected = [[143, 171, 188, 103, 248, 122, 243], [136, 193, 112, 187, 198, 172, 256], [142, 180, 175, 135, 253, 135, 245], [144, 234, 195, 176, 278, 184, 289]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #932 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3]]
b = [[7, 3], [5, 9]]
expected = [[71, 51]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #933 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 10], [8, 0, 3], [7, 3, 3], [2, 6, 9], [3, 3, 5], [3, 9, 1], [2, 7, 8], [4, 4, 8]]
b = [[0, 1, 1, 3, 7], [5, 4, 7, 8, 9], [8, 4, 5, 0, 3]]
expected = [[80, 50, 60, 30, 100], [24, 20, 23, 24, 65], [39, 31, 43, 45, 85], [102, 62, 89, 54, 95], [55, 35, 49, 33, 63], [53, 43, 71, 81, 105], [99, 62, 91, 62, 101], [84, 52, 72, 44, 88]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #934 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [7], [7], [0], [10]]
b = [[10, 2, 2, 10, 10]]
expected = [[50, 10, 10, 50, 50], [70, 14, 14, 70, 70], [70, 14, 14, 70, 70], [0, 0, 0, 0, 0], [100, 20, 20, 100, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #935 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2], [10, 1], [1, 8], [3, 5], [7, 10], [10, 5], [1, 1]]
b = [[1, 5, 6, 5, 0, 6], [0, 8, 9, 10, 9, 3]]
expected = [[6, 46, 54, 50, 18, 42], [10, 58, 69, 60, 9, 63], [1, 69, 78, 85, 72, 30], [3, 55, 63, 65, 45, 33], [7, 115, 132, 135, 90, 72], [10, 90, 105, 100, 45, 75], [1, 13, 15, 15, 9, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #936 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2], [7, 2], [7, 0], [9, 1], [4, 5], [6, 10], [7, 9], [4, 9], [10, 5], [4, 9]]
b = [[9], [0]]
expected = [[54], [63], [63], [81], [36], [54], [63], [36], [90], [36]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #937 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 3, 9, 4], [6, 7, 0, 0, 0], [4, 9, 7, 0, 2], [6, 3, 0, 6, 6]]
b = [[0, 7, 9], [1, 5, 3], [0, 4, 8], [7, 2, 2], [2, 5, 7]]
expected = [[73, 130, 166], [7, 77, 75], [13, 111, 133], [57, 99, 117]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #938 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 4, 10, 10, 5, 4, 0, 0, 1], [3, 0, 6, 6, 4, 10, 3, 3, 5, 2]]
b = [[6, 1, 5], [0, 9, 3], [1, 1, 10], [10, 6, 1], [10, 10, 1], [0, 6, 4], [7, 4, 7], [1, 1, 10], [6, 4, 7], [6, 0, 2]]
expected = [[238, 264, 128], [190, 180, 215]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #939 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 8, 6, 4, 0, 2, 5], [4, 3, 0, 3, 10, 2, 0, 9], [0, 1, 4, 7, 8, 4, 6, 6], [1, 4, 10, 0, 0, 4, 9, 10], [2, 5, 9, 0, 1, 5, 2, 7], [9, 5, 7, 0, 8, 3, 9, 8], [5, 6, 1, 6, 5, 5, 5, 1], [0, 0, 3, 1, 10, 3, 9, 10], [2, 6, 0, 1, 8, 4, 4, 7]]
b = [[10, 7, 0, 1, 2, 1, 7, 0], [9, 7, 6, 5, 9, 10, 10, 6], [9, 8, 5, 5, 3, 6, 5, 4], [4, 4, 8, 0, 2, 9, 3, 7], [10, 3, 5, 10, 2, 1, 0, 7], [10, 2, 6, 1, 8, 2, 6, 5], [5, 4, 5, 10, 3, 7, 1, 6], [2, 7, 1, 0, 10, 5, 9, 3]]
expected = [[243, 206, 141, 121, 139, 181, 177, 147], [217, 158, 113, 121, 167, 120, 160, 146], [235, 165, 182, 169, 161, 185, 135, 201], [241, 229, 153, 165, 227, 222, 220, 168], [230, 191, 127, 107, 194, 166, 204, 131], [369, 276, 176, 242, 231, 218, 247, 207], [264, 161, 170, 145, 154, 180, 162, 175], [226, 170, 146, 208, 182, 156, 135, 188], [232, 157, 135, 156, 190, 150, 168, 164]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #940 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 6, 7, 4, 4, 8, 0, 9], [6, 9, 1, 7, 9, 9, 0, 4, 8], [5, 2, 9, 5, 4, 5, 4, 5, 5], [7, 3, 3, 7, 8, 8, 7, 6, 7], [10, 4, 5, 8, 5, 9, 10, 0, 3], [10, 0, 8, 2, 7, 7, 1, 1, 5], [7, 0, 9, 1, 9, 7, 4, 6, 3], [5, 10, 3, 9, 3, 3, 1, 0, 10], [8, 8, 4, 8, 9, 7, 4, 2, 0]]
b = [[7, 7], [4, 5], [10, 10], [0, 2], [2, 10], [4, 9], [3, 5], [0, 7], [6, 0]]
expected = [[202, 233], [190, 310], [203, 285], [202, 337], [230, 337], [225, 299], [215, 356], [186, 195], [186, 339]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #941 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 3, 6, 1, 2]]
b = [[3, 6, 9], [0, 3, 4], [2, 8, 3], [3, 5, 8], [1, 7, 7], [5, 4, 6]]
expected = [[59, 144, 184]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #942 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 0, 0, 4, 7, 6], [8, 8, 5, 4, 8, 0, 4], [6, 9, 10, 10, 4, 1, 7], [2, 0, 6, 3, 1, 9, 5]]
b = [[6, 3, 1, 2, 2, 1, 7], [10, 6, 10, 7, 6, 2, 10], [6, 8, 3, 1, 8, 8, 10], [9, 8, 10, 7, 9, 2, 4], [0, 9, 2, 10, 1, 0, 8], [8, 9, 5, 5, 7, 7, 5], [6, 6, 8, 6, 0, 2, 2]]
expected = [[156, 168, 110, 136, 77, 72, 152], [218, 240, 191, 209, 148, 80, 274], [326, 319, 295, 242, 247, 145, 323], [177, 198, 137, 116, 143, 129, 149]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #943 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [6], [3], [7], [10], [8], [7], [3]]
b = [[0, 7, 1, 5, 1]]
expected = [[0, 56, 8, 40, 8], [0, 42, 6, 30, 6], [0, 21, 3, 15, 3], [0, 49, 7, 35, 7], [0, 70, 10, 50, 10], [0, 56, 8, 40, 8], [0, 49, 7, 35, 7], [0, 21, 3, 15, 3]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #944 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 1, 10, 7], [7, 4, 3, 3, 10], [7, 5, 6, 2, 4]]
b = [[5, 9, 7, 3, 2, 10, 3, 7, 7], [10, 9, 6, 2, 3, 6, 5, 1, 3], [10, 1, 5, 0, 1, 8, 4, 1, 4], [1, 7, 9, 8, 3, 8, 7, 10, 4], [2, 2, 6, 6, 2, 10, 4, 6, 5]]
expected = [[94, 148, 181, 138, 64, 208, 133, 162, 108], [128, 143, 175, 113, 58, 242, 114, 146, 135], [155, 136, 151, 71, 49, 204, 100, 104, 116]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #945 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 8, 9]]
b = [[5, 1, 10, 2, 2, 8, 7], [5, 5, 9, 0, 1, 7, 3], [7, 2, 4, 1, 5, 2, 9], [7, 4, 8, 6, 1, 10, 6]]
expected = [[164, 61, 194, 80, 67, 178, 189]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #946 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[9, 4, 8, 9, 0, 10]]
expected = [[0, 0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #947 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9], [5], [5], [5], [8], [5]]
b = [[7, 1, 1, 10, 5, 2, 9, 0, 3, 5]]
expected = [[63, 9, 9, 90, 45, 18, 81, 0, 27, 45], [35, 5, 5, 50, 25, 10, 45, 0, 15, 25], [35, 5, 5, 50, 25, 10, 45, 0, 15, 25], [35, 5, 5, 50, 25, 10, 45, 0, 15, 25], [56, 8, 8, 80, 40, 16, 72, 0, 24, 40], [35, 5, 5, 50, 25, 10, 45, 0, 15, 25]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #948 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 8, 5, 6, 2, 6], [9, 4, 5, 8, 0, 9, 5], [1, 5, 1, 0, 8, 6, 0], [0, 5, 9, 8, 7, 10, 1], [0, 7, 2, 10, 8, 5, 7], [7, 0, 6, 8, 0, 6, 2], [10, 3, 4, 1, 3, 1, 3], [1, 2, 8, 1, 4, 3, 7]]
b = [[4, 5, 10, 1, 5, 7, 0], [1, 10, 5, 6, 5, 1, 7], [8, 9, 2, 0, 3, 6, 6], [3, 3, 6, 9, 8, 7, 9], [2, 0, 2, 5, 5, 9, 1], [5, 1, 10, 6, 6, 10, 5], [8, 1, 9, 2, 3, 4, 2]]
expected = [[170, 165, 197, 133, 169, 214, 156], [189, 168, 303, 169, 213, 263, 185], [63, 70, 113, 107, 109, 150, 79], [173, 166, 214, 199, 214, 282, 220], [150, 130, 228, 216, 212, 239, 198], [146, 121, 208, 119, 159, 209, 142], [113, 123, 172, 64, 115, 153, 68], [152, 110, 143, 74, 106, 158, 104]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #949 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [8], [2], [6], [4], [1], [7], [4], [0], [2]]
b = [[5, 1, 1, 8, 5, 4, 4, 9, 2, 6]]
expected = [[10, 2, 2, 16, 10, 8, 8, 18, 4, 12], [40, 8, 8, 64, 40, 32, 32, 72, 16, 48], [10, 2, 2, 16, 10, 8, 8, 18, 4, 12], [30, 6, 6, 48, 30, 24, 24, 54, 12, 36], [20, 4, 4, 32, 20, 16, 16, 36, 8, 24], [5, 1, 1, 8, 5, 4, 4, 9, 2, 6], [35, 7, 7, 56, 35, 28, 28, 63, 14, 42], [20, 4, 4, 32, 20, 16, 16, 36, 8, 24], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [10, 2, 2, 16, 10, 8, 8, 18, 4, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #950 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 5, 10, 7, 2, 3], [9, 9, 8, 4, 0, 7, 9], [6, 3, 2, 8, 7, 3, 10], [10, 1, 2, 6, 10, 3, 7], [5, 1, 2, 0, 3, 0, 9], [5, 4, 10, 7, 10, 3, 2], [4, 9, 0, 9, 2, 5, 6]]
b = [[7, 8, 9, 3, 1, 2, 9], [5, 4, 3, 8, 5, 2, 4], [6, 1, 7, 3, 0, 2, 9], [6, 5, 8, 2, 7, 3, 5], [9, 9, 0, 7, 7, 5, 2], [2, 1, 8, 9, 7, 2, 1], [1, 2, 2, 0, 10, 1, 3]]
expected = [[206, 170, 179, 151, 191, 98, 167], [203, 161, 270, 194, 221, 87, 243], [196, 188, 185, 140, 247, 97, 171], [226, 223, 193, 153, 218, 107, 186], [88, 91, 80, 50, 121, 40, 100], [255, 198, 211, 188, 185, 117, 215], [161, 148, 187, 161, 221, 79, 144]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #951 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 1, 9], [2, 2, 6, 8], [8, 3, 8, 9], [8, 3, 7, 2], [9, 7, 7, 0], [9, 6, 5, 1], [6, 2, 3, 4], [3, 8, 4, 0]]
b = [[4, 9, 4, 8, 10, 4, 8, 3, 6], [0, 6, 2, 0, 10, 6, 4, 7, 5], [10, 1, 3, 4, 3, 3, 8, 7, 5], [8, 10, 9, 6, 3, 5, 5, 10, 9]]
expected = [[106, 157, 112, 106, 110, 84, 109, 129, 132], [132, 116, 102, 88, 82, 78, 112, 142, 124], [184, 188, 143, 150, 161, 119, 185, 191, 184], [118, 117, 77, 104, 137, 81, 142, 114, 116], [106, 130, 71, 100, 181, 99, 156, 125, 124], [94, 132, 72, 98, 168, 92, 141, 114, 118], [86, 109, 73, 84, 101, 65, 100, 93, 97], [52, 79, 40, 40, 122, 72, 88, 93, 78]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #952 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 7], [3, 0, 6], [10, 7, 8], [3, 10, 1], [6, 1, 4], [3, 10, 9], [9, 6, 3], [9, 5, 10]]
b = [[4, 3, 9, 9, 7, 9, 0, 1, 3], [7, 7, 8, 10, 6, 1, 5, 5, 1], [4, 6, 1, 2, 2, 8, 4, 9, 2]]
expected = [[59, 67, 69, 78, 62, 111, 33, 74, 33], [36, 45, 33, 39, 33, 75, 24, 57, 21], [121, 127, 154, 176, 128, 161, 67, 117, 53], [86, 85, 108, 129, 83, 45, 54, 62, 21], [47, 49, 66, 72, 56, 87, 21, 47, 27], [118, 133, 116, 145, 99, 109, 86, 134, 37], [90, 87, 132, 147, 105, 111, 42, 66, 39], [111, 122, 131, 151, 113, 166, 65, 124, 52]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #953 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 7, 8, 2, 5, 3, 6, 5], [2, 2, 9, 7, 1, 2, 5, 8, 5]]
b = [[2, 5, 3, 0, 8, 10, 5, 1, 2], [4, 8, 3, 8, 2, 6, 6, 6, 6], [1, 2, 0, 3, 5, 5, 7, 1, 7], [0, 7, 4, 10, 6, 7, 6, 1, 1], [8, 4, 9, 5, 7, 10, 7, 8, 7], [9, 1, 0, 10, 0, 10, 9, 8, 10], [1, 3, 4, 0, 2, 6, 2, 9, 1], [3, 1, 9, 9, 2, 6, 2, 6, 0], [3, 2, 9, 7, 9, 2, 6, 0, 7]]
expected = [[148, 206, 209, 298, 252, 361, 290, 180, 215], [91, 132, 186, 245, 185, 244, 208, 147, 153]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #954 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10], [10, 2], [7, 3], [7, 9], [3, 10]]
b = [[6, 7, 4, 4, 10], [8, 6, 1, 2, 0]]
expected = [[92, 74, 18, 28, 20], [76, 82, 42, 44, 100], [66, 67, 31, 34, 70], [114, 103, 37, 46, 70], [98, 81, 22, 32, 30]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #955 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 3, 4, 1], [2, 1, 5, 2, 10], [3, 4, 0, 1, 2], [7, 1, 5, 8, 4], [5, 8, 8, 9, 5], [3, 1, 9, 6, 3], [3, 0, 4, 6, 6], [9, 10, 10, 7, 2], [0, 0, 0, 10, 0]]
b = [[2, 5, 3, 3, 1, 6, 7, 10, 8, 5], [3, 9, 1, 5, 3, 0, 1, 7, 2, 1], [3, 0, 7, 10, 8, 1, 3, 6, 6, 8], [2, 8, 2, 9, 4, 4, 1, 6, 0, 10], [7, 3, 0, 6, 9, 2, 1, 10, 0, 9]]
expected = [[56, 127, 49, 124, 77, 45, 50, 148, 66, 101], [96, 65, 46, 139, 143, 45, 42, 169, 48, 161], [34, 65, 15, 50, 37, 26, 28, 84, 32, 47], [76, 120, 73, 172, 118, 87, 77, 195, 88, 192], [111, 184, 97, 246, 174, 84, 81, 258, 104, 232], [69, 81, 85, 176, 129, 57, 58, 157, 80, 175], [72, 81, 49, 139, 113, 58, 45, 150, 48, 161], [106, 197, 121, 252, 165, 96, 112, 282, 152, 223], [20, 80, 20, 90, 40, 40, 10, 60, 0, 100]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #956 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 5], [8, 4, 10], [7, 2, 6], [6, 6, 3], [7, 6, 4], [7, 2, 7], [8, 2, 1]]
b = [[7, 4], [9, 4], [7, 5]]
expected = [[132, 77], [162, 98], [109, 66], [117, 63], [131, 72], [116, 71], [81, 45]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #957 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5], [4], [3], [2], [6], [5], [7], [5], [6]]
b = [[10, 2, 7, 8, 5, 8, 5, 9, 0]]
expected = [[50, 10, 35, 40, 25, 40, 25, 45, 0], [40, 8, 28, 32, 20, 32, 20, 36, 0], [30, 6, 21, 24, 15, 24, 15, 27, 0], [20, 4, 14, 16, 10, 16, 10, 18, 0], [60, 12, 42, 48, 30, 48, 30, 54, 0], [50, 10, 35, 40, 25, 40, 25, 45, 0], [70, 14, 49, 56, 35, 56, 35, 63, 0], [50, 10, 35, 40, 25, 40, 25, 45, 0], [60, 12, 42, 48, 30, 48, 30, 54, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #958 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 10, 5, 1, 10, 10, 4, 6], [2, 10, 0, 10, 3, 2, 2, 10, 1], [9, 4, 1, 5, 6, 8, 7, 7, 3], [7, 5, 4, 1, 3, 10, 8, 7, 4], [0, 6, 9, 9, 3, 5, 6, 0, 5]]
b = [[8, 1, 1], [4, 10, 1], [3, 10, 7], [7, 0, 9], [9, 3, 5], [1, 9, 10], [10, 0, 5], [7, 1, 8], [8, 8, 8]]
expected = [[340, 312, 363], [253, 147, 235], [331, 180, 290], [293, 235, 292], [246, 244, 285]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #959 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 3, 10, 4, 3, 3, 2, 0, 5]]
b = [[1, 0, 4, 10, 3, 1], [6, 10, 2, 2, 5, 7], [4, 6, 8, 9, 3, 2], [6, 9, 9, 7, 9, 8], [5, 7, 8, 2, 1, 2], [1, 4, 10, 9, 5, 5], [10, 1, 4, 2, 5, 9], [1, 10, 4, 3, 1, 9], [3, 5, 8, 6, 1, 8], [0, 8, 0, 9, 6, 0]]
expected = [[172, 271, 244, 291, 222, 205]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #960 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9], [0, 9], [8, 5], [3, 1], [4, 2], [2, 1], [9, 7], [5, 6], [3, 7], [7, 3]]
b = [[10, 6, 4, 5, 10, 0], [4, 0, 9, 10, 9, 3]]
expected = [[126, 54, 117, 135, 171, 27], [36, 0, 81, 90, 81, 27], [100, 48, 77, 90, 125, 15], [34, 18, 21, 25, 39, 3], [48, 24, 34, 40, 58, 6], [24, 12, 17, 20, 29, 3], [118, 54, 99, 115, 153, 21], [74, 30, 74, 85, 104, 18], [58, 18, 75, 85, 93, 21], [82, 42, 55, 65, 97, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #961 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 7, 6, 3, 1, 9], [4, 6, 4, 8, 2, 7, 0]]
b = [[1, 10], [5, 1], [4, 1], [9, 6], [3, 8], [2, 8], [5, 7]]
expected = [[150, 160], [142, 170]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #962 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 10, 6, 4, 9, 7], [1, 5, 8, 10, 3, 10, 7], [0, 0, 0, 3, 9, 10, 8], [4, 5, 4, 10, 10, 8, 7], [9, 0, 0, 1, 0, 3, 5]]
b = [[3, 2, 1, 3, 1, 3, 7, 3, 4, 0], [6, 1, 7, 4, 4, 9, 6, 9, 5, 3], [4, 1, 0, 0, 3, 8, 2, 4, 6, 7], [1, 9, 8, 1, 8, 8, 4, 8, 9, 6], [8, 9, 1, 10, 4, 4, 8, 7, 10, 3], [1, 8, 6, 3, 8, 2, 8, 4, 10, 6], [8, 6, 4, 10, 5, 9, 7, 7, 4, 4]]
expected = [[197, 238, 172, 189, 227, 291, 291, 267, 332, 212], [165, 254, 207, 163, 252, 287, 246, 270, 325, 228], [149, 236, 125, 203, 180, 152, 220, 183, 249, 137], [212, 303, 205, 236, 255, 288, 299, 304, 363, 209], [71, 81, 55, 87, 66, 86, 126, 82, 95, 44]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #963 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 8], [0, 1, 10], [0, 0, 4], [6, 1, 6], [7, 10, 1], [5, 9, 3], [8, 7, 10], [1, 9, 7]]
b = [[4, 5, 2, 2, 4, 5, 9, 5], [1, 1, 8, 10, 5, 9, 3, 5], [5, 6, 2, 9, 4, 6, 2, 1]]
expected = [[40, 48, 16, 72, 32, 48, 16, 8], [51, 61, 28, 100, 45, 69, 23, 15], [20, 24, 8, 36, 16, 24, 8, 4], [55, 67, 32, 76, 53, 75, 69, 41], [43, 51, 96, 123, 82, 131, 95, 86], [44, 52, 88, 127, 77, 124, 78, 73], [89, 107, 92, 176, 107, 163, 113, 85], [48, 56, 88, 155, 77, 128, 50, 57]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #964 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 8, 4, 2, 7, 2, 6, 4, 1], [9, 7, 7, 10, 1, 10, 10, 9, 9, 7], [2, 1, 3, 8, 0, 7, 4, 1, 9, 6], [0, 2, 4, 3, 7, 7, 2, 4, 2, 1], [10, 0, 10, 9, 7, 1, 10, 0, 8, 5], [5, 7, 2, 2, 4, 9, 7, 1, 8, 1]]
b = [[0, 3, 5, 7, 0, 5, 10], [3, 1, 9, 0, 3, 8, 8], [8, 0, 5, 6, 8, 4, 0], [0, 7, 7, 7, 9, 4, 9], [3, 7, 2, 8, 0, 3, 7], [1, 0, 2, 8, 9, 4, 0], [7, 9, 6, 9, 9, 0, 1], [3, 10, 4, 6, 6, 8, 1], [3, 3, 1, 4, 2, 0, 9], [1, 10, 5, 8, 1, 6, 0]]
expected = [[125, 161, 170, 268, 229, 174, 162], [221, 388, 375, 499, 426, 326, 343], [98, 196, 171, 270, 228, 134, 186], [99, 146, 122, 215, 175, 131, 116], [201, 306, 272, 419, 281, 181, 312], [135, 171, 197, 274, 222, 159, 232]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #965 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 9, 9, 2], [1, 2, 0, 5, 9], [7, 3, 4, 8, 7], [1, 9, 0, 9, 6], [0, 2, 6, 3, 9], [9, 1, 6, 2, 6]]
b = [[9, 7, 9, 2, 3, 0, 2, 5, 2, 4], [10, 8, 7, 10, 8, 0, 5, 5, 6, 4], [2, 4, 0, 1, 1, 2, 3, 6, 6, 9], [2, 6, 5, 7, 7, 8, 6, 7, 2, 3], [2, 6, 2, 10, 4, 7, 1, 2, 5, 1]]
expected = [[49, 109, 58, 94, 83, 104, 85, 126, 84, 114], [57, 107, 66, 147, 90, 103, 51, 68, 69, 36], [131, 179, 138, 174, 133, 121, 96, 144, 107, 107], [129, 169, 129, 215, 162, 114, 107, 125, 104, 73], [56, 112, 47, 137, 79, 99, 55, 85, 99, 80], [119, 143, 110, 108, 79, 70, 59, 112, 94, 106]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #966 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [9], [9], [0], [9], [5], [3], [6], [0]]
b = [[4, 8, 9, 6, 6, 8, 0, 8, 4, 6]]
expected = [[32, 64, 72, 48, 48, 64, 0, 64, 32, 48], [36, 72, 81, 54, 54, 72, 0, 72, 36, 54], [36, 72, 81, 54, 54, 72, 0, 72, 36, 54], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [36, 72, 81, 54, 54, 72, 0, 72, 36, 54], [20, 40, 45, 30, 30, 40, 0, 40, 20, 30], [12, 24, 27, 18, 18, 24, 0, 24, 12, 18], [24, 48, 54, 36, 36, 48, 0, 48, 24, 36], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #967 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7]]
b = [[1, 6, 2], [6, 2, 3]]
expected = [[50, 62, 37]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #968 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5], [10, 7], [4, 5], [1, 8], [6, 1]]
b = [[4], [4]]
expected = [[60], [68], [36], [36], [28]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #969 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 7, 6, 4], [0, 0, 8, 6, 3], [3, 7, 8, 10, 5], [2, 10, 4, 0, 3], [10, 9, 3, 1, 4], [0, 1, 0, 10, 7], [3, 1, 3, 4, 2], [1, 2, 10, 4, 10]]
b = [[10, 3, 5, 7, 6, 3, 7], [8, 0, 10, 9, 3, 0, 9], [8, 1, 7, 0, 2, 5, 10], [5, 0, 5, 8, 1, 4, 0], [5, 10, 10, 9, 4, 3, 10]]
expected = [[196, 50, 224, 181, 72, 74, 207], [109, 38, 116, 75, 34, 73, 110], [225, 67, 241, 209, 85, 104, 214], [147, 40, 168, 131, 62, 35, 174], [221, 73, 206, 195, 110, 61, 221], [93, 70, 130, 152, 41, 61, 79], [92, 32, 86, 80, 39, 46, 80], [176, 113, 215, 147, 76, 99, 225]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #970 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 10, 5, 2, 10, 5, 3, 10], [10, 10, 8, 4, 3, 1, 1, 10, 1], [5, 6, 4, 0, 3, 1, 9, 2, 10], [10, 7, 6, 9, 7, 4, 10, 8, 8], [7, 0, 8, 7, 10, 3, 0, 7, 6], [7, 10, 0, 7, 6, 3, 9, 6, 7], [9, 8, 7, 3, 4, 10, 5, 9, 9], [3, 7, 8, 5, 2, 2, 3, 8, 3]]
b = [[1, 3, 4, 8], [8, 4, 1, 6], [9, 4, 6, 6], [6, 4, 9, 10], [8, 2, 7, 3], [1, 1, 5, 7], [5, 2, 9, 6], [1, 2, 0, 1], [0, 6, 7, 1]]
expected = [[248, 192, 301, 299], [226, 153, 176, 261], [161, 144, 227, 182], [292, 220, 379, 373], [211, 154, 266, 238], [231, 176, 288, 292], [230, 199, 299, 322], [202, 135, 184, 213]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #971 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 6, 7, 10, 6], [2, 0, 7, 2, 7, 1], [9, 4, 4, 10, 8, 2], [0, 5, 5, 1, 5, 5], [1, 1, 7, 9, 4, 3], [10, 7, 10, 5, 1, 3], [4, 2, 6, 4, 8, 1], [10, 0, 0, 0, 7, 5], [2, 6, 8, 0, 2, 5]]
b = [[7, 1, 9], [3, 8, 9], [10, 9, 1], [1, 1, 2], [0, 3, 1], [9, 4, 0]]
expected = [[193, 148, 138], [95, 92, 36], [143, 119, 149], [111, 121, 57], [116, 105, 47], [223, 176, 174], [107, 106, 76], [115, 51, 97], [157, 148, 82]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #972 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 3, 0, 3, 4, 4, 7, 9, 7], [1, 6, 3, 9, 9, 4, 2, 2, 5, 1], [7, 4, 9, 8, 10, 4, 8, 6, 0, 3]]
b = [[9, 4, 3, 5, 10], [6, 1, 8, 1, 9], [6, 9, 3, 5, 6], [5, 8, 9, 7, 3], [10, 10, 4, 4, 7], [5, 5, 0, 1, 1], [0, 1, 10, 9, 3], [9, 7, 3, 5, 8], [5, 10, 4, 5, 9], [3, 7, 9, 1, 4]]
expected = [[197, 269, 181, 154, 220], [264, 292, 232, 183, 247], [364, 368, 317, 289, 342]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #973 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 9, 2, 2, 3, 7, 1, 10], [2, 6, 8, 0, 8, 5, 1, 8, 5], [6, 0, 4, 3, 1, 9, 1, 3, 9], [4, 10, 0, 8, 4, 0, 0, 8, 6], [1, 7, 9, 4, 7, 10, 4, 4, 0]]
b = [[3, 8], [2, 5], [10, 4], [7, 4], [3, 2], [7, 0], [4, 10], [0, 2], [4, 9]]
expected = [[220, 265], [181, 165], [185, 175], [124, 192], [242, 157]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #974 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 3, 7, 3, 8]]
b = [[9, 4, 2, 8, 10, 1, 4, 4, 9, 0], [4, 6, 4, 8, 7, 8, 2, 0, 6, 7], [6, 3, 7, 4, 9, 7, 1, 5, 9, 5], [10, 9, 9, 10, 5, 7, 3, 9, 7, 8], [10, 1, 0, 4, 9, 1, 4, 5, 7, 8], [9, 3, 0, 10, 7, 4, 2, 7, 8, 8]]
expected = [[277, 163, 122, 278, 257, 160, 92, 177, 260, 201]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #975 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8], [5, 5], [6, 1]]
b = [[6, 8, 0, 6, 1], [8, 7, 3, 1, 3]]
expected = [[82, 80, 24, 26, 27], [70, 75, 15, 35, 20], [44, 55, 3, 37, 9]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #976 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 1], [5, 4, 7], [3, 3, 9], [10, 0, 2], [0, 6, 8], [10, 2, 5], [2, 4, 4], [1, 7, 9]]
b = [[1, 7, 2, 2, 4, 9, 3, 2, 7], [0, 8, 8, 10, 7, 5, 10, 2, 0], [7, 6, 4, 1, 5, 0, 10, 3, 3]]
expected = [[10, 51, 34, 37, 38, 42, 49, 15, 24], [54, 109, 70, 57, 83, 65, 125, 39, 56], [66, 99, 66, 45, 78, 42, 129, 39, 48], [24, 82, 28, 22, 50, 90, 50, 26, 76], [56, 96, 80, 68, 82, 30, 140, 36, 24], [45, 116, 56, 45, 79, 100, 100, 39, 85], [30, 70, 52, 48, 56, 38, 86, 24, 26], [64, 117, 94, 81, 98, 44, 163, 43, 34]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #977 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 3, 3, 2, 0, 7], [8, 9, 4, 8, 8, 6, 3], [2, 1, 8, 3, 6, 2, 4], [5, 3, 4, 6, 0, 9, 3], [2, 0, 1, 1, 7, 3, 0], [4, 8, 3, 2, 1, 4, 0]]
b = [[0, 1, 1, 6, 3, 10], [9, 5, 5, 4, 2, 4], [6, 1, 5, 0, 3, 10], [0, 2, 8, 8, 0, 1], [6, 5, 7, 9, 10, 3], [0, 9, 10, 3, 0, 8], [6, 5, 1, 4, 2, 5]]
expected = [[90, 72, 78, 126, 71, 162], [171, 182, 256, 250, 140, 251], [117, 89, 137, 116, 100, 161], [69, 132, 181, 129, 39, 195], [48, 67, 94, 92, 79, 76], [96, 92, 122, 93, 47, 139]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #978 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 3], [8, 6, 9], [5, 6, 9]]
b = [[0, 2, 6, 4, 6, 5, 2, 9, 1, 7], [3, 8, 1, 2, 2, 0, 7, 1, 2, 3], [5, 2, 2, 3, 10, 1, 3, 2, 5, 2]]
expected = [[36, 70, 37, 39, 68, 23, 66, 49, 33, 55], [63, 82, 72, 71, 150, 49, 85, 96, 65, 92], [63, 76, 54, 59, 132, 34, 79, 69, 62, 71]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #979 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 4, 1, 0, 9, 7, 5, 4, 4], [8, 3, 0, 10, 3, 10, 7, 10, 4, 3], [7, 10, 7, 1, 4, 4, 0, 5, 6, 9], [6, 3, 0, 7, 4, 1, 8, 7, 7, 5], [8, 3, 6, 6, 5, 3, 6, 9, 4, 1], [1, 5, 0, 5, 3, 9, 8, 0, 6, 0], [1, 10, 3, 7, 10, 1, 6, 3, 8, 3]]
b = [[1, 8, 9, 5, 2], [6, 7, 3, 6, 6], [4, 7, 6, 3, 6], [9, 1, 8, 1, 8], [7, 1, 9, 5, 7], [5, 5, 9, 3, 8], [7, 6, 9, 8, 3], [2, 4, 2, 8, 10], [10, 1, 4, 9, 1], [6, 3, 7, 4, 6]]
expected = [[227, 219, 281, 238, 241], [314, 243, 398, 297, 358], [276, 253, 312, 279, 294], [290, 183, 313, 281, 253], [260, 232, 332, 276, 295], [258, 150, 268, 200, 195], [357, 186, 325, 290, 288]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #980 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 4, 6, 7, 10], [4, 2, 9, 0, 1, 1], [4, 2, 7, 1, 9, 7], [10, 5, 1, 9, 0, 5], [4, 5, 3, 1, 7, 1]]
b = [[3, 5, 8, 6], [9, 4, 1, 2], [5, 10, 9, 7], [0, 0, 7, 10], [10, 8, 7, 9], [2, 5, 6, 0]]
expected = [[179, 206, 256, 209], [87, 131, 128, 100], [169, 205, 209, 168], [90, 105, 187, 167], [144, 131, 126, 128]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #981 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 6, 3, 9, 7], [7, 10, 3, 0, 6, 8], [1, 8, 3, 9, 6, 5]]
b = [[6, 0, 10, 3, 8], [8, 4, 7, 6, 0], [6, 2, 3, 1, 10], [4, 10, 7, 8, 1], [3, 5, 4, 2, 8], [5, 9, 2, 7, 2]]
expected = [[148, 154, 146, 118, 189], [198, 148, 189, 152, 150], [167, 203, 172, 173, 105]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #982 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 1, 7, 6, 2, 6]]
b = [[1, 10, 1, 8, 4, 0, 3, 0, 2], [9, 1, 8, 2, 5, 6, 0, 8, 3], [1, 7, 9, 1, 1, 0, 10, 1, 5], [4, 4, 2, 4, 6, 8, 5, 3, 4], [4, 2, 4, 8, 5, 2, 0, 3, 8], [9, 6, 9, 8, 7, 1, 5, 9, 4], [2, 7, 1, 0, 5, 4, 10, 3, 8]]
expected = [[86, 131, 74, 117, 129, 94, 124, 76, 143]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #983 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 7, 4, 2, 2], [0, 1, 10, 8, 6, 3], [7, 0, 1, 5, 6, 4], [6, 2, 8, 1, 1, 5], [6, 8, 4, 7, 5, 1], [2, 10, 5, 2, 3, 3], [4, 3, 4, 3, 2, 5], [7, 7, 6, 10, 1, 10], [4, 0, 6, 6, 9, 7], [1, 2, 6, 0, 1, 2]]
b = [[1, 9], [5, 0], [8, 3], [1, 4], [9, 1], [2, 3]]
expected = [[104, 108], [153, 77], [82, 104], [100, 98], [132, 102], [127, 53], [82, 77], [129, 152], [153, 108], [72, 34]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #984 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0], [6, 5], [5, 8], [10, 8], [8, 8], [2, 9], [5, 8], [6, 4], [4, 4]]
b = [[5], [1]]
expected = [[0], [35], [33], [58], [48], [19], [33], [34], [24]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #985 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 8, 9, 10, 9], [5, 6, 2, 0, 0, 6]]
b = [[4], [9], [4], [10], [8], [9]]
expected = [[385], [136]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #986 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 3, 10, 0, 7, 10, 10, 6], [4, 5, 8, 7, 0, 10, 2, 3, 4], [0, 3, 2, 5, 0, 0, 1, 4, 1], [5, 7, 1, 2, 5, 1, 9, 5, 7]]
b = [[2, 2, 7, 6, 8, 1, 6, 1, 0], [7, 3, 1, 6, 5, 5, 7, 10, 7], [5, 10, 10, 10, 2, 9, 3, 1, 1], [8, 1, 8, 7, 8, 9, 5, 4, 1], [5, 4, 6, 1, 3, 4, 2, 4, 5], [8, 6, 7, 10, 10, 4, 1, 4, 9], [4, 7, 0, 3, 10, 2, 3, 0, 8], [1, 9, 7, 9, 0, 6, 9, 5, 4], [1, 1, 9, 0, 3, 6, 2, 4, 3]]
expected = [[228, 265, 333, 338, 335, 273, 247, 162, 221], [234, 215, 296, 316, 261, 250, 169, 161, 180], [80, 78, 100, 112, 72, 110, 93, 76, 55], [161, 184, 203, 183, 229, 181, 189, 161, 199]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #987 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9], [1, 7], [7, 5], [1, 5], [8, 6], [9, 6], [2, 5]]
b = [[4, 9], [9, 10]]
expected = [[109, 153], [67, 79], [73, 113], [49, 59], [86, 132], [90, 141], [53, 68]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #988 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 4, 6, 1, 9, 3, 7], [6, 5, 9, 2, 0, 5, 1, 7], [1, 7, 6, 7, 2, 9, 9, 5], [8, 1, 1, 6, 1, 10, 7, 10], [9, 5, 7, 0, 1, 7, 8, 9], [4, 7, 1, 6, 6, 1, 10, 2], [5, 9, 2, 4, 2, 9, 4, 3], [4, 1, 0, 5, 10, 10, 6, 0]]
b = [[0, 7, 0, 7, 7, 0, 10, 1, 2], [1, 4, 9, 10, 4, 1, 7, 2, 5], [5, 0, 0, 9, 10, 5, 6, 2, 6], [5, 8, 10, 0, 6, 5, 5, 2, 10], [10, 6, 5, 6, 9, 8, 2, 8, 5], [8, 9, 0, 4, 6, 3, 5, 7, 10], [3, 0, 3, 7, 10, 0, 7, 8, 0], [1, 0, 9, 9, 2, 1, 4, 6, 10]]
expected = [[149, 160, 146, 193, 208, 93, 187, 162, 260], [110, 123, 131, 263, 218, 82, 219, 123, 231], [196, 184, 215, 287, 309, 120, 262, 222, 293], [157, 204, 185, 260, 265, 84, 264, 218, 292], [139, 152, 155, 347, 302, 78, 296, 208, 250], [142, 149, 201, 235, 266, 95, 220, 179, 169], [146, 196, 170, 246, 233, 85, 234, 164, 237], [224, 222, 127, 180, 272, 136, 184, 214, 213]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #989 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 2, 1, 3], [3, 4, 7, 0, 8], [9, 4, 8, 6, 1], [0, 9, 2, 9, 10], [1, 3, 8, 4, 0], [3, 9, 3, 6, 6]]
b = [[5, 6, 10, 6, 6, 10, 8, 3, 9, 0], [5, 4, 0, 7, 2, 9, 1, 8, 6, 5], [7, 0, 0, 4, 7, 8, 2, 6, 0, 6], [6, 10, 10, 4, 3, 3, 5, 7, 7, 4], [9, 7, 1, 10, 5, 6, 6, 5, 0, 7]]
expected = [[82, 67, 53, 87, 62, 104, 62, 70, 61, 52], [156, 90, 38, 154, 115, 170, 90, 123, 51, 118], [166, 137, 151, 148, 141, 214, 128, 154, 147, 99], [203, 196, 100, 207, 109, 184, 118, 197, 117, 163], [100, 58, 50, 75, 80, 113, 47, 103, 55, 79], [171, 156, 96, 177, 105, 189, 105, 171, 123, 129]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #990 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 6], [8, 3, 2], [5, 6, 5], [6, 8, 5], [10, 0, 0], [1, 2, 1]]
b = [[7, 7, 5, 5, 2, 6, 1, 8, 2, 7], [1, 2, 9, 9, 5, 3, 2, 4, 4, 1], [9, 10, 9, 6, 9, 4, 6, 6, 10, 2]]
expected = [[126, 134, 122, 104, 84, 90, 50, 124, 88, 84], [77, 82, 85, 79, 49, 65, 26, 88, 48, 63], [86, 97, 124, 109, 85, 68, 47, 94, 84, 51], [95, 108, 147, 132, 97, 80, 52, 110, 94, 60], [70, 70, 50, 50, 20, 60, 10, 80, 20, 70], [18, 21, 32, 29, 21, 16, 11, 22, 20, 11]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #991 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 6, 8], [3, 2, 2, 2], [0, 4, 1, 2], [2, 2, 9, 8], [9, 3, 2, 7], [6, 1, 7, 4], [3, 5, 8, 8], [5, 3, 3, 2], [2, 4, 9, 10]]
b = [[2, 4, 7, 5, 6, 7, 0, 9, 8, 6], [5, 2, 9, 5, 7, 6, 3, 10, 3, 1], [9, 8, 4, 6, 1, 3, 6, 1, 6, 9], [0, 6, 8, 4, 1, 9, 9, 10, 2, 4]]
expected = [[104, 116, 178, 118, 84, 150, 138, 186, 82, 96], [34, 44, 63, 45, 36, 57, 36, 69, 46, 46], [29, 28, 56, 34, 31, 45, 36, 61, 22, 21], [95, 132, 132, 106, 43, 125, 132, 127, 92, 127], [51, 100, 154, 100, 84, 150, 84, 183, 107, 103], [80, 106, 111, 93, 54, 105, 81, 111, 101, 116], [103, 134, 162, 120, 69, 147, 135, 165, 103, 127], [52, 62, 90, 66, 56, 80, 45, 98, 71, 68], [105, 148, 166, 124, 59, 155, 156, 167, 102, 137]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #992 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3], [8], [7], [7], [6], [5], [2], [2]]
b = [[1, 7, 0]]
expected = [[3, 21, 0], [8, 56, 0], [7, 49, 0], [7, 49, 0], [6, 42, 0], [5, 35, 0], [2, 14, 0], [2, 14, 0]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #993 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [7], [5], [9], [4]]
b = [[6, 7, 4, 7, 10, 4, 4, 3]]
expected = [[48, 56, 32, 56, 80, 32, 32, 24], [42, 49, 28, 49, 70, 28, 28, 21], [30, 35, 20, 35, 50, 20, 20, 15], [54, 63, 36, 63, 90, 36, 36, 27], [24, 28, 16, 28, 40, 16, 16, 12]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #994 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8], [1]]
b = [[7]]
expected = [[56], [7]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #995 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 6, 6]]
b = [[8, 7], [3, 8], [5, 9], [7, 0]]
expected = [[151, 150]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #996 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 1, 2, 9, 1, 7], [1, 2, 9, 9, 5, 4, 5], [0, 6, 6, 0, 6, 1, 3], [6, 8, 5, 8, 2, 9, 9], [0, 5, 9, 5, 2, 2, 5], [3, 2, 6, 10, 2, 3, 10], [6, 0, 6, 0, 10, 9, 5], [9, 0, 6, 4, 2, 6, 4], [6, 7, 9, 2, 4, 1, 5], [0, 7, 0, 10, 9, 6, 2]]
b = [[2, 2, 1, 7, 3, 4, 0], [8, 0, 6, 7, 8, 4, 10], [9, 7, 7, 3, 7, 6, 3], [8, 1, 4, 0, 4, 9, 9], [0, 5, 8, 4, 5, 0, 7], [5, 8, 3, 2, 10, 2, 8], [9, 3, 9, 2, 1, 9, 9]]
expected = [[113, 95, 165, 104, 103, 117, 165], [236, 146, 209, 86, 188, 200, 240], [134, 89, 156, 92, 133, 89, 155], [311, 164, 245, 157, 258, 257, 334], [216, 109, 180, 84, 158, 168, 197], [261, 122, 212, 87, 157, 242, 256], [156, 191, 200, 128, 205, 123, 205], [170, 134, 137, 109, 159, 156, 152], [215, 120, 199, 146, 180, 171, 196], [184, 109, 190, 101, 203, 148, 289]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #997 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2], [2]]
b = [[7, 7, 8, 4, 5, 9, 9, 0, 8]]
expected = [[14, 14, 16, 8, 10, 18, 18, 0, 16], [14, 14, 16, 8, 10, 18, 18, 0, 16]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #998 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 9, 8, 5], [6, 2, 7, 7, 0], [3, 2, 2, 7, 4], [4, 2, 7, 10, 0], [3, 9, 10, 2, 4], [4, 0, 5, 5, 9], [5, 5, 1, 3, 3]]
b = [[4, 9, 6], [4, 8, 2], [1, 8, 6], [2, 1, 5], [0, 6, 3]]
expected = [[97, 263, 181], [53, 133, 117], [36, 90, 81], [51, 118, 120], [62, 205, 118], [31, 135, 106], [47, 114, 70]]
result = matmult.mult_matrix(a,b)
if not check_equality(expected,result):
  raise Exception('Matrix Case #999 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



print('Matrix multiplication tests completed successfully')


a = [[10, 5, 6]]
b = [[0, 6, 5]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #0 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 4, 2, 0, 0, 10]]
b = [[9, 10, 9, 9, 5, 2, 9]]
expected = 15.297058540778355
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #1 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 1]]
b = [[5, 7, 6]]
expected = 5.196152422706632
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #2 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 4, 4, 2, 9, 4, 3, 9, 1]]
b = [[2, 5, 1, 8, 0, 5, 2, 8, 3, 3]]
expected = 13.379088160259652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #3 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0]]
b = [[1, 8]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #4 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2]]
b = [[9, 3]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #5 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 2, 7, 8, 10, 8, 2, 7, 10]]
b = [[7, 3, 5, 1, 10, 6, 4, 7, 10, 7]]
expected = 12.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #6 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 9, 8, 6, 0]]
b = [[6, 1, 7, 8, 10, 3]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #7 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 0, 4, 4, 8, 5, 6]]
b = [[7, 10, 8, 1, 3, 7, 10, 9]]
expected = 10.44030650891055
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #8 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[7]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #9 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 7, 6, 1, 3]]
b = [[0, 8, 4, 6, 3, 1]]
expected = 6.48074069840786
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #10 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 1, 8, 9, 3, 7, 10]]
b = [[2, 8, 4, 1, 9, 6, 9, 3]]
expected = 15.748015748023622
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #11 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 7, 9]]
b = [[5, 2, 3, 3]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #12 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 8, 3, 0, 0, 4, 8, 7, 6]]
b = [[8, 2, 2, 4, 6, 6, 6, 7, 8, 3]]
expected = 13.2664991614216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #13 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 5]]
b = [[2, 0, 8]]
expected = 5.916079783099616
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #14 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 1, 3, 0, 0, 3, 10, 0, 0]]
b = [[9, 7, 2, 5, 5, 7, 4, 8, 5, 4]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #15 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 7, 6, 8, 3, 0, 9]]
b = [[6, 6, 2, 5, 3, 4, 4, 9]]
expected = 9.643650760992955
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #16 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 1]]
b = [[4, 2, 9]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #17 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[6]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #18 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 0]]
b = [[3, 5, 6]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #19 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7]]
b = [[10, 4]]
expected = 10.44030650891055
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #20 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 4, 1, 10, 0, 8, 4, 5]]
b = [[0, 7, 4, 8, 6, 7, 7, 4, 5]]
expected = 10.770329614269007
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #21 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 7, 4, 1, 0, 1, 0, 6]]
b = [[10, 0, 9, 4, 6, 4, 10, 9, 2]]
expected = 15.231546211727817
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #22 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10]]
b = [[8, 9]]
expected = 2.23606797749979
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #23 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 3, 10, 5, 6]]
b = [[7, 4, 9, 7, 5, 3]]
expected = 7.416198487095663
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #24 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 4, 5, 9, 1]]
b = [[5, 5, 7, 4, 5, 4]]
expected = 8.18535277187245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #25 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 2, 2, 0, 0, 5, 5, 2, 8]]
b = [[8, 4, 6, 1, 1, 7, 8, 2, 7, 4]]
expected = 11.61895003862225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #26 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[0]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #27 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 7, 6, 9, 5, 2, 8, 5, 10]]
b = [[7, 8, 4, 9, 6, 1, 2, 3, 10, 1]]
expected = 16.55294535724685
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #28 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 5, 10, 10, 10]]
b = [[9, 3, 9, 9, 4, 2]]
expected = 11.180339887498949
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #29 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 10, 9, 1, 0, 10]]
b = [[3, 3, 8, 5, 4, 5, 8]]
expected = 7.745966692414834
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #30 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 9, 2, 8, 0, 8, 0, 3]]
b = [[8, 3, 6, 7, 6, 5, 8, 6, 1]]
expected = 11.958260743101398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #31 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6]]
b = [[4, 0]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #32 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[4]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #33 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10]]
b = [[9, 8]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #34 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 4, 0, 2]]
b = [[1, 8, 3, 3, 5]]
expected = 6.6332495807108
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #35 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 10, 9]]
b = [[0, 1, 1, 10]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #36 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9]]
b = [[0, 1]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #37 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 5, 5, 4]]
b = [[7, 7, 9, 6, 7]]
expected = 8.831760866327848
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #38 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 0, 9, 0, 6, 10, 5, 4, 2]]
b = [[1, 1, 7, 10, 5, 3, 9, 1, 8, 6]]
expected = 14.628738838327793
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #39 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 1, 8]]
b = [[8, 9, 6, 10]]
expected = 12.529964086141668
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #40 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[6]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #41 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 8, 7, 3]]
b = [[7, 0, 5, 0, 2]]
expected = 11.789826122551595
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #42 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 2, 2]]
b = [[9, 4, 0, 10]]
expected = 10.44030650891055
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #43 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 4, 10, 2]]
b = [[1, 7, 5, 6, 1]]
expected = 9.539392014169456
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #44 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 8, 2, 3]]
b = [[7, 2, 1, 10, 8]]
expected = 13.820274961085254
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #45 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 2, 8, 7, 7, 9, 4]]
b = [[8, 10, 5, 0, 6, 3, 10, 10]]
expected = 13.2664991614216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #46 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 2, 1, 10]]
b = [[0, 0, 1, 4, 6]]
expected = 10.392304845413264
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #47 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[7, 8]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #48 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[6]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #49 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 3]]
b = [[4, 0, 10]]
expected = 10.344080432788601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #50 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 10]]
b = [[0, 8, 5]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #51 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 0, 10, 5, 8, 3, 4, 6, 4]]
b = [[9, 5, 7, 8, 5, 3, 6, 8, 7, 4]]
expected = 10.44030650891055
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #52 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 2, 6, 2, 9]]
b = [[5, 5, 7, 10, 9, 0]]
expected = 14.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #53 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 2, 1, 5, 8, 6]]
b = [[3, 6, 10, 1, 2, 3, 1]]
expected = 13.96424004376894
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #54 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 2, 0, 10, 6, 4]]
b = [[0, 2, 2, 1, 3, 4, 2]]
expected = 12.727922061357855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #55 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 6, 6, 2, 4, 3, 3]]
b = [[2, 9, 8, 7, 1, 4, 7, 6]]
expected = 9.797958971132712
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #56 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 7, 7, 9, 9, 3]]
b = [[7, 0, 9, 1, 9, 9, 10]]
expected = 11.874342087037917
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #57 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 10, 4]]
b = [[4, 10, 1, 10]]
expected = 15.905973720586866
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #58 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 0, 3, 0, 8, 5]]
b = [[9, 4, 5, 5, 6, 6, 7]]
expected = 9.1104335791443
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #59 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 4, 5, 1, 7, 4, 9]]
b = [[3, 3, 10, 3, 6, 6, 1, 9]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #60 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 9, 4, 6, 5, 0, 7, 7, 9]]
b = [[3, 10, 0, 2, 2, 2, 7, 0, 9, 7]]
expected = 15.264337522473747
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #61 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 10, 9, 10, 7, 4, 10]]
b = [[9, 10, 8, 8, 3, 8, 3, 4]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #62 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 1, 4, 2, 8, 9]]
b = [[3, 2, 1, 0, 5, 4, 6]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #63 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 5, 7]]
b = [[10, 6, 2, 1]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #64 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4]]
b = [[4, 3]]
expected = 1.4142135623730951
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #65 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[0]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #66 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 2, 4, 4, 7, 8, 3, 3]]
b = [[6, 5, 5, 2, 6, 5, 9, 2, 7]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #67 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7]]
b = [[7, 0]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #68 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 1, 3, 6, 1, 3, 8, 4, 9]]
b = [[6, 7, 9, 1, 3, 8, 7, 7, 8, 8]]
expected = 13.416407864998739
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #69 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 6, 5, 8, 8, 5, 9, 8]]
b = [[1, 6, 7, 7, 3, 8, 6, 2, 8]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #70 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 7]]
b = [[4, 5, 8]]
expected = 3.7416573867739413
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #71 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[4]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #72 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0]]
b = [[9, 7]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #73 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 10, 0, 0, 2, 2]]
b = [[1, 8, 8, 6, 6, 3, 2]]
expected = 12.288205727444508
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #74 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 1, 7]]
b = [[9, 4, 6, 1]]
expected = 11.61895003862225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #75 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 10]]
b = [[2, 3, 1]]
expected = 11.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #76 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 9, 5, 5, 6]]
b = [[7, 4, 1, 4, 5, 5]]
expected = 8.366600265340756
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #77 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 1, 1, 0, 0, 10]]
b = [[0, 10, 3, 2, 5, 4, 3]]
expected = 15.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #78 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 5, 9, 10, 1, 4, 3, 2]]
b = [[1, 9, 3, 7, 10, 9, 2, 10, 3]]
expected = 14.933184523068078
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #79 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 9]]
b = [[7, 5, 1]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #80 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[6]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #81 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0]]
b = [[3, 5]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #82 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 6, 1, 6, 8, 0, 8, 4, 9]]
b = [[2, 5, 8, 2, 4, 4, 10, 8, 8, 8]]
expected = 13.856406460551018
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #83 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 6, 4, 9]]
b = [[1, 7, 4, 3, 2]]
expected = 7.416198487095663
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #84 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 3, 8, 7, 5, 7, 6, 3, 10]]
b = [[9, 10, 4, 5, 9, 1, 6, 1, 5, 7]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #85 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 9, 5, 3]]
b = [[10, 1, 4, 2, 9]]
expected = 9.1104335791443
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #86 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 3, 8, 8, 8, 5]]
b = [[0, 0, 10, 4, 1, 1, 6]]
expected = 14.071247279470288
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #87 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2]]
b = [[3, 8]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #88 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[7]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #89 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[4]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #90 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[5]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #91 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 6, 5, 7, 4, 7, 9]]
b = [[9, 10, 8, 0, 3, 8, 2, 0]]
expected = 14.730919862656235
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #92 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 1, 3, 0]]
b = [[9, 1, 2, 4, 3]]
expected = 8.717797887081348
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #93 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 3, 3, 2, 0, 1, 6, 7, 0]]
b = [[5, 7, 6, 9, 7, 7, 3, 5, 8, 1]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #94 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6]]
b = [[7, 9]]
expected = 4.242640687119285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #95 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 1, 3, 3]]
b = [[5, 8, 8, 2, 2]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #96 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 3, 6, 9, 5, 9, 8]]
b = [[4, 10, 8, 8, 5, 10, 1, 6]]
expected = 13.379088160259652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #97 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 9, 2, 3, 10, 10, 6, 0, 7]]
b = [[10, 4, 0, 2, 7, 4, 4, 2, 9, 7]]
expected = 16.431676725154983
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #98 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 4, 7, 9, 5, 5, 6, 6, 7]]
b = [[9, 2, 3, 6, 0, 7, 8, 8, 1, 10]]
expected = 14.696938456699069
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #99 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 1, 3, 4, 7, 0, 4, 4, 0]]
b = [[9, 3, 8, 2, 2, 1, 8, 6, 4, 10]]
expected = 17.291616465790582
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #100 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 0, 10, 8, 9, 5]]
b = [[7, 9, 6, 6, 0, 1, 8]]
expected = 14.66287829861518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #101 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 3, 1, 1, 0, 4, 1, 10, 4]]
b = [[6, 8, 1, 5, 1, 10, 5, 2, 4, 3]]
expected = 13.564659966250536
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #102 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 3, 10, 0, 2, 0, 7, 10]]
b = [[1, 7, 5, 3, 1, 10, 9, 3, 7]]
expected = 15.394804318340652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #103 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4]]
b = [[1, 0]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #104 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 9, 2, 9, 4]]
b = [[5, 10, 6, 3, 4, 2]]
expected = 9.848857801796104
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #105 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 8]]
b = [[0, 7, 4]]
expected = 4.58257569495584
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #106 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 10, 1, 1, 1, 1]]
b = [[5, 2, 8, 1, 5, 10, 8]]
expected = 12.884098726725126
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #107 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 7, 1, 2, 5, 8, 1]]
b = [[1, 4, 9, 10, 10, 8, 5, 5]]
expected = 16.0312195418814
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #108 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 6, 8, 6, 7, 2, 6, 1, 9]]
b = [[7, 10, 0, 3, 7, 9, 7, 2, 1, 7]]
expected = 14.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #109 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 5, 3, 6, 5, 6]]
b = [[2, 1, 0, 3, 0, 9, 0]]
expected = 13.341664064126334
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #110 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 0, 2]]
b = [[8, 0, 8, 4]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #111 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 8]]
b = [[7, 2, 10]]
expected = 6.6332495807108
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #112 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 5, 8, 1, 7, 2, 6, 8, 4]]
b = [[4, 0, 5, 5, 10, 0, 7, 6, 1, 7]]
expected = 17.378147196982766
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #113 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 9, 5, 2, 0]]
b = [[1, 3, 5, 3, 10, 5]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #114 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[6]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #115 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 10, 10, 5, 1]]
b = [[9, 4, 4, 8, 3, 3]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #116 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[1]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #117 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 5]]
b = [[6, 5, 5]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #118 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 9, 4, 1]]
b = [[9, 2, 2, 2, 3]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #119 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 10, 6, 8]]
b = [[10, 1, 4, 0, 10]]
expected = 15.491933384829668
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #120 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 9, 8, 1, 10]]
b = [[0, 9, 4, 2, 2, 7]]
expected = 11.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #121 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 7, 4, 7, 7, 8, 5, 8]]
b = [[10, 6, 2, 3, 2, 8, 10, 3, 10]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #122 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 1, 0, 1, 10, 5, 5, 0, 6]]
b = [[9, 6, 9, 10, 10, 8, 9, 4, 10, 10]]
expected = 20.445048300260872
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #123 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[0]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #124 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8]]
b = [[0, 5]]
expected = 6.708203932499369
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #125 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 0, 5, 6, 10, 6, 5]]
b = [[2, 4, 9, 7, 7, 10, 5, 6]]
expected = 11.532562594670797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #126 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 9, 7, 3, 5]]
b = [[5, 5, 0, 6, 6, 10]]
expected = 11.135528725660043
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #127 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 5]]
b = [[6, 2, 10]]
expected = 5.385164807134504
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #128 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 2, 10]]
b = [[10, 7, 4, 7]]
expected = 10.63014581273465
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #129 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 2, 9, 3, 5, 3, 4, 8, 9]]
b = [[6, 1, 5, 9, 8, 5, 2, 9, 8, 3]]
expected = 10.246950765959598
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #130 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 8, 9, 6, 2, 2, 6, 1, 0]]
b = [[10, 2, 0, 1, 1, 6, 6, 6, 6, 1]]
expected = 15.0996688705415
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #131 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[3]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #132 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 4]]
b = [[6, 10, 7]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #133 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 2, 9]]
b = [[5, 9, 0, 1]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #134 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 1, 4, 8]]
b = [[5, 4, 0, 5, 7]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #135 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 10, 0, 2, 6, 2, 3, 9, 7]]
b = [[3, 3, 9, 10, 2, 7, 4, 2, 1, 1]]
expected = 16.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #136 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[4]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #137 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 5, 0, 1]]
b = [[10, 1, 9, 4, 7]]
expected = 14.071247279470288
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #138 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3]]
b = [[10, 6]]
expected = 6.708203932499369
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #139 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 6]]
b = [[8, 7, 7]]
expected = 4.242640687119285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #140 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3]]
b = [[10, 8]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #141 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 10]]
b = [[1, 2, 7]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #142 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 6, 6, 8]]
b = [[10, 9, 10, 2, 4]]
expected = 13.564659966250536
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #143 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 6, 2]]
b = [[6, 10, 9, 7]]
expected = 6.855654600401044
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #144 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 8, 0, 3, 7, 4, 3, 3, 7]]
b = [[1, 3, 7, 3, 9, 9, 4, 3, 2, 0]]
expected = 13.784048752090222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #145 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0]]
b = [[0, 8]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #146 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0]]
b = [[7, 1]]
expected = 1.4142135623730951
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #147 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 5, 3, 8, 4, 4, 2, 8, 6]]
b = [[0, 1, 5, 1, 3, 1, 6, 10, 8, 2]]
expected = 11.789826122551595
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #148 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[10]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #149 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 0, 7, 1, 0, 1, 3]]
b = [[6, 7, 5, 6, 7, 10, 9, 5]]
expected = 16.24807680927192
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #150 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 2]]
b = [[5, 10, 4]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #151 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 2]]
b = [[5, 1, 4]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #152 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 5, 1, 10, 4, 8, 3, 4]]
b = [[8, 4, 6, 2, 3, 6, 6, 7, 0]]
expected = 13.076696830622021
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #153 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 5, 2, 9, 10]]
b = [[7, 6, 2, 9, 1, 0]]
expected = 15.556349186104045
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #154 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0]]
b = [[6, 6]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #155 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 0, 4]]
b = [[10, 6, 9, 9]]
expected = 12.489995996796797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #156 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 10, 7, 5, 9]]
b = [[3, 9, 8, 3, 7, 10]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #157 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 9, 5]]
b = [[10, 1, 1, 2]]
expected = 9.486832980505138
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #158 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 5, 4]]
b = [[1, 1, 5, 8]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #159 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7]]
b = [[8, 7]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #160 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 2, 9, 4, 1, 7, 0, 10, 7]]
b = [[0, 4, 1, 8, 5, 3, 10, 6, 2, 7]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #161 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 9, 1, 3, 5]]
b = [[7, 2, 6, 5, 2, 7]]
expected = 6.928203230275509
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #162 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 3]]
b = [[6, 9, 10]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #163 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 3, 9, 5]]
b = [[5, 8, 6, 10, 8]]
expected = 4.47213595499958
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #164 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 3, 7]]
b = [[2, 3, 6, 10]]
expected = 6.6332495807108
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #165 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 8, 0, 4, 0, 10]]
b = [[7, 3, 8, 6, 9, 6, 3]]
expected = 12.24744871391589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #166 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 5, 6, 0, 10, 3, 3]]
b = [[10, 0, 8, 8, 6, 3, 2, 6]]
expected = 15.620499351813308
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #167 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 7, 7, 6, 10, 8, 2]]
b = [[5, 1, 10, 2, 8, 8, 9, 5]]
expected = 12.569805089976535
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #168 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[8]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #169 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 1, 6]]
b = [[1, 9, 2, 7]]
expected = 2.6457513110645907
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #170 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 1, 2, 7]]
b = [[2, 9, 10, 7, 8]]
expected = 14.2828568570857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #171 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 1, 3, 2, 6, 4]]
b = [[5, 10, 1, 1, 7, 4, 6]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #172 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[10]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #173 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 10, 9]]
b = [[6, 3, 10, 10]]
expected = 3.7416573867739413
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #174 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 0, 0, 4, 6, 3, 2, 10, 7]]
b = [[2, 6, 10, 8, 0, 8, 7, 10, 8, 7]]
expected = 17.378147196982766
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #175 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 0, 4, 5, 3, 4, 7]]
b = [[10, 1, 5, 7, 4, 5, 2, 9]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #176 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 5, 6, 0, 8, 6, 8, 10, 0]]
b = [[9, 2, 10, 2, 2, 4, 3, 0, 6, 3]]
expected = 14.45683229480096
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #177 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 4, 4, 9, 7, 9]]
b = [[1, 4, 8, 2, 0, 9, 2]]
expected = 13.076696830622021
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #178 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 0]]
b = [[4, 10, 0]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #179 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 2, 7, 9, 2]]
b = [[1, 9, 6, 7, 7, 5]]
expected = 6.164414002968976
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #180 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 3, 5]]
b = [[8, 6, 6, 1]]
expected = 5.477225575051661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #181 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 5, 7, 4, 8, 5]]
b = [[3, 6, 7, 3, 9, 0, 0]]
expected = 12.24744871391589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #182 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 9, 5]]
b = [[3, 3, 9, 4]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #183 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 3, 3, 9, 1, 1, 3, 10]]
b = [[0, 2, 8, 8, 6, 3, 7, 0, 5]]
expected = 12.083045973594572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #184 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1]]
b = [[1, 8]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #185 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 10, 8, 8, 3]]
b = [[7, 4, 1, 6, 0, 7]]
expected = 13.19090595827292
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #186 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 10, 1, 7, 3, 1]]
b = [[10, 5, 9, 0, 9, 2, 9]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #187 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 6]]
b = [[7, 10, 1]]
expected = 5.196152422706632
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #188 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2]]
b = [[8, 0]]
expected = 2.8284271247461903
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #189 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 0, 4, 4, 7, 7, 6, 9, 8]]
b = [[0, 10, 6, 3, 7, 7, 2, 8, 1, 8]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #190 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8]]
b = [[0, 1]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #191 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 9, 9, 7, 9]]
b = [[8, 10, 4, 6, 8, 5]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #192 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 3]]
b = [[10, 8, 6]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #193 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 2, 1]]
b = [[9, 4, 4, 1]]
expected = 2.8284271247461903
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #194 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0]]
b = [[9, 2]]
expected = 4.47213595499958
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #195 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 6]]
b = [[9, 0, 6]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #196 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 3, 5]]
b = [[9, 4, 3, 10]]
expected = 9.1104335791443
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #197 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 10, 9, 3, 8]]
b = [[10, 1, 10, 3, 3, 10]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #198 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1]]
b = [[2, 9]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #199 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 3, 2, 0, 5, 2]]
b = [[6, 7, 0, 3, 3, 10, 9]]
expected = 10.295630140987
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #200 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 7, 7, 5, 6, 6, 10]]
b = [[3, 6, 0, 6, 8, 4, 8, 7]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #201 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[5]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #202 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7]]
b = [[4, 0]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #203 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 3, 8, 2, 8, 6]]
b = [[8, 2, 1, 1, 10, 8, 7]]
expected = 14.696938456699069
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #204 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 10, 4]]
b = [[10, 6, 8, 5]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #205 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 1, 8]]
b = [[8, 10, 2, 1]]
expected = 8.660254037844387
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #206 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[7]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #207 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3]]
b = [[9, 6]]
expected = 7.615773105863909
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #208 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9]]
b = [[3, 2]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #209 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 5]]
b = [[5, 4, 8]]
expected = 6.557438524302
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #210 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6]]
b = [[0, 7]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #211 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 1, 9, 0, 1]]
b = [[6, 4, 6, 6, 5, 3]]
expected = 8.426149773176359
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #212 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3]]
b = [[1, 8]]
expected = 10.295630140987
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #213 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 1, 4, 4]]
b = [[5, 10, 5, 7, 4]]
expected = 5.916079783099616
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #214 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 3, 4, 0, 5, 2, 4]]
b = [[7, 4, 10, 7, 0, 7, 10, 5]]
expected = 12.328828005937952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #215 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[2]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #216 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3]]
b = [[2, 7]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #217 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 4, 6, 2, 0, 2, 4, 9, 1]]
b = [[10, 9, 4, 3, 3, 6, 4, 4, 7, 6]]
expected = 12.68857754044952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #218 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 10, 5, 6, 7, 3, 0, 10]]
b = [[4, 1, 8, 8, 9, 0, 6, 7, 8]]
expected = 13.341664064126334
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #219 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0]]
b = [[9, 7]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #220 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 3, 5, 4, 2, 1]]
b = [[1, 2, 1, 1, 6, 0, 10]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #221 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 1, 3, 3, 3]]
b = [[10, 7, 6, 3, 7, 3]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #222 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 10, 10]]
b = [[10, 5, 1, 3]]
expected = 12.12435565298214
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #223 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 4, 5, 1, 6, 2, 9, 5]]
b = [[8, 9, 2, 6, 8, 10, 9, 5, 0]]
expected = 14.966629547095765
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #224 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2]]
b = [[9, 10]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #225 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 9, 9, 1]]
b = [[8, 9, 2, 3, 1]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #226 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 7, 9, 4, 6, 3, 9, 10]]
b = [[2, 10, 5, 0, 6, 7, 0, 5, 9]]
expected = 14.730919862656235
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #227 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 2]]
b = [[1, 5, 3]]
expected = 2.449489742783178
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #228 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 5]]
b = [[8, 6, 1]]
expected = 4.58257569495584
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #229 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 7, 7, 9, 5, 0, 4, 0, 2]]
b = [[5, 4, 4, 1, 5, 4, 4, 6, 1, 0]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #230 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 6, 4, 10, 3, 2, 0]]
b = [[3, 5, 7, 2, 3, 9, 9, 1]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #231 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 3, 4, 4, 5, 1]]
b = [[1, 5, 10, 3, 7, 0, 7]]
expected = 11.661903789690601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #232 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 8, 9]]
b = [[8, 9, 0, 1]]
expected = 16.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #233 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 5, 0, 2, 7, 9]]
b = [[2, 3, 5, 4, 1, 7, 4]]
expected = 9.591663046625438
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #234 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 1, 10, 1]]
b = [[10, 0, 5, 0, 7]]
expected = 16.792855623746664
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #235 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 2, 0]]
b = [[0, 9, 5, 5]]
expected = 11.090536506409418
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #236 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 10, 9, 9, 5, 8, 1, 2]]
b = [[3, 1, 8, 9, 4, 1, 2, 1, 6]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #237 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 7, 6, 2]]
b = [[1, 8, 4, 9, 6]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #238 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4]]
b = [[7, 4]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #239 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 6]]
b = [[5, 5, 2]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #240 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0]]
b = [[3, 8]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #241 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 9, 3, 2, 9, 9, 4]]
b = [[3, 5, 8, 2, 5, 1, 3, 6]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #242 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7]]
b = [[0, 2]]
expected = 11.180339887498949
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #243 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 3, 4, 9, 2, 0, 4]]
b = [[5, 4, 9, 4, 9, 8, 6, 6]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #244 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 3, 7]]
b = [[1, 5, 7, 0]]
expected = 8.660254037844387
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #245 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1]]
b = [[10, 2]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #246 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[10]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #247 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 5]]
b = [[1, 5, 9]]
expected = 4.58257569495584
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #248 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 3, 10, 0, 4]]
b = [[8, 7, 7, 5, 2, 6]]
expected = 7.14142842854285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #249 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 4, 0]]
b = [[3, 10, 6, 4]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #250 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 7, 5, 4, 0, 0, 6, 6]]
b = [[6, 0, 4, 0, 6, 4, 10, 0, 10]]
expected = 14.52583904633395
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #251 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 8, 9, 10, 7, 1]]
b = [[4, 5, 10, 0, 9, 10, 2]]
expected = 10.04987562112089
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #252 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 8]]
b = [[2, 5, 4]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #253 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 3, 8, 10, 10]]
b = [[9, 3, 2, 10, 9, 3]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #254 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 8, 5]]
b = [[5, 4, 6, 1, 10]]
expected = 11.532562594670797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #255 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2]]
b = [[8, 3]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #256 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10, 9, 8, 9, 7]]
b = [[1, 9, 4, 8, 10, 5]]
expected = 8.94427190999916
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #257 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3]]
b = [[10, 1]]
expected = 5.385164807134504
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #258 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 1, 2, 5, 2]]
b = [[0, 7, 5, 7, 8, 5]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #259 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 7, 4, 6, 5, 6, 4, 8, 2]]
b = [[4, 2, 7, 4, 8, 2, 3, 7, 4, 2]]
expected = 11.269427669584644
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #260 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 8]]
b = [[0, 9, 10]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #261 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 4]]
b = [[3, 10, 7]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #262 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 8, 2, 10, 6, 0, 5, 5]]
b = [[3, 3, 1, 7, 10, 4, 8, 4, 7]]
expected = 12.489995996796797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #263 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 9]]
b = [[1, 8, 8]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #264 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 7, 6, 0, 3, 2, 1]]
b = [[7, 3, 8, 6, 3, 3, 9, 3]]
expected = 10.198039027185569
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #265 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 6, 3, 0, 8, 3, 2, 9]]
b = [[8, 9, 9, 3, 6, 4, 5, 3, 10]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #266 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 0, 1]]
b = [[4, 6, 2, 4]]
expected = 6.244997998398398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #267 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 2, 2, 2, 5, 0, 3, 10]]
b = [[0, 7, 3, 4, 7, 8, 1, 7, 7]]
expected = 11.090536506409418
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #268 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 6, 2, 6, 10, 4]]
b = [[9, 2, 6, 8, 0, 0, 2]]
expected = 15.132745950421556
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #269 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 0, 10, 9, 8, 2, 7, 4]]
b = [[1, 0, 4, 2, 3, 1, 2, 0, 6]]
expected = 17.291616465790582
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #270 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 6, 8, 5, 9, 1, 9]]
b = [[3, 0, 0, 0, 7, 8, 10, 4]]
expected = 16.881943016134134
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #271 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 5, 9]]
b = [[0, 2, 5, 3]]
expected = 13.601470508735444
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #272 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 3, 10, 6, 0, 6, 3, 3]]
b = [[5, 9, 10, 1, 9, 6, 0, 6, 0]]
expected = 17.406895185529212
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #273 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 7, 9, 1, 9, 7, 6, 5, 9]]
b = [[5, 3, 9, 4, 8, 2, 10, 0, 7, 10]]
expected = 13.490737563232042
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #274 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 2, 8, 8, 5, 5, 10, 8]]
b = [[3, 9, 9, 8, 7, 7, 9, 1, 2]]
expected = 13.856406460551018
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #275 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 4, 8, 4, 4, 0]]
b = [[1, 8, 5, 7, 8, 0, 3]]
expected = 11.958260743101398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #276 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 9, 4, 5, 9, 9, 1]]
b = [[0, 10, 1, 3, 8, 0, 7, 7]]
expected = 15.620499351813308
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #277 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 7, 1, 2, 8]]
b = [[7, 6, 4, 0, 7, 5]]
expected = 6.928203230275509
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #278 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 10, 7, 3, 0, 5]]
b = [[10, 4, 9, 5, 8, 1, 1]]
expected = 11.489125293076057
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #279 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0]]
b = [[10, 1]]
expected = 2.23606797749979
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #280 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8]]
b = [[0, 9]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #281 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 4, 10, 5, 1, 7]]
b = [[9, 8, 7, 3, 2, 1, 4]]
expected = 11.357816691600547
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #282 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 5, 2, 1, 8, 10]]
b = [[1, 0, 7, 8, 4, 1, 7]]
expected = 14.52583904633395
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #283 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 10, 6, 1, 1, 1]]
b = [[5, 10, 1, 7, 10, 10, 4]]
expected = 18.24828759089466
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #284 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6]]
b = [[6, 5]]
expected = 3.1622776601683795
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #285 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 3, 6, 1, 1, 8, 6, 7]]
b = [[8, 5, 4, 6, 6, 6, 9, 4, 10]]
expected = 9.695359714832659
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #286 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 2]]
b = [[2, 9, 4]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #287 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 2, 5, 4, 8, 8, 3, 7, 5]]
b = [[8, 10, 2, 7, 4, 8, 9, 9, 6, 8]]
expected = 9.797958971132712
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #288 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 7, 3, 4, 2, 5, 6]]
b = [[4, 1, 6, 7, 7, 9, 8, 5]]
expected = 9.327379053088816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #289 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 1, 0, 0, 5, 9, 0, 10]]
b = [[1, 2, 0, 3, 7, 1, 8, 2, 2]]
expected = 12.409673645990857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #290 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 9, 5, 9, 9, 2, 0, 2, 0]]
b = [[3, 3, 4, 2, 7, 10, 8, 5, 3, 6]]
expected = 11.916375287812984
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #291 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 4, 5]]
b = [[10, 0, 3, 9]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #292 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[2]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #293 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 5, 8]]
b = [[9, 4, 9, 1]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #294 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[1]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #295 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 4, 8, 5, 9, 4]]
b = [[6, 7, 1, 9, 1, 9, 2]]
expected = 5.5677643628300215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #296 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4]]
b = [[4, 8]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #297 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 4, 8, 0, 3, 8, 0]]
b = [[0, 5, 1, 7, 10, 2, 0, 8]]
expected = 16.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #298 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 1, 4, 9, 0]]
b = [[0, 2, 2, 1, 0, 0]]
expected = 11.090536506409418
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #299 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 6, 2, 0, 2, 2, 8, 4, 5]]
b = [[8, 6, 8, 9, 6, 3, 0, 3, 0, 2]]
expected = 13.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #300 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2]]
b = [[3, 0]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #301 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 9]]
b = [[1, 5, 2]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #302 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[7]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #303 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 10, 8, 6, 4]]
b = [[6, 5, 4, 3, 4, 5]]
expected = 8.717797887081348
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #304 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 8, 0, 1]]
b = [[2, 6, 1, 3, 4]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #305 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 0, 5, 1, 7, 1, 3, 0]]
b = [[1, 9, 5, 0, 8, 4, 10, 9, 5]]
expected = 18.193405398660254
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #306 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[7]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #307 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 10, 10, 6, 1]]
b = [[1, 6, 0, 1, 8, 0]]
expected = 17.406895185529212
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #308 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 0]]
b = [[0, 4, 8]]
expected = 9.797958971132712
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #309 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 6, 0, 3, 0, 3, 4]]
b = [[8, 5, 5, 0, 10, 6, 4, 7]]
expected = 12.649110640673518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #310 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 9, 10, 5, 8, 1]]
b = [[9, 6, 4, 7, 2, 6, 4]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #311 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 3]]
b = [[9, 2, 2]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #312 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 0, 4, 10]]
b = [[2, 3, 6, 2, 10]]
expected = 10.954451150103322
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #313 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9]]
b = [[10, 6]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #314 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 10, 1]]
b = [[6, 0, 1, 0]]
expected = 10.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #315 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 3, 9, 8, 1]]
b = [[7, 6, 3, 10, 9, 4]]
expected = 5.291502622129181
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #316 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 10, 6, 5, 8, 8, 1, 2]]
b = [[7, 2, 4, 8, 8, 3, 9, 8, 0]]
expected = 11.874342087037917
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #317 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[6]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #318 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 3, 4, 5]]
b = [[2, 5, 7, 5, 6]]
expected = 6.164414002968976
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #319 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[2]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #320 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 1, 7, 5]]
b = [[0, 1, 0, 3, 10]]
expected = 11.958260743101398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #321 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 6, 8, 5, 8, 3]]
b = [[4, 4, 10, 0, 5, 1, 2]]
expected = 12.24744871391589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #322 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 6, 9, 0, 0, 9, 10, 2, 8]]
b = [[6, 0, 6, 4, 6, 5, 3, 4, 10, 9]]
expected = 17.69180601295413
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #323 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 5, 5, 4, 2, 9, 7, 4, 6]]
b = [[10, 3, 10, 8, 4, 8, 7, 3, 10, 4]]
expected = 14.2828568570857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #324 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[1]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #325 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 5, 10, 0]]
b = [[6, 6, 8, 2, 0]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #326 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6]]
b = [[2, 3]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #327 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 5, 7, 8, 9]]
b = [[2, 3, 4, 10, 8, 5]]
expected = 5.916079783099616
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #328 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 6, 1, 10, 8, 3]]
b = [[6, 7, 6, 4, 1, 9, 1]]
expected = 10.723805294763608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #329 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5]]
b = [[8, 7]]
expected = 4.47213595499958
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #330 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 0, 7, 5, 8, 9]]
b = [[5, 7, 2, 9, 10, 6, 3]]
expected = 8.831760866327848
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #331 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 9, 5, 1, 1, 8, 2, 6]]
b = [[4, 10, 4, 0, 6, 2, 10, 2, 4]]
expected = 10.488088481701515
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #332 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 4]]
b = [[2, 1, 8]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #333 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 10, 4, 1, 0]]
b = [[10, 7, 3, 8, 7, 6]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #334 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 3, 6, 10, 7]]
b = [[2, 4, 1, 5, 5, 5]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #335 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 5, 3]]
b = [[3, 0, 0, 1]]
expected = 7.615773105863909
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #336 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[1]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #337 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 4, 4, 2]]
b = [[3, 10, 4, 10, 6]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #338 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 6, 0, 7]]
b = [[3, 10, 6, 7, 5]]
expected = 7.937253933193772
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #339 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 9, 1, 1]]
b = [[7, 7, 10, 10, 0]]
expected = 9.591663046625438
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #340 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[6]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #341 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6]]
b = [[7, 5]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #342 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[1, 8]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #343 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[9]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #344 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10]]
b = [[0, 9]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #345 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 0, 10, 2, 7, 2, 3]]
b = [[5, 9, 4, 4, 3, 10, 2, 3]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #346 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 9, 5, 7, 3, 8, 9, 9]]
b = [[5, 9, 0, 7, 4, 2, 2, 4, 0]]
expected = 15.684387141358123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #347 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6, 6, 5, 2, 0, 2, 4]]
b = [[2, 9, 3, 8, 1, 0, 0, 5]]
expected = 7.615773105863909
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #348 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 8, 0, 0, 7]]
b = [[2, 2, 10, 6, 3, 4]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #349 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 5]]
b = [[7, 6, 8]]
expected = 4.358898943540674
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #350 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 6, 3, 7, 6, 8]]
b = [[8, 2, 0, 1, 1, 4, 6]]
expected = 13.152946437965905
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #351 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 7, 5, 1]]
b = [[6, 4, 1, 5, 4]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #352 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 6, 5, 4]]
b = [[2, 5, 10, 9, 7]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #353 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 7, 1, 3, 8, 4, 2]]
b = [[7, 4, 1, 4, 4, 10, 3, 1]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #354 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 10, 7, 4, 10, 9]]
b = [[8, 3, 5, 3, 0, 2, 3]]
expected = 14.38749456993816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #355 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 2, 5, 8, 4]]
b = [[10, 8, 1, 6, 5, 6]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #356 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 3]]
b = [[5, 10, 6]]
expected = 4.358898943540674
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #357 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2]]
b = [[2, 10]]
expected = 8.94427190999916
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #358 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 2, 10, 9, 3, 3, 1, 10]]
b = [[7, 7, 8, 7, 6, 10, 8, 7, 9]]
expected = 13.341664064126334
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #359 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 5, 6, 10]]
b = [[5, 3, 10, 8, 4]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #360 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 1, 1, 3, 6, 3]]
b = [[8, 9, 5, 10, 6, 0, 8]]
expected = 13.228756555322953
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #361 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 3, 9, 5]]
b = [[8, 9, 1, 6, 0]]
expected = 6.324555320336759
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #362 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 3, 4, 5, 7, 9, 3]]
b = [[2, 1, 0, 0, 0, 1, 5, 0]]
expected = 12.68857754044952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #363 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 1, 4, 7]]
b = [[4, 1, 0, 2, 7]]
expected = 3.872983346207417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #364 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[0]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #365 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 9, 1]]
b = [[3, 4, 7, 8]]
expected = 7.615773105863909
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #366 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 4, 10]]
b = [[8, 5, 0, 4]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #367 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 9, 2, 6]]
b = [[0, 10, 4, 5, 3]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #368 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[3, 1]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #369 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 8, 1, 0, 7, 7, 7]]
b = [[9, 2, 8, 1, 7, 0, 2, 4]]
expected = 13.30413469565007
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #370 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9]]
b = [[2, 4]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #371 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 10, 3, 8]]
b = [[6, 9, 0, 5, 2]]
expected = 14.866068747318506
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #372 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 3, 1, 4, 3, 6, 4]]
b = [[2, 6, 6, 6, 9, 6, 8, 6]]
expected = 10.63014581273465
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #373 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 2, 2, 0, 0, 5, 10]]
b = [[5, 6, 9, 0, 10, 6, 4, 2]]
expected = 16.186414056238647
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #374 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 2, 5, 10]]
b = [[3, 9, 8, 9, 10]]
expected = 10.816653826391969
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #375 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 9, 7, 5, 6, 1, 5]]
b = [[0, 10, 6, 10, 4, 6, 9, 0]]
expected = 14.45683229480096
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #376 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 9, 5, 4, 5]]
b = [[1, 7, 5, 2, 3, 10]]
expected = 8.18535277187245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #377 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 4, 4, 8, 6, 5, 2, 2]]
b = [[8, 0, 4, 9, 9, 0, 9, 0, 3]]
expected = 12.96148139681572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #378 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 10, 2, 1]]
b = [[4, 5, 5, 0, 1]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #379 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 0, 1, 7, 3, 8]]
b = [[0, 7, 0, 0, 10, 4]]
expected = 12.806248474865697
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #380 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 9, 5, 8, 4, 8, 4, 7]]
b = [[1, 6, 4, 2, 3, 0, 5, 1, 4]]
expected = 13.228756555322953
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #381 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 8, 1, 4, 4, 7]]
b = [[7, 7, 1, 0, 8, 1, 3]]
expected = 10.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #382 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 9, 3, 4, 8, 3, 5]]
b = [[4, 6, 0, 4, 5, 2, 6, 1]]
expected = 12.165525060596439
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #383 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5]]
b = [[4, 9]]
expected = 5.656854249492381
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #384 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[2]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #385 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 9, 9, 1, 0, 6, 3]]
b = [[6, 3, 4, 8, 8, 1, 2, 9]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #386 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 4, 3, 9, 8, 4, 3, 9]]
b = [[10, 5, 10, 2, 6, 4, 10, 9, 8]]
expected = 13.2664991614216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #387 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 0, 0, 8, 4, 6, 3, 6]]
b = [[0, 3, 0, 4, 3, 8, 8, 6, 10]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #388 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[0]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #389 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 9]]
b = [[3, 1, 0]]
expected = 9.273618495495704
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #390 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 5, 2, 6, 4, 10, 7, 2]]
b = [[8, 10, 4, 10, 10, 2, 4, 8, 1]]
expected = 13.152946437965905
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #391 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 5, 5]]
b = [[8, 5, 8, 10]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #392 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 8, 9, 6, 10, 5, 1, 1, 8]]
b = [[3, 5, 7, 0, 2, 3, 0, 9, 10, 3]]
expected = 19.467922333931785
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #393 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 9]]
b = [[7, 6, 1]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #394 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10]]
b = [[0, 5]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #395 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 4, 3, 2, 7, 9, 8]]
b = [[4, 4, 6, 6, 4, 6, 3, 9]]
expected = 10.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #396 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 1, 7, 2]]
b = [[5, 7, 9, 6, 5]]
expected = 9.539392014169456
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #397 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 8]]
b = [[3, 0, 8]]
expected = 8.94427190999916
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #398 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 2, 4, 7, 2, 6, 3]]
b = [[6, 8, 1, 10, 3, 5, 4, 6]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #399 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 6]]
b = [[2, 4, 0]]
expected = 7.483314773547883
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #400 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 6]]
b = [[4, 0, 5]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #401 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 9, 5, 10, 2]]
b = [[8, 10, 5, 10, 8, 3]]
expected = 11.661903789690601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #402 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 3, 10]]
b = [[2, 3, 9, 9]]
expected = 9.899494936611665
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #403 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 3, 2, 3, 0, 9, 7]]
b = [[9, 5, 3, 9, 2, 4, 4, 3]]
expected = 10.44030650891055
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #404 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 0, 7, 10]]
b = [[1, 3, 3, 8, 8]]
expected = 7.3484692283495345
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #405 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[10, 7]]
expected = 10.770329614269007
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #406 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 1, 9, 1, 10, 10, 8, 2]]
b = [[7, 9, 10, 6, 2, 5, 10, 8, 10]]
expected = 16.911534525287763
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #407 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 7, 10, 0, 8, 10]]
b = [[3, 10, 6, 3, 9, 6, 6]]
expected = 12.96148139681572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #408 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 8]]
b = [[9, 3, 10, 4]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #409 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 4, 3, 2, 4, 1]]
b = [[9, 2, 2, 10, 6, 10, 3]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #410 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8]]
b = [[10, 4]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #411 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 1, 3, 2, 4]]
b = [[3, 1, 3, 5, 7, 5]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #412 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6]]
b = [[5, 1]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #413 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[4]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #414 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10]]
b = [[9, 4]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #415 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 1, 5, 7]]
b = [[2, 6, 1, 0, 1]]
expected = 11.224972160321824
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #416 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 9]]
b = [[6, 0, 7]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #417 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 7, 8, 0, 1, 10, 7]]
b = [[5, 7, 4, 1, 8, 6, 4, 3]]
expected = 14.966629547095765
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #418 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 9, 3, 8, 7, 4, 8, 0]]
b = [[8, 8, 2, 10, 7, 4, 0, 10, 0]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #419 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 10, 8, 1, 9]]
b = [[9, 9, 2, 10, 9, 7]]
expected = 15.362291495737216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #420 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 7, 0, 4, 7, 4, 5]]
b = [[9, 2, 5, 7, 8, 5, 6, 3]]
expected = 12.767145334803704
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #421 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 3]]
b = [[0, 8, 1]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #422 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 7, 5, 8, 3]]
b = [[10, 6, 5, 7, 10, 2]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #423 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 5, 3, 9, 2]]
b = [[2, 1, 10, 1, 8, 3]]
expected = 5.744562646538029
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #424 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 7, 0, 5, 0, 1]]
b = [[2, 10, 9, 10, 4, 8, 9]]
expected = 15.84297951775486
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #425 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 3, 7, 3, 0, 7, 8]]
b = [[5, 10, 7, 9, 0, 1, 8, 8]]
expected = 5.656854249492381
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #426 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5]]
b = [[8, 3]]
expected = 2.8284271247461903
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #427 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 10]]
b = [[2, 0, 8]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #428 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 4, 7, 6, 5]]
b = [[9, 2, 7, 8, 1, 0]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #429 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 0, 2, 2]]
b = [[6, 0, 5, 2, 5]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #430 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 2]]
b = [[8, 10, 7]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #431 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 3]]
b = [[1, 4, 10]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #432 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 10, 5]]
b = [[10, 10, 10, 6]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #433 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 7, 2, 2, 2, 9, 7, 4, 0]]
b = [[10, 2, 10, 7, 7, 4, 6, 10, 9, 4]]
expected = 11.135528725660043
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #434 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 10, 9, 4, 6]]
b = [[7, 1, 7, 0, 7, 5]]
expected = 10.04987562112089
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #435 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 10, 5, 0, 7, 3, 4, 3]]
b = [[6, 0, 0, 2, 7, 10, 7, 10, 0]]
expected = 15.652475842498529
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #436 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 6]]
b = [[8, 6, 1]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #437 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 10, 3, 6]]
b = [[2, 8, 9, 9, 10]]
expected = 8.888194417315589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #438 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 9]]
b = [[0, 2, 1]]
expected = 10.816653826391969
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #439 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 3, 8, 9, 10, 8]]
b = [[0, 8, 7, 3, 1, 2, 8]]
expected = 14.798648586948742
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #440 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 7, 0]]
b = [[4, 9, 0, 2]]
expected = 13.038404810405298
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #441 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 2, 0, 4, 7, 9, 5, 2, 2]]
b = [[0, 5, 7, 2, 4, 9, 10, 6, 6, 1]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #442 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 4, 0, 9, 3, 8]]
b = [[3, 7, 0, 8, 9, 10, 8]]
expected = 11.532562594670797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #443 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 6, 10]]
b = [[8, 2, 10, 7]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #444 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 9, 7, 10]]
b = [[10, 0, 8, 0, 3]]
expected = 12.328828005937952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #445 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[7]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #446 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 0, 5, 8, 7]]
b = [[2, 5, 8, 5, 10, 10]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #447 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 9, 0, 10]]
b = [[8, 4, 6, 4, 4]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #448 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1]]
b = [[0, 2]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #449 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 2, 4, 1, 9, 6, 8, 5, 5]]
b = [[9, 1, 3, 1, 10, 5, 0, 0, 2, 3]]
expected = 16.76305461424021
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #450 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 8]]
b = [[3, 0, 5]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #451 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 10, 10, 9, 3, 2, 1, 9]]
b = [[0, 2, 10, 9, 10, 10, 10, 10, 8]]
expected = 14.317821063276353
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #452 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 9, 3, 6, 3, 4, 7, 6]]
b = [[5, 8, 5, 4, 2, 5, 8, 8, 7]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #453 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 6]]
b = [[6, 1, 0]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #454 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 3, 6, 4]]
b = [[6, 2, 7, 8, 7]]
expected = 6.782329983125268
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #455 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 8, 1, 3, 6, 6, 8, 4, 3]]
b = [[3, 4, 6, 7, 2, 3, 9, 3, 6, 2]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #456 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 8, 10, 8, 0, 6, 10]]
b = [[6, 6, 10, 5, 7, 8, 9, 6]]
expected = 11.661903789690601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #457 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 9, 2, 4, 2, 0, 1, 2, 1]]
b = [[6, 6, 8, 7, 10, 8, 3, 10, 1, 2]]
expected = 14.798648586948742
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #458 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 8, 8, 9]]
b = [[10, 5, 7, 3, 3]]
expected = 12.96148139681572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #459 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9]]
b = [[2, 1]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #460 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 1, 4, 0, 4]]
b = [[5, 3, 0, 2, 4, 10]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #461 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5]]
b = [[3, 0]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #462 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 7, 9, 5, 6, 5, 4]]
b = [[10, 0, 6, 5, 6, 9, 4, 5]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #463 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 6, 3, 10]]
b = [[1, 7, 0, 0, 7]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #464 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 2, 9, 2]]
b = [[7, 2, 3, 10, 4]]
expected = 6.557438524302
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #465 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 2, 4, 9, 10]]
b = [[1, 9, 4, 1, 3, 9]]
expected = 11.135528725660043
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #466 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 1, 6, 4, 6, 9, 5, 3]]
b = [[1, 0, 1, 10, 1, 4, 2, 4, 2]]
expected = 12.36931687685298
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #467 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 5, 4, 8, 8]]
b = [[10, 9, 0, 9, 3, 7]]
expected = 13.19090595827292
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #468 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 3, 10, 2, 7, 4, 1, 10, 4]]
b = [[7, 5, 3, 0, 2, 8, 3, 6, 1, 4]]
expected = 14.866068747318506
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #469 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 9, 5, 3, 10]]
b = [[9, 5, 2, 8, 6, 10]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #470 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 2, 7]]
b = [[0, 9, 8, 6]]
expected = 7.54983443527075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #471 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 8, 4, 3, 1, 0]]
b = [[0, 1, 3, 5, 1, 10, 7]]
expected = 13.601470508735444
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #472 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 4, 7, 7, 0]]
b = [[1, 7, 2, 7, 7, 7]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #473 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 1, 6, 5, 6, 5]]
b = [[8, 7, 10, 1, 9, 9, 3]]
expected = 14.247806848775006
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #474 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[8]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #475 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 4, 8]]
b = [[8, 10, 2, 3]]
expected = 11.357816691600547
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #476 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 4, 4, 6, 6, 6]]
b = [[4, 7, 10, 8, 0, 8, 7]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #477 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 9, 2, 7]]
b = [[8, 1, 4, 9, 4]]
expected = 10.816653826391969
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #478 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 0, 1, 0, 4, 8, 1]]
b = [[1, 0, 0, 1, 7, 0, 5, 4]]
expected = 12.12435565298214
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #479 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 0, 8, 3, 3, 9]]
b = [[1, 9, 1, 7, 6, 0, 6]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #480 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 4, 3, 0, 4]]
b = [[4, 4, 3, 8, 3, 4]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #481 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 6, 1]]
b = [[3, 9, 7, 1]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #482 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 6, 10, 7]]
b = [[6, 8, 2, 1, 7]]
expected = 10.246950765959598
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #483 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[8]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #484 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 8, 8, 1, 5, 7]]
b = [[3, 3, 1, 6, 0, 6, 7]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #485 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 5]]
b = [[3, 5, 10]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #486 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 1, 10, 6]]
b = [[6, 8, 9, 9, 7]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #487 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 10]]
b = [[3, 7, 3]]
expected = 8.18535277187245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #488 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 7, 4, 9]]
b = [[4, 7, 9, 10, 1]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #489 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9]]
b = [[10, 5]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #490 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 0, 4, 1, 9, 4, 5, 7]]
b = [[4, 10, 8, 5, 9, 1, 1, 4, 3]]
expected = 16.492422502470642
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #491 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 8, 10, 5, 1, 8, 7]]
b = [[7, 4, 4, 5, 2, 9, 2, 8]]
expected = 13.856406460551018
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #492 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 10, 3]]
b = [[5, 3, 5, 1]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #493 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 4, 1, 9, 10, 10]]
b = [[4, 10, 3, 9, 10, 1, 5]]
expected = 13.784048752090222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #494 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 0, 5, 7, 7, 6, 8]]
b = [[6, 9, 9, 5, 3, 2, 9, 2]]
expected = 14.38749456993816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #495 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 2]]
b = [[0, 1, 6]]
expected = 7.483314773547883
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #496 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 6, 9, 3, 8, 4, 5, 2, 8]]
b = [[6, 9, 10, 3, 5, 7, 8, 6, 8, 2]]
expected = 12.083045973594572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #497 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 8, 1, 9]]
b = [[5, 3, 8, 4, 5]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #498 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 10, 5, 10, 7, 3]]
b = [[9, 7, 2, 4, 8, 8]]
expected = 10.770329614269007
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #499 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 7, 1, 10, 6, 10]]
b = [[3, 4, 1, 6, 7, 5, 9]]
expected = 8.94427190999916
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #500 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 9, 5, 7, 6, 9]]
b = [[5, 3, 7, 8, 10, 0, 8]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #501 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 5, 0, 4, 9, 9, 8]]
b = [[2, 2, 3, 0, 9, 8, 3, 4]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #502 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 1, 8, 3, 7, 9, 9, 5]]
b = [[5, 10, 0, 9, 1, 7, 6, 0, 4]]
expected = 11.445523142259598
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #503 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 8, 2, 1, 7, 1, 3, 6, 1, 7]]
b = [[4, 5, 8, 4, 9, 6, 4, 5, 6, 4]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #504 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0]]
b = [[1, 2]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #505 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 3]]
b = [[4, 5, 0]]
expected = 5.916079783099616
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #506 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 9, 7, 9, 4, 4, 0]]
b = [[6, 8, 5, 10, 4, 3, 0, 0]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #507 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[2]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #508 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 2]]
b = [[0, 4, 2]]
expected = 5.656854249492381
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #509 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5]]
b = [[0, 7]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #510 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 4, 4, 0, 1, 2, 3]]
b = [[7, 10, 8, 5, 8, 3, 9, 9]]
expected = 15.198684153570664
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #511 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[10]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #512 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 10, 2, 4, 10, 6, 5, 8, 10]]
b = [[0, 1, 9, 10, 6, 1, 6, 8, 7]]
expected = 17.26267650163207
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #513 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 0]]
b = [[1, 3, 7]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #514 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 1, 9, 9]]
b = [[5, 8, 5, 10]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #515 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 7]]
b = [[9, 10, 0]]
expected = 13.92838827718412
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #516 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 10]]
b = [[6, 7, 1]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #517 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9]]
b = [[7, 8]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #518 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 7, 4, 6, 6, 0, 6, 3, 10]]
b = [[2, 0, 8, 9, 6, 4, 7, 5, 8, 6]]
expected = 13.638181696985855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #519 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 4, 6, 2, 3, 9, 2, 5, 10]]
b = [[9, 10, 7, 6, 1, 8, 5, 2, 6, 1]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #520 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 2]]
b = [[5, 0, 10]]
expected = 13.038404810405298
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #521 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[7]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #522 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[0]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #523 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 10, 6, 7, 3, 10, 8]]
b = [[1, 4, 5, 3, 3, 5, 5, 0]]
expected = 12.649110640673518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #524 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 7, 6, 8, 1, 7, 3, 4, 9]]
b = [[6, 10, 9, 2, 10, 10, 9, 6, 0, 4]]
expected = 16.1245154965971
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #525 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 9]]
b = [[0, 7, 2]]
expected = 14.071247279470288
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #526 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3]]
b = [[2, 10]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #527 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 6]]
b = [[3, 6, 7]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #528 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[10]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #529 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 7, 1, 9, 4]]
b = [[0, 4, 4, 10, 9, 2]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #530 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 0, 2, 10, 6, 8, 1, 1, 10]]
b = [[1, 1, 4, 4, 7, 9, 4, 4, 2, 7]]
expected = 12.409673645990857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #531 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[10]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #532 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 10, 0, 9, 10, 10, 8, 0, 2]]
b = [[4, 10, 6, 3, 5, 9, 7, 0, 4]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #533 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 2, 0, 6, 9, 6, 10, 4]]
b = [[8, 8, 10, 1, 2, 1, 0, 1, 4]]
expected = 18.083141320025124
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #534 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 8, 2, 7, 7, 4, 0, 2]]
b = [[0, 9, 1, 6, 2, 3, 7, 1, 2]]
expected = 11.180339887498949
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #535 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 1, 1, 5, 3, 4, 0, 0, 2]]
b = [[9, 3, 7, 6, 2, 3, 10, 1, 4, 1]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #536 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 8, 0, 6, 4, 7]]
b = [[10, 8, 6, 6, 3, 0, 10]]
expected = 9.695359714832659
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #537 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[0, 3]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #538 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 3, 0, 10, 7]]
b = [[7, 6, 3, 2, 0, 3]]
expected = 13.038404810405298
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #539 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 2]]
b = [[3, 0, 1]]
expected = 5.477225575051661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #540 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 2, 9, 1]]
b = [[10, 6, 4, 1, 7]]
expected = 14.866068747318506
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #541 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 5]]
b = [[4, 4, 9]]
expected = 6.4031242374328485
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #542 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0]]
b = [[0, 10]]
expected = 10.198039027185569
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #543 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 4, 8, 0, 6, 1, 10, 9]]
b = [[7, 3, 5, 0, 1, 2, 6, 0, 7]]
expected = 15.198684153570664
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #544 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 10, 0, 9, 10, 3]]
b = [[6, 6, 10, 4, 9, 0, 5]]
expected = 12.328828005937952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #545 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 3]]
b = [[8, 5, 6]]
expected = 6.164414002968976
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #546 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 6, 3, 8, 5, 10, 1]]
b = [[8, 5, 10, 1, 1, 0, 8, 7]]
expected = 13.674794331177344
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #547 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4]]
b = [[6, 6]]
expected = 6.324555320336759
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #548 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 7, 2]]
b = [[6, 7, 0, 1]]
expected = 9.486832980505138
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #549 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[9]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #550 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 6, 0, 2, 4, 10, 5]]
b = [[6, 0, 4, 10, 7, 0, 1, 1]]
expected = 15.811388300841896
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #551 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[5]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #552 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2]]
b = [[6, 0]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #553 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 2, 9]]
b = [[8, 10, 8, 6]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #554 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 9, 3, 9, 9, 10, 5]]
b = [[3, 10, 8, 8, 7, 8, 2, 2]]
expected = 13.114877048604
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #555 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 5, 0, 4, 1, 3]]
b = [[6, 5, 9, 7, 0, 1, 9]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #556 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2]]
b = [[5, 1]]
expected = 2.23606797749979
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #557 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 0, 5, 0, 5, 2, 5, 8, 0]]
b = [[7, 3, 5, 7, 8, 9, 9, 4, 6, 6]]
expected = 14.45683229480096
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #558 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[6]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #559 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 4, 1, 10, 1, 1, 2, 1]]
b = [[7, 4, 3, 2, 1, 0, 7, 6, 6]]
expected = 13.96424004376894
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #560 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 9, 9, 10, 10, 6, 5, 8, 9]]
b = [[10, 5, 7, 7, 10, 7, 1, 10, 6, 8]]
expected = 8.94427190999916
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #561 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7]]
b = [[5, 5]]
expected = 4.47213595499958
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #562 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 0, 8]]
b = [[4, 10, 0, 7]]
expected = 1.7320508075688772
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #563 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 9, 6, 9]]
b = [[6, 9, 3, 7, 2]]
expected = 13.638181696985855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #564 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 0, 5, 6, 1, 3, 1, 4]]
b = [[7, 2, 5, 6, 9, 0, 8, 0, 3]]
expected = 8.18535277187245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #565 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 9, 0, 0, 9, 8]]
b = [[10, 0, 4, 10, 3, 7, 0]]
expected = 18.083141320025124
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #566 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3, 0, 2, 3]]
b = [[5, 5, 5, 9, 10]]
expected = 11.958260743101398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #567 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[2]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #568 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 2, 6, 9, 4, 6, 2]]
b = [[8, 8, 7, 7, 3, 10, 5]]
expected = 9.1104335791443
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #569 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 10, 0, 0, 1, 10]]
b = [[4, 10, 0, 5, 5, 9, 4]]
expected = 19.364916731037084
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #570 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[7]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #571 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 10, 4, 4, 9, 8, 3, 2, 8]]
b = [[2, 4, 5, 1, 5, 8, 0, 3, 7, 6]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #572 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 2, 4, 3, 10, 3]]
b = [[9, 3, 8, 2, 10, 2, 2]]
expected = 13.527749258468683
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #573 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 9, 10, 3, 10]]
b = [[5, 3, 6, 3, 5, 9]]
expected = 8.717797887081348
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #574 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[7]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #575 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 5, 9]]
b = [[2, 2, 3, 3]]
expected = 10.954451150103322
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #576 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10]]
b = [[1, 4]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #577 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6]]
b = [[10, 0]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #578 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[1]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #579 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5]]
b = [[10, 2]]
expected = 7.615773105863909
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #580 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 5]]
b = [[4, 5, 1]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #581 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 2, 10, 2, 6, 10, 7, 3, 7]]
b = [[4, 7, 10, 4, 4, 5, 2, 4, 10, 7]]
expected = 15.905973720586866
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #582 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 4, 4, 3, 4, 4, 3, 10, 10]]
b = [[1, 10, 9, 9, 3, 9, 2, 0, 5]]
expected = 15.811388300841896
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #583 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 3, 5, 9, 1]]
b = [[1, 2, 7, 3, 7, 1]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #584 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[4]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #585 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[3]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #586 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 9, 7, 7, 1, 10]]
b = [[8, 8, 5, 1, 0, 2, 5]]
expected = 13.711309200802088
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #587 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 2, 8, 2, 7, 3]]
b = [[2, 3, 3, 3, 10, 6, 1]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #588 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1]]
b = [[4, 8]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #589 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 7, 5]]
b = [[10, 10, 10, 6]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #590 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 8, 10, 2, 7, 9, 4, 0, 7]]
b = [[1, 10, 9, 4, 6, 6, 5, 7, 0, 4]]
expected = 10.198039027185569
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #591 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 1, 7, 2]]
b = [[9, 6, 10, 3, 4]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #592 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 9, 0]]
b = [[4, 8, 8, 8]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #593 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 0, 5, 2, 5, 8, 6, 2, 3]]
b = [[0, 6, 6, 10, 9, 9, 9, 2, 10, 2]]
expected = 16.492422502470642
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #594 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 0, 0, 7, 9, 6]]
b = [[5, 7, 6, 9, 8, 7, 8]]
expected = 12.449899597988733
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #595 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 3, 1, 7, 6, 2, 5, 2, 6]]
b = [[8, 5, 1, 0, 5, 3, 2, 1, 8, 1]]
expected = 10.954451150103322
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #596 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 7, 4, 3, 4, 5, 9]]
b = [[3, 2, 5, 0, 4, 9, 5, 10]]
expected = 10.583005244258363
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #597 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 6, 8, 6, 8, 10, 4, 5]]
b = [[9, 6, 2, 0, 10, 9, 8, 4, 7]]
expected = 10.488088481701515
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #598 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 3, 6, 1, 4]]
b = [[3, 10, 7, 1, 6, 7]]
expected = 9.591663046625438
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #599 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 0, 2]]
b = [[10, 6, 7, 7]]
expected = 12.12435565298214
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #600 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 3, 6, 10, 2, 0]]
b = [[6, 0, 5, 1, 8, 9, 3, 10]]
expected = 15.588457268119896
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #601 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[7]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #602 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 3]]
b = [[1, 7, 10]]
expected = 7.3484692283495345
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #603 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 5]]
b = [[3, 5, 7]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #604 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 0, 2, 2]]
b = [[0, 3, 5, 9, 6]]
expected = 12.449899597988733
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #605 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 10, 8, 10, 3, 6, 8, 0]]
b = [[10, 3, 1, 10, 4, 0, 7, 7, 8]]
expected = 14.177446878757825
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #606 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 5, 4, 8, 4, 7, 7]]
b = [[10, 9, 3, 4, 2, 7, 7, 5]]
expected = 7.3484692283495345
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #607 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 2, 0, 8]]
b = [[7, 1, 8, 5, 7]]
expected = 10.723805294763608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #608 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 3, 4, 6, 3, 10]]
b = [[4, 4, 3, 5, 6, 7, 8]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #609 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7]]
b = [[0, 9]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #610 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 8, 4, 8, 7, 1, 7]]
b = [[6, 5, 7, 7, 6, 2, 2, 5]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #611 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 1, 8, 2, 8, 3, 6, 8, 7, 2]]
b = [[7, 2, 1, 2, 5, 9, 5, 5, 7, 7]]
expected = 11.575836902790225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #612 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 6]]
b = [[5, 6, 5]]
expected = 3.3166247903554
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #613 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 6, 10, 3]]
b = [[10, 4, 6, 3, 7]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #614 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9]]
b = [[10, 7]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #615 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[1]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #616 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 1, 9]]
b = [[8, 2, 0, 6]]
expected = 9.055385138137417
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #617 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 5, 1, 9, 5, 4]]
b = [[4, 5, 2, 2, 8, 0, 7]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #618 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 3, 2, 10, 9, 2]]
b = [[10, 1, 5, 9, 6, 8, 0]]
expected = 11.269427669584644
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #619 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[1]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #620 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5]]
b = [[8, 4]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #621 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[0]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #622 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[9]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #623 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 5]]
b = [[7, 6, 5]]
expected = 2.8284271247461903
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #624 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 7, 10, 1, 7, 0, 5, 8, 3, 1]]
b = [[3, 2, 4, 7, 3, 8, 10, 8, 10, 6]]
expected = 16.73320053068151
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #625 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 0, 6, 0]]
b = [[10, 6, 6, 0, 9]]
expected = 12.529964086141668
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #626 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 1, 1, 10, 10, 10, 5, 8]]
b = [[3, 4, 10, 3, 8, 2, 3, 6, 6]]
expected = 14.832396974191326
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #627 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 8, 0, 0]]
b = [[6, 4, 1, 8, 8]]
expected = 13.341664064126334
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #628 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6]]
b = [[4, 1]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #629 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 9, 10, 9, 2, 8, 9, 10]]
b = [[2, 2, 4, 1, 4, 2, 1, 3, 0]]
expected = 17.832554500127006
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #630 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 0, 4, 8, 4, 8, 4, 4, 7]]
b = [[9, 10, 0, 0, 5, 9, 3, 9, 9]]
expected = 14.594519519326424
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #631 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 1, 4, 6, 6, 0, 0]]
b = [[10, 0, 2, 0, 5, 10, 7, 10]]
expected = 15.748015748023622
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #632 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 6, 7]]
b = [[4, 8, 8]]
expected = 6.4031242374328485
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #633 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 9, 0]]
b = [[7, 0, 7, 6]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #634 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 7, 1]]
b = [[7, 10, 9, 6]]
expected = 8.888194417315589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #635 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[6]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #636 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 2, 6]]
b = [[6, 1, 3, 8]]
expected = 8.831760866327848
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #637 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 5, 10, 7, 5, 9, 0, 8, 10]]
b = [[8, 10, 6, 6, 8, 5, 2, 2, 3, 10]]
expected = 14.035668847618199
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #638 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 5, 4, 7]]
b = [[3, 3, 6, 9, 4]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #639 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 9, 4, 0, 7, 4]]
b = [[7, 5, 6, 7, 10, 8, 5]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #640 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 7, 7, 2, 0, 5]]
b = [[4, 3, 6, 9, 4, 3]]
expected = 9.327379053088816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #641 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 1]]
b = [[4, 3, 3]]
expected = 3.7416573867739413
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #642 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 9, 5, 1, 1]]
b = [[3, 9, 9, 8, 6, 2]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #643 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3]]
b = [[5, 5]]
expected = 5.385164807134504
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #644 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 6]]
b = [[5, 4, 6]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #645 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[10]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #646 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 3, 3, 4, 9, 1, 6, 8, 9]]
b = [[1, 9, 5, 2, 0, 1, 7, 2, 6]]
expected = 14.38749456993816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #647 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 3, 8, 9, 3, 10, 9, 7, 8]]
b = [[6, 10, 9, 10, 5, 2, 1, 2, 4, 1]]
expected = 18.027756377319946
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #648 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9]]
b = [[0, 10]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #649 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2]]
b = [[2, 9]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #650 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 4, 4, 9, 0, 8, 9]]
b = [[1, 9, 1, 2, 4, 4, 4, 7]]
expected = 12.449899597988733
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #651 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 6, 8]]
b = [[9, 6, 3, 0]]
expected = 9.899494936611665
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #652 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 2, 1, 3, 5, 4, 4]]
b = [[1, 9, 3, 3, 9, 10, 5, 2]]
expected = 11.661903789690601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #653 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 1, 1, 8]]
b = [[7, 4, 6, 4, 1]]
expected = 10.583005244258363
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #654 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 4]]
b = [[1, 3, 8]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #655 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 3]]
b = [[6, 0, 4]]
expected = 5.196152422706632
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #656 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 5, 0, 0, 7, 4, 4, 9, 10]]
b = [[7, 6, 2, 6, 1, 6, 5, 1, 0, 8]]
expected = 12.609520212918492
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #657 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0]]
b = [[7, 2]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #658 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 4, 3, 5, 4, 0]]
b = [[7, 5, 4, 2, 3, 7, 1]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #659 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 6, 7, 8]]
b = [[4, 7, 3, 8, 8]]
expected = 3.3166247903554
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #660 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 2, 1, 10]]
b = [[9, 10, 5, 10, 3]]
expected = 12.449899597988733
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #661 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 9]]
b = [[1, 9, 9]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #662 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 5, 10, 1]]
b = [[0, 2, 2, 1, 4]]
expected = 10.198039027185569
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #663 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 8, 8, 5, 8, 4, 5, 6]]
b = [[0, 7, 9, 7, 10, 2, 6, 2, 3]]
expected = 9.273618495495704
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #664 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 10, 6, 3]]
b = [[1, 4, 5, 9, 10]]
expected = 11.532562594670797
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #665 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[1]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #666 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 3]]
b = [[6, 7, 8]]
expected = 7.3484692283495345
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #667 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 5, 4]]
b = [[2, 5, 4, 4]]
expected = 4.358898943540674
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #668 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 5, 7, 10, 1, 4, 1]]
b = [[6, 10, 10, 4, 9, 8, 5, 5]]
expected = 10.535653752852738
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #669 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7]]
b = [[7, 8]]
expected = 2.23606797749979
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #670 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 0, 9, 0, 8, 5, 4, 2, 9]]
b = [[4, 1, 7, 10, 4, 9, 0, 8, 7, 5]]
expected = 14.730919862656235
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #671 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 0]]
b = [[1, 5, 5]]
expected = 7.14142842854285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #672 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 0, 6, 6, 8]]
b = [[10, 1, 4, 8, 3, 8]]
expected = 11.357816691600547
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #673 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2]]
b = [[0, 3]]
expected = 10.04987562112089
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #674 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 8, 0]]
b = [[7, 5, 6, 6]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #675 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 8, 8, 7, 10]]
b = [[9, 9, 0, 9, 1, 9]]
expected = 12.884098726725126
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #676 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 7, 7, 5, 8]]
b = [[3, 0, 8, 4, 10, 6]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #677 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 9, 7, 5, 6, 6, 9, 10, 1]]
b = [[2, 8, 9, 6, 0, 8, 7, 8, 7, 7]]
expected = 13.784048752090222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #678 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 4, 0, 7, 7, 4, 3, 7]]
b = [[8, 10, 7, 3, 1, 1, 0, 8, 4]]
expected = 12.206555615733702
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #679 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 3]]
b = [[5, 6]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #680 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 2, 7, 5, 4, 5]]
b = [[6, 4, 7, 5, 1, 0, 5]]
expected = 9.848857801796104
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #681 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 9, 3]]
b = [[3, 9, 0, 2]]
expected = 10.392304845413264
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #682 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 0, 4, 6, 9, 1, 4, 7]]
b = [[1, 6, 0, 5, 5, 5, 2, 1, 8]]
expected = 11.224972160321824
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #683 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 7, 8, 10, 5, 0]]
b = [[7, 8, 0, 5, 6, 1, 4]]
expected = 13.638181696985855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #684 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 8]]
b = [[1, 10, 7]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #685 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[5]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #686 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[9]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #687 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 7, 4, 9, 8, 3, 3, 9, 3]]
b = [[3, 8, 1, 5, 6, 3, 0, 9, 0, 10]]
expected = 17.204650534085253
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #688 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 6, 3, 2, 10, 9, 3]]
b = [[3, 8, 7, 6, 5, 6, 8, 6]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #689 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 0, 6, 9, 1, 9, 3]]
b = [[9, 4, 3, 6, 3, 3, 2, 4]]
expected = 11.832159566199232
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #690 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7]]
b = [[6, 6]]
expected = 2.23606797749979
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #691 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 2, 2, 2, 5, 5]]
b = [[3, 5, 10, 8, 8, 3, 9]]
expected = 14.628738838327793
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #692 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 3]]
b = [[0, 9, 1]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #693 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 9, 8, 2, 0, 4]]
b = [[8, 0, 0, 6, 10, 2, 4]]
expected = 12.884098726725126
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #694 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 10, 1, 1, 1, 3, 4, 2, 9]]
b = [[0, 9, 7, 6, 6, 10, 7, 1, 5, 1]]
expected = 17.97220075561143
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #695 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 0, 3, 0, 10]]
b = [[7, 9, 4, 3, 9, 6]]
expected = 13.96424004376894
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #696 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 5, 9, 1]]
b = [[7, 9, 6, 5, 2]]
expected = 6.164414002968976
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #697 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 4, 5, 1]]
b = [[3, 3, 7, 1, 5]]
expected = 6.782329983125268
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #698 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 6, 5, 6]]
b = [[5, 3, 0, 6, 1]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #699 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 6, 0, 6, 8]]
b = [[3, 0, 6, 9, 0, 10]]
expected = 11.874342087037917
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #700 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 9]]
b = [[5, 2, 1]]
expected = 8.774964387392123
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #701 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 4, 7, 7, 2]]
b = [[4, 9, 6, 6, 6, 10]]
expected = 10.295630140987
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #702 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[6]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #703 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 7, 10, 8]]
b = [[7, 8, 5, 3]]
expected = 7.416198487095663
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #704 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 9, 5, 2, 7]]
b = [[5, 6, 1, 1, 3, 9]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #705 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3]]
b = [[2]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #706 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 2]]
b = [[0, 5, 8]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #707 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 3, 5, 4, 3, 10]]
b = [[2, 4, 0, 10, 3, 6, 5]]
expected = 10.908712114635714
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #708 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[4]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #709 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 4, 9]]
b = [[10, 1, 8, 7]]
expected = 5.291502622129181
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #710 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 4, 9, 0, 0, 4]]
b = [[5, 7, 2, 5, 8, 8, 10]]
expected = 13.856406460551018
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #711 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0, 3, 9, 2, 8]]
b = [[6, 2, 9, 7, 8, 0]]
expected = 12.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #712 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 1, 5, 0, 2, 0, 10]]
b = [[4, 6, 2, 2, 0, 3, 6, 2]]
expected = 10.908712114635714
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #713 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 7, 6]]
b = [[2, 9, 1]]
expected = 6.708203932499369
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #714 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 8, 8, 9, 4, 5, 5, 10]]
b = [[2, 2, 3, 7, 4, 7, 2, 9, 4]]
expected = 11.090536506409418
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #715 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 4, 8]]
b = [[7, 10, 2, 10]]
expected = 9.848857801796104
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #716 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 4, 2, 7, 5, 0]]
b = [[3, 6, 7, 9, 2, 9, 10]]
expected = 14.45683229480096
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #717 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 3, 3, 3, 2]]
b = [[8, 7, 1, 9, 10, 9]]
expected = 12.767145334803704
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #718 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 1, 0, 0]]
b = [[2, 0, 4, 4, 4]]
expected = 7.14142842854285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #719 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 4, 3, 7, 9, 8]]
b = [[6, 8, 1, 0, 9, 8, 10]]
expected = 10.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #720 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 8, 3, 6, 7, 1]]
b = [[7, 1, 7, 9, 0, 9, 1]]
expected = 11.40175425099138
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #721 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 7, 0, 1]]
b = [[3, 8, 2, 1, 10]]
expected = 13.674794331177344
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #722 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 10, 7, 8]]
b = [[3, 10, 3, 1, 7]]
expected = 12.96148139681572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #723 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 3, 7, 4, 9, 2, 5]]
b = [[2, 2, 1, 9, 7, 4, 7, 7]]
expected = 10.392304845413264
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #724 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 10, 1, 5, 9, 7]]
b = [[10, 9, 1, 0, 5, 5, 7]]
expected = 12.288205727444508
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #725 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[6]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #726 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 5, 3, 2, 10]]
b = [[4, 8, 8, 7, 8, 6]]
expected = 9.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #727 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 1, 9, 2, 3, 5, 8, 8]]
b = [[3, 4, 6, 4, 4, 6, 7, 2]]
expected = 8.366600265340756
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #728 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 5]]
b = [[0, 0, 4]]
expected = 12.083045973594572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #729 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 4, 4, 6, 2, 10, 2, 5]]
b = [[2, 8, 2, 4, 9, 9, 6, 8, 2]]
expected = 12.806248474865697
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #730 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 7, 4]]
b = [[8, 1, 6, 7]]
expected = 7.937253933193772
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #731 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 10, 0, 7, 4, 0, 2]]
b = [[10, 3, 10, 7, 6, 4, 10, 7]]
expected = 13.527749258468683
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #732 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 6, 10, 9, 0, 7, 4, 2]]
b = [[6, 9, 10, 4, 9, 4, 8, 0, 4]]
expected = 13.379088160259652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #733 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 3, 5, 7, 7, 3, 7, 0]]
b = [[0, 2, 7, 6, 5, 0, 2, 10, 9]]
expected = 16.673332000533065
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #734 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 4, 4]]
b = [[6, 5, 6, 2]]
expected = 5.744562646538029
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #735 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 8, 4, 9, 8, 9, 3, 1, 1]]
b = [[2, 2, 7, 4, 7, 5, 0, 1, 2, 8]]
expected = 12.288205727444508
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #736 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 0, 7, 2, 10]]
b = [[2, 9, 9, 10, 10]]
expected = 13.19090595827292
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #737 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 3, 0, 10, 1]]
b = [[7, 4, 3, 5, 6, 0]]
expected = 6.782329983125268
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #738 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[5]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #739 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1]]
b = [[5, 0]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #740 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 2, 10, 4, 0]]
b = [[8, 6, 4, 5, 3, 3]]
expected = 8.660254037844387
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #741 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1, 6, 2, 5, 2, 5, 4, 3, 7]]
b = [[7, 6, 3, 2, 5, 7, 5, 1, 3, 0]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #742 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4]]
b = [[8, 1]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #743 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10]]
b = [[8, 8]]
expected = 2.8284271247461903
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #744 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 6, 2, 3, 8]]
b = [[8, 4, 9, 9, 2, 8]]
expected = 8.48528137423857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #745 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[2]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #746 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 10]]
b = [[3, 0]]
expected = 11.180339887498949
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #747 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 6, 9, 9]]
b = [[7, 1, 0, 10, 9]]
expected = 7.54983443527075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #748 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 0, 6, 10]]
b = [[4, 0, 9, 1]]
expected = 9.539392014169456
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #749 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 10]]
b = [[5, 2, 6]]
expected = 10.246950765959598
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #750 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 5, 6, 5, 7, 1]]
b = [[1, 9, 6, 1, 7, 4, 8]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #751 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 4, 3, 8, 8, 8, 2]]
b = [[6, 4, 0, 10, 5, 0, 7, 7]]
expected = 14.2828568570857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #752 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 10, 8, 10]]
b = [[2, 10, 10, 6]]
expected = 4.898979485566356
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #753 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[9]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #754 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 5]]
b = [[9, 3, 8]]
expected = 8.366600265340756
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #755 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 10, 10, 5, 5]]
b = [[6, 5, 8, 8, 7]]
expected = 6.557438524302
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #756 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 4, 5, 9, 2, 10, 7, 8, 0]]
b = [[2, 10, 8, 1, 7, 8, 1, 4, 7, 1]]
expected = 14.730919862656235
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #757 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 7, 7, 3, 8, 1, 5, 5, 3]]
b = [[1, 8, 2, 8, 2, 4, 7, 0, 1, 2]]
expected = 11.74734012447073
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #758 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 0, 10, 5, 7, 3, 7]]
b = [[3, 3, 5, 8, 8, 1, 5, 8]]
expected = 10.198039027185569
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #759 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 7, 3, 8]]
b = [[8, 2, 0, 3]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #760 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 4, 6, 8, 2, 4, 7, 4]]
b = [[9, 4, 6, 8, 1, 10, 3, 0, 8]]
expected = 14.966629547095765
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #761 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 5, 8, 10, 7, 1, 7]]
b = [[1, 5, 6, 9, 5, 0, 7, 2]]
expected = 12.12435565298214
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #762 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 10, 2, 5, 6, 7, 7, 9]]
b = [[2, 1, 3, 3, 0, 5, 4, 3, 2]]
expected = 16.673332000533065
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #763 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 0]]
b = [[5, 5, 1]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #764 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 10, 10, 8, 2]]
b = [[3, 7, 3, 5, 9, 0]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #765 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 1, 4]]
b = [[1, 7, 4, 6]]
expected = 5.477225575051661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #766 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 9, 10, 8, 1, 7, 10]]
b = [[6, 6, 8, 7, 4, 8, 3, 1]]
expected = 14.177446878757825
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #767 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 8]]
b = [[8, 10, 0]]
expected = 10.04987562112089
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #768 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 3, 0, 2, 1, 9, 5]]
b = [[1, 7, 1, 10, 6, 9, 5]]
expected = 13.674794331177344
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #769 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 2, 2, 4, 5, 6, 6]]
b = [[8, 5, 10, 7, 4, 9, 5, 0]]
expected = 13.379088160259652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #770 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9]]
b = [[8, 7]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #771 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[2]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #772 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 8, 9]]
b = [[5, 1, 2, 2]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #773 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 9, 5, 2, 6, 6, 1]]
b = [[9, 8, 10, 1, 1, 4, 10, 10]]
expected = 10.954451150103322
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #774 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7]]
b = [[3, 5]]
expected = 5.385164807134504
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #775 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 4, 3, 6, 8, 3, 3]]
b = [[9, 1, 4, 3, 8, 6, 8, 4]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #776 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[2]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #777 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 7, 8, 0, 7, 9]]
b = [[10, 9, 8, 2, 8, 6, 5]]
expected = 12.922847983320086
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #778 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 0, 5, 0, 2, 10, 8, 5, 1]]
b = [[3, 3, 4, 9, 1, 5, 10, 3, 1, 10]]
expected = 13.74772708486752
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #779 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 8, 5]]
b = [[0, 9, 2, 5]]
expected = 14.071247279470288
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #780 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 10, 0, 3, 6, 8, 4, 1]]
b = [[5, 3, 10, 4, 3, 2, 1, 5, 7]]
expected = 11.224972160321824
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #781 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 1]]
b = [[5, 0, 6]]
expected = 11.874342087037917
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #782 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 6, 6]]
b = [[3, 9, 9, 2]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #783 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[2]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #784 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[8]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #785 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[2]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #786 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 5, 7, 6, 10, 0, 2]]
b = [[5, 8, 6, 7, 3, 8, 7]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #787 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 10, 0, 2, 10, 0, 7, 0]]
b = [[10, 5, 8, 9, 8, 10, 3, 0, 3]]
expected = 14.2828568570857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #788 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 6, 8, 3, 4]]
b = [[0, 4, 4, 6, 8, 1]]
expected = 11.958260743101398
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #789 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 4, 10, 9, 1, 7]]
b = [[4, 5, 2, 7, 3, 6, 8]]
expected = 9.591663046625438
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #790 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 7, 8]]
b = [[10, 4, 7, 6]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #791 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 9, 2, 7, 4, 1, 10]]
b = [[4, 3, 3, 7, 4, 8, 0, 1]]
expected = 14.832396974191326
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #792 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 1, 0]]
b = [[2, 4, 5, 2]]
expected = 6.782329983125268
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #793 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 0, 2, 0, 7, 1]]
b = [[7, 5, 7, 2, 6, 4]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #794 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 0, 10, 10, 3]]
b = [[0, 10, 2, 5, 3, 3]]
expected = 13.92838827718412
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #795 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 4, 5, 2, 8, 7, 3, 3]]
b = [[3, 8, 0, 8, 1, 0, 4, 1, 2]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #796 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 6, 4, 3, 10]]
b = [[6, 10, 0, 1, 3, 5]]
expected = 11.61895003862225
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #797 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 0, 0, 4, 8]]
b = [[7, 5, 1, 0, 4, 6]]
expected = 2.449489742783178
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #798 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 10, 7, 8, 2, 4]]
b = [[8, 3, 2, 0, 9, 6, 10]]
expected = 14.247806848775006
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #799 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 8, 1, 1, 3]]
b = [[0, 5, 4, 0, 1]]
expected = 4.898979485566356
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #800 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 9, 2]]
b = [[2, 2, 9, 1]]
expected = 1.7320508075688772
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #801 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 5, 6, 3]]
b = [[2, 2, 4, 6, 5]]
expected = 3.1622776601683795
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #802 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 9, 2, 4, 10, 1, 1, 9]]
b = [[7, 8, 2, 10, 7, 9, 10, 8, 8]]
expected = 16.217274740226856
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #803 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 10, 9, 0, 3, 9, 6, 6, 3]]
b = [[9, 3, 2, 8, 6, 10, 9, 2, 9, 9]]
expected = 15.874507866387544
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #804 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 10, 1, 2, 7]]
b = [[1, 3, 7, 0, 9, 3]]
expected = 12.649110640673518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #805 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 7]]
b = [[2, 1, 4]]
expected = 3.3166247903554
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #806 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6]]
b = [[8, 3]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #807 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 8, 4, 0, 4, 0, 6]]
b = [[1, 4, 9, 4, 6, 4, 0, 0]]
expected = 8.54400374531753
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #808 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4]]
b = [[2, 4]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #809 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 9]]
b = [[1, 6, 3]]
expected = 6.782329983125268
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #810 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 0, 10]]
b = [[10, 1, 6, 7]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #811 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 4, 5, 4, 7, 7, 7, 1, 9, 6]]
b = [[1, 0, 8, 7, 0, 4, 8, 3, 7, 7]]
expected = 10.535653752852738
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #812 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 7, 7, 7]]
b = [[1, 2, 6, 2]]
expected = 9.327379053088816
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #813 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 3, 6, 1, 8, 0, 4]]
b = [[4, 2, 4, 7, 6, 1, 10, 9]]
expected = 14.628738838327793
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #814 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 1, 4, 3, 9, 2, 0, 3]]
b = [[2, 0, 3, 6, 10, 4, 8, 8, 6]]
expected = 17.549928774784245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #815 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 1, 3, 0, 9, 10]]
b = [[1, 2, 6, 9, 2, 2, 10]]
expected = 14.560219778561036
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #816 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 7, 6, 4]]
b = [[8, 1, 6, 7, 3]]
expected = 6.6332495807108
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #817 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 3]]
b = [[3, 0, 8]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #818 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[1]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #819 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 3, 2, 7]]
b = [[2, 1, 10, 5, 10]]
expected = 8.246211251235321
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #820 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 6, 0, 2, 0]]
b = [[0, 1, 9, 6, 2]]
expected = 13.784048752090222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #821 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 1, 7]]
b = [[9, 7, 9]]
expected = 9.433981132056603
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #822 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 1, 0, 3, 9]]
b = [[2, 9, 8, 3, 0, 3]]
expected = 12.165525060596439
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #823 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[4]]
expected = 0.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #824 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 10, 0]]
b = [[6, 3, 10, 0]]
expected = 5.830951894845301
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #825 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[4]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #826 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 1, 8, 4, 5, 6]]
b = [[7, 7, 3, 9, 6, 0, 8]]
expected = 9.1104335791443
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #827 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 4, 5, 6, 8, 9, 5, 9, 9]]
b = [[8, 4, 0, 0, 2, 2, 4, 3, 9, 3]]
expected = 14.106735979665885
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #828 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1]]
b = [[5, 8]]
expected = 7.280109889280518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #829 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 0, 6, 4, 7, 5, 8, 7]]
b = [[9, 5, 1, 10, 7, 1, 2, 2, 2]]
expected = 12.68857754044952
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #830 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1]]
b = [[7, 1]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #831 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[8]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #832 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 9, 0, 4]]
b = [[3, 7, 8, 0]]
expected = 9.38083151964686
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #833 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 7, 8, 0, 1, 9, 2, 2]]
b = [[4, 4, 9, 0, 2, 8, 6, 3, 6]]
expected = 13.45362404707371
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #834 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8]]
b = [[10, 8]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #835 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 6]]
b = [[7, 9, 10]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #836 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9, 1, 3, 8, 9, 10, 4, 2, 8]]
b = [[9, 8, 8, 2, 6, 8, 10, 10, 9, 5]]
expected = 13.228756555322953
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #837 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 3, 7]]
b = [[6, 1, 6, 0]]
expected = 10.908712114635714
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #838 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 3, 0, 9, 3, 4, 2, 5, 8]]
b = [[9, 4, 5, 5, 4, 9, 0, 8, 0]]
expected = 12.409673645990857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #839 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 4, 1]]
b = [[3, 3, 7, 3]]
expected = 4.242640687119285
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #840 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 2, 5, 5, 7, 10]]
b = [[8, 4, 5, 2, 5, 0, 3]]
expected = 11.489125293076057
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #841 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 9, 10, 3, 3, 5]]
b = [[2, 5, 2, 8, 8, 6, 3]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #842 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 4, 7, 1, 9, 4, 4, 0, 10]]
b = [[7, 9, 10, 0, 7, 0, 4, 6, 4]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #843 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 6, 3, 8, 3, 0]]
b = [[9, 9, 9, 8, 1, 8]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #844 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10, 10, 3, 8, 8, 4, 2, 6, 5]]
b = [[1, 9, 6, 9, 8, 4, 7, 8, 7, 8]]
expected = 11.135528725660043
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #845 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6]]
b = [[6, 2]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #846 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 4, 1, 7]]
b = [[4, 6, 7, 7]]
expected = 6.4031242374328485
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #847 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6]]
b = [[5, 1]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #848 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 1, 10, 8, 2, 1, 10, 2, 1]]
b = [[0, 0, 9, 9, 9, 6, 2, 4, 7]]
expected = 16.76305461424021
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #849 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 0, 0, 7, 0, 6, 7, 4]]
b = [[9, 8, 4, 7, 4, 9, 8, 10, 6]]
expected = 17.378147196982766
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #850 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[6]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #851 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[9]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #852 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 6, 9, 7, 10]]
b = [[10, 7, 3, 5, 7, 5]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #853 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3]]
b = [[8, 7]]
expected = 6.4031242374328485
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #854 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10, 4, 0, 6, 5, 1, 7, 1]]
b = [[3, 10, 6, 10, 10, 4, 0, 3, 4]]
expected = 12.165525060596439
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #855 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 5, 2, 5, 2, 7, 4, 8, 5]]
b = [[5, 4, 6, 2, 8, 1, 9, 1, 4, 8]]
expected = 8.831760866327848
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #856 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 10, 10, 6, 10, 2, 9, 4]]
b = [[5, 9, 8, 1, 2, 4, 1, 8]]
expected = 13.379088160259652
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #857 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 7, 2, 6, 7, 8, 4, 10, 4]]
b = [[9, 1, 6, 10, 3, 2, 9, 10, 2, 4]]
expected = 17.320508075688775
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #858 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 5, 9, 8, 7, 7]]
b = [[2, 5, 0, 5, 7, 9, 7]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #859 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4]]
b = [[7]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #860 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 10, 7, 3, 1, 9, 6]]
b = [[4, 5, 9, 0, 4, 10, 0, 6]]
expected = 15.427248620541512
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #861 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9]]
b = [[7, 0]]
expected = 9.219544457292887
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #862 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 4, 0, 3, 3]]
b = [[8, 9, 0, 8, 7]]
expected = 8.18535277187245
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #863 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 3, 8, 1, 10, 5, 5, 2]]
b = [[6, 0, 7, 10, 8, 9, 6, 5, 5]]
expected = 10.246950765959598
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #864 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 5, 10, 3, 2, 7, 5, 9]]
b = [[10, 2, 7, 0, 10, 1, 6, 5, 6]]
expected = 15.231546211727817
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #865 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 0, 2, 8, 5, 6, 7]]
b = [[5, 1, 7, 8, 8, 0, 7]]
expected = 8.48528137423857
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #866 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 7, 8]]
b = [[1, 6, 8]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #867 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2]]
b = [[1, 8]]
expected = 7.211102550927978
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #868 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 6, 5, 2, 0, 5, 0, 7]]
b = [[6, 4, 3, 3, 1, 10, 3, 4]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #869 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 4, 3, 8, 4, 10, 5]]
b = [[2, 4, 3, 0, 5, 1, 7]]
expected = 12.884098726725126
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #870 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 9, 10, 1, 2]]
b = [[2, 5, 9, 0, 2]]
expected = 7.3484692283495345
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #871 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 10, 8, 7, 3, 3, 2, 5]]
b = [[6, 9, 9, 7, 3, 0, 0, 8]]
expected = 6.324555320336759
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #872 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 4, 2]]
b = [[9, 3, 9, 10]]
expected = 9.695359714832659
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #873 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 3, 9, 10, 2, 5, 4, 10, 0, 5]]
b = [[1, 6, 5, 9, 7, 5, 10, 10, 1, 10]]
expected = 10.677078252031311
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #874 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 0]]
b = [[9, 2]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #875 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0]]
b = [[4, 0]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #876 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 4, 7, 5]]
b = [[1, 6, 2, 7]]
expected = 5.744562646538029
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #877 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 6]]
b = [[5, 9]]
expected = 3.605551275463989
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #878 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 3, 1, 5]]
b = [[10, 5, 1, 7, 1]]
expected = 12.84523257866513
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #879 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 7, 3, 1, 6, 7, 4]]
b = [[9, 4, 7, 2, 0, 4, 1, 10]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #880 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 10, 2]]
b = [[9, 6, 9, 4]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #881 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[1]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #882 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 5, 5]]
b = [[8, 9, 0]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #883 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 5, 2]]
b = [[8, 6, 8, 9]]
expected = 8.12403840463596
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #884 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 1, 7, 4, 9, 7]]
b = [[3, 4, 3, 5, 0, 1]]
expected = 12.609520212918492
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #885 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 5, 10, 6, 3, 3, 2, 4, 10]]
b = [[3, 0, 5, 9, 7, 1, 3, 7, 8, 8]]
expected = 12.96148139681572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #886 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[3]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #887 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 0, 5, 2, 7, 5, 6, 4, 3]]
b = [[9, 8, 3, 6, 4, 1, 2, 10, 10, 10]]
expected = 14.177446878757825
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #888 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 1, 3, 7, 10, 5, 2, 2, 0]]
b = [[4, 10, 9, 3, 8, 10, 10, 6, 0, 1]]
expected = 11.661903789690601
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #889 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 6, 2, 7, 8, 7]]
b = [[8, 10, 5, 4, 2, 10]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #890 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2]]
b = [[6]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #891 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 2, 1]]
b = [[2, 7, 2]]
expected = 8.660254037844387
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #892 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 7]]
b = [[1, 1, 9]]
expected = 5.385164807134504
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #893 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 8, 2, 4, 10, 9, 3, 10]]
b = [[10, 3, 8, 8, 3, 7, 9, 7, 2]]
expected = 12.727922061357855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #894 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 2, 3]]
b = [[8, 9, 1]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #895 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 2, 7, 3]]
b = [[1, 5, 2, 8]]
expected = 9.16515138991168
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #896 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 3, 5, 4, 7, 4, 7, 3]]
b = [[7, 0, 5, 3, 5, 4, 2, 7]]
expected = 8.426149773176359
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #897 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9, 4, 3, 5, 9, 0, 7, 9, 9]]
b = [[6, 6, 9, 3, 1, 7, 2, 2, 7, 2]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #898 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 6, 8, 10, 1, 4, 6, 5, 10]]
b = [[2, 2, 0, 2, 10, 9, 10, 7, 10]]
expected = 16.55294535724685
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #899 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 6, 0]]
b = [[5, 5, 8, 3]]
expected = 5.477225575051661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #900 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5]]
b = [[4]]
expected = 1.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #901 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 0, 6]]
b = [[10, 6, 7, 1]]
expected = 14.106735979665885
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #902 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 8, 7, 7, 4, 6]]
b = [[9, 3, 3, 7, 0, 4]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #903 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 3, 0, 7, 1]]
b = [[6, 1, 0, 1, 5]]
expected = 7.745966692414834
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #904 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2]]
b = [[10, 1]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #905 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 10, 3, 8, 10, 1]]
b = [[1, 9, 2, 8, 6, 8]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #906 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 4, 8, 8, 0, 6, 8, 0, 2, 0]]
b = [[8, 5, 1, 0, 10, 0, 7, 10, 5, 1]]
expected = 19.1049731745428
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #907 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 0, 6, 10, 3, 10]]
b = [[3, 10, 2, 5, 0, 3, 4]]
expected = 16.30950643030009
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #908 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 2, 4]]
b = [[10, 6, 2]]
expected = 4.898979485566356
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #909 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 5, 7]]
b = [[8, 4, 3]]
expected = 4.58257569495584
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #910 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 9, 6, 1, 0, 7, 0, 10]]
b = [[0, 6, 6, 5, 6, 10, 2, 4, 3]]
expected = 15.132745950421556
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #911 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 5, 7, 10, 8, 2, 4, 7]]
b = [[1, 6, 9, 2, 8, 2, 9, 10, 2]]
expected = 15.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #912 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 6, 4, 0, 3, 1, 3, 4]]
b = [[4, 0, 5, 5, 7, 3, 7, 4]]
expected = 9.9498743710662
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #913 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 6, 1, 8]]
b = [[5, 7, 2, 3]]
expected = 5.5677643628300215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #914 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 6, 0, 2, 8, 2, 8]]
b = [[2, 6, 2, 5, 0, 4, 0]]
expected = 12.083045973594572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #915 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 8, 6]]
b = [[2, 6, 0]]
expected = 8.717797887081348
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #916 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7]]
b = [[1]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #917 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 8, 2, 10, 7]]
b = [[4, 10, 8, 7, 10, 3]]
expected = 7.810249675906654
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #918 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[2]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #919 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6]]
b = [[9]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #920 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 5, 5, 7, 5, 10, 9]]
b = [[9, 0, 4, 4, 7, 8, 1, 5]]
expected = 11.916375287812984
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #921 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 10]]
b = [[2, 5]]
expected = 5.0990195135927845
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #922 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 3, 8, 8, 5, 6, 2, 10, 0]]
b = [[9, 6, 1, 4, 0, 3, 4, 5, 5, 10]]
expected = 15.459624833740307
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #923 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[6]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #924 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3, 8, 2]]
b = [[0, 8, 0, 4]]
expected = 9.848857801796104
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #925 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 9]]
b = [[4, 3]]
expected = 6.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #926 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5]]
b = [[10, 8]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #927 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 4, 0]]
b = [[1, 6, 10, 5]]
expected = 8.306623862918075
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #928 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0]]
b = [[10, 6]]
expected = 10.816653826391969
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #929 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 2, 1, 1, 9, 3, 0]]
b = [[9, 3, 6, 7, 9, 6, 3, 7]]
expected = 14.66287829861518
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #930 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 7, 5, 3, 0, 8, 10, 3]]
b = [[7, 7, 7, 8, 9, 6, 10, 2, 8]]
expected = 15.066519173319364
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #931 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 0, 3, 3, 1, 4, 1, 3]]
b = [[10, 1, 6, 9, 6, 0, 3, 7]]
expected = 13.711309200802088
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #932 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 9, 6, 0, 0, 4, 9, 3, 10]]
b = [[3, 2, 7, 3, 7, 0, 3, 9, 7]]
expected = 14.628738838327793
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #933 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 1, 1, 4, 4]]
b = [[0, 7, 10, 1, 2]]
expected = 11.789826122551595
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #934 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 3, 9, 5]]
b = [[7, 4, 2, 0]]
expected = 10.535653752852738
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #935 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8]]
b = [[6]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #936 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 0, 10, 4, 1]]
b = [[0, 0, 9, 7, 10, 10]]
expected = 19.697715603592208
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #937 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 7, 10, 3, 9, 8, 5, 4, 2, 9]]
b = [[9, 3, 6, 3, 6, 3, 1, 3, 6, 2]]
expected = 13.152946437965905
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #938 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9]]
b = [[1]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #939 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 1]]
b = [[1, 5]]
expected = 8.06225774829855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #940 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 8, 10, 6, 2, 0, 7, 3]]
b = [[8, 10, 10, 0, 9, 0, 5, 1]]
expected = 11.045361017187261
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #941 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 2, 5, 8, 2]]
b = [[5, 3, 6, 6, 10]]
expected = 9.746794344808963
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #942 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 1, 8, 2, 6, 4, 8, 4]]
b = [[1, 3, 10, 1, 8, 9, 7, 2, 0]]
expected = 17.435595774162696
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #943 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7]]
b = [[5, 7]]
expected = 3.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #944 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 9, 10, 5, 0, 5, 1]]
b = [[7, 10, 0, 9, 7, 4, 7]]
expected = 15.874507866387544
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #945 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 7, 3, 3, 2, 7]]
b = [[6, 2, 5, 0, 7, 0]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #946 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 4, 2, 9, 0, 2]]
b = [[3, 7, 7, 8, 2, 1]]
expected = 6.324555320336759
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #947 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4]]
b = [[8, 5]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #948 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 1, 10, 1, 7, 10, 7]]
b = [[2, 1, 3, 3, 6, 4, 10]]
expected = 10.14889156509222
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #949 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 2, 8, 2, 2]]
b = [[1, 10, 8, 10, 3, 10]]
expected = 11.916375287812984
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #950 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 2, 3, 1, 0, 9, 6, 6, 7]]
b = [[6, 0, 8, 10, 7, 10, 7, 1, 1]]
expected = 15.198684153570664
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #951 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 8, 3, 3, 5, 3, 10, 3]]
b = [[4, 5, 7, 4, 1, 5, 10, 9]]
expected = 10.862780491200215
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #952 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 3, 6, 7, 3]]
b = [[3, 8, 7, 1, 6, 9]]
expected = 11.313708498984761
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #953 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 2, 6, 10, 0]]
b = [[1, 2, 4, 3, 1]]
expected = 7.416198487095663
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #954 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[6, 8, 2, 5, 0, 1, 0, 8, 1, 0]]
b = [[4, 4, 7, 4, 3, 2, 10, 7, 1, 3]]
expected = 12.884098726725126
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #955 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 5, 1, 5, 9]]
b = [[6, 5, 4, 10, 1, 9]]
expected = 12.24744871391589
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #956 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 2, 0, 10]]
b = [[7, 9, 7, 6]]
expected = 11.789826122551595
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #957 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 3, 10, 2, 6, 5, 2, 0, 6, 10]]
b = [[10, 2, 5, 6, 0, 0, 6, 4, 7, 8]]
expected = 13.2664991614216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #958 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 5, 10, 7, 1, 4]]
b = [[9, 8, 0, 5, 5, 0]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #959 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 0, 0, 8, 8, 9, 2, 10]]
b = [[5, 4, 5, 8, 6, 6, 0, 5]]
expected = 9.591663046625438
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #960 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 1, 4, 1, 10, 5, 9]]
b = [[2, 9, 6, 8, 1, 1, 4]]
expected = 15.588457268119896
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #961 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 2, 7, 1]]
b = [[8, 4, 4, 9, 6]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #962 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 5, 8, 2, 2, 6, 7, 0, 6]]
b = [[4, 3, 4, 2, 8, 7, 5, 1, 8]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #963 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[5]]
expected = 5.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #964 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 0, 3]]
b = [[0, 7, 9]]
expected = 9.695359714832659
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #965 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 3, 5, 5, 9, 1, 0]]
b = [[6, 2, 1, 0, 7, 2, 0, 1]]
expected = 12.041594578792296
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #966 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 7, 0, 10, 9]]
b = [[2, 1, 9, 5, 10, 7]]
expected = 7.681145747868608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #967 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 8, 3, 9, 4, 6, 1, 8]]
b = [[8, 3, 7, 2, 0, 0, 7, 4]]
expected = 16.06237840420901
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #968 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 5, 4, 1, 2]]
b = [[9, 10, 6, 7, 1]]
expected = 10.099504938362077
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #969 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 5, 2, 3, 8, 5, 4, 5, 10]]
b = [[4, 8, 9, 8, 6, 8, 0, 10, 7]]
expected = 12.449899597988733
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #970 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 8, 6, 10, 10, 4, 7, 6, 2]]
b = [[10, 7, 2, 5, 9, 7, 7, 4, 7]]
expected = 10.816653826391969
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #971 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 8, 10, 10, 6]]
b = [[4, 1, 7, 2, 0]]
expected = 12.727922061357855
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #972 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 9, 4, 4, 5, 4, 9, 9]]
b = [[9, 8, 0, 8, 8, 5, 7, 5]]
expected = 8.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #973 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 2, 10]]
b = [[2, 2, 7]]
expected = 3.1622776601683795
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #974 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0]]
b = [[7]]
expected = 7.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #975 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 3]]
b = [[8, 6]]
expected = 6.708203932499369
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #976 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 9]]
b = [[2, 10]]
expected = 7.0710678118654755
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #977 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10]]
b = [[0]]
expected = 10.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #978 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 4, 3, 2, 7]]
b = [[9, 6, 1, 1, 3]]
expected = 8.602325267042627
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #979 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 9, 5]]
b = [[1, 4, 4]]
expected = 7.874007874011811
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #980 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 4, 8, 5, 2, 4, 3, 9, 2, 9]]
b = [[2, 0, 7, 10, 7, 0, 6, 0, 5, 6]]
expected = 14.696938456699069
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #981 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 7, 0, 10, 2, 2]]
b = [[5, 0, 7, 3, 10, 2]]
expected = 15.362291495737216
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #982 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 9, 7, 0, 7, 8, 1]]
b = [[0, 0, 4, 10, 3, 10, 1]]
expected = 14.628738838327793
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #983 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[9, 6, 6]]
b = [[8, 6, 9]]
expected = 3.1622776601683795
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #984 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 0, 6, 5, 1, 3, 2, 6]]
b = [[1, 10, 4, 10, 3, 8, 5, 1]]
expected = 13.892443989449804
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #985 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[0, 5, 5, 1, 5, 5, 3, 2, 4, 1]]
b = [[5, 10, 2, 7, 7, 0, 5, 1, 6, 8]]
expected = 13.490737563232042
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #986 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2]]
b = [[5, 2]]
expected = 2.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #987 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1, 1, 9, 7]]
b = [[6, 10, 3, 9]]
expected = 12.083045973594572
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #988 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[10, 7, 10, 3]]
b = [[1, 2, 10, 6]]
expected = 10.723805294763608
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #989 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 10]]
b = [[8, 9]]
expected = 6.082762530298219
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #990 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[8, 5, 8]]
b = [[0, 9, 4]]
expected = 9.797958971132712
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #991 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 3, 2, 5, 5, 9, 10]]
b = [[6, 4, 5, 1, 1, 1, 9]]
expected = 10.392304845413264
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #992 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 9, 1, 1, 0, 7, 1, 9, 2]]
b = [[5, 2, 3, 3, 0, 2, 0, 0, 5]]
expected = 13.152946437965905
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #993 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[5, 8, 6]]
b = [[4, 4, 1]]
expected = 6.48074069840786
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #994 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[4, 5, 5, 3, 5, 3, 6]]
b = [[0, 10, 9, 2, 9, 1, 6]]
expected = 8.831760866327848
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #995 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[2, 5, 2]]
b = [[8, 2, 9]]
expected = 9.695359714832659
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #996 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[7, 2, 2, 3, 4, 1, 6, 9]]
b = [[10, 6, 6, 5, 9, 0, 8, 10]]
expected = 8.717797887081348
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #997 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[3, 9, 9]]
b = [[7, 9, 8]]
expected = 4.123105625617661
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #998 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



a = [[1]]
b = [[5]]
expected = 4.0
result = matmult.euclidean_dist(a,b)
if abs(result - expected) > 0.001:
  raise Exception('Euclidean Case #999 Failed:\n a = ' + str(a) + '\nb = ' + str(b) + '\n result = ' + str(result))



print('Euclidean distance tests completed successfully')