import validator

print("Validating the string () - should be True")
print(validator.isvalid("()"))
print("Validating the string ({[]}) - should be True")
print(validator.isvalid("({[]})"))
print("Validating the string ({[}]) - should be False")
print(validator.isvalid("({[}])"))
print("Validating the string ((x * x) + 2x) - (3 - (2 * 4) + (4 + (3 * (2 + 1)))) - should be True")
print(validator.isvalid("((x * x) + 2x) - (3 - (2 * 4) + (4 + (3 * (2 + 1))))"))
print("Validating the string {{[()(){[]()}]}((([{()[]{}}])))} - should be True")
print(validator.isvalid("{{[()(){[]()}]}((([{()[]{}}])))}"))
print("Validating the string '' - should be True")
print(validator.isvalid(""))
print("Validating the string '([{}]))' - should be False")
print(validator.isvalid("([{}]))"))
print("Validating the string {{[()(){[]()]}}((([{()[]{}}]))) - should be False")
print(validator.isvalid("{{[()(){[]()]}}((([{()[]{}}])))"))
print("Validating the string ((([()])) - should be False")
print(validator.isvalid("((([()]))"))
print("Validating the string [({(()])})] - should be False")
print(validator.isvalid("[({(()])})]"))
print("Validating the string (){}[](({[]}))) - should be False")
print(validator.isvalid("(){}[](({[]})))"))
print("Validating the string ) - should be False")
print(validator.isvalid(")"))
print("Validating the string x = int(input('enter your name: ') - should be False")
print(validator.isvalid("x = int(input('enter your name: ')"))
input()