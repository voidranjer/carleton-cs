import mystack

thestack = []

print("The stack should initially be: []")
print("Your stack is ", thestack)
print()
print("Trying to pop from an empty stack, should be None")
print(mystack.pop(thestack))
print()
print("Pushing 0 to stack, should be [0]")
mystack.push(thestack, 0)
print("Your stack is ", thestack)
print()
print("Pushing 1 to stack, should be [0, 1]")
mystack.push(thestack, 1)
print("Your stack is ", thestack)
print()
print("Pushing 2 to stack, should be [0, 1, 2]")
mystack.push(thestack, 2)
print("Your stack is ", thestack)
print()
print("Pushing 3 to stack, should be [0, 1, 2, 3]")
mystack.push(thestack, 3)
print("Your stack is ", thestack)
print()
print("Pop should return 3")
print(mystack.pop(thestack))
print()
print("Pop should return 2")
print(mystack.pop(thestack))
print()
print("The stack should be: [0, 1]")
print("Your stack is ", thestack)
print()
print("Pushing 4 to stack, should be [0, 1, 4]")
mystack.push(thestack, 4)
print("Your stack is ", thestack)
print()
print("Peek should be 4")
print(mystack.peek(thestack))
print()
print("Pushing 5 to stack, should be [0, 1, 4, 5]")
mystack.push(thestack, 5)
print("Your stack is ", thestack)
print()
print("Peek should be 5")
print(mystack.peek(thestack))
print()
print("Pop should return 5")
print(mystack.pop(thestack))
print()
print("The stack should be: [0, 1, 4]")
print("Your stack is ", thestack)
print()
print("Pop should return 4")
print(mystack.pop(thestack))
print()
print("The stack should be: [0, 1]")
print("Your stack is ", thestack)
print()
print("Clearing stack")
while not mystack.isempty(thestack):
	mystack.pop(thestack)
print()
print("The stack should be: []")
print("Your stack is ", thestack)
print()
print("Pop should return None")
print(mystack.pop(thestack))
print()
print("Peek should return None")
print(mystack.peek(thestack))
print()
print("The stack should be: []")
print("Your stack is ", thestack)
input()